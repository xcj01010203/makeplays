/*! jQuery v1.11.1 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */
!function(a,b){"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l="1.11.1",m=function(a,b){return new m.fn.init(a,b)},n=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,o=/^-ms-/,p=/-([\da-z])/gi,q=function(a,b){return b.toUpperCase()};m.fn=m.prototype={jquery:l,constructor:m,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=m.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return m.each(this,a,b)},map:function(a){return this.pushStack(m.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},m.extend=m.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||m.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(e=arguments[h]))for(d in e)a=g[d],c=e[d],g!==c&&(j&&c&&(m.isPlainObject(c)||(b=m.isArray(c)))?(b?(b=!1,f=a&&m.isArray(a)?a:[]):f=a&&m.isPlainObject(a)?a:{},g[d]=m.extend(j,f,c)):void 0!==c&&(g[d]=c));return g},m.extend({expando:"jQuery"+(l+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===m.type(a)},isArray:Array.isArray||function(a){return"array"===m.type(a)},isWindow:function(a){return null!=a&&a==a.window},isNumeric:function(a){return!m.isArray(a)&&a-parseFloat(a)>=0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},isPlainObject:function(a){var b;if(!a||"object"!==m.type(a)||a.nodeType||m.isWindow(a))return!1;try{if(a.constructor&&!j.call(a,"constructor")&&!j.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}if(k.ownLast)for(b in a)return j.call(a,b);for(b in a);return void 0===b||j.call(a,b)},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(b){b&&m.trim(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(o,"ms-").replace(p,q)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=r(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(n,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(r(Object(a))?m.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){var d;if(b){if(g)return g.call(b,a,c);for(d=b.length,c=c?0>c?Math.max(0,d+c):c:0;d>c;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,b){var c=+b.length,d=0,e=a.length;while(c>d)a[e++]=b[d++];if(c!==c)while(void 0!==b[d])a[e++]=b[d++];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=r(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&&(f=a[b],b=a,a=f),m.isFunction(a)?(c=d.call(arguments,2),e=function(){return a.apply(b||this,c.concat(d.call(arguments)))},e.guid=a.guid=a.guid||m.guid++,e):void 0},now:function(){return+new Date},support:k}),m.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function r(a){var b=a.length,c=m.type(a);return"function"===c||m.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var s=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+-new Date,v=a.document,w=0,x=0,y=gb(),z=gb(),A=gb(),B=function(a,b){return a===b&&(l=!0),0},C="undefined",D=1<<31,E={}.hasOwnProperty,F=[],G=F.pop,H=F.push,I=F.push,J=F.slice,K=F.indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(this[b]===a)return b;return-1},L="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M="[\\x20\\t\\r\\n\\f]",N="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",O=N.replace("w","w#"),P="\\["+M+"*("+N+")(?:"+M+"*([*^$|!~]?=)"+M+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+O+"))|)"+M+"*\\]",Q=":("+N+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+P+")*)|.*)\\)|)",R=new RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),S=new RegExp("^"+M+"*,"+M+"*"),T=new RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),U=new RegExp("="+M+"*([^\\]'\"]*?)"+M+"*\\]","g"),V=new RegExp(Q),W=new RegExp("^"+O+"$"),X={ID:new RegExp("^#("+N+")"),CLASS:new RegExp("^\\.("+N+")"),TAG:new RegExp("^("+N.replace("w","w*")+")"),ATTR:new RegExp("^"+P),PSEUDO:new RegExp("^"+Q),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bool:new RegExp("^(?:"+L+")$","i"),needsContext:new RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-\\d)?\\d*)"+M+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ab=/[+~]/,bb=/'|\\/g,cb=new RegExp("\\\\([\\da-f]{1,6}"+M+"?|("+M+")|.)","ig"),db=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)};try{I.apply(F=J.call(v.childNodes),v.childNodes),F[v.childNodes.length].nodeType}catch(eb){I={apply:F.length?function(a,b){H.apply(a,J.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function fb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],!a||"string"!=typeof a)return d;if(1!==(k=b.nodeType)&&9!==k)return[];if(p&&!e){if(f=_.exec(a))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return I.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName&&b.getElementsByClassName)return I.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=9===k&&a,1===k&&"object"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute("id"))?s=r.replace(bb,"\\$&"):b.setAttribute("id",s),s="[id='"+s+"'] ",l=o.length;while(l--)o[l]=s+qb(o[l]);w=ab.test(a)&&ob(b.parentNode)||b,x=o.join(",")}if(x)try{return I.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute("id")}}}return i(a.replace(R,"$1"),b,d,e)}function gb(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function hb(a){return a[u]=!0,a}function ib(a){var b=n.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function jb(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function kb(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||D)-(~a.sourceIndex||D);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function lb(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function nb(a){return hb(function(b){return b=+b,hb(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function ob(a){return a&&typeof a.getElementsByTagName!==C&&a}c=fb.support={},f=fb.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=fb.setDocument=function(a){var b,e=a?a.ownerDocument||a:v,g=e.defaultView;return e!==n&&9===e.nodeType&&e.documentElement?(n=e,o=e.documentElement,p=!f(e),g&&g!==g.top&&(g.addEventListener?g.addEventListener("unload",function(){m()},!1):g.attachEvent&&g.attachEvent("onunload",function(){m()})),c.attributes=ib(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ib(function(a){return a.appendChild(e.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=$.test(e.getElementsByClassName)&&ib(function(a){return a.innerHTML="<div class='a'></div><div class='a i'></div>",a.firstChild.className="i",2===a.getElementsByClassName("i").length}),c.getById=ib(function(a){return o.appendChild(a).id=u,!e.getElementsByName||!e.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(typeof b.getElementById!==C&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c=typeof a.getAttributeNode!==C&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return typeof b.getElementsByTagName!==C?b.getElementsByTagName(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return typeof b.getElementsByClassName!==C&&p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(e.querySelectorAll))&&(ib(function(a){a.innerHTML="<select msallowclip=''><option selected=''></option></select>",a.querySelectorAll("[msallowclip^='']").length&&q.push("[*^$]="+M+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+M+"*(?:value|"+L+")"),a.querySelectorAll(":checked").length||q.push(":checked")}),ib(function(a){var b=e.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+M+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ib(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='']:x"),r.push("!=",Q)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===e||a.ownerDocument===v&&t(v,a)?-1:b===e||b.ownerDocument===v&&t(v,b)?1:k?K.call(k,a)-K.call(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,f=a.parentNode,g=b.parentNode,h=[a],i=[b];if(!f||!g)return a===e?-1:b===e?1:f?-1:g?1:k?K.call(k,a)-K.call(k,b):0;if(f===g)return kb(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?kb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},e):n},fb.matches=function(a,b){return fb(a,null,null,b)},fb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,"='$1']"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return fb(b,n,null,[a]).length>0},fb.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},fb.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&E.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},fb.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},fb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=fb.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=fb.selectors={cacheLength:50,createPseudo:hb,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||"").replace(cb,db),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||fb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&fb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+M+")"+a+"("+M+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||typeof a.getAttribute!==C&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=fb.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||fb.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?hb(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=K.call(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:hb(function(a){var b=[],c=[],d=h(a.replace(R,"$1"));return d[u]?hb(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:hb(function(a){return function(b){return fb(a,b).length>0}}),contains:hb(function(a){return function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:hb(function(a){return W.test(a||"")||fb.error("unsupported lang: "+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:nb(function(){return[0]}),last:nb(function(a,b){return[b-1]}),eq:nb(function(a,b,c){return[0>c?c+b:c]}),even:nb(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:nb(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:nb(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:nb(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=lb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=mb(b);function pb(){}pb.prototype=d.filters=d.pseudos,d.setFilters=new pb,g=fb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R," ")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?fb.error(a):z(a,i).slice(0)};function qb(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function rb(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function sb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function tb(a,b,c){for(var d=0,e=b.length;e>d;d++)fb(a,b[d],c);return c}function ub(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function vb(a,b,c,d,e,f){return d&&!d[u]&&(d=vb(d)),e&&!e[u]&&(e=vb(e,f)),hb(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||tb(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ub(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ub(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?K.call(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ub(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):I.apply(g,r)})}function wb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=rb(function(a){return a===b},h,!0),l=rb(function(a){return K.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d))}];f>i;i++)if(c=d.relative[a[i].type])m=[rb(sb(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return vb(i>1&&sb(m),i>1&&qb(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(R,"$1"),c,e>i&&wb(a.slice(i,e)),f>e&&wb(a=a.slice(e)),f>e&&qb(a))}m.push(c)}return sb(m)}function xb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q="0",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG("*",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=G.call(i));s=ub(s)}I.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&fb.uniqueSort(i)}return k&&(w=v,j=t),r};return c?hb(f):f}return h=fb.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=wb(b[c]),f[u]?d.push(f):e.push(f);f=A(a,xb(e,d)),f.selector=a}return f},i=fb.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&&ob(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&qb(j),!a)return I.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&ob(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ib(function(a){return 1&a.compareDocumentPosition(n.createElement("div"))}),ib(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||jb("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ib(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||jb("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ib(function(a){return null==a.getAttribute("disabled")})||jb(L,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),fb}(a);m.find=s,m.expr=s.selectors,m.expr[":"]=m.expr.pseudos,m.unique=s.uniqueSort,m.text=s.getText,m.isXMLDoc=s.isXML,m.contains=s.contains;var t=m.expr.match.needsContext,u=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,v=/^.[^:#\[\.,]*$/;function w(a,b,c){if(m.isFunction(b))return m.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return m.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(v.test(b))return m.filter(b,a,c);b=m.filter(b,a)}return m.grep(a,function(a){return m.inArray(a,b)>=0!==c})}m.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?m.find.matchesSelector(d,a)?[d]:[]:m.find.matches(a,m.grep(b,function(a){return 1===a.nodeType}))},m.fn.extend({find:function(a){var b,c=[],d=this,e=d.length;if("string"!=typeof a)return this.pushStack(m(a).filter(function(){for(b=0;e>b;b++)if(m.contains(d[b],this))return!0}));for(b=0;e>b;b++)m.find(a,d[b],c);return c=this.pushStack(e>1?m.unique(c):c),c.selector=this.selector?this.selector+" "+a:a,c},filter:function(a){return this.pushStack(w(this,a||[],!1))},not:function(a){return this.pushStack(w(this,a||[],!0))},is:function(a){return!!w(this,"string"==typeof a&&t.test(a)?m(a):a||[],!1).length}});var x,y=a.document,z=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,A=m.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="<"===a.charAt(0)&&">"===a.charAt(a.length-1)&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||x).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof m?b[0]:b,m.merge(this,m.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:y,!0)),u.test(c[1])&&m.isPlainObject(b))for(c in b)m.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}if(d=y.getElementById(c[2]),d&&d.parentNode){if(d.id!==c[2])return x.find(a);this.length=1,this[0]=d}return this.context=y,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):m.isFunction(a)?"undefined"!=typeof x.ready?x.ready(a):a(m):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),m.makeArray(a,this))};A.prototype=m.fn,x=m(y);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};m.extend({dir:function(a,b,c){var d=[],e=a[b];while(e&&9!==e.nodeType&&(void 0===c||1!==e.nodeType||!m(e).is(c)))1===e.nodeType&&d.push(e),e=e[b];return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),m.fn.extend({has:function(a){var b,c=m(a,this),d=c.length;return this.filter(function(){for(b=0;d>b;b++)if(m.contains(this,c[b]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=t.test(a)||"string"!=typeof a?m(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&m.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?m.unique(f):f)},index:function(a){return a?"string"==typeof a?m.inArray(this[0],m(a)):m.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(m.unique(m.merge(this.get(),m(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}m.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return m.dir(a,"parentNode")},parentsUntil:function(a,b,c){return m.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return m.dir(a,"nextSibling")},prevAll:function(a){return m.dir(a,"previousSibling")},nextUntil:function(a,b,c){return m.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return m.dir(a,"previousSibling",c)},siblings:function(a){return m.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return m.sibling(a.firstChild)},contents:function(a){return m.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:m.merge([],a.childNodes)}},function(a,b){m.fn[a]=function(c,d){var e=m.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=m.filter(d,e)),this.length>1&&(C[a]||(e=m.unique(e)),B.test(a)&&(e=e.reverse())),this.pushStack(e)}});var E=/\S+/g,F={};function G(a){var b=F[a]={};return m.each(a.match(E)||[],function(a,c){b[c]=!0}),b}m.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):m.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(c=a.memory&&l,d=!0,f=g||0,g=0,e=h.length,b=!0;h&&e>f;f++)if(h[f].apply(l[0],l[1])===!1&&a.stopOnFalse){c=!1;break}b=!1,h&&(i?i.length&&j(i.shift()):c?h=[]:k.disable())},k={add:function(){if(h){var d=h.length;!function f(b){m.each(b,function(b,c){var d=m.type(c);"function"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&"string"!==d&&f(c)})}(arguments),b?e=h.length:c&&(g=d,j(c))}return this},remove:function(){return h&&m.each(arguments,function(a,c){var d;while((d=m.inArray(c,h,d))>-1)h.splice(d,1),b&&(e>=d&&e--,f>=d&&f--)}),this},has:function(a){return a?m.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],e=0,this},disable:function(){return h=i=c=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,c||k.disable(),this},locked:function(){return!i},fireWith:function(a,c){return!h||d&&!i||(c=c||[],c=[a,c.slice?c.slice():c],b?i.push(c):j(c)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!d}};return k},m.extend({Deferred:function(a){var b=[["resolve","done",m.Callbacks("once memory"),"resolved"],["reject","fail",m.Callbacks("once memory"),"rejected"],["notify","progress",m.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return m.Deferred(function(c){m.each(b,function(b,f){var g=m.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&m.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?m.extend(a,d):d}},e={};return d.pipe=d.then,m.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&m.isFunction(a.promise)?e:0,g=1===f?a:m.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&m.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;m.fn.ready=function(a){return m.ready.promise().done(a),this},m.extend({isReady:!1,readyWait:1,holdReady:function(a){a?m.readyWait++:m.ready(!0)},ready:function(a){if(a===!0?!--m.readyWait:!m.isReady){if(!y.body)return setTimeout(m.ready);m.isReady=!0,a!==!0&&--m.readyWait>0||(H.resolveWith(y,[m]),m.fn.triggerHandler&&(m(y).triggerHandler("ready"),m(y).off("ready")))}}});function I(){y.addEventListener?(y.removeEventListener("DOMContentLoaded",J,!1),a.removeEventListener("load",J,!1)):(y.detachEvent("onreadystatechange",J),a.detachEvent("onload",J))}function J(){(y.addEventListener||"load"===event.type||"complete"===y.readyState)&&(I(),m.ready())}m.ready.promise=function(b){if(!H)if(H=m.Deferred(),"complete"===y.readyState)setTimeout(m.ready);else if(y.addEventListener)y.addEventListener("DOMContentLoaded",J,!1),a.addEventListener("load",J,!1);else{y.attachEvent("onreadystatechange",J),a.attachEvent("onload",J);var c=!1;try{c=null==a.frameElement&&y.documentElement}catch(d){}c&&c.doScroll&&!function e(){if(!m.isReady){try{c.doScroll("left")}catch(a){return setTimeout(e,50)}I(),m.ready()}}()}return H.promise(b)};var K="undefined",L;for(L in m(k))break;k.ownLast="0"!==L,k.inlineBlockNeedsLayout=!1,m(function(){var a,b,c,d;c=y.getElementsByTagName("body")[0],c&&c.style&&(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),typeof b.style.zoom!==K&&(b.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",k.inlineBlockNeedsLayout=a=3===b.offsetWidth,a&&(c.style.zoom=1)),c.removeChild(d))}),function(){var a=y.createElement("div");if(null==k.deleteExpando){k.deleteExpando=!0;try{delete a.test}catch(b){k.deleteExpando=!1}}a=null}(),m.acceptData=function(a){var b=m.noData[(a.nodeName+" ").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute("classid")===b};var M=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,N=/([A-Z])/g;function O(a,b,c){if(void 0===c&&1===a.nodeType){var d="data-"+b.replace(N,"-$1").toLowerCase();if(c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:M.test(c)?m.parseJSON(c):c}catch(e){}m.data(a,b,c)}else c=void 0}return c}function P(a){var b;for(b in a)if(("data"!==b||!m.isEmptyObject(a[b]))&&"toJSON"!==b)return!1;return!0}function Q(a,b,d,e){if(m.acceptData(a)){var f,g,h=m.expando,i=a.nodeType,j=i?m.cache:a,k=i?a[h]:a[h]&&h;
if(k&&j[k]&&(e||j[k].data)||void 0!==d||"string"!=typeof b)return k||(k=i?a[h]=c.pop()||m.guid++:h),j[k]||(j[k]=i?{}:{toJSON:m.noop}),("object"==typeof b||"function"==typeof b)&&(e?j[k]=m.extend(j[k],b):j[k].data=m.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[m.camelCase(b)]=d),"string"==typeof b?(f=g[b],null==f&&(f=g[m.camelCase(b)])):f=g,f}}function R(a,b,c){if(m.acceptData(a)){var d,e,f=a.nodeType,g=f?m.cache:a,h=f?a[m.expando]:m.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){m.isArray(b)?b=b.concat(m.map(b,m.camelCase)):b in d?b=[b]:(b=m.camelCase(b),b=b in d?[b]:b.split(" ")),e=b.length;while(e--)delete d[b[e]];if(c?!P(d):!m.isEmptyObject(d))return}(c||(delete g[h].data,P(g[h])))&&(f?m.cleanData([a],!0):k.deleteExpando||g!=g.window?delete g[h]:g[h]=null)}}}m.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(a){return a=a.nodeType?m.cache[a[m.expando]]:a[m.expando],!!a&&!P(a)},data:function(a,b,c){return Q(a,b,c)},removeData:function(a,b){return R(a,b)},_data:function(a,b,c){return Q(a,b,c,!0)},_removeData:function(a,b){return R(a,b,!0)}}),m.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=m.data(f),1===f.nodeType&&!m._data(f,"parsedAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=m.camelCase(d.slice(5)),O(f,d,e[d])));m._data(f,"parsedAttrs",!0)}return e}return"object"==typeof a?this.each(function(){m.data(this,a)}):arguments.length>1?this.each(function(){m.data(this,a,b)}):f?O(f,a,m.data(f,a)):void 0},removeData:function(a){return this.each(function(){m.removeData(this,a)})}}),m.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=m._data(a,b),c&&(!d||m.isArray(c)?d=m._data(a,b,m.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=m.queue(a,b),d=c.length,e=c.shift(),f=m._queueHooks(a,b),g=function(){m.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return m._data(a,c)||m._data(a,c,{empty:m.Callbacks("once memory").add(function(){m._removeData(a,b+"queue"),m._removeData(a,c)})})}}),m.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?m.queue(this[0],a):void 0===b?this:this.each(function(){var c=m.queue(this,a,b);m._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&m.dequeue(this,a)})},dequeue:function(a){return this.each(function(){m.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=m.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=m._data(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var S=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,T=["Top","Right","Bottom","Left"],U=function(a,b){return a=b||a,"none"===m.css(a,"display")||!m.contains(a.ownerDocument,a)},V=m.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===m.type(c)){e=!0;for(h in c)m.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,m.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(m(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},W=/^(?:checkbox|radio)$/i;!function(){var a=y.createElement("input"),b=y.createElement("div"),c=y.createDocumentFragment();if(b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",k.leadingWhitespace=3===b.firstChild.nodeType,k.tbody=!b.getElementsByTagName("tbody").length,k.htmlSerialize=!!b.getElementsByTagName("link").length,k.html5Clone="<:nav></:nav>"!==y.createElement("nav").cloneNode(!0).outerHTML,a.type="checkbox",a.checked=!0,c.appendChild(a),k.appendChecked=a.checked,b.innerHTML="<textarea>x</textarea>",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue,c.appendChild(b),b.innerHTML="<input type='radio' checked='checked' name='t'/>",k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,k.noCloneEvent=!0,b.attachEvent&&(b.attachEvent("onclick",function(){k.noCloneEvent=!1}),b.cloneNode(!0).click()),null==k.deleteExpando){k.deleteExpando=!0;try{delete b.test}catch(d){k.deleteExpando=!1}}}(),function(){var b,c,d=y.createElement("div");for(b in{submit:!0,change:!0,focusin:!0})c="on"+b,(k[b+"Bubbles"]=c in a)||(d.setAttribute(c,"t"),k[b+"Bubbles"]=d.attributes[c].expando===!1);d=null}();var X=/^(?:input|select|textarea)$/i,Y=/^key/,Z=/^(?:mouse|pointer|contextmenu)|click/,$=/^(?:focusinfocus|focusoutblur)$/,_=/^([^.]*)(?:\.(.+)|)$/;function ab(){return!0}function bb(){return!1}function cb(){try{return y.activeElement}catch(a){}}m.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,n,o,p,q,r=m._data(a);if(r){c.handler&&(i=c,c=i.handler,e=i.selector),c.guid||(c.guid=m.guid++),(g=r.events)||(g=r.events={}),(k=r.handle)||(k=r.handle=function(a){return typeof m===K||a&&m.event.triggered===a.type?void 0:m.event.dispatch.apply(k.elem,arguments)},k.elem=a),b=(b||"").match(E)||[""],h=b.length;while(h--)f=_.exec(b[h])||[],o=q=f[1],p=(f[2]||"").split(".").sort(),o&&(j=m.event.special[o]||{},o=(e?j.delegateType:j.bindType)||o,j=m.event.special[o]||{},l=m.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&m.expr.match.needsContext.test(e),namespace:p.join(".")},i),(n=g[o])||(n=g[o]=[],n.delegateCount=0,j.setup&&j.setup.call(a,d,p,k)!==!1||(a.addEventListener?a.addEventListener(o,k,!1):a.attachEvent&&a.attachEvent("on"+o,k))),j.add&&(j.add.call(a,l),l.handler.guid||(l.handler.guid=c.guid)),e?n.splice(n.delegateCount++,0,l):n.push(l),m.event.global[o]=!0);a=null}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,n,o,p,q,r=m.hasData(a)&&m._data(a);if(r&&(k=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--)if(h=_.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=m.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,n=k[o]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),i=f=n.length;while(f--)g=n[f],!e&&q!==g.origType||c&&c.guid!==g.guid||h&&!h.test(g.namespace)||d&&d!==g.selector&&("**"!==d||!g.selector)||(n.splice(f,1),g.selector&&n.delegateCount--,l.remove&&l.remove.call(a,g));i&&!n.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||m.removeEvent(a,o,r.handle),delete k[o])}else for(o in k)m.event.remove(a,o+b[j],c,d,!0);m.isEmptyObject(k)&&(delete r.handle,m._removeData(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,l,n,o=[d||y],p=j.call(b,"type")?b.type:b,q=j.call(b,"namespace")?b.namespace.split("."):[];if(h=l=d=d||y,3!==d.nodeType&&8!==d.nodeType&&!$.test(p+m.event.triggered)&&(p.indexOf(".")>=0&&(q=p.split("."),p=q.shift(),q.sort()),g=p.indexOf(":")<0&&"on"+p,b=b[m.expando]?b:new m.Event(p,"object"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=q.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+q.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:m.makeArray(c,[b]),k=m.event.special[p]||{},e||!k.trigger||k.trigger.apply(d,c)!==!1)){if(!e&&!k.noBubble&&!m.isWindow(d)){for(i=k.delegateType||p,$.test(i+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),l=h;l===(d.ownerDocument||y)&&o.push(l.defaultView||l.parentWindow||a)}n=0;while((h=o[n++])&&!b.isPropagationStopped())b.type=n>1?i:k.bindType||p,f=(m._data(h,"events")||{})[b.type]&&m._data(h,"handle"),f&&f.apply(h,c),f=g&&h[g],f&&f.apply&&m.acceptData(h)&&(b.result=f.apply(h,c),b.result===!1&&b.preventDefault());if(b.type=p,!e&&!b.isDefaultPrevented()&&(!k._default||k._default.apply(o.pop(),c)===!1)&&m.acceptData(d)&&g&&d[p]&&!m.isWindow(d)){l=d[g],l&&(d[g]=null),m.event.triggered=p;try{d[p]()}catch(r){}m.event.triggered=void 0,l&&(d[g]=l)}return b.result}},dispatch:function(a){a=m.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(m._data(this,"events")||{})[a.type]||[],k=m.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=m.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,g=0;while((e=f.handlers[g++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(e.namespace))&&(a.handleObj=e,a.data=e.data,c=((m.event.special[e.origType]||{}).handle||e.handler).apply(f.elem,i),void 0!==c&&(a.result=c)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||"click"!==a.type))for(;i!=this;i=i.parentNode||this)if(1===i.nodeType&&(i.disabled!==!0||"click"!==a.type)){for(e=[],f=0;h>f;f++)d=b[f],c=d.selector+" ",void 0===e[c]&&(e[c]=d.needsContext?m(c,this).index(i)>=0:m.find(c,this,null,[i]).length),e[c]&&e.push(d);e.length&&g.push({elem:i,handlers:e})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},fix:function(a){if(a[m.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=Z.test(e)?this.mouseHooks:Y.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new m.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=f.srcElement||y),3===a.target.nodeType&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,g.filter?g.filter(a,f):a},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button,g=b.fromElement;return null==a.pageX&&null!=b.clientX&&(d=a.target.ownerDocument||y,e=d.documentElement,c=d.body,a.pageX=b.clientX+(e&&e.scrollLeft||c&&c.scrollLeft||0)-(e&&e.clientLeft||c&&c.clientLeft||0),a.pageY=b.clientY+(e&&e.scrollTop||c&&c.scrollTop||0)-(e&&e.clientTop||c&&c.clientTop||0)),!a.relatedTarget&&g&&(a.relatedTarget=g===a.target?b.toElement:g),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==cb()&&this.focus)try{return this.focus(),!1}catch(a){}},delegateType:"focusin"},blur:{trigger:function(){return this===cb()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return m.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):void 0},_default:function(a){return m.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=m.extend(new m.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?m.event.trigger(e,null,b):m.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},m.removeEvent=y.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var d="on"+b;a.detachEvent&&(typeof a[d]===K&&(a[d]=null),a.detachEvent(d,c))},m.Event=function(a,b){return this instanceof m.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?ab:bb):this.type=a,b&&m.extend(this,b),this.timeStamp=a&&a.timeStamp||m.now(),void(this[m.expando]=!0)):new m.Event(a,b)},m.Event.prototype={isDefaultPrevented:bb,isPropagationStopped:bb,isImmediatePropagationStopped:bb,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=ab,a&&(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=ab,a&&(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=ab,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},m.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){m.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!m.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.submitBubbles||(m.event.special.submit={setup:function(){return m.nodeName(this,"form")?!1:void m.event.add(this,"click._submit keypress._submit",function(a){var b=a.target,c=m.nodeName(b,"input")||m.nodeName(b,"button")?b.form:void 0;c&&!m._data(c,"submitBubbles")&&(m.event.add(c,"submit._submit",function(a){a._submit_bubble=!0}),m._data(c,"submitBubbles",!0))})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&m.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){return m.nodeName(this,"form")?!1:void m.event.remove(this,"._submit")}}),k.changeBubbles||(m.event.special.change={setup:function(){return X.test(this.nodeName)?(("checkbox"===this.type||"radio"===this.type)&&(m.event.add(this,"propertychange._change",function(a){"checked"===a.originalEvent.propertyName&&(this._just_changed=!0)}),m.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1),m.event.simulate("change",this,a,!0)})),!1):void m.event.add(this,"beforeactivate._change",function(a){var b=a.target;X.test(b.nodeName)&&!m._data(b,"changeBubbles")&&(m.event.add(b,"change._change",function(a){!this.parentNode||a.isSimulated||a.isTrigger||m.event.simulate("change",this.parentNode,a,!0)}),m._data(b,"changeBubbles",!0))})},handle:function(a){var b=a.target;return this!==b||a.isSimulated||a.isTrigger||"radio"!==b.type&&"checkbox"!==b.type?a.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return m.event.remove(this,"._change"),!X.test(this.nodeName)}}),k.focusinBubbles||m.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){m.event.simulate(b,a.target,m.event.fix(a),!0)};m.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=m._data(d,b);e||d.addEventListener(a,c,!0),m._data(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=m._data(d,b)-1;e?m._data(d,b,e):(d.removeEventListener(a,c,!0),m._removeData(d,b))}}}),m.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&&(c=c||b,b=void 0);for(f in a)this.on(f,b,c,a[f],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=bb;else if(!d)return this;return 1===e&&(g=d,d=function(a){return m().off(a),g.apply(this,arguments)},d.guid=g.guid||(g.guid=m.guid++)),this.each(function(){m.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,m(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&&(c=b,b=void 0),c===!1&&(c=bb),this.each(function(){m.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){m.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?m.event.trigger(a,b,c,!0):void 0}});function db(a){var b=eb.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}var eb="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",fb=/ jQuery\d+="(?:null|\d+)"/g,gb=new RegExp("<(?:"+eb+")[\\s/>]","i"),hb=/^\s+/,ib=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,jb=/<([\w:]+)/,kb=/<tbody/i,lb=/<|&#?\w+;/,mb=/<(?:script|style|link)/i,nb=/checked\s*(?:[^=]|=\s*.checked.)/i,ob=/^$|\/(?:java|ecma)script/i,pb=/^true\/(.*)/,qb=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,rb={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:k.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]},sb=db(y),tb=sb.appendChild(y.createElement("div"));rb.optgroup=rb.option,rb.tbody=rb.tfoot=rb.colgroup=rb.caption=rb.thead,rb.th=rb.td;function ub(a,b){var c,d,e=0,f=typeof a.getElementsByTagName!==K?a.getElementsByTagName(b||"*"):typeof a.querySelectorAll!==K?a.querySelectorAll(b||"*"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||m.nodeName(d,b)?f.push(d):m.merge(f,ub(d,b));return void 0===b||b&&m.nodeName(a,b)?m.merge([a],f):f}function vb(a){W.test(a.type)&&(a.defaultChecked=a.checked)}function wb(a,b){return m.nodeName(a,"table")&&m.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function xb(a){return a.type=(null!==m.find.attr(a,"type"))+"/"+a.type,a}function yb(a){var b=pb.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function zb(a,b){for(var c,d=0;null!=(c=a[d]);d++)m._data(c,"globalEval",!b||m._data(b[d],"globalEval"))}function Ab(a,b){if(1===b.nodeType&&m.hasData(a)){var c,d,e,f=m._data(a),g=m._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)m.event.add(b,c,h[c][d])}g.data&&(g.data=m.extend({},g.data))}}function Bb(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!k.noCloneEvent&&b[m.expando]){e=m._data(b);for(d in e.events)m.removeEvent(b,d,e.handle);b.removeAttribute(m.expando)}"script"===c&&b.text!==a.text?(xb(b).text=a.text,yb(b)):"object"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),k.html5Clone&&a.innerHTML&&!m.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):"input"===c&&W.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):"option"===c?b.defaultSelected=b.selected=a.defaultSelected:("input"===c||"textarea"===c)&&(b.defaultValue=a.defaultValue)}}m.extend({clone:function(a,b,c){var d,e,f,g,h,i=m.contains(a.ownerDocument,a);if(k.html5Clone||m.isXMLDoc(a)||!gb.test("<"+a.nodeName+">")?f=a.cloneNode(!0):(tb.innerHTML=a.outerHTML,tb.removeChild(f=tb.firstChild)),!(k.noCloneEvent&&k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||m.isXMLDoc(a)))for(d=ub(f),h=ub(a),g=0;null!=(e=h[g]);++g)d[g]&&Bb(e,d[g]);if(b)if(c)for(h=h||ub(a),d=d||ub(f),g=0;null!=(e=h[g]);g++)Ab(e,d[g]);else Ab(a,f);return d=ub(f,"script"),d.length>0&&zb(d,!i&&ub(a,"script")),d=h=e=null,f},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,l,n=a.length,o=db(b),p=[],q=0;n>q;q++)if(f=a[q],f||0===f)if("object"===m.type(f))m.merge(p,f.nodeType?[f]:f);else if(lb.test(f)){h=h||o.appendChild(b.createElement("div")),i=(jb.exec(f)||["",""])[1].toLowerCase(),l=rb[i]||rb._default,h.innerHTML=l[1]+f.replace(ib,"<$1></$2>")+l[2],e=l[0];while(e--)h=h.lastChild;if(!k.leadingWhitespace&&hb.test(f)&&p.push(b.createTextNode(hb.exec(f)[0])),!k.tbody){f="table"!==i||kb.test(f)?"<table>"!==l[1]||kb.test(f)?0:h:h.firstChild,e=f&&f.childNodes.length;while(e--)m.nodeName(j=f.childNodes[e],"tbody")&&!j.childNodes.length&&f.removeChild(j)}m.merge(p,h.childNodes),h.textContent="";while(h.firstChild)h.removeChild(h.firstChild);h=o.lastChild}else p.push(b.createTextNode(f));h&&o.removeChild(h),k.appendChecked||m.grep(ub(p,"input"),vb),q=0;while(f=p[q++])if((!d||-1===m.inArray(f,d))&&(g=m.contains(f.ownerDocument,f),h=ub(o.appendChild(f),"script"),g&&zb(h),c)){e=0;while(f=h[e++])ob.test(f.type||"")&&c.push(f)}return h=null,o},cleanData:function(a,b){for(var d,e,f,g,h=0,i=m.expando,j=m.cache,l=k.deleteExpando,n=m.event.special;null!=(d=a[h]);h++)if((b||m.acceptData(d))&&(f=d[i],g=f&&j[f])){if(g.events)for(e in g.events)n[e]?m.event.remove(d,e):m.removeEvent(d,e,g.handle);j[f]&&(delete j[f],l?delete d[i]:typeof d.removeAttribute!==K?d.removeAttribute(i):d[i]=null,c.push(f))}}}),m.fn.extend({text:function(a){return V(this,function(a){return void 0===a?m.text(this):this.empty().append((this[0]&&this[0].ownerDocument||y).createTextNode(a))},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=wb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=wb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?m.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||m.cleanData(ub(c)),c.parentNode&&(b&&m.contains(c.ownerDocument,c)&&zb(ub(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++){1===a.nodeType&&m.cleanData(ub(a,!1));while(a.firstChild)a.removeChild(a.firstChild);a.options&&m.nodeName(a,"select")&&(a.options.length=0)}return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return m.clone(this,a,b)})},html:function(a){return V(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a)return 1===b.nodeType?b.innerHTML.replace(fb,""):void 0;if(!("string"!=typeof a||mb.test(a)||!k.htmlSerialize&&gb.test(a)||!k.leadingWhitespace&&hb.test(a)||rb[(jb.exec(a)||["",""])[1].toLowerCase()])){a=a.replace(ib,"<$1></$2>");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(m.cleanData(ub(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,m.cleanData(ub(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,n=this,o=l-1,p=a[0],q=m.isFunction(p);if(q||l>1&&"string"==typeof p&&!k.checkClone&&nb.test(p))return this.each(function(c){var d=n.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(i=m.buildFragment(a,this[0].ownerDocument,!1,this),c=i.firstChild,1===i.childNodes.length&&(i=c),c)){for(g=m.map(ub(i,"script"),xb),f=g.length;l>j;j++)d=i,j!==o&&(d=m.clone(d,!0,!0),f&&m.merge(g,ub(d,"script"))),b.call(this[j],d,j);if(f)for(h=g[g.length-1].ownerDocument,m.map(g,yb),j=0;f>j;j++)d=g[j],ob.test(d.type||"")&&!m._data(d,"globalEval")&&m.contains(h,d)&&(d.src?m._evalUrl&&m._evalUrl(d.src):m.globalEval((d.text||d.textContent||d.innerHTML||"").replace(qb,"")));i=c=null}return this}}),m.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){m.fn[a]=function(a){for(var c,d=0,e=[],g=m(a),h=g.length-1;h>=d;d++)c=d===h?this:this.clone(!0),m(g[d])[b](c),f.apply(e,c.get());return this.pushStack(e)}});var Cb,Db={};function Eb(b,c){var d,e=m(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:m.css(e[0],"display");return e.detach(),f}function Fb(a){var b=y,c=Db[a];return c||(c=Eb(a,b),"none"!==c&&c||(Cb=(Cb||m("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=(Cb[0].contentWindow||Cb[0].contentDocument).document,b.write(),b.close(),c=Eb(a,b),Cb.detach()),Db[a]=c),c}!function(){var a;k.shrinkWrapBlocks=function(){if(null!=a)return a;a=!1;var b,c,d;return c=y.getElementsByTagName("body")[0],c&&c.style?(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),typeof b.style.zoom!==K&&(b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",b.appendChild(y.createElement("div")).style.width="5px",a=3!==b.offsetWidth),c.removeChild(d),a):void 0}}();var Gb=/^margin/,Hb=new RegExp("^("+S+")(?!px)[a-z%]+$","i"),Ib,Jb,Kb=/^(top|right|bottom|left)$/;a.getComputedStyle?(Ib=function(a){return a.ownerDocument.defaultView.getComputedStyle(a,null)},Jb=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ib(a),g=c?c.getPropertyValue(b)||c[b]:void 0,c&&(""!==g||m.contains(a.ownerDocument,a)||(g=m.style(a,b)),Hb.test(g)&&Gb.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0===g?g:g+""}):y.documentElement.currentStyle&&(Ib=function(a){return a.currentStyle},Jb=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ib(a),g=c?c[b]:void 0,null==g&&h&&h[b]&&(g=h[b]),Hb.test(g)&&!Kb.test(b)&&(d=h.left,e=a.runtimeStyle,f=e&&e.left,f&&(e.left=a.currentStyle.left),h.left="fontSize"===b?"1em":g,g=h.pixelLeft+"px",h.left=d,f&&(e.left=f)),void 0===g?g:g+""||"auto"});function Lb(a,b){return{get:function(){var c=a();if(null!=c)return c?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d,e,f,g,h;if(b=y.createElement("div"),b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",d=b.getElementsByTagName("a")[0],c=d&&d.style){c.cssText="float:left;opacity:.5",k.opacity="0.5"===c.opacity,k.cssFloat=!!c.cssFloat,b.style.backgroundClip="content-box",b.cloneNode(!0).style.backgroundClip="",k.clearCloneStyle="content-box"===b.style.backgroundClip,k.boxSizing=""===c.boxSizing||""===c.MozBoxSizing||""===c.WebkitBoxSizing,m.extend(k,{reliableHiddenOffsets:function(){return null==g&&i(),g},boxSizingReliable:function(){return null==f&&i(),f},pixelPosition:function(){return null==e&&i(),e},reliableMarginRight:function(){return null==h&&i(),h}});function i(){var b,c,d,i;c=y.getElementsByTagName("body")[0],c&&c.style&&(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),b.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",e=f=!1,h=!0,a.getComputedStyle&&(e="1%"!==(a.getComputedStyle(b,null)||{}).top,f="4px"===(a.getComputedStyle(b,null)||{width:"4px"}).width,i=b.appendChild(y.createElement("div")),i.style.cssText=b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",i.style.marginRight=i.style.width="0",b.style.width="1px",h=!parseFloat((a.getComputedStyle(i,null)||{}).marginRight)),b.innerHTML="<table><tr><td></td><td>t</td></tr></table>",i=b.getElementsByTagName("td"),i[0].style.cssText="margin:0;border:0;padding:0;display:none",g=0===i[0].offsetHeight,g&&(i[0].style.display="",i[1].style.display="none",g=0===i[0].offsetHeight),c.removeChild(d))}}}(),m.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var Mb=/alpha\([^)]*\)/i,Nb=/opacity\s*=\s*([^)]*)/,Ob=/^(none|table(?!-c[ea]).+)/,Pb=new RegExp("^("+S+")(.*)$","i"),Qb=new RegExp("^([+-])=("+S+")","i"),Rb={position:"absolute",visibility:"hidden",display:"block"},Sb={letterSpacing:"0",fontWeight:"400"},Tb=["Webkit","O","Moz","ms"];function Ub(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=Tb.length;while(e--)if(b=Tb[e]+c,b in a)return b;return d}function Vb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=m._data(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&U(d)&&(f[g]=m._data(d,"olddisplay",Fb(d.nodeName)))):(e=U(d),(c&&"none"!==c||!e)&&m._data(d,"olddisplay",e?c:m.css(d,"display"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}function Wb(a,b,c){var d=Pb.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Xb(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=m.css(a,c+T[f],!0,e)),d?("content"===c&&(g-=m.css(a,"padding"+T[f],!0,e)),"margin"!==c&&(g-=m.css(a,"border"+T[f]+"Width",!0,e))):(g+=m.css(a,"padding"+T[f],!0,e),"padding"!==c&&(g+=m.css(a,"border"+T[f]+"Width",!0,e)));return g}function Yb(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=Ib(a),g=k.boxSizing&&"border-box"===m.css(a,"boxSizing",!1,f);if(0>=e||null==e){if(e=Jb(a,b,f),(0>e||null==e)&&(e=a.style[b]),Hb.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Xb(a,b,c||(g?"border":"content"),d,f)+"px"}m.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Jb(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":k.cssFloat?"cssFloat":"styleFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=m.camelCase(b),i=a.style;if(b=m.cssProps[h]||(m.cssProps[h]=Ub(i,h)),g=m.cssHooks[b]||m.cssHooks[h],void 0===c)return g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b];if(f=typeof c,"string"===f&&(e=Qb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(m.css(a,b)),f="number"),null!=c&&c===c&&("number"!==f||m.cssNumber[h]||(c+="px"),k.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),!(g&&"set"in g&&void 0===(c=g.set(a,c,d)))))try{i[b]=c}catch(j){}}},css:function(a,b,c,d){var e,f,g,h=m.camelCase(b);return b=m.cssProps[h]||(m.cssProps[h]=Ub(a.style,h)),g=m.cssHooks[b]||m.cssHooks[h],g&&"get"in g&&(f=g.get(a,!0,c)),void 0===f&&(f=Jb(a,b,d)),"normal"===f&&b in Sb&&(f=Sb[b]),""===c||c?(e=parseFloat(f),c===!0||m.isNumeric(e)?e||0:f):f}}),m.each(["height","width"],function(a,b){m.cssHooks[b]={get:function(a,c,d){return c?Ob.test(m.css(a,"display"))&&0===a.offsetWidth?m.swap(a,Rb,function(){return Yb(a,b,d)}):Yb(a,b,d):void 0},set:function(a,c,d){var e=d&&Ib(a);return Wb(a,c,d?Xb(a,b,d,k.boxSizing&&"border-box"===m.css(a,"boxSizing",!1,e),e):0)}}}),k.opacity||(m.cssHooks.opacity={get:function(a,b){return Nb.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=m.isNumeric(b)?"alpha(opacity="+100*b+")":"",f=d&&d.filter||c.filter||"";c.zoom=1,(b>=1||""===b)&&""===m.trim(f.replace(Mb,""))&&c.removeAttribute&&(c.removeAttribute("filter"),""===b||d&&!d.filter)||(c.filter=Mb.test(f)?f.replace(Mb,e):f+" "+e)}}),m.cssHooks.marginRight=Lb(k.reliableMarginRight,function(a,b){return b?m.swap(a,{display:"inline-block"},Jb,[a,"marginRight"]):void 0}),m.each({margin:"",padding:"",border:"Width"},function(a,b){m.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+T[d]+b]=f[d]||f[d-2]||f[0];return e}},Gb.test(a)||(m.cssHooks[a+b].set=Wb)}),m.fn.extend({css:function(a,b){return V(this,function(a,b,c){var d,e,f={},g=0;if(m.isArray(b)){for(d=Ib(a),e=b.length;e>g;g++)f[b[g]]=m.css(a,b[g],!1,d);return f}return void 0!==c?m.style(a,b,c):m.css(a,b)},a,b,arguments.length>1)},show:function(){return Vb(this,!0)},hide:function(){return Vb(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){U(this)?m(this).show():m(this).hide()})}});function Zb(a,b,c,d,e){return new Zb.prototype.init(a,b,c,d,e)}m.Tween=Zb,Zb.prototype={constructor:Zb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(m.cssNumber[c]?"":"px")
},cur:function(){var a=Zb.propHooks[this.prop];return a&&a.get?a.get(this):Zb.propHooks._default.get(this)},run:function(a){var b,c=Zb.propHooks[this.prop];return this.pos=b=this.options.duration?m.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Zb.propHooks._default.set(this),this}},Zb.prototype.init.prototype=Zb.prototype,Zb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=m.css(a.elem,a.prop,""),b&&"auto"!==b?b:0):a.elem[a.prop]},set:function(a){m.fx.step[a.prop]?m.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[m.cssProps[a.prop]]||m.cssHooks[a.prop])?m.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Zb.propHooks.scrollTop=Zb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},m.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},m.fx=Zb.prototype.init,m.fx.step={};var $b,_b,ac=/^(?:toggle|show|hide)$/,bc=new RegExp("^(?:([+-])=|)("+S+")([a-z%]*)$","i"),cc=/queueHooks$/,dc=[ic],ec={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=bc.exec(b),f=e&&e[3]||(m.cssNumber[a]?"":"px"),g=(m.cssNumber[a]||"px"!==f&&+d)&&bc.exec(m.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,m.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function fc(){return setTimeout(function(){$b=void 0}),$b=m.now()}function gc(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=T[e],d["margin"+c]=d["padding"+c]=a;return b&&(d.opacity=d.width=a),d}function hc(a,b,c){for(var d,e=(ec[b]||[]).concat(ec["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function ic(a,b,c){var d,e,f,g,h,i,j,l,n=this,o={},p=a.style,q=a.nodeType&&U(a),r=m._data(a,"fxshow");c.queue||(h=m._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,n.always(function(){n.always(function(){h.unqueued--,m.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&&("height"in b||"width"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=m.css(a,"display"),l="none"===j?m._data(a,"olddisplay")||Fb(a.nodeName):j,"inline"===l&&"none"===m.css(a,"float")&&(k.inlineBlockNeedsLayout&&"inline"!==Fb(a.nodeName)?p.zoom=1:p.display="inline-block")),c.overflow&&(p.overflow="hidden",k.shrinkWrapBlocks()||n.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],ac.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(q?"hide":"show")){if("show"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||m.style(a,d)}else j=void 0;if(m.isEmptyObject(o))"inline"===("none"===j?Fb(a.nodeName):j)&&(p.display=j);else{r?"hidden"in r&&(q=r.hidden):r=m._data(a,"fxshow",{}),f&&(r.hidden=!q),q?m(a).show():n.done(function(){m(a).hide()}),n.done(function(){var b;m._removeData(a,"fxshow");for(b in o)m.style(a,b,o[b])});for(d in o)g=hc(q?r[d]:0,d,n),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function jc(a,b){var c,d,e,f,g;for(c in a)if(d=m.camelCase(c),e=b[d],f=a[c],m.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=m.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function kc(a,b,c){var d,e,f=0,g=dc.length,h=m.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=$b||fc(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:m.extend({},b),opts:m.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:$b||fc(),duration:c.duration,tweens:[],createTween:function(b,c){var d=m.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(jc(k,j.opts.specialEasing);g>f;f++)if(d=dc[f].call(j,a,k,j.opts))return d;return m.map(k,hc,j),m.isFunction(j.opts.start)&&j.opts.start.call(a,j),m.fx.timer(m.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}m.Animation=m.extend(kc,{tweener:function(a,b){m.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e>d;d++)c=a[d],ec[c]=ec[c]||[],ec[c].unshift(b)},prefilter:function(a,b){b?dc.unshift(a):dc.push(a)}}),m.speed=function(a,b,c){var d=a&&"object"==typeof a?m.extend({},a):{complete:c||!c&&b||m.isFunction(a)&&a,duration:a,easing:c&&b||b&&!m.isFunction(b)&&b};return d.duration=m.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in m.fx.speeds?m.fx.speeds[d.duration]:m.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue="fx"),d.old=d.complete,d.complete=function(){m.isFunction(d.old)&&d.old.call(this),d.queue&&m.dequeue(this,d.queue)},d},m.fn.extend({fadeTo:function(a,b,c,d){return this.filter(U).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=m.isEmptyObject(a),f=m.speed(b,c,d),g=function(){var b=kc(this,m.extend({},a),f);(e||m._data(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=m.timers,g=m._data(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&cc.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&m.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=m._data(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=m.timers,g=d?d.length:0;for(c.finish=!0,m.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),m.each(["toggle","show","hide"],function(a,b){var c=m.fn[b];m.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(gc(b,!0),a,d,e)}}),m.each({slideDown:gc("show"),slideUp:gc("hide"),slideToggle:gc("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){m.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),m.timers=[],m.fx.tick=function(){var a,b=m.timers,c=0;for($b=m.now();c<b.length;c++)a=b[c],a()||b[c]!==a||b.splice(c--,1);b.length||m.fx.stop(),$b=void 0},m.fx.timer=function(a){m.timers.push(a),a()?m.fx.start():m.timers.pop()},m.fx.interval=13,m.fx.start=function(){_b||(_b=setInterval(m.fx.tick,m.fx.interval))},m.fx.stop=function(){clearInterval(_b),_b=null},m.fx.speeds={slow:600,fast:200,_default:400},m.fn.delay=function(a,b){return a=m.fx?m.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a,b,c,d,e;b=y.createElement("div"),b.setAttribute("className","t"),b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",d=b.getElementsByTagName("a")[0],c=y.createElement("select"),e=c.appendChild(y.createElement("option")),a=b.getElementsByTagName("input")[0],d.style.cssText="top:1px",k.getSetAttribute="t"!==b.className,k.style=/top/.test(d.getAttribute("style")),k.hrefNormalized="/a"===d.getAttribute("href"),k.checkOn=!!a.value,k.optSelected=e.selected,k.enctype=!!y.createElement("form").enctype,c.disabled=!0,k.optDisabled=!e.disabled,a=y.createElement("input"),a.setAttribute("value",""),k.input=""===a.getAttribute("value"),a.value="t",a.setAttribute("type","radio"),k.radioValue="t"===a.value}();var lc=/\r/g;m.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=m.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,m(this).val()):a,null==e?e="":"number"==typeof e?e+="":m.isArray(e)&&(e=m.map(e,function(a){return null==a?"":a+""})),b=m.valHooks[this.type]||m.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=m.valHooks[e.type]||m.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(lc,""):null==c?"":c)}}}),m.extend({valHooks:{option:{get:function(a){var b=m.find.attr(a,"value");return null!=b?b:m.trim(m.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&&m.nodeName(c.parentNode,"optgroup"))){if(b=m(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=m.makeArray(b),g=e.length;while(g--)if(d=e[g],m.inArray(m.valHooks.option.get(d),f)>=0)try{d.selected=c=!0}catch(h){d.scrollHeight}else d.selected=!1;return c||(a.selectedIndex=-1),e}}}}),m.each(["radio","checkbox"],function(){m.valHooks[this]={set:function(a,b){return m.isArray(b)?a.checked=m.inArray(m(a).val(),b)>=0:void 0}},k.checkOn||(m.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})});var mc,nc,oc=m.expr.attrHandle,pc=/^(?:checked|selected)$/i,qc=k.getSetAttribute,rc=k.input;m.fn.extend({attr:function(a,b){return V(this,m.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){m.removeAttr(this,a)})}}),m.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===K?m.prop(a,b,c):(1===f&&m.isXMLDoc(a)||(b=b.toLowerCase(),d=m.attrHooks[b]||(m.expr.match.bool.test(b)?nc:mc)),void 0===c?d&&"get"in d&&null!==(e=d.get(a,b))?e:(e=m.find.attr(a,b),null==e?void 0:e):null!==c?d&&"set"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void m.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=m.propFix[c]||c,m.expr.match.bool.test(c)?rc&&qc||!pc.test(c)?a[d]=!1:a[m.camelCase("default-"+c)]=a[d]=!1:m.attr(a,c,""),a.removeAttribute(qc?c:d)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&"radio"===b&&m.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}}}),nc={set:function(a,b,c){return b===!1?m.removeAttr(a,c):rc&&qc||!pc.test(c)?a.setAttribute(!qc&&m.propFix[c]||c,c):a[m.camelCase("default-"+c)]=a[c]=!0,c}},m.each(m.expr.match.bool.source.match(/\w+/g),function(a,b){var c=oc[b]||m.find.attr;oc[b]=rc&&qc||!pc.test(b)?function(a,b,d){var e,f;return d||(f=oc[b],oc[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,oc[b]=f),e}:function(a,b,c){return c?void 0:a[m.camelCase("default-"+b)]?b.toLowerCase():null}}),rc&&qc||(m.attrHooks.value={set:function(a,b,c){return m.nodeName(a,"input")?void(a.defaultValue=b):mc&&mc.set(a,b,c)}}),qc||(mc={set:function(a,b,c){var d=a.getAttributeNode(c);return d||a.setAttributeNode(d=a.ownerDocument.createAttribute(c)),d.value=b+="","value"===c||b===a.getAttribute(c)?b:void 0}},oc.id=oc.name=oc.coords=function(a,b,c){var d;return c?void 0:(d=a.getAttributeNode(b))&&""!==d.value?d.value:null},m.valHooks.button={get:function(a,b){var c=a.getAttributeNode(b);return c&&c.specified?c.value:void 0},set:mc.set},m.attrHooks.contenteditable={set:function(a,b,c){mc.set(a,""===b?!1:b,c)}},m.each(["width","height"],function(a,b){m.attrHooks[b]={set:function(a,c){return""===c?(a.setAttribute(b,"auto"),c):void 0}}})),k.style||(m.attrHooks.style={get:function(a){return a.style.cssText||void 0},set:function(a,b){return a.style.cssText=b+""}});var sc=/^(?:input|select|textarea|button|object)$/i,tc=/^(?:a|area)$/i;m.fn.extend({prop:function(a,b){return V(this,m.prop,a,b,arguments.length>1)},removeProp:function(a){return a=m.propFix[a]||a,this.each(function(){try{this[a]=void 0,delete this[a]}catch(b){}})}}),m.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!m.isXMLDoc(a),f&&(b=m.propFix[b]||b,e=m.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=m.find.attr(a,"tabindex");return b?parseInt(b,10):sc.test(a.nodeName)||tc.test(a.nodeName)&&a.href?0:-1}}}}),k.hrefNormalized||m.each(["href","src"],function(a,b){m.propHooks[b]={get:function(a){return a.getAttribute(b,4)}}}),k.optSelected||(m.propHooks.selected={get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}}),m.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){m.propFix[this.toLowerCase()]=this}),k.enctype||(m.propFix.enctype="encoding");var uc=/[\t\r\n\f]/g;m.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=0,i=this.length,j="string"==typeof a&&a;if(m.isFunction(a))return this.each(function(b){m(this).addClass(a.call(this,b,this.className))});if(j)for(b=(a||"").match(E)||[];i>h;h++)if(c=this[h],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(uc," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")<0&&(d+=e+" ");g=m.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0,i=this.length,j=0===arguments.length||"string"==typeof a&&a;if(m.isFunction(a))return this.each(function(b){m(this).removeClass(a.call(this,b,this.className))});if(j)for(b=(a||"").match(E)||[];i>h;h++)if(c=this[h],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(uc," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")>=0)d=d.replace(" "+e+" "," ");g=a?m.trim(d):"",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):this.each(m.isFunction(a)?function(c){m(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=m(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===K||"boolean"===c)&&(this.className&&m._data(this,"__className__",this.className),this.className=this.className||a===!1?"":m._data(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(" "+this[c].className+" ").replace(uc," ").indexOf(b)>=0)return!0;return!1}}),m.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){m.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),m.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var vc=m.now(),wc=/\?/,xc=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;m.parseJSON=function(b){if(a.JSON&&a.JSON.parse)return a.JSON.parse(b+"");var c,d=null,e=m.trim(b+"");return e&&!m.trim(e.replace(xc,function(a,b,e,f){return c&&b&&(d=0),0===d?a:(c=e||b,d+=!f-!e,"")}))?Function("return "+e)():m.error("Invalid JSON: "+b)},m.parseXML=function(b){var c,d;if(!b||"string"!=typeof b)return null;try{a.DOMParser?(d=new DOMParser,c=d.parseFromString(b,"text/xml")):(c=new ActiveXObject("Microsoft.XMLDOM"),c.async="false",c.loadXML(b))}catch(e){c=void 0}return c&&c.documentElement&&!c.getElementsByTagName("parsererror").length||m.error("Invalid XML: "+b),c};var yc,zc,Ac=/#.*$/,Bc=/([?&])_=[^&]*/,Cc=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Dc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Ec=/^(?:GET|HEAD)$/,Fc=/^\/\//,Gc=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Hc={},Ic={},Jc="*/".concat("*");try{zc=location.href}catch(Kc){zc=y.createElement("a"),zc.href="",zc=zc.href}yc=Gc.exec(zc.toLowerCase())||[];function Lc(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(m.isFunction(c))while(d=f[e++])"+"===d.charAt(0)?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Mc(a,b,c,d){var e={},f=a===Ic;function g(h){var i;return e[h]=!0,m.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function Nc(a,b){var c,d,e=m.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&m.extend(!0,a,c),a}function Oc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader("Content-Type"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+" "+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function Pc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}m.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:zc,type:"GET",isLocal:Dc.test(yc[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Jc,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":m.parseJSON,"text xml":m.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Nc(Nc(a,m.ajaxSettings),b):Nc(m.ajaxSettings,a)},ajaxPrefilter:Lc(Hc),ajaxTransport:Lc(Ic),ajax:function(a,b){"object"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=m.ajaxSetup({},b),l=k.context||k,n=k.context&&(l.nodeType||l.jquery)?m(l):m.event,o=m.Deferred(),p=m.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!j){j={};while(b=Cc.exec(f))j[b[1].toLowerCase()]=b[2]}b=j[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?f:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return i&&i.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||zc)+"").replace(Ac,"").replace(Fc,yc[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=m.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&&(c=Gc.exec(k.url.toLowerCase()),k.crossDomain=!(!c||c[1]===yc[1]&&c[2]===yc[2]&&(c[3]||("http:"===c[1]?"80":"443"))===(yc[3]||("http:"===yc[1]?"80":"443")))),k.data&&k.processData&&"string"!=typeof k.data&&(k.data=m.param(k.data,k.traditional)),Mc(Hc,k,b,v),2===t)return v;h=k.global,h&&0===m.active++&&m.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!Ec.test(k.type),e=k.url,k.hasContent||(k.data&&(e=k.url+=(wc.test(e)?"&":"?")+k.data,delete k.data),k.cache===!1&&(k.url=Bc.test(e)?e.replace(Bc,"$1_="+vc++):e+(wc.test(e)?"&":"?")+"_="+vc++)),k.ifModified&&(m.lastModified[e]&&v.setRequestHeader("If-Modified-Since",m.lastModified[e]),m.etag[e]&&v.setRequestHeader("If-None-Match",m.etag[e])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+Jc+"; q=0.01":""):k.accepts["*"]);for(d in k.headers)v.setRequestHeader(d,k.headers[d]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(d in{success:1,error:1,complete:1})v[d](k[d]);if(i=Mc(Ic,k,b,v)){v.readyState=1,h&&n.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,i.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,"No Transport");function x(a,b,c,d){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),i=void 0,f=d||"",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,c&&(u=Oc(k,v,c)),u=Pc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader("Last-Modified"),w&&(m.lastModified[e]=w),w=v.getResponseHeader("etag"),w&&(m.etag[e]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x="error",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,h&&n.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),h&&(n.trigger("ajaxComplete",[v,k]),--m.active||m.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return m.get(a,b,c,"json")},getScript:function(a,b){return m.get(a,void 0,b,"script")}}),m.each(["get","post"],function(a,b){m[b]=function(a,c,d,e){return m.isFunction(c)&&(e=e||d,d=c,c=void 0),m.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),m.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){m.fn[b]=function(a){return this.on(b,a)}}),m._evalUrl=function(a){return m.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},m.fn.extend({wrapAll:function(a){if(m.isFunction(a))return this.each(function(b){m(this).wrapAll(a.call(this,b))});if(this[0]){var b=m(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&1===a.firstChild.nodeType)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return this.each(m.isFunction(a)?function(b){m(this).wrapInner(a.call(this,b))}:function(){var b=m(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=m.isFunction(a);return this.each(function(c){m(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){m.nodeName(this,"body")||m(this).replaceWith(this.childNodes)}).end()}}),m.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0||!k.reliableHiddenOffsets()&&"none"===(a.style&&a.style.display||m.css(a,"display"))},m.expr.filters.visible=function(a){return!m.expr.filters.hidden(a)};var Qc=/%20/g,Rc=/\[\]$/,Sc=/\r?\n/g,Tc=/^(?:submit|button|image|reset|file)$/i,Uc=/^(?:input|select|textarea|keygen)/i;function Vc(a,b,c,d){var e;if(m.isArray(b))m.each(b,function(b,e){c||Rc.test(a)?d(a,e):Vc(a+"["+("object"==typeof e?b:"")+"]",e,c,d)});else if(c||"object"!==m.type(b))d(a,b);else for(e in b)Vc(a+"["+e+"]",b[e],c,d)}m.param=function(a,b){var c,d=[],e=function(a,b){b=m.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&&(b=m.ajaxSettings&&m.ajaxSettings.traditional),m.isArray(a)||a.jquery&&!m.isPlainObject(a))m.each(a,function(){e(this.name,this.value)});else for(c in a)Vc(c,a[c],b,e);return d.join("&").replace(Qc,"+")},m.fn.extend({serialize:function(){return m.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=m.prop(this,"elements");return a?m.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!m(this).is(":disabled")&&Uc.test(this.nodeName)&&!Tc.test(a)&&(this.checked||!W.test(a))}).map(function(a,b){var c=m(this).val();return null==c?null:m.isArray(c)?m.map(c,function(a){return{name:b.name,value:a.replace(Sc,"\r\n")}}):{name:b.name,value:c.replace(Sc,"\r\n")}}).get()}}),m.ajaxSettings.xhr=void 0!==a.ActiveXObject?function(){return!this.isLocal&&/^(get|post|head|put|delete|options)$/i.test(this.type)&&Zc()||$c()}:Zc;var Wc=0,Xc={},Yc=m.ajaxSettings.xhr();a.ActiveXObject&&m(a).on("unload",function(){for(var a in Xc)Xc[a](void 0,!0)}),k.cors=!!Yc&&"withCredentials"in Yc,Yc=k.ajax=!!Yc,Yc&&m.ajaxTransport(function(a){if(!a.crossDomain||k.cors){var b;return{send:function(c,d){var e,f=a.xhr(),g=++Wc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)void 0!==c[e]&&f.setRequestHeader(e,c[e]+"");f.send(a.hasContent&&a.data||null),b=function(c,e){var h,i,j;if(b&&(e||4===f.readyState))if(delete Xc[g],b=void 0,f.onreadystatechange=m.noop,e)4!==f.readyState&&f.abort();else{j={},h=f.status,"string"==typeof f.responseText&&(j.text=f.responseText);try{i=f.statusText}catch(k){i=""}h||!a.isLocal||a.crossDomain?1223===h&&(h=204):h=j.text?200:404}j&&d(h,i,j,f.getAllResponseHeaders())},a.async?4===f.readyState?setTimeout(b):f.onreadystatechange=Xc[g]=b:b()},abort:function(){b&&b(void 0,!0)}}}});function Zc(){try{return new a.XMLHttpRequest}catch(b){}}function $c(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}m.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return m.globalEval(a),a}}}),m.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),m.ajaxTransport("script",function(a){if(a.crossDomain){var b,c=y.head||m("head")[0]||y.documentElement;return{send:function(d,e){b=y.createElement("script"),b.async=!0,a.scriptCharset&&(b.charset=a.scriptCharset),b.src=a.url,b.onload=b.onreadystatechange=function(a,c){(c||!b.readyState||/loaded|complete/.test(b.readyState))&&(b.onload=b.onreadystatechange=null,b.parentNode&&b.parentNode.removeChild(b),b=null,c||e(200,"success"))},c.insertBefore(b,c.firstChild)},abort:function(){b&&b.onload(void 0,!0)}}}});var _c=[],ad=/(=)\?(?=&|$)|\?\?/;m.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=_c.pop()||m.expando+"_"+vc++;return this[a]=!0,a}}),m.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(ad.test(b.url)?"url":"string"==typeof b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&ad.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=m.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(ad,"$1"+e):b.jsonp!==!1&&(b.url+=(wc.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||m.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,_c.push(e)),g&&m.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),m.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&&(c=b,b=!1),b=b||y;var d=u.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=m.buildFragment([a],b,e),e&&e.length&&m(e).remove(),m.merge([],d.childNodes))};var bd=m.fn.load;m.fn.load=function(a,b,c){if("string"!=typeof a&&bd)return bd.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h>=0&&(d=m.trim(a.slice(h,a.length)),a=a.slice(0,h)),m.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(f="POST"),g.length>0&&m.ajax({url:a,type:f,dataType:"html",data:b}).done(function(a){e=arguments,g.html(d?m("<div>").append(m.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,e||[a.responseText,b,a])}),this},m.expr.filters.animated=function(a){return m.grep(m.timers,function(b){return a===b.elem}).length};var cd=a.document.documentElement;function dd(a){return m.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}m.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=m.css(a,"position"),l=m(a),n={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=m.css(a,"top"),i=m.css(a,"left"),j=("absolute"===k||"fixed"===k)&&m.inArray("auto",[f,i])>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),m.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(n.top=b.top-h.top+g),null!=b.left&&(n.left=b.left-h.left+e),"using"in b?b.using.call(a,n):l.css(n)}},m.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){m.offset.setOffset(this,a,b)});var b,c,d={top:0,left:0},e=this[0],f=e&&e.ownerDocument;if(f)return b=f.documentElement,m.contains(b,e)?(typeof e.getBoundingClientRect!==K&&(d=e.getBoundingClientRect()),c=dd(f),{top:d.top+(c.pageYOffset||b.scrollTop)-(b.clientTop||0),left:d.left+(c.pageXOffset||b.scrollLeft)-(b.clientLeft||0)}):d},position:function(){if(this[0]){var a,b,c={top:0,left:0},d=this[0];return"fixed"===m.css(d,"position")?b=d.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),m.nodeName(a[0],"html")||(c=a.offset()),c.top+=m.css(a[0],"borderTopWidth",!0),c.left+=m.css(a[0],"borderLeftWidth",!0)),{top:b.top-c.top-m.css(d,"marginTop",!0),left:b.left-c.left-m.css(d,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||cd;while(a&&!m.nodeName(a,"html")&&"static"===m.css(a,"position"))a=a.offsetParent;return a||cd})}}),m.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var c=/Y/.test(b);m.fn[a]=function(d){return V(this,function(a,d,e){var f=dd(a);return void 0===e?f?b in f?f[b]:f.document.documentElement[d]:a[d]:void(f?f.scrollTo(c?m(f).scrollLeft():e,c?e:m(f).scrollTop()):a[d]=e)},a,d,arguments.length,null)}}),m.each(["top","left"],function(a,b){m.cssHooks[b]=Lb(k.pixelPosition,function(a,c){return c?(c=Jb(a,b),Hb.test(c)?m(a).position()[b]+"px":c):void 0})}),m.each({Height:"height",Width:"width"},function(a,b){m.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){m.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return V(this,function(b,c,d){var e;return m.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?m.css(b,c,g):m.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),m.fn.size=function(){return this.length},m.fn.andSelf=m.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return m});var ed=a.jQuery,fd=a.$;return m.noConflict=function(b){return a.$===m&&(a.$=fd),b&&a.jQuery===m&&(a.jQuery=ed),m},typeof b===K&&(a.jQuery=a.$=m),m});

var localizationobj = {};
var pageSize=20;
$(function(){
    //植入分析
    
    
    
    //grid中文定义
    localizationobj.pagertotalpagestring = "总页数：";
    localizationobj.pagergotopagestring = "当前页数：";
    localizationobj.pagershowrowsstring = "每页显示条数：";
    localizationobj.pagerrangestring = " 总条数：";
    localizationobj.pagercurrnumstring = " 当前条数：";
    localizationobj.sortascendingstring = "升序排列";
    localizationobj.sortdescendingstring = "降序排列";
    localizationobj.sortremovestring = "移除排序";
    localizationobj.emptydatastring="暂无数据";
    
    localizationobj.pagernextbuttonstring = "下一场";
    localizationobj.pagerpreviousbuttonstring = "上一场";

    localizationobj.firstDay = 1;
    localizationobj.percentsymbol = "%";
    localizationobj.currencysymbol = "€";
    localizationobj.currencysymbolposition = "before";
    localizationobj.decimalseparator = ".";
    localizationobj.thousandsseparator = ",";

    var days = {
        // full day names
        names: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"],
        // abbreviated day names
        namesAbbr: ["Sonn", "Mon", "Dien", "Mitt", "Donn", "Fre", "Sams"],
        // shortest day names
        namesShort: ["日", "一", "二", "三", "四", "五", "六"]
    };

    localizationobj.days = days;

    var months = {
        // full month names (13 months for lunar calendards -- 13th month should be "" if not lunar)
        names: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember", ""],
        // abbreviated month names
        namesAbbr: ["Jan", "Feb", "Mär", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dez", ""]
    };

    localizationobj.months = months;
    
    
	localizationobj.browseButton='选择文件';
	localizationobj.uploadButton='上传';
	localizationobj.cancelButton='取消';
	localizationobj.uploadFileTooltip='Datei hochladen';
	localizationobj.cancelFileTooltip='aufheben';
    
    
});



function sendMessage(message){
	$("#jqxNotification > div").text(message);
	$("#jqxNotification").jqxNotification("open");
}

/**
 * 删除字符串两端空格
 * @param str
 * @returns
 */
function trim(str){ 
    return str.replace(/(^\s*)|(\s*$)/g, "");
}

/**
 * 下拉框高度获取
 * array 下拉框数据数组
 */
function getHeight(array){
	
	if(!array.length){
		return 25;
	}
	
	if(array.length==0){
		return 25;
	}
	
	if(array.length>10){
		return 250;
	}else{
		return (array.length+1)*25;
	}
}


function showSuccessMessage(message){
	$("#jqxNotification").find(".jqx-notification-content ").text("");
	$("#jqxNotification").find(".jqx-notification-content ").text(message);
	$("#jqxNotification").jqxNotification({template: "success"});
	$("#jqxNotification").jqxNotification({autoCloseDelay: 1000});
	$("#jqxNotification").jqxNotification("open");
}
function showErrorMessage(message){
	$("#jqxNotification").find(".jqx-notification-content ").text("");
	$("#jqxNotification").find(".jqx-notification-content ").text(message);
	$("#jqxNotification").jqxNotification({template: "error"});
	$("#jqxNotification").jqxNotification({autoCloseDelay: 5000});
	$("#jqxNotification").jqxNotification("open");
}
function showInfoMessage(message){
	$("#jqxNotification").find(".jqx-notification-content ").text("");
	$("#jqxNotification").find(".jqx-notification-content ").text(message);
	$("#jqxNotification").jqxNotification({template: "info"});
	$("#jqxNotification").jqxNotification({autoCloseDelay: 1000});
	$("#jqxNotification").jqxNotification("open");
}




/**
 * 获取导出数据的递归函数
 */
function addRecord(record,datafield){
	
	for(var i=0;i<record.length;i++){
		
		var obj = {};
		for(var n=0;n<datafield.length;n++){
			obj[datafield[n].dataField] = record[i][datafield[n].dataField] ;
		}
		obj["level"] = record[i]["level"] ;
		exportData.push(obj);
		if(record[i].records){
			addRecord(record[i].records,datafield);
		}
	}
}

/**
 * 去除html标签
 * @param str
 * @returns
 */
function removeHTMLTag(str) {
    str = str.replace(/<\/?[^>]*>/g,''); //去除HTML tag
    str = str.replace(/[ | ]*\n/g,'\n'); //去除行尾空白
    //str = str.replace(/\n[\s| | ]*\r/g,'\n'); //去除多余空行
    str=str.replace(/&nbsp;/ig,'');//去掉&nbsp;
    return str;
}
/**
 * 头部导航条添加文字
 * 父级，子级之间&&隔开
 */
function topbarInnerText(str){
	if(str.indexOf("&&") != -1) {
		var strs = str.split("&&");
		var text = "";
		var len = strs.length;
		for(var i=0;i<len;i++){
			text += strs[i];
			if(i < (len - 1)){
				text += "<span style='font-size:14px;'>&nbsp;&nbsp;>&nbsp;&nbsp;</span>";
			}
		}
		$("#topbar").html(text);
	}else{
		$("#topbar").html(str);
	}
	
}
/**
 * 弹出提示框
 * @param title 标题
 * @param content 内容
 */
function popupPromptBox(title,content,obj){
	$('#eventWindowAll').jqxWindow('open');
	if(title!=undefined || title!=null)
		$('#eventWindowAll').jqxWindow('setTitle', title);
	if(content!=undefined || content!=null)
		$('#eventWindowContent').text(content);
	if(content.length > 15)
		$('#eventWindowContent').css("margin-top","13px");
	$('#eventWindowAll').unbind("close");
	$('#eventWindowAll').on('close', function (event) {
		if (event.args.dialogResult.OK) {
			$(obj);
        }
    });
}

/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

var jqxBaseFramework = window.minQuery || window.jQuery; (function(a) {
    a.jqx = a.jqx || {};
    a.jqx.define = function(b, c, d) {
        b[c] = function() {
            if (this.baseType) {
                this.base = new b[this.baseType]();
                this.base.defineInstance()
            }
            this.defineInstance()
        };
        b[c].prototype.defineInstance = function() {};
        b[c].prototype.base = null;
        b[c].prototype.baseType = undefined;
        if (d && b[d]) {
            b[c].prototype.baseType = d
        }
    };
    a.jqx.invoke = function(e, d) {
        if (d.length == 0) {
            return
        }
        var f = typeof(d) == Array || d.length > 0 ? d[0] : d;
        var c = typeof(d) == Array || d.length > 1 ? Array.prototype.slice.call(d, 1) : a({}).toArray();
        while (e[f] == undefined && e.base != null) {
            if (e[f] != undefined && a.isFunction(e[f])) {
                return e[f].apply(e, c)
            }
            if (typeof f == "string") {
                var b = f.toLowerCase();
                if (e[b] != undefined && a.isFunction(e[b])) {
                    return e[b].apply(e, c)
                }
            }
            e = e.base
        }
        if (e[f] != undefined && a.isFunction(e[f])) {
            return e[f].apply(e, c)
        }
        if (typeof f == "string") {
            var b = f.toLowerCase();
            if (e[b] != undefined && a.isFunction(e[b])) {
                return e[b].apply(e, c)
            }
        }
        return
    };
    a.jqx.hasProperty = function(c, b) {
        if (typeof(b) == "object") {
            for (var e in b) {
                var d = c;
                while (d) {
                    if (d.hasOwnProperty(e)) {
                        return true
                    }
                    if (d.hasOwnProperty(e.toLowerCase())) {
                        return true
                    }
                    d = d.base
                }
                return false
            }
        } else {
            while (c) {
                if (c.hasOwnProperty(b)) {
                    return true
                }
                if (c.hasOwnProperty(b.toLowerCase())) {
                    return true
                }
                c = c.base
            }
        }
        return false
    };
    a.jqx.hasFunction = function(e, d) {
        if (d.length == 0) {
            return false
        }
        if (e == undefined) {
            return false
        }
        var f = typeof(d) == Array || d.length > 0 ? d[0] : d;
        var c = typeof(d) == Array || d.length > 1 ? Array.prototype.slice.call(d, 1) : {};
        while (e[f] == undefined && e.base != null) {
            if (e[f] && a.isFunction(e[f])) {
                return true
            }
            if (typeof f == "string") {
                var b = f.toLowerCase();
                if (e[b] && a.isFunction(e[b])) {
                    return true
                }
            }
            e = e.base
        }
        if (e[f] && a.isFunction(e[f])) {
            return true
        }
        if (typeof f == "string") {
            var b = f.toLowerCase();
            if (e[b] && a.isFunction(e[b])) {
                return true
            }
        }
        return false
    };
    a.jqx.isPropertySetter = function(c, b) {
        if (b.length == 1 && typeof(b[0]) == "object") {
            return true
        }
        if (b.length == 2 && typeof(b[0]) == "string" && !a.jqx.hasFunction(c, b)) {
            return true
        }
        return false
    };
    a.jqx.validatePropertySetter = function(f, d, b) {
        if (!a.jqx.propertySetterValidation) {
            return true
        }
        if (d.length == 1 && typeof(d[0]) == "object") {
            for (var e in d[0]) {
                var g = f;
                while (!g.hasOwnProperty(e) && g.base) {
                    g = g.base
                }
                if (!g || !g.hasOwnProperty(e)) {
                    if (!b) {
                        var c = g.hasOwnProperty(e.toString().toLowerCase());
                        if (!c) {
                            throw "Invalid property: " + e
                        } else {
                            return true
                        }
                    }
                    return false
                }
            }
            return true
        }
        if (d.length != 2) {
            if (!b) {
                throw "Invalid property: " + d.length >= 0 ? d[0] : ""
            }
            return false
        }
        while (!f.hasOwnProperty(d[0]) && f.base) {
            f = f.base
        }
        if (!f || !f.hasOwnProperty(d[0])) {
            if (!b) {
                throw "Invalid property: " + d[0]
            }
            return false
        }
        return true
    };
    a.jqx.set = function(f, e) {
        var d = 0;
        if (e.length == 1 && typeof(e[0]) == "object") {
            if (f.isInitialized && Object.keys && Object.keys(e[0]).length > 1) {
                var g = !f.base ? f.element: f.base.element;
                var j = a.data(g, f.widgetName).initArgs;
                if (JSON && JSON.stringify && e[0] && j[0]) {
                    try {
                        if (JSON.stringify(e[0]) == JSON.stringify(j[0])) {
                            return
                        }
                    } catch(h) {}
                }
                f.batchUpdate = e[0];
                var b = {};
                var c = {};
                a.each(e[0],
                function(k, l) {
                    var m = f;
                    while (!m.hasOwnProperty(k) && m.base != null) {
                        m = m.base
                    }
                    if (m.hasOwnProperty(k)) {
                        if (f[k] != l) {
                            b[k] = f[k];
                            c[k] = l;
                            d++
                        }
                    } else {
                        if (m.hasOwnProperty(k.toLowerCase())) {
                            if (f[k.toLowerCase()] != l) {
                                b[k.toLowerCase()] = f[k.toLowerCase()];
                                c[k.toLowerCase()] = l;
                                d++
                            }
                        }
                    }
                });
                if (d < 2) {
                    f.batchUpdate = null
                }
            }
            a.each(e[0],
            function(k, l) {
                var m = f;
                while (!m.hasOwnProperty(k) && m.base != null) {
                    m = m.base
                }
                if (m.hasOwnProperty(k)) {
                    a.jqx.setvalueraiseevent(m, k, l)
                } else {
                    if (m.hasOwnProperty(k.toLowerCase())) {
                        a.jqx.setvalueraiseevent(m, k.toLowerCase(), l)
                    } else {
                        if (a.jqx.propertySetterValidation) {
                            throw "jqxCore: invalid property '" + k + "'"
                        }
                    }
                }
            });
            if (f.batchUpdate != null) {
                f.batchUpdate = null;
                if (f.propertiesChangedHandler && d > 1) {
                    f.propertiesChangedHandler(f, b, c)
                }
            }
        } else {
            if (e.length == 2) {
                while (!f.hasOwnProperty(e[0]) && f.base) {
                    f = f.base
                }
                if (f.hasOwnProperty(e[0])) {
                    a.jqx.setvalueraiseevent(f, e[0], e[1])
                } else {
                    if (f.hasOwnProperty(e[0].toLowerCase())) {
                        a.jqx.setvalueraiseevent(f, e[0].toLowerCase(), e[1])
                    } else {
                        if (a.jqx.propertySetterValidation) {
                            throw "jqxCore: invalid property '" + e[0] + "'"
                        }
                    }
                }
            }
        }
    };
    a.jqx.setvalueraiseevent = function(c, d, e) {
        var b = c[d];
        c[d] = e;
        if (!c.isInitialized) {
            return
        }
        if (c.propertyChangedHandler != undefined) {
            c.propertyChangedHandler(c, d, b, e)
        }
        if (c.propertyChangeMap != undefined && c.propertyChangeMap[d] != undefined) {
            c.propertyChangeMap[d](c, d, b, e)
        }
    };
    a.jqx.get = function(e, d) {
        if (d == undefined || d == null) {
            return undefined
        }
        if (e.propertyMap) {
            var c = e.propertyMap(d);
            if (c != null) {
                return c
            }
        }
        if (e.hasOwnProperty(d)) {
            return e[d]
        }
        if (e.hasOwnProperty(d.toLowerCase())) {
            return e[d.toLowerCase()]
        }
        var b = undefined;
        if (typeof(d) == Array) {
            if (d.length != 1) {
                return undefined
            }
            b = d[0]
        } else {
            if (typeof(d) == "string") {
                b = d
            }
        }
        while (!e.hasOwnProperty(b) && e.base) {
            e = e.base
        }
        if (e) {
            return e[b]
        }
        return undefined
    };
    a.jqx.serialize = function(e) {
        var b = "";
        if (a.isArray(e)) {
            b = "[";
            for (var d = 0; d < e.length; d++) {
                if (d > 0) {
                    b += ", "
                }
                b += a.jqx.serialize(e[d])
            }
            b += "]"
        } else {
            if (typeof(e) == "object") {
                b = "{";
                var c = 0;
                for (var d in e) {
                    if (c++>0) {
                        b += ", "
                    }
                    b += d + ": " + a.jqx.serialize(e[d])
                }
                b += "}"
            } else {
                b = e.toString()
            }
        }
        return b
    };
    a.jqx.propertySetterValidation = true;
    a.jqx.jqxWidgetProxy = function(g, c, b) {
        var d = a(c);
        var f = a.data(c, g);
        if (f == undefined) {
            return undefined
        }
        var e = f.instance;
        if (a.jqx.hasFunction(e, b)) {
            return a.jqx.invoke(e, b)
        }
        if (a.jqx.isPropertySetter(e, b)) {
            if (a.jqx.validatePropertySetter(e, b)) {
                a.jqx.set(e, b);
                return undefined
            }
        } else {
            if (typeof(b) == "object" && b.length == 0) {
                return
            } else {
                if (typeof(b) == "object" && b.length == 1 && a.jqx.hasProperty(e, b[0])) {
                    return a.jqx.get(e, b[0])
                } else {
                    if (typeof(b) == "string" && a.jqx.hasProperty(e, b[0])) {
                        return a.jqx.get(e, b)
                    }
                }
            }
        }
        throw "jqxCore: Invalid parameter '" + a.jqx.serialize(b) + "' does not exist.";
        return undefined
    };
    a.jqx.applyWidget = function(c, d, k, l) {
        var g = false;
        try {
            g = window.MSApp != undefined
        } catch(f) {}
        var m = a(c);
        if (!l) {
            l = new a.jqx["_" + d]()
        } else {
            l.host = m;
            l.element = c
        }
        if (c.id == "") {
            c.id = a.jqx.utilities.createId()
        }
        var j = {
            host: m,
            element: c,
            instance: l,
            initArgs: k
        };
        l.widgetName = d;
        a.data(c, d, j);
        a.data(c, "jqxWidget", j.instance);
        var h = new Array();
        var l = j.instance;
        while (l) {
            l.isInitialized = false;
            h.push(l);
            l = l.base
        }
        h.reverse();
        h[0].theme = a.jqx.theme || "";
        a.jqx.jqxWidgetProxy(d, c, k);
        for (var b in h) {
            l = h[b];
            if (b == 0) {
                l.host = m;
                l.element = c;
                l.WinJS = g
            }
            if (l != undefined) {
                if (l.definedInstance) {
                    l.definedInstance()
                }
                if (l.createInstance != null) {
                    if (g) {
                        MSApp.execUnsafeLocalFunction(function() {
                            l.createInstance(k)
                        })
                    } else {
                        l.createInstance(k)
                    }
                }
            }
        }
        for (var b in h) {
            if (h[b] != undefined) {
                h[b].isInitialized = true
            }
        }
        if (g) {
            MSApp.execUnsafeLocalFunction(function() {
                j.instance.refresh(true)
            })
        } else {
            j.instance.refresh(true)
        }
    };
    a.jqx.jqxWidget = function(b, c, f) {
        var j = false;
        try {
            jqxArgs = Array.prototype.slice.call(f, 0)
        } catch(h) {
            jqxArgs = ""
        }
        try {
            j = window.MSApp != undefined
        } catch(h) {}
        var g = b;
        var l = "";
        if (c) {
            l = "_" + c
        }
        a.jqx.define(a.jqx, "_" + g, l);
        var k = new Array();
        if (!window[g]) {
            var d = function(m) {
                if (m == null) {
                    return ""
                }
                var e = a.type(m);
                switch (e) {
                case "string":
                case "number":
                case "date":
                case "boolean":
                case "bool":
                    if (m === null) {
                        return ""
                    }
                    return m.toString()
                }
                var n = "";
                a.each(m,
                function(p) {
                    var r = this;
                    if (p > 0) {
                        n += ", "
                    }
                    n += "[";
                    var o = 0;
                    if (a.type(r) == "object") {
                        for (var q in r) {
                            if (o > 0) {
                                n += ", "
                            }
                            n += "{" + q + ":" + r[q] + "}";
                            o++
                        }
                    } else {
                        if (o > 0) {
                            n += ", "
                        }
                        n += "{" + p + ":" + r + "}";
                        o++
                    }
                    n += "]"
                });
                return n
            };
            window[g] = function(e, r) {
                var m = [];
                if (!r) {
                    r = {}
                }
                m.push(r);
                var n = e;
                if (a.type(n) === "object" && e[0]) {
                    n = e[0].id;
                    if (n === "") {
                        n = e[0].id = a.jqx.utilities.createId()
                    }
                }
                if (window.jqxWidgets && window.jqxWidgets[n]) {
                    if (r) {
                        a.each(window.jqxWidgets[n],
                        function(s) {
                            var t = a(this.element).data();
                            if (t && t.jqxWidget) {
                                a(this.element)[g](r)
                            }
                        })
                    }
                    if (window.jqxWidgets[n].length == 1) {
                        var p = a(window.jqxWidgets[n][0].widgetInstance.element).data();
                        if (p && p.jqxWidget) {
                            return window.jqxWidgets[n][0]
                        }
                    }
                    var p = a(window.jqxWidgets[n][0].widgetInstance.element).data();
                    if (p && p.jqxWidget) {
                        return window.jqxWidgets[n]
                    }
                }
                var o = a(e);
                if (o.length === 0) {
                    throw new Error("Invalid Selector - " + e + "! Please, check whether the used ID or CSS Class name is correct.")
                }
                var q = [];
                a.each(o,
                function(v) {
                    var x = o[v];
                    var u = null;
                    if (!k[g]) {
                        var y = x.id;
                        x.id = "";
                        u = a(x).clone();
                        x.id = y
                    }
                    a.jqx.applyWidget(x, g, m, undefined);
                    if (!k[g]) {
                        var t = a.data(x, "jqxWidget");
                        var w = u[g]().data().jqxWidget.defineInstance();
                        var s = function(A) {
                            var z = a.data(A, "jqxWidget");
                            this.widgetInstance = z;
                            var B = a.extend(this, z);
                            B.on = function(C, D) {
                                B.addHandler(B.host, C, D)
                            };
                            B.off = function(C) {
                                B.removeHandler(B.host, C)
                            };
                            return B
                        };
                        k[g] = s;
                        a.each(w,
                        function(A, z) {
                            Object.defineProperty(s.prototype, A, {
                                get: function() {
                                    if (this.widgetInstance) {
                                        return this.widgetInstance[A]
                                    }
                                    return z
                                },
                                set: function(C) {
                                    if (this.widgetInstance && this.widgetInstance[A] != C) {
                                        if (this.widgetInstance[A] != C && d(this.widgetInstance[A]) != d(C)) {
                                            var B = {};
                                            B[A] = C;
                                            this.widgetInstance.host[g](B);
                                            this.widgetInstance[A] = C
                                        }
                                    }
                                }
                            })
                        })
                    }
                    var t = new k[g](x);
                    q.push(t);
                    if (!window.jqxWidgets) {
                        window.jqxWidgets = new Array()
                    }
                    if (!window.jqxWidgets[n]) {
                        window.jqxWidgets[n] = new Array()
                    }
                    window.jqxWidgets[n].push(t)
                });
                if (q.length === 1) {
                    return q[0]
                }
                return q
            }
        }
        a.fn[g] = function() {
            var e = Array.prototype.slice.call(arguments, 0);
            if (e.length == 0 || (e.length == 1 && typeof(e[0]) == "object")) {
                if (this.length == 0) {
                    if (this.selector) {
                        throw new Error("Invalid Selector - " + this.selector + "! Please, check whether the used ID or CSS Class name is correct.")
                    } else {
                        throw new Error("Invalid Selector! Please, check whether the used ID or CSS Class name is correct.")
                    }
                }
                return this.each(function() {
                    var p = a(this);
                    var o = this;
                    var q = a.data(o, g);
                    if (q == null) {
                        a.jqx.applyWidget(o, g, e, undefined)
                    } else {
                        a.jqx.jqxWidgetProxy(g, this, e)
                    }
                })
            } else {
                if (this.length == 0) {
                    if (this.selector) {
                        throw new Error("Invalid Selector - " + this.selector + "! Please, check whether the used ID or CSS Class name is correct.")
                    } else {
                        throw new Error("Invalid Selector! Please, check whether the used ID or CSS Class name is correct.")
                    }
                }
                var n = null;
                var m = 0;
                this.each(function() {
                    var o = a.jqx.jqxWidgetProxy(g, this, e);
                    if (m == 0) {
                        n = o;
                        m++
                    } else {
                        if (m == 1) {
                            var p = [];
                            p.push(n);
                            n = p
                        }
                        n.push(o)
                    }
                })
            }
            return n
        };
        try {
            a.extend(a.jqx["_" + g].prototype, Array.prototype.slice.call(f, 0)[0])
        } catch(h) {}
        a.extend(a.jqx["_" + g].prototype, {
            toThemeProperty: function(e, m) {
                return a.jqx.toThemeProperty(this, e, m)
            }
        });
        a.jqx["_" + g].prototype.refresh = function() {
            if (this.base) {
                this.base.refresh(true)
            }
        };
        a.jqx["_" + g].prototype.createInstance = function() {};
        a.jqx["_" + g].prototype.applyTo = function(n, m) {
            if (! (m instanceof Array)) {
                var e = [];
                e.push(m);
                m = e
            }
            a.jqx.applyWidget(n, g, m, this)
        };
        a.jqx["_" + g].prototype.getInstance = function() {
            return this
        };
        a.jqx["_" + g].prototype.propertyChangeMap = {};
        a.jqx["_" + g].prototype.addHandler = function(o, e, m, n) {
            a.jqx.addHandler(o, e, m, n)
        };
        a.jqx["_" + g].prototype.removeHandler = function(n, e, m) {
            a.jqx.removeHandler(n, e, m)
        }
    };
    a.jqx.toThemeProperty = function(c, d, h) {
        if (c.theme == "") {
            return d
        }
        var g = d.split(" ");
        var b = "";
        for (var f = 0; f < g.length; f++) {
            if (f > 0) {
                b += " "
            }
            var e = g[f];
            if (h != null && h) {
                b += e + "-" + c.theme
            } else {
                b += e + " " + e + "-" + c.theme
            }
        }
        return b
    };
    a.jqx.addHandler = function(g, h, e, f) {
        var c = h.split(" ");
        for (var b = 0; b < c.length; b++) {
            var d = c[b];
            if (window.addEventListener) {
                switch (d) {
                case "mousewheel":
                    if (a.jqx.browser.mozilla) {
                        g[0].addEventListener("DOMMouseScroll", e, false)
                    } else {
                        g[0].addEventListener("mousewheel", e, false)
                    }
                    continue;
                case "mousemove":
                    if (!f) {
                        g[0].addEventListener("mousemove", e, false);
                        continue
                    }
                    break
                }
            }
            if (f == undefined || f == null) {
                if (g.on) {
                    g.on(d, e)
                } else {
                    g.bind(d, e)
                }
            } else {
                if (g.on) {
                    g.on(d, f, e)
                } else {
                    g.bind(d, f, e)
                }
            }
        }
    };
    a.jqx.removeHandler = function(f, g, e) {
        if (!g) {
            return
        }
        var c = g.split(" ");
        for (var b = 0; b < c.length; b++) {
            var d = c[b];
            if (window.removeEventListener) {
                switch (d) {
                case "mousewheel":
                    if (a.jqx.browser.mozilla) {
                        f[0].removeEventListener("DOMMouseScroll", e, false)
                    } else {
                        f[0].removeEventListener("mousewheel", e, false)
                    }
                    continue;
                case "mousemove":
                    if (e) {
                        f[0].removeEventListener("mousemove", e, false);
                        continue
                    }
                    break
                }
            }
            if (d == undefined) {
                if (f.off) {
                    f.off()
                } else {
                    f.unbind()
                }
                continue
            }
            if (e == undefined) {
                if (f.off) {
                    f.off(d)
                } else {
                    f.unbind(d)
                }
            } else {
                if (f.off) {
                    f.off(d, e)
                } else {
                    f.unbind(d, e)
                }
            }
        }
    };
    a.jqx.theme = a.jqx.theme || "";
    a.jqx.resizeDelay = a.jqx.resizeDelay || 10;
    a.jqx.ready = function() {
        a(window).trigger("jqxReady")
    };
    a.jqx.init = function() {
        a.each(arguments[0],
        function(b, c) {
            if (b == "theme") {
                a.jqx.theme = c
            }
            if (b == "scrollBarSize") {
                a.jqx.utilities.scrollBarSize = c
            }
            if (b == "touchScrollBarSize") {
                a.jqx.utilities.touchScrollBarSize = c
            }
            if (b == "scrollBarButtonsVisibility") {
                a.jqx.utilities.scrollBarButtonsVisibility = c
            }
        })
    };
    a.jqx.utilities = a.jqx.utilities || {};
    a.extend(a.jqx.utilities, {
        scrollBarSize: 15,
        touchScrollBarSize: 10,
        scrollBarButtonsVisibility: "visible",
        createId: function() {
            var b = function() {
                return (((1 + Math.random()) * 65536) | 0).toString(16).substring(1)
            };
            return "jqxWidget" + b() + b()
        },
        setTheme: function(f, g, e) {
            if (typeof e === "undefined") {
                return
            }
            var h = e[0].className.split(" "),
            b = [],
            j = [],
            d = e.children();
            for (var c = 0; c < h.length; c += 1) {
                if (h[c].indexOf(f) >= 0) {
                    if (f.length > 0) {
                        b.push(h[c]);
                        j.push(h[c].replace(f, g))
                    } else {
                        j.push(h[c].replace("-" + g, "") + "-" + g)
                    }
                }
            }
            this._removeOldClasses(b, e);
            this._addNewClasses(j, e);
            for (var c = 0; c < d.length; c += 1) {
                this.setTheme(f, g, a(d[c]))
            }
        },
        _removeOldClasses: function(d, c) {
            for (var b = 0; b < d.length; b += 1) {
                c.removeClass(d[b])
            }
        },
        _addNewClasses: function(d, c) {
            for (var b = 0; b < d.length; b += 1) {
                c.addClass(d[b])
            }
        },
        getOffset: function(b) {
            var d = a.jqx.mobile.getLeftPos(b[0]);
            var c = a.jqx.mobile.getTopPos(b[0]);
            return {
                top: c,
                left: d
            }
        },
        resize: function(d, m, l, k) {
            if (k === undefined) {
                k = true
            }
            var g = -1;
            var f = this;
            var c = function(o) {
                if (!f.hiddenWidgets) {
                    return - 1
                }
                var p = -1;
                for (var n = 0; n < f.hiddenWidgets.length; n++) {
                    if (o.id) {
                        if (f.hiddenWidgets[n].id == o.id) {
                            p = n;
                            break
                        }
                    } else {
                        if (f.hiddenWidgets[n].id == o[0].id) {
                            p = n;
                            break
                        }
                    }
                }
                return p
            };
            if (this.resizeHandlers) {
                for (var e = 0; e < this.resizeHandlers.length; e++) {
                    if (d.id) {
                        if (this.resizeHandlers[e].id == d.id) {
                            g = e;
                            break
                        }
                    } else {
                        if (this.resizeHandlers[e].id == d[0].id) {
                            g = e;
                            break
                        }
                    }
                }
                if (l === true) {
                    if (g != -1) {
                        this.resizeHandlers.splice(g, 1)
                    }
                    if (this.resizeHandlers.length == 0) {
                        var j = a(window);
                        if (j.off) {
                            j.off("resize.jqx");
                            j.off("orientationchange.jqx");
                            j.off("orientationchanged.jqx")
                        } else {
                            j.unbind("resize.jqx");
                            j.unbind("orientationchange.jqx");
                            j.unbind("orientationchanged.jqx")
                        }
                        this.resizeHandlers = null
                    }
                    var b = c(d);
                    if (b != -1 && this.hiddenWidgets) {
                        this.hiddenWidgets.splice(b, 1)
                    }
                    return
                }
            } else {
                if (l === true) {
                    var b = c(d);
                    if (b != -1 && this.hiddenWidgets) {
                        this.hiddenWidgets.splice(b, 1)
                    }
                    return
                }
            }
            var f = this;
            var h = function(p, x) {
                if (!f.resizeHandlers) {
                    return
                }
                var y = function(C) {
                    var B = -1;
                    var D = C.parentNode;
                    while (D) {
                        B++;
                        D = D.parentNode
                    }
                    return B
                };
                var o = function(E, C) {
                    if (!E.widget || !C.widget) {
                        return 0
                    }
                    var D = y(E.widget[0]);
                    var B = y(C.widget[0]);
                    try {
                        if (D < B) {
                            return - 1
                        }
                        if (D > B) {
                            return 1
                        }
                    } catch(F) {
                        var G = F
                    }
                    return 0
                };
                var q = function(C) {
                    if (f.hiddenWidgets.length > 0) {
                        f.hiddenWidgets.sort(o);
                        var B = function() {
                            var E = false;
                            var G = new Array();
                            for (var F = 0; F < f.hiddenWidgets.length; F++) {
                                var D = f.hiddenWidgets[F];
                                if (a.jqx.isHidden(D.widget)) {
                                    E = true;
                                    G.push(D)
                                } else {
                                    if (D.callback) {
                                        D.callback(x)
                                    }
                                }
                            }
                            f.hiddenWidgets = G;
                            if (!E) {
                                clearInterval(f.__resizeInterval)
                            }
                        };
                        if (C == false) {
                            B();
                            if (f.__resizeInterval) {
                                clearInterval(f.__resizeInterval)
                            }
                            return
                        }
                        if (f.__resizeInterval) {
                            clearInterval(f.__resizeInterval)
                        }
                        f.__resizeInterval = setInterval(function() {
                            B()
                        },
                        100)
                    }
                };
                if (f.hiddenWidgets && f.hiddenWidgets.length > 0) {
                    q(false)
                }
                f.hiddenWidgets = new Array();
                f.resizeHandlers.sort(o);
                for (var u = 0; u < f.resizeHandlers.length; u++) {
                    var A = f.resizeHandlers[u];
                    var w = A.widget;
                    var t = A.data;
                    if (!t) {
                        continue
                    }
                    if (!t.jqxWidget) {
                        continue
                    }
                    var n = t.jqxWidget.width;
                    var z = t.jqxWidget.height;
                    if (t.jqxWidget.base) {
                        if (n == undefined) {
                            n = t.jqxWidget.base.width
                        }
                        if (z == undefined) {
                            z = t.jqxWidget.base.height
                        }
                    }
                    if (n === undefined && z === undefined) {
                        n = t.jqxWidget.element.style.width;
                        z = t.jqxWidget.element.style.height
                    }
                    var v = false;
                    if (n != null && n.toString().indexOf("%") != -1) {
                        v = true
                    }
                    if (z != null && z.toString().indexOf("%") != -1) {
                        v = true
                    }
                    if (a.jqx.isHidden(w)) {
                        if (c(w) === -1) {
                            if (v || p === true) {
                                if (A.data.nestedWidget !== true) {
                                    f.hiddenWidgets.push(A)
                                }
                            }
                        }
                    } else {
                        if (p === undefined || p !== true) {
                            if (v) {
                                A.callback(x);
                                if (f.hiddenWidgets.indexOf(A) >= 0) {
                                    f.hiddenWidgets.splice(f.hiddenWidgets.indexOf(A), 1)
                                }
                            }
                            if (t.jqxWidget.element) {
                                var r = t.jqxWidget.element.className;
                                if (r.indexOf("dropdownlist") >= 0 || r.indexOf("datetimeinput") >= 0 || r.indexOf("combobox") >= 0 || r.indexOf("menu") >= 0) {
                                    if (t.jqxWidget.isOpened) {
                                        var s = t.jqxWidget.isOpened();
                                        if (s) {
                                            t.jqxWidget.close()
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                q()
            };
            if (!this.resizeHandlers) {
                this.resizeHandlers = new Array();
                var j = a(window);
                if (j.on) {
                    this._resizeTimer = null;
                    this._initResize = null;
                    j.on("resize.jqx",
                    function(n) {
                        if (f._resizeTimer != undefined) {
                            clearTimeout(f._resizeTimer)
                        }
                        if (!f._initResize) {
                            f._initResize = true;
                            h(null, "resize")
                        } else {
                            f._resizeTimer = setTimeout(function() {
                                h(null, "resize")
                            },
                            a.jqx.resizeDelay)
                        }
                    });
                    j.on("orientationchange.jqx",
                    function(n) {
                        h(null, "orientationchange")
                    });
                    j.on("orientationchanged.jqx",
                    function(n) {
                        h(null, "orientationchange")
                    })
                } else {
                    j.bind("resize.jqx",
                    function(n) {
                        h(null, "orientationchange")
                    });
                    j.bind("orientationchange.jqx",
                    function(n) {
                        h(null, "orientationchange")
                    });
                    j.bind("orientationchanged.jqx",
                    function(n) {
                        h(null, "orientationchange")
                    })
                }
            }
            if (k) {
                if (g === -1) {
                    this.resizeHandlers.push({
                        id: d[0].id,
                        widget: d,
                        callback: m,
                        data: d.data()
                    })
                }
            }
            if (a.jqx.isHidden(d) && k === true) {
                h(true)
            }
            a.jqx.resize = function() {
                h(null, "resize")
            }
        },
        html: function(c, d) {
            if (!a(c).on) {
                return a(c).html(d)
            }
            try {
                return a.access(c,
                function(s) {
                    var f = c[0] || {},
                    m = 0,
                    j = c.length;
                    if (s === undefined) {
                        return f.nodeType === 1 ? f.innerHTML.replace(rinlinejQuery, "") : undefined
                    }
                    var r = /<(?:script|style|link)/i,
                    n = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
                    h = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
                    p = /<([\w:]+)/,
                    g = /<(?:script|object|embed|option|style)/i,
                    k = new RegExp("<(?:" + n + ")[\\s/>]", "i"),
                    q = /^\s+/,
                    t = {
                        option: [1, "<select multiple='multiple'>", "</select>"],
                        legend: [1, "<fieldset>", "</fieldset>"],
                        thead: [1, "<table>", "</table>"],
                        tr: [2, "<table><tbody>", "</tbody></table>"],
                        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                        col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
                        area: [1, "<map>", "</map>"],
                        _default: [0, "", ""]
                    };
                    if (typeof s === "string" && !r.test(s) && (a.support.htmlSerialize || !k.test(s)) && (a.support.leadingWhitespace || !q.test(s)) && !t[(p.exec(s) || ["", ""])[1].toLowerCase()]) {
                        s = s.replace(h, "<$1></$2>");
                        try {
                            for (; m < j; m++) {
                                f = this[m] || {};
                                if (f.nodeType === 1) {
                                    a.cleanData(f.getElementsByTagName("*"));
                                    f.innerHTML = s
                                }
                            }
                            f = 0
                        } catch(o) {}
                    }
                    if (f) {
                        c.empty().append(s)
                    }
                },
                null, d, arguments.length)
            } catch(b) {
                return a(c).html(d)
            }
        },
        hasTransform: function(d) {
            var c = "";
            c = d.css("transform");
            if (c == "" || c == "none") {
                c = d.parents().css("transform");
                if (c == "" || c == "none") {
                    var b = a.jqx.utilities.getBrowser();
                    if (b.browser == "msie") {
                        c = d.css("-ms-transform");
                        if (c == "" || c == "none") {
                            c = d.parents().css("-ms-transform")
                        }
                    } else {
                        if (b.browser == "chrome") {
                            c = d.css("-webkit-transform");
                            if (c == "" || c == "none") {
                                c = d.parents().css("-webkit-transform")
                            }
                        } else {
                            if (b.browser == "opera") {
                                c = d.css("-o-transform");
                                if (c == "" || c == "none") {
                                    c = d.parents().css("-o-transform")
                                }
                            } else {
                                if (b.browser == "mozilla") {
                                    c = d.css("-moz-transform");
                                    if (c == "" || c == "none") {
                                        c = d.parents().css("-moz-transform")
                                    }
                                }
                            }
                        }
                    }
                } else {
                    return c != "" && c != "none"
                }
            }
            if (c == "" || c == "none") {
                c = a(document.body).css("transform")
            }
            return c != "" && c != "none" && c != null
        },
        getBrowser: function() {
            var c = navigator.userAgent.toLowerCase();
            var b = /(chrome)[ \/]([\w.]+)/.exec(c) || /(webkit)[ \/]([\w.]+)/.exec(c) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(c) || /(msie) ([\w.]+)/.exec(c) || c.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(c) || [];
            var d = {
                browser: b[1] || "",
                version: b[2] || "0"
            };
            if (c.indexOf("rv:11.0") >= 0 && c.indexOf(".net4.0c") >= 0) {
                d.browser = "msie";
                d.version = "11";
                b[1] = "msie"
            }
            d[b[1]] = b[1];
            return d
        }
    });
    a.jqx.browser = a.jqx.utilities.getBrowser();
    a.jqx.isHidden = function(d) {
        try {
            var b = d[0].offsetWidth,
            e = d[0].offsetHeight;
            if (b === 0 || e === 0) {
                return true
            } else {
                return false
            }
        } catch(c) {
            return false
        }
    };
    a.jqx.ariaEnabled = true;
    a.jqx.aria = function(c, e, d) {
        if (!a.jqx.ariaEnabled) {
            return
        }
        if (e == undefined) {
            a.each(c.aria,
            function(g, h) {
                var k = !c.base ? c.host.attr(g) : c.base.host.attr(g);
                if (k != undefined && !a.isFunction(k)) {
                    var j = k;
                    switch (h.type) {
                    case "number":
                        j = new Number(k);
                        if (isNaN(j)) {
                            j = k
                        }
                        break;
                    case "boolean":
                        j = k == "true" ? true: false;
                        break;
                    case "date":
                        j = new Date(k);
                        if (j == "Invalid Date" || isNaN(j)) {
                            j = k
                        }
                        break
                    }
                    c[h.name] = j
                } else {
                    var k = c[h.name];
                    if (a.isFunction(k)) {
                        k = c[h.name]()
                    }
                    if (k == undefined) {
                        k = ""
                    }
                    try { ! c.base ? c.host.attr(g, k.toString()) : c.base.host.attr(g, k.toString())
                    } catch(f) {}
                }
            })
        } else {
            try {
                if (c.host) {
                    if (!c.base) {
                        if (c.host) {
                            if (c.element.setAttribute) {
                                c.element.setAttribute(e, d.toString())
                            } else {
                                c.host.attr(e, d.toString())
                            }
                        } else {
                            c.attr(e, d.toString())
                        }
                    } else {
                        if (c.base.host) {
                            c.base.host.attr(e, d.toString())
                        } else {
                            c.attr(e, d.toString())
                        }
                    }
                } else {
                    if (c.setAttribute) {
                        c.setAttribute(e, d.toString())
                    }
                }
            } catch(b) {}
        }
    };
    if (!Array.prototype.indexOf) {
        Array.prototype.indexOf = function(c) {
            var b = this.length;
            var d = Number(arguments[1]) || 0;
            d = (d < 0) ? Math.ceil(d) : Math.floor(d);
            if (d < 0) {
                d += b
            }
            for (; d < b; d++) {
                if (d in this && this[d] === c) {
                    return d
                }
            }
            return - 1
        }
    }
    a.jqx.mobile = a.jqx.mobile || {};
    a.jqx.position = function(b) {
        var e = parseInt(b.pageX);
        var d = parseInt(b.pageY);
        if (a.jqx.mobile.isTouchDevice()) {
            var c = a.jqx.mobile.getTouches(b);
            var f = c[0];
            e = parseInt(f.pageX);
            d = parseInt(f.pageY)
        }
        return {
            left: e,
            top: d
        }
    };
    a.extend(a.jqx.mobile, {
        _touchListener: function(h, f) {
            var b = function(j, l) {
                var k = document.createEvent("MouseEvents");
                k.initMouseEvent(j, l.bubbles, l.cancelable, l.view, l.detail, l.screenX, l.screenY, l.clientX, l.clientY, l.ctrlKey, l.altKey, l.shiftKey, l.metaKey, l.button, l.relatedTarget);
                k._pageX = l.pageX;
                k._pageY = l.pageY;
                return k
            };
            var g = {
                mousedown: "touchstart",
                mouseup: "touchend",
                mousemove: "touchmove"
            };
            var d = b(g[h.type], h);
            h.target.dispatchEvent(d);
            var c = h.target["on" + g[h.type]];
            if (typeof c === "function") {
                c(h)
            }
        },
        setMobileSimulator: function(c, e) {
            if (this.isTouchDevice()) {
                return
            }
            this.simulatetouches = true;
            if (e == false) {
                this.simulatetouches = false
            }
            var d = {
                mousedown: "touchstart",
                mouseup: "touchend",
                mousemove: "touchmove"
            };
            var b = this;
            if (window.addEventListener) {
                var f = function() {
                    for (var g in d) {
                        if (c.addEventListener) {
                            c.removeEventListener(g, b._touchListener);
                            c.addEventListener(g, b._touchListener, false)
                        }
                    }
                };
                if (a.jqx.browser.msie) {
                    f()
                } else {
                    f()
                }
            }
        },
        isTouchDevice: function() {
            if (this.touchDevice != undefined) {
                return this.touchDevice
            }
            var c = "Browser CodeName: " + navigator.appCodeName + "";
            c += "Browser Name: " + navigator.appName + "";
            c += "Browser Version: " + navigator.appVersion + "";
            c += "Platform: " + navigator.platform + "";
            c += "User-agent header: " + navigator.userAgent + "";
            if (c.indexOf("Android") != -1) {
                return true
            }
            if (c.indexOf("IEMobile") != -1) {
                return true
            }
            if (c.indexOf("Windows Phone") != -1) {
                return true
            }
            if (c.indexOf("WPDesktop") != -1) {
                return true
            }
            if (c.indexOf("ZuneWP7") != -1) {
                return true
            }
            if (c.indexOf("BlackBerry") != -1 && c.indexOf("Mobile Safari") != -1) {
                return true
            }
            if (c.indexOf("ipod") != -1) {
                return true
            }
            if (c.indexOf("nokia") != -1 || c.indexOf("Nokia") != -1) {
                return true
            }
            if (c.indexOf("Chrome/17") != -1) {
                return false
            }
            if (c.indexOf("CrOS") != -1) {
                return false
            }
            if (c.indexOf("Opera") != -1 && c.indexOf("Mobi") == -1 && c.indexOf("Mini") == -1 && c.indexOf("Platform: Win") != -1) {
                return false
            }
            if (c.indexOf("Opera") != -1 && c.indexOf("Mobi") != -1 && c.indexOf("Opera Mobi") != -1) {
                return true
            }
            var d = {
                ios: "i(?:Pad|Phone|Pod)(?:.*)CPU(?: iPhone)? OS ",
                android: "(Android |HTC_|Silk/)",
                blackberry: "BlackBerry(?:.*)Version/",
                rimTablet: "RIM Tablet OS ",
                webos: "(?:webOS|hpwOS)/",
                bada: "Bada/"
            };
            try {
                if (this.touchDevice != undefined) {
                    return this.touchDevice
                }
                this.touchDevice = false;
                for (i in d) {
                    if (d.hasOwnProperty(i)) {
                        prefix = d[i];
                        match = c.match(new RegExp("(?:" + prefix + ")([^\\s;]+)"));
                        if (match) {
                            if (i.toString() == "blackberry") {
                                this.touchDevice = false;
                                return false
                            }
                            this.touchDevice = true;
                            return true
                        }
                    }
                }
                var f = navigator.userAgent;
                if (navigator.platform.toLowerCase().indexOf("win") != -1) {
                    if (f.indexOf("Windows Phone") >= 0 || f.indexOf("WPDesktop") >= 0 || f.indexOf("IEMobile") >= 0 || f.indexOf("ZuneWP7") >= 0) {
                        this.touchDevice = true;
                        return true
                    } else {
                        if (f.indexOf("Touch") >= 0) {
                            var b = ("MSPointerDown" in window) || ("pointerdown" in window);
                            if (b) {
                                this.touchDevice = true;
                                return true
                            }
                            if (f.indexOf("ARM") >= 0) {
                                this.touchDevice = true;
                                return true
                            }
                            this.touchDevice = false;
                            return false
                        }
                    }
                }
                if (navigator.platform.toLowerCase().indexOf("win") != -1) {
                    this.touchDevice = false;
                    return false
                }
                if (("ontouchstart" in window) || window.DocumentTouch && document instanceof DocumentTouch) {
                    this.touchDevice = true
                }
                return this.touchDevice
            } catch(g) {
                this.touchDevice = false;
                return false
            }
        },
        getLeftPos: function(b) {
            var c = b.offsetLeft;
            while ((b = b.offsetParent) != null) {
                if (b.tagName != "HTML") {
                    c += b.offsetLeft;
                    if (document.all) {
                        c += b.clientLeft
                    }
                }
            }
            return c
        },
        getTopPos: function(c) {
            var e = c.offsetTop;
            var b = a(c).coord();
            while ((c = c.offsetParent) != null) {
                if (c.tagName != "HTML") {
                    e += (c.offsetTop - c.scrollTop);
                    if (document.all) {
                        e += c.clientTop
                    }
                }
            }
            var d = navigator.userAgent.toLowerCase();
            var f = (d.indexOf("windows phone") != -1 || d.indexOf("WPDesktop") != -1 || d.indexOf("ZuneWP7") != -1 || d.indexOf("msie 9") != -1 || d.indexOf("msie 11") != -1 || d.indexOf("msie 10") != -1) && d.indexOf("touch") != -1;
            if (f) {
                return b.top
            }
            if (this.isSafariMobileBrowser()) {
                if (this.isSafari4MobileBrowser() && this.isIPadSafariMobileBrowser()) {
                    return e
                }
                if (d.indexOf("version/7") != -1) {
                    return b.top
                }
                if (d.indexOf("version/6") != -1 || d.indexOf("version/5") != -1) {
                    e = e + a(window).scrollTop()
                }
                return b.top
            }
            return e
        },
        isChromeMobileBrowser: function() {
            var c = navigator.userAgent.toLowerCase();
            var b = c.indexOf("android") != -1;
            return b
        },
        isOperaMiniMobileBrowser: function() {
            var c = navigator.userAgent.toLowerCase();
            var b = c.indexOf("opera mini") != -1 || c.indexOf("opera mobi") != -1;
            return b
        },
        isOperaMiniBrowser: function() {
            var c = navigator.userAgent.toLowerCase();
            var b = c.indexOf("opera mini") != -1;
            return b
        },
        isNewSafariMobileBrowser: function() {
            var c = navigator.userAgent.toLowerCase();
            var b = c.indexOf("ipad") != -1 || c.indexOf("iphone") != -1 || c.indexOf("ipod") != -1;
            b = b && (c.indexOf("version/5") != -1);
            return b
        },
        isSafari4MobileBrowser: function() {
            var c = navigator.userAgent.toLowerCase();
            var b = c.indexOf("ipad") != -1 || c.indexOf("iphone") != -1 || c.indexOf("ipod") != -1;
            b = b && (c.indexOf("version/4") != -1);
            return b
        },
        isWindowsPhone: function() {
            var c = navigator.userAgent.toLowerCase();
            var b = (c.indexOf("windows phone") != -1 || c.indexOf("WPDesktop") != -1 || c.indexOf("ZuneWP7") != -1 || c.indexOf("msie 9") != -1 || c.indexOf("msie 11") != -1 || c.indexOf("msie 10") != -1 && c.indexOf("touch") != -1);
            return b
        },
        isSafariMobileBrowser: function() {
            var c = navigator.userAgent.toLowerCase();
            var b = c.indexOf("ipad") != -1 || c.indexOf("iphone") != -1 || c.indexOf("ipod") != -1;
            return b
        },
        isIPadSafariMobileBrowser: function() {
            var c = navigator.userAgent.toLowerCase();
            var b = c.indexOf("ipad") != -1;
            return b
        },
        isMobileBrowser: function() {
            var c = navigator.userAgent.toLowerCase();
            var b = c.indexOf("ipad") != -1 || c.indexOf("iphone") != -1 || c.indexOf("android") != -1;
            return b
        },
        getTouches: function(b) {
            if (b.originalEvent) {
                if (b.originalEvent.touches && b.originalEvent.touches.length) {
                    return b.originalEvent.touches
                } else {
                    if (b.originalEvent.changedTouches && b.originalEvent.changedTouches.length) {
                        return b.originalEvent.changedTouches
                    }
                }
            }
            if (!b.touches) {
                b.touches = new Array();
                b.touches[0] = b.originalEvent != undefined ? b.originalEvent: b;
                if (b.originalEvent != undefined && b.pageX) {
                    b.touches[0] = b
                }
                if (b.type == "mousemove") {
                    b.touches[0] = b
                }
            }
            return b.touches
        },
        getTouchEventName: function(b) {
            if (this.isWindowsPhone()) {
                var c = navigator.userAgent.toLowerCase();
                if (c.indexOf("windows phone 8.1") != -1) {
                    if (b.toLowerCase().indexOf("start") != -1) {
                        return "pointerdown"
                    }
                    if (b.toLowerCase().indexOf("move") != -1) {
                        return "pointermove"
                    }
                    if (b.toLowerCase().indexOf("end") != -1) {
                        return "pointerup"
                    }
                }
                if (b.toLowerCase().indexOf("start") != -1) {
                    return "MSPointerDown"
                }
                if (b.toLowerCase().indexOf("move") != -1) {
                    return "MSPointerMove"
                }
                if (b.toLowerCase().indexOf("end") != -1) {
                    return "MSPointerUp"
                }
            } else {
                return b
            }
        },
        dispatchMouseEvent: function(b, f, d) {
            if (this.simulatetouches) {
                return
            }
            var c = document.createEvent("MouseEvent");
            c.initMouseEvent(b, true, true, f.view, 1, f.screenX, f.screenY, f.clientX, f.clientY, false, false, false, false, 0, null);
            if (d != null) {
                d.dispatchEvent(c)
            }
        },
        getRootNode: function(b) {
            while (b.nodeType !== 1) {
                b = b.parentNode
            }
            return b
        },
        setTouchScroll: function(b, c) {
            if (!this.enableScrolling) {
                this.enableScrolling = []
            }
            this.enableScrolling[c] = b
        },
        touchScroll: function(d, y, g, D, b, k) {
            if (d == null) {
                return
            }
            var B = this;
            var t = 0;
            var j = 0;
            var l = 0;
            var u = 0;
            var m = 0;
            var n = 0;
            if (!this.scrolling) {
                this.scrolling = []
            }
            this.scrolling[D] = false;
            var h = false;
            var q = a(d);
            var v = ["select", "input", "textarea"];
            var c = 0;
            var e = 0;
            if (!this.enableScrolling) {
                this.enableScrolling = []
            }
            this.enableScrolling[D] = true;
            var D = D;
            var C = this.getTouchEventName("touchstart") + ".touchScroll";
            var p = this.getTouchEventName("touchend") + ".touchScroll";
            var A = this.getTouchEventName("touchmove") + ".touchScroll";
            var c = function(E) {
                if (!B.enableScrolling[D]) {
                    return true
                }
                if (a.inArray(E.target.tagName.toLowerCase(), v) !== -1) {
                    return
                }
                var F = B.getTouches(E);
                var G = F[0];
                if (F.length == 1) {
                    B.dispatchMouseEvent("mousedown", G, B.getRootNode(G.target))
                }
                h = false;
                j = G.pageY;
                m = G.pageX;
                if (B.simulatetouches) {
                    if (G._pageY != undefined) {
                        j = G._pageY;
                        m = G._pageX
                    }
                }
                B.scrolling[D] = true;
                t = 0;
                u = 0;
                return true
            };
            if (q.on) {
                q.on(C, c)
            } else {
                q.bind(C, c)
            }
            var x = function(J) {
                if (!B.enableScrolling[D]) {
                    return true
                }
                if (!B.scrolling[D]) {
                    return true
                }
                var L = B.getTouches(J);
                if (L.length > 1) {
                    return true
                }
                var H = L[0].pageY;
                var I = L[0].pageX;
                if (B.simulatetouches) {
                    if (L[0]._pageY != undefined) {
                        H = L[0]._pageY;
                        I = L[0]._pageX
                    }
                }
                var E = H - j;
                var F = I - m;
                e = H;
                touchHorizontalEnd = I;
                l = E - t;
                n = F - u;
                h = true;
                t = E;
                u = F;
                var G = b != null ? b[0].style.visibility != "hidden": true;
                var K = k != null ? k[0].style.visibility != "hidden": true;
                if (G || K) {
                    if ((n !== 0 && G) || (l !== 0 && K)) {
                        g( - n * 1, -l * 1, F, E, J);
                        J.preventDefault();
                        J.stopPropagation();
                        if (J.preventManipulation) {
                            J.preventManipulation()
                        }
                        return false
                    }
                }
            };
            if (q.on) {
                q.on(A, x)
            } else {
                q.bind(A, x)
            }
            if (this.simulatetouches) {
                var o = a(window).on != undefined || a(window).bind;
                var z = function(E) {
                    B.scrolling[D] = false
                };
                a(window).on != undefined ? a(document).on("mouseup.touchScroll", z) : a(document).bind("mouseup.touchScroll", z);
                if (window.frameElement) {
                    if (window.top != null) {
                        var r = function(E) {
                            B.scrolling[D] = false
                        };
                        if (window.top.document) {
                            a(window.top.document).on ? a(window.top.document).on("mouseup", r) : a(window.top.document).bind("mouseup", r)
                        }
                    }
                }
                var s = a(document).on != undefined || a(document).bind;
                var w = function(E) {
                    if (!B.scrolling[D]) {
                        return true
                    }
                    B.scrolling[D] = false;
                    var G = B.getTouches(E)[0],
                    F = B.getRootNode(G.target);
                    B.dispatchMouseEvent("mouseup", G, F);
                    B.dispatchMouseEvent("click", G, F)
                };
                a(document).on != undefined ? a(document).on("touchend", w) : a(document).bind("touchend", w)
            }
            var f = function(E) {
                if (!B.enableScrolling[D]) {
                    return true
                }
                var G = B.getTouches(E)[0];
                if (!B.scrolling[D]) {
                    return true
                }
                B.scrolling[D] = false;
                if (h) {
                    B.dispatchMouseEvent("mouseup", G, F)
                } else {
                    var G = B.getTouches(E)[0],
                    F = B.getRootNode(G.target);
                    B.dispatchMouseEvent("mouseup", G, F);
                    B.dispatchMouseEvent("click", G, F);
                    return true
                }
            };
            if (q.on) {
                q.on("dragstart",
                function(E) {
                    E.preventDefault()
                });
                q.on("selectstart",
                function(E) {
                    E.preventDefault()
                })
            }
            q.on ? q.on(p + " touchcancel.touchScroll", f) : q.bind(p + " touchcancel.touchScroll", f)
        }
    });
    a.jqx.cookie = a.jqx.cookie || {};
    a.extend(a.jqx.cookie, {
        cookie: function(e, f, c) {
            if (arguments.length > 1 && String(f) !== "[object Object]") {
                c = a.extend({},
                c);
                if (f === null || f === undefined) {
                    c.expires = -1
                }
                if (typeof c.expires === "number") {
                    var h = c.expires,
                    d = c.expires = new Date();
                    d.setDate(d.getDate() + h)
                }
                f = String(f);
                return (document.cookie = [encodeURIComponent(e), "=", c.raw ? f: encodeURIComponent(f), c.expires ? "; expires=" + c.expires.toUTCString() : "", c.path ? "; path=" + c.path: "", c.domain ? "; domain=" + c.domain: "", c.secure ? "; secure": ""].join(""))
            }
            c = f || {};
            var b, g = c.raw ?
            function(j) {
                return j
            }: decodeURIComponent;
            return (b = new RegExp("(?:^|; )" + encodeURIComponent(e) + "=([^;]*)").exec(document.cookie)) ? g(b[1]) : null
        }
    });
    a.jqx.string = a.jqx.string || {};
    a.extend(a.jqx.string, {
        replace: function(f, d, e) {
            if (d === e) {
                return this
            }
            var b = f;
            var c = b.indexOf(d);
            while (c != -1) {
                b = b.replace(d, e);
                c = b.indexOf(d)
            }
            return b
        },
        contains: function(b, c) {
            if (b == null || c == null) {
                return false
            }
            return b.indexOf(c) != -1
        },
        containsIgnoreCase: function(b, c) {
            if (b == null || c == null) {
                return false
            }
            return b.toString().toUpperCase().indexOf(c.toString().toUpperCase()) != -1
        },
        equals: function(b, c) {
            if (b == null || c == null) {
                return false
            }
            b = this.normalize(b);
            if (c.length == b.length) {
                return b.slice(0, c.length) == c
            }
            return false
        },
        equalsIgnoreCase: function(b, c) {
            if (b == null || c == null) {
                return false
            }
            b = this.normalize(b);
            if (c.length == b.length) {
                return b.toUpperCase().slice(0, c.length) == c.toUpperCase()
            }
            return false
        },
        startsWith: function(b, c) {
            if (b == null || c == null) {
                return false
            }
            return b.slice(0, c.length) == c
        },
        startsWithIgnoreCase: function(b, c) {
            if (b == null || c == null) {
                return false
            }
            return b.toUpperCase().slice(0, c.length) == c.toUpperCase()
        },
        normalize: function(b) {
            if (b.charCodeAt(b.length - 1) == 65279) {
                b = b.substring(0, b.length - 1)
            }
            return b
        },
        endsWith: function(b, c) {
            if (b == null || c == null) {
                return false
            }
            b = this.normalize(b);
            return b.slice( - c.length) == c
        },
        endsWithIgnoreCase: function(b, c) {
            if (b == null || c == null) {
                return false
            }
            b = this.normalize(b);
            return b.toUpperCase().slice( - c.length) == c.toUpperCase()
        }
    });
    a.extend(a.easing, {
        easeOutBack: function(f, g, e, k, j, h) {
            if (h == undefined) {
                h = 1.70158
            }
            return k * ((g = g / j - 1) * g * ((h + 1) * g + h) + 1) + e
        },
        easeInQuad: function(f, g, e, j, h) {
            return j * (g /= h) * g + e
        },
        easeInOutCirc: function(f, g, e, j, h) {
            if ((g /= h / 2) < 1) {
                return - j / 2 * (Math.sqrt(1 - g * g) - 1) + e
            }
            return j / 2 * (Math.sqrt(1 - (g -= 2) * g) + 1) + e
        },
        easeInOutSine: function(f, g, e, j, h) {
            return - j / 2 * (Math.cos(Math.PI * g / h) - 1) + e
        },
        easeInCubic: function(f, g, e, j, h) {
            return j * (g /= h) * g * g + e
        },
        easeOutCubic: function(f, g, e, j, h) {
            return j * ((g = g / h - 1) * g * g + 1) + e
        },
        easeInOutCubic: function(f, g, e, j, h) {
            if ((g /= h / 2) < 1) {
                return j / 2 * g * g * g + e
            }
            return j / 2 * ((g -= 2) * g * g + 2) + e
        },
        easeInSine: function(f, g, e, j, h) {
            return - j * Math.cos(g / h * (Math.PI / 2)) + j + e
        },
        easeOutSine: function(f, g, e, j, h) {
            return j * Math.sin(g / h * (Math.PI / 2)) + e
        },
        easeInOutSine: function(f, g, e, j, h) {
            return - j / 2 * (Math.cos(Math.PI * g / h) - 1) + e
        }
    })
})(jqxBaseFramework); (function(b) {
    b.extend(b.event.special, {
        close: {
            noBubble: true
        },
        open: {
            noBubble: true
        },
        cellclick: {
            noBubble: true
        },
        rowclick: {
            noBubble: true
        },
        tabclick: {
            noBubble: true
        },
        selected: {
            noBubble: true
        },
        expanded: {
            noBubble: true
        },
        collapsed: {
            noBubble: true
        },
        valuechanged: {
            noBubble: true
        },
        expandedItem: {
            noBubble: true
        },
        collapsedItem: {
            noBubble: true
        },
        expandingItem: {
            noBubble: true
        },
        collapsingItem: {
            noBubble: true
        }
    });
    b.fn.extend({
        ischildof: function(f) {
            var d = b(this).parents().get();
            for (var c = 0; c < d.length; c++) {
                if (typeof f != "string") {
                    var e = d[c];
                    if (f !== undefined) {
                        if (e == f[0]) {
                            return true
                        }
                    }
                } else {
                    if (f !== undefined) {
                        if (b(d[c]).is(f)) {
                            return true
                        }
                    }
                }
            }
            return false
        }
    });
    b.fn.jqxProxy = function() {
        var e = b(this).data().jqxWidget;
        var c = Array.prototype.slice.call(arguments, 0);
        var d = e.element;
        if (!d) {
            d = e.base.element
        }
        return b.jqx.jqxWidgetProxy(e.widgetName, d, c)
    };
    var a = this.originalVal = b.fn.val;
    b.fn.val = function(d) {
        if (typeof d == "undefined") {
            if (b(this).hasClass("jqx-widget")) {
                var c = b(this).data().jqxWidget;
                if (c && c.val) {
                    return c.val()
                }
            }
            return a.call(this)
        } else {
            if (b(this).hasClass("jqx-widget")) {
                var c = b(this).data().jqxWidget;
                if (c && c.val) {
                    if (arguments.length != 2) {
                        return c.val(d)
                    } else {
                        return c.val(d, arguments[1])
                    }
                }
            }
            return a.call(this, d)
        }
    };
    if (b.fn.modal && b.fn.modal.Constructor) {
        b.fn.modal.Constructor.prototype.enforceFocus = function() {
            b(document).off("focusin.bs.modal").on("focusin.bs.modal", b.proxy(function(c) {
                if (this.$element[0] !== c.target && !this.$element.has(c.target).length) {
                    if (b(c.target).parents().hasClass("jqx-popup")) {
                        return true
                    }
                    this.$element.trigger("focus")
                }
            },
            this))
        }
    }
    b.fn.coord = function(o) {
        var e, k, j = {
            top: 0,
            left: 0
        },
        f = this[0],
        m = f && f.ownerDocument;
        if (!m) {
            return
        }
        e = m.documentElement;
        if (!b.contains(e, f)) {
            return j
        }
        if (typeof f.getBoundingClientRect !== undefined) {
            j = f.getBoundingClientRect()
        }
        var d = function(p) {
            return b.isWindow(p) ? p: p.nodeType === 9 ? p.defaultView || p.parentWindow: false
        };
        k = d(m);
        var h = 0;
        var c = 0;
        var g = navigator.userAgent.toLowerCase();
        var n = g.indexOf("ipad") != -1 || g.indexOf("iphone") != -1;
        if (n) {
            h = 2
        }
        if (true == o) {
            if (b(document.body).css("position") != "static") {
                var l = b(document.body).coord();
                h = -l.left;
                c = -l.top
            }
        }
        return {
            top: c + j.top + (k.pageYOffset || e.scrollTop) - (e.clientTop || 0),
            left: h + j.left + (k.pageXOffset || e.scrollLeft) - (e.clientLeft || 0)
        }
    }
})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxSplitter","",{});a.extend(a.jqx._jqxSplitter.prototype,{defineInstance:function(){var b={width:300,height:300,panels:[],orientation:"vertical",disabled:false,splitBarSize:5,touchSplitBarSize:15,panel1:null,panel2:null,_eventsMap:{mousedown:a.jqx.mobile.getTouchEventName("touchstart"),mouseup:a.jqx.mobile.getTouchEventName("touchend"),mousemove:a.jqx.mobile.getTouchEventName("touchmove"),mouseenter:"mouseenter",mouseleave:"mouseleave"},_isTouchDevice:false,_isNested:false,resizable:true,touchMode:"auto",showSplitBar:true,initContent:null,_events:["resize","expanded","collapsed","resizeStart","layout"]};a.extend(true,this,b);return b},createInstance:function(){this.render()},_initOverlay:function(b){if(this.overlay||b=="undefined"){this.overlay.remove();this.overlay=null}else{if(b==true){this.overlay=a("<div style='z-index: 100; background: #fff;'></div>");this.overlay.css("opacity",0.01);this.overlay.css("position","absolute");this.overlay.appendTo(a(document.body));var c=this.host.coord();this.overlay.css("left","0px");this.overlay.css("top","0px");this.overlay.width(a(window).width());this.overlay.height(a(window).height());this.overlay.addClass("jqx-disableselect");if(this.orientation=="horizontal"){this.overlay.css("cursor","row-resize")}else{this.overlay.css("cursor","col-resize")}}}},_startDrag:function(b){if(b.target==this.splitBarButton[0]||this.disabled){return true}if(this.panels[0].collapsed||this.panels[1].collapsed||!this.resizable){return true}if(this.overlay==null){this._dragging=true;this._initOverlay(true);this._dragStart=a.jqx.position(b);return false}return true},_drag:function(b){if(this.panels[0].collapsed||this.panels[1].collapsed||this.disabled){return true}if(!this._dragging){return true}var i=this.orientation=="horizontal"?"top":"left";var k=this.orientation=="vertical"?"width":"height";this._position=a.jqx.position(b);if(this.overlay&&!this._splitBarClone){if(Math.abs(this._position[i]-this._dragStart[i])>=3){var m=this.splitBar.coord();this._cloneStart={left:m.left,top:m.top};this._splitBarClone=this._createSplitBarClone();this._raiseEvent(3,{panels:this.panels});return}}if(this._splitBarClone){var j,c;var n=this.host[k]();var d=n/100;var f=1/d;var h=0;var l=this._splitBarClone[k]()+2;var g=parseInt(this.host.coord()[i]);var e=this._position[i]-this._dragStart[i]+this._cloneStart[i]-g;if(h>e){e=h}if(e>n+h-l){e=n+h-l}j=this.panels[0].min;c=this.panels[1].min;if(c.toString().indexOf("%")!=-1){c=parseFloat(c)*d}if(j.toString().indexOf("%")!=-1){j=parseFloat(j)*d}this._splitBarClone.removeClass(this.toThemeProperty("jqx-splitter-splitbar-invalid"));if(e<j){this._splitBarClone.addClass(this.toThemeProperty("jqx-splitter-splitbar-invalid"));e=j}if(e>n+h-l-c){this._splitBarClone.addClass(this.toThemeProperty("jqx-splitter-splitbar-invalid"));e=n+h-l-c}this._splitBarClone.css(i,e);if(b.preventDefault){b.preventDefault()}if(b.stopPropagation){b.stopPropagation()}return false}return true},resize:function(c,b){this.width=c;this.height=b;this._arrange()},_resize:function(){var h=this.orientation=="horizontal"?"height":"width";var f=this.orientation=="horizontal"?"top":"left";var c=this._splitBarClone.css(f);var b=this.host[h]();var e=b/100;var d=1/e;var g=this.panels[0].size;if(g.toString().indexOf("%")!=-1){this.panels[0].size=parseFloat(c)*d+"%"}else{this.panels[0].size=parseFloat(c)}this._layoutPanels();this._raiseEvent(0,{panels:this.panels})},_stopDrag:function(){if(this._dragging){this._initOverlay()}this._dragging=false;if(this._splitBarClone){if(this.panels[0].collapsed||this.panels[1].collapsed||this.disabled){return true}this._resize();this._splitBarClone.remove();this._splitBarClone=null}},_createSplitBarClone:function(){var b=this.splitBar.clone();b.fadeTo(0,0.7);b.css("z-index",99999);if(this.orientation=="vertical"){b.css("cursor","col-resize")}else{b.css("cursor","row-resize")}this.host.append(b);return b},_eventName:function(b){if(this._isTouchDevice){return this._eventsMap[b]}else{return b}},_addHandlers:function(){var c=this;a.jqx.utilities.resize(this.host,function(){c._layoutPanels()});this.addHandler(this.splitBar,"dragstart."+this.element.id,function(e){return false});if(this.splitBarButton){this.addHandler(this.splitBarButton,"click."+this.element.id,function(){var e=function(f){if(!f.collapsed){c.collapse()}else{c.expand()}};if(c.panels[0].collapsible){e(c.panels[0])}else{if(c.panels[1].collapsible){e(c.panels[1])}}});this.addHandler(this.splitBarButton,this._eventName("mouseenter"),function(){c.splitBarButton.addClass(c.toThemeProperty("jqx-splitter-collapse-button-hover"));c.splitBarButton.addClass(c.toThemeProperty("jqx-fill-state-hover"))});this.addHandler(this.splitBarButton,this._eventName("mouseleave"),function(){c.splitBarButton.removeClass(c.toThemeProperty("jqx-splitter-collapse-button-hover"));c.splitBarButton.removeClass(c.toThemeProperty("jqx-fill-state-hover"))})}this.addHandler(a(document),this._eventName("mousemove")+"."+this.element.id,function(e){return c._drag(e)});this.addHandler(a(document),this._eventName("mouseup")+"."+this.element.id,function(){return c._stopDrag()});this.addHandler(this.splitBar,this._eventName("mousedown"),function(e){return c._startDrag(e)});this.addHandler(this.splitBar,this._eventName("mouseenter"),function(){if(c.resizable&&!c.disabled){c.splitBar.addClass(c.toThemeProperty("jqx-splitter-splitbar-hover"));c.splitBar.addClass(c.toThemeProperty("jqx-fill-state-hover"))}});this.addHandler(this.splitBar,this._eventName("mouseleave"),function(){if(c.resizable&&!c.disabled){c.splitBar.removeClass(c.toThemeProperty("jqx-splitter-splitbar-hover"));c.splitBar.removeClass(c.toThemeProperty("jqx-fill-state-hover"))}});if(document.referrer!=""||window.frameElement){if(window.top!=null&&window.top!=window.self){var d=null;if(window.parent&&document.referrer){d=document.referrer}if(d&&d.indexOf(document.location.host)!=-1){var b=function(e){c._stopDrag()};if(window.top.document.addEventListener){window.top.document.addEventListener("mouseup",b,false)}else{if(window.top.document.attachEvent){window.top.document.attachEvent("onmouseup",b)}}}}}},_removeHandlers:function(){this.removeHandler(a(window),"resize."+this.element.id);if(this.splitBarButton){this.removeHandler(this.splitBarButton,"click."+this.element.id);this.removeHandler(this.splitBarButton,this._eventName("mouseenter"));this.removeHandler(this.splitBarButton,this._eventName("mouseleave"))}this.removeHandler(a(document),this._eventName("mousemove")+"."+this.element.id);this.removeHandler(a(document),this._eventName("mouseup")+"."+this.element.id);if(this.splitBar){this.removeHandler(this.splitBar,"dragstart."+this.element.id);this.removeHandler(this.splitBar,this._eventName("mousedown"));this.removeHandler(this.splitBar,this._eventName("mouseenter"));this.removeHandler(this.splitBar,this._eventName("mouseleave"))}},render:function(){if(this.splitBar){this.splitBar.remove()}var c=this.host.children();if(c.length!=2){throw"Invalid HTML Structure! jqxSplitter requires 1 container DIV tag and 2 nested DIV tags."}if(c.length==2){var e=c[0].className.split(" ");var b=c[1].className.split(" ");if(e.indexOf("jqx-reset")!=-1&&e.indexOf("jqx-splitter")!=-1&&e.indexOf("jqx-widget")!=-1){throw"Invalid HTML Structure! Nested jqxSplitter cannot be initialized from a Splitter Panel. You need to add a new DIV tag inside the Splitter Panel and initialize the nested jqxSplitter from it!"}if(b.indexOf("jqx-reset")!=-1&&b.indexOf("jqx-splitter")!=-1&&b.indexOf("jqx-widget")!=-1){throw"Invalid HTML Structure! Nested jqxSplitter cannot be initialized from a Splitter Panel. You need to add a new DIV tag inside the Splitter Panel and initialize the nested jqxSplitter from it!"}}if(this.host.parent().length>0&&this.host.parent()[0].className.indexOf("jqx-splitter")!=-1){if(this.element.className.indexOf("jqx-splitter-panel")!=-1){throw"Invalid HTML Structure! Nested jqxSplitter cannot be initialized from a Splitter Panel. You need to add a new DIV tag inside the Splitter Panel and initialize the nested jqxSplitter from it!"}this._isNested=true;if(this.width==300){this.width="100%"}if(this.height==300){this.height="100%"}if(this.width=="100%"&&this.height=="100%"){this.host.addClass("jqx-splitter-nested");if(this.host.parent()[0].className.indexOf("jqx-splitter-panel")!=-1){this.host.parent().addClass("jqx-splitter-panel-nested")}}}this._hasBorder=(this.host.hasClass("jqx-hideborder")==false)||this.element.style.borderTopWidth!="";this._removeHandlers();this._isTouchDevice=a.jqx.mobile.isTouchDevice();this._validate();this.panel1.css("left","0px");this.panel1.css("top","0px");this.panel2.css("left","0px");this.panel2.css("top","0px");this.splitBar=a("<div><div></div></div>");if(!this.resizable){this.splitBar.css("cursor","default")}this.splitBarButton=this.splitBar.find("div:last");this._setTheme();this.splitBar.insertAfter(this.panel1);this._arrange();if(this.panels[0].collapsible==false&&this.panels[1].collapsible==false){this.splitBarButton.hide()}var d=this;this._addHandlers();if(this.initContent){this.initContent()}if(this.disabled){this.disable()}},_hiddenParent:function(){return a.jqx.isHidden(this.host)},_setTheme:function(){this.panel1.addClass(this.toThemeProperty("jqx-widget-content"));this.panel2.addClass(this.toThemeProperty("jqx-widget-content"));this.panel1.addClass(this.toThemeProperty("jqx-splitter-panel"));this.panel2.addClass(this.toThemeProperty("jqx-splitter-panel"));this.panel1.addClass(this.toThemeProperty("jqx-reset"));this.panel2.addClass(this.toThemeProperty("jqx-reset"));this.host.addClass(this.toThemeProperty("jqx-reset"));this.host.addClass(this.toThemeProperty("jqx-splitter"));this.host.addClass(this.toThemeProperty("jqx-widget"));this.host.addClass(this.toThemeProperty("jqx-widget-content"));this.splitBar.addClass(this.toThemeProperty("jqx-splitter-splitbar-"+this.orientation));this.splitBar.addClass(this.toThemeProperty("jqx-fill-state-normal"));this.splitBarButton.addClass(this.toThemeProperty("jqx-splitter-collapse-button-"+this.orientation));this.splitBarButton.addClass(this.toThemeProperty("jqx-fill-state-pressed"))},_validate:function(){var b=this.host.children();if(b.length!=2){throw"Invalid HTML Structure! jqxSplitter requires two nested DIV tags!"}if(this.panels&&!this.panels[1]){if(!this.panels[0]){this.panels=[{size:"50%"},{size:"50%"}]}else{this.panels[1]={}}}else{if(this.panels==undefined){this.panels=[{size:"50%"},{size:"50%"}]}}var b=this.host.children();this.panel1=this.panels[0].element=a(b[0]);this.panel2=this.panels[1].element=a(b[1]);this.panel1[0].style.minWidth="";this.panel1[0].style.maxWidth="";this.panel2[0].style.minWidth="";this.panel2[0].style.maxWidth="";a.each(this.panels,function(){if(this.min==undefined){this.min=0}if(this.size==undefined){this.size=0}if(this.size<0){this.size=0}if(this.min<0){this.min=0}if(this.collapsible==undefined){this.collapsible=true}if(this.collapsed==undefined){this.collapsed=false}if(this.size!=0){if(this.size.toString().indexOf("px")!=-1){this.size=parseInt(this.size)}if(this.size.toString().indexOf("%")==-1){if(parseInt(this.min)>parseInt(this.size)){this.min=this.size}}else{if(this.min.toString().indexOf("%")!=-1){if(parseInt(this.min)>parseInt(this.size)){this.min=this.size}}}}})},_arrange:function(){if(this.width!=null){var d=this.width;if(typeof d!="string"){d=parseInt(this.width)+"px"}this.host.css("width",d)}if(this.height!=null){var b=this.height;if(typeof b!="string"){b=parseInt(this.height)+"px"}this.host.css("height",b)}this._splitBarSize=!this._isTouchDevice?this.splitBarSize:this.touchSplitBarSize;if(!this.showSplitBar){this._splitBarSize=0;this.splitBar.hide()}var c=this.orientation=="horizontal"?"width":"height";this.splitBar.css(c,"100%");this.panel1.css(c,"100%");this.panel2.css(c,"100%");if(this.orientation=="horizontal"){this.splitBar.height(this._splitBarSize)}else{this.splitBar.width(this._splitBarSize)}if(this.orientation==="vertical"){this.splitBarButton.width(this._splitBarSize);this.splitBarButton.height(45)}else{this.splitBarButton.height(this._splitBarSize);this.splitBarButton.width(45)}this.splitBarButton.css("position","relative");if(this.orientation==="vertical"){this.splitBarButton.css("top","50%");this.splitBarButton.css("left","0");this.splitBarButton.css("margin-top","-23px");this.splitBarButton.css("margin-left","-0px")}else{this.splitBarButton.css("left","50%");this.splitBarButton.css("top","0");this.splitBarButton.css("margin-left","-23px");this.splitBarButton.css("margin-top","-0px")}this._layoutPanels()},collapse:function(){if(this.disabled){return}var b=-1;this.panels[0].collapsed=this.panels[1].collapsed=false;this.panels[0].element[0].style.visibility="inherit";this.panels[1].element[0].style.visibility="inherit";if(this.panels[0].collapsible){b=0}else{if(this.panels[1].collapsible){b=1}}if(b!=-1){this.panels[b].collapsed=true;this.panels[b].element[0].style.visibility="hidden";this.splitBar.addClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed"));this._layoutPanels();this._raiseEvent(2,{index:b,panels:this.panels});this._raiseEvent(0,{panels:this.panels})}},expand:function(){if(this.disabled){return}var b=-1;this.panels[0].collapsed=this.panels[1].collapsed=false;this.panels[0].element[0].style.visibility="inherit";this.panels[1].element[0].style.visibility="inherit";if(this.panels[0].collapsible){b=0}else{if(this.panels[1].collapsible){b=1}}if(b!=-1){this.panels[b].collapsed=false;this.panels[b].element[0].style.visibility="inherit";this.splitBar.removeClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed"));this._layoutPanels();this._raiseEvent(1,{index:b,panels:this.panels});this._raiseEvent(0,{panels:this.panels})}},disable:function(){this.disabled=true;this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled"));this.splitBar.addClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed"));this.splitBarButton.addClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed"))},enable:function(){this.disabled=false;this.host.removeClass(this.toThemeProperty("jqx-fill-state-disabled"));this.splitBar.removeClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed"));this.splitBarButton.removeClass(this.toThemeProperty("jqx-splitter-splitbar-collapsed"))},refresh:function(b){if(b!=true){this._arrange()}},propertyChangedHandler:function(b,c,e,d){if(c==="panels"||c==="orientation"||c==="showSplitBar"){b.render();return}if(c==="touchMode"){b._isTouchDevice=d}if(c==="disabled"){if(d){b.disable()}else{b.enable()}}else{if(c==="theme"){a.jqx.utilities.setTheme(e,d,b.host)}else{b.refresh()}}},_layoutPanels:function(){var j=this;var q=this.orientation=="horizontal"?"height":"width";var t=this.orientation=="horizontal"?"top":"left";var l,r,e,u;var m=parseInt(this._splitBarSize)+2;if(!this.showSplitBar){m=0}var i=this.host[q]();var k=i/100;var s=1/k;var p=s*m;var h=this.panel1;var g=this.panel2;var n=this.panels[0].size;if(this.panels[0].collapsed){e=true}if(this.panels[1].collapsed){u=true}l=this.panels[0].min;r=this.panels[1].min;if(r.toString().indexOf("%")!=-1){r=parseFloat(r)*k}if(l.toString().indexOf("%")!=-1){l=parseFloat(l)*k}if(this._isNested&&this._isTouchDevice){if(this.orientation=="horizontal"){h.width(this.host.width());g.width(this.host.width())}else{h.height(this.host.height());g.height(this.host.height())}}var f=function(){var w=j.panel1[q]();if(j.splitBar[0].style[t]!=w+"px"){var x=w;if(j.orientation=="vertical"){j.splitBar[0].style.borderLeftColor="";j.splitBar[0].style.borderRightColor="";j.splitBarButton[0].style.width=parseInt(j._splitBarSize)+"px";j.splitBarButton[0].style.left="0px"}else{j.splitBar[0].style.borderTopColor="";j.splitBar[0].style.borderBottomColor="";j.splitBarButton[0].style.height=parseInt(j._splitBarSize)+"px";j.splitBarButton[0].style.top="0px"}if(j._hasBorder){if(i-m==w){if(j.orientation=="vertical"){j.splitBar[0].style.borderRightColor="transparent";j.splitBarButton[0].style.width=parseInt(j._splitBarSize+1)+"px"}else{j.splitBar[0].style.borderBottomColor="transparent";j.splitBarButton[0].style.height=parseInt(j._splitBarSize+1)+"px"}}else{if(w==0){if(j.orientation=="vertical"){j.splitBar[0].style.borderLeftColor="transparent";j.splitBarButton[0].style.width=parseInt(j._splitBarSize+1)+"px";j.splitBarButton[0].style.left="-1px"}else{j.splitBar[0].style.borderTopColor="transparent";j.splitBarButton[0].style.height=parseInt(j._splitBarSize+1)+"px";j.splitBarButton[0].style.top="-1px"}}}}j.splitBar[0].style[t]=x+"px"}if(j.panel2[0].style[t]!=w+m+"px"){j.panel2[0].style[t]=w+m+"px"}};if(e){var b=Math.max(r,i-m);h[q](0);g[q](b)}else{if(u){var b=Math.max(l,i-m);g[q](0);h[q](b)}else{if(n.toString().indexOf("%")!=-1){var c=100-parseFloat(n);h.css(q,parseFloat(n)+"%");c-=p;g.css(q,c+"%");var d=g[q]();if(d<r){var b=d-r;var o=b*s;n=parseFloat(n)+parseFloat(o);var c=100-parseFloat(n);h.css(q,parseFloat(n)+"%");c-=p;g.css(q,c+"%")}var v=h[q]();if(v<l){var o=l*s;h.css(q,parseFloat(o)+"%")}}else{var d=i-n-m;if(h[0].style[q]!=n+"px"){h[q](n)}if(g[0].style[q]!=d+"px"){g[q](d)}if(d<r){n+=d-r;g[q](r);h[q](n)}if(n<l){h[q](l)}}}}f();this._raiseEvent(4,{panels:this.panels})},destroy:function(){this._removeHandlers();a.jqx.utilities.resize(this.host,null,true);this.host.remove()},_raiseEvent:function(d,f){var e=new a.Event(this._events[d]);e.owner=this;e.args=f;var c=this.orientation=="vertical"?"width":"height";var b=new Array();b[0]={};b[1]={};b[0].size=this.orientation=="vertical"?this.panel1[0].offsetWidth:this.panel1[0].offsetHeight;b[1].size=this.orientation=="vertical"?this.panel2[0].offsetWidth:this.panel2[0].offsetHeight;b[0].min=this.panels[0].min;b[1].min=this.panels[1].min;b[0].collapsible=this.panels[0].collapsible;b[1].collapsible=this.panels[1].collapsible;b[0].collapsed=this.panels[0].collapsed;b[1].collapsed=this.panels[1].collapsed;e.args.panels=b;return this.host.trigger(e)}})}(jqxBaseFramework));
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxTabs","",{});a.extend(a.jqx._jqxTabs.prototype,{defineInstance:function(){var b={scrollAnimationDuration:200,enabledHover:true,disabled:false,collapsible:false,animationType:"none",enableScrollAnimation:true,contentTransitionDuration:450,toggleMode:"click",selectedItem:0,height:"auto",width:"auto",position:"top",selectionTracker:false,scrollable:true,scrollPosition:"right",scrollStep:70,autoHeight:true,headerHeight:null,showCloseButtons:false,canCloseAllTabs:true,closeButtonSize:16,arrowButtonSize:16,keyboardNavigation:true,reorder:false,selectionTrackerAnimationDuration:300,_isTouchDevice:false,roundedCorners:true,_headerExpandingBalance:0,_dragStarted:false,_tabCaptured:false,_lastUnorderedListPosition:0,_selectedItem:0,_titleList:[],_contentList:[],_contentWrapper:null,_unorderedList:null,_scrollTimeout:null,isCollapsed:false,touchMode:false,initTabContent:null,enableDropAnimation:false,_currentEvent:null,_needScroll:true,_isAnimated:{},_events:["created","selected","add","removed","enabled","disabled","selecting","unselecting","unselected","dragStart","dragEnd","locked","unlocked","collapsed","expanded","tabclick"],_initTabContentList:[],_invalidArgumentExceptions:{invalidScrollAnimationDuration:"The scroll animation duration is not valid!",invalidWidth:"Width you've entered is invalid!",invalidHeight:"Height you've entered is invalid!",invalidAnimationType:"You've entered invalid animation type!",invalidcontentTransitionDuration:"You've entered invalid value for contentTransitionDuration!",invalidToggleMode:"You've entered invalid value for toggleMode!",invalidPosition:"You've entered invalid position!",invalidScrollPosition:"You've entered invalid scroll position!",invalidScrollStep:"You've entered invalid scroll step!",invalidStructure:"Invalid structure!",invalidArrowSize:"Invalid scroll button size!",invalidCloseSize:"Invalid close button size!"},aria:{"aria-disabled":{name:"disabled",type:"boolean"}},rtl:false};a.extend(true,this,b);return b},createInstance:function(){a.jqx.aria(this);this.host.addClass(this.toThemeProperty("jqx-tabs"));this.host.addClass(this.toThemeProperty("jqx-widget"));this.host.addClass(this.toThemeProperty("jqx-widget-content"));this.host.attr("role","tablist");this._unorderedList=this.host.children("ul");this._titleList=this.host.children("ul").children("li");this._contentList=this.host.children("div");this._selectedItem=this.selectedItem;this._isTouchDevice=a.jqx.mobile.isTouchDevice();this._needScroll=this.scrollable;if(this.selectionTracker){this.selectionTracker=this._seletionTrackerBrowserCheck()}if(this._isTouchDevice){this.reorder=false;this.keyboardNavigation=false}var b=this.length();while(b){b--;this._titleList[b]=a(this._titleList[b]);this._titleList[b].attr("role","tab");this._contentList[b]=a(this._contentList[b]);this._contentList[b].attr("role","tabpanel")}this._validateProperties();this._refresh();this._moveSelectionTrack(this._selectedItem,0);if(this.disabled){this.disable()}this.element.tabIndex=0;this._raiseEvent(0);this._enableWindowResize()},_hiddenParent:function(){var c=this;if(c.host.css("display")=="none"){return true}var b=false;a.each(c.host.parents(),function(){if(a(this).css("display")=="none"){b=true;return false}});return b},_enableWindowResize:function(){var b=this;var c=a.jqx.isHidden(b.host);a.jqx.utilities.resize(this.host,function(){if(c){b._uiRefresh(true);c=false}else{b.refresh()}})},resize:function(c,b){this.width=c;this.height=b;var d=a.jqx.isHidden(this.host);if(d){this._uiRefresh(true);d=false}else{this.refresh()}},refresh:function(b){if(true!=b||b==undefined){this._performResize()}},_seletionTrackerBrowserCheck:function(){var b="Browser CodeName: "+navigator.appCodeName+"";b+="Browser Name: "+navigator.appName+"";b+="Browser Version: "+navigator.appVersion+"";b+="Platform: "+navigator.platform+"";b+="User-agent header: "+navigator.userAgent+"";if(b.indexOf("IEMobile")!=-1){return false}if(b.indexOf("Windows Phone OS")!=-1){return false}if(a.jqx.browser.msie&&a.jqx.browser.version<=7){return false}return true},render:function(){this._refresh()},_uiRefresh:function(b){this._unorderedListLeftBackup=this._unorderedList.css("left");if(b){this._render()}this._addStyles();this._performLayout();this._prepareTabs();this._removeEventHandlers();this._addEventHandlers();if(this._unorderedListLeftBackup==="auto"){this._unorderedListLeftBackup=this._getArrowsDisplacement()}this._unorderedList.css("left",this._unorderedListLeftBackup);if(this.rtl){if(this.scrollable&&this._rightArrow&&this._rightArrow.css("visibility")!="hidden"){var d=2*this.arrowButtonSize;var c=this.host.width()-parseInt(this._unorderedList.width()+d+ +parseInt(this._unorderedList.css("margin-left")),10);this._unorderedList.css("left",c+"px")}}},_refresh:function(){if(a.jqx.isHidden(this.host)){return}this._uiRefresh(true)},_addStyles:function(){this._unorderedList.addClass(this.toThemeProperty("jqx-tabs-title-container"));this._unorderedList.css({outline:"none","white-space":"nowrap","margin-top":"0px","margin-bottom":"0px",padding:"0px",background:"transparent",border:"none","border-style":"none","text-indent":"0px"});var b=this.length();while(b){b--;this._titleList[b].removeClass();this._titleList[b].css("padding","");this._titleList[b].addClass("jqx-reset");this._titleList[b].addClass("jqx-disableselect");this._titleList[b].addClass(this.toThemeProperty("jqx-tabs-title"));this._titleList[b].addClass(this.toThemeProperty("jqx-item"));if(this.position=="bottom"){this._titleList[b].addClass(this.toThemeProperty("jqx-tabs-title-bottom"))}if(this._titleList[b].disabled){this._titleList[b].addClass(this.toThemeProperty("jqx-tabs-title-disable"));this._titleList[b].addClass(this.toThemeProperty("jqx-fill-state-disabled"))}this._titleList[b].removeClass(this.toThemeProperty("jqx-rc-b"));this._titleList[b].removeClass(this.toThemeProperty("jqx-rc-t"));this._contentList[b].removeClass(this.toThemeProperty("jqx-rc-b"));this._contentList[b].removeClass(this.toThemeProperty("jqx-rc-t"));switch(this.position){case"top":this._titleList[b].addClass(this.toThemeProperty("jqx-rc-t"));this._contentList[b].addClass(this.toThemeProperty("jqx-rc-b"));break;case"bottom":this._titleList[b].addClass(this.toThemeProperty("jqx-rc-b"));this._contentList[b].addClass(this.toThemeProperty("jqx-rc-t"));break}}if(this.selectionTracker){this._selectionTracker.removeClass(this.toThemeProperty("jqx-rc-b"));this._selectionTracker.removeClass(this.toThemeProperty("jqx-rc-t"));switch(this.position){case"top":this._selectionTracker.addClass(this.toThemeProperty("jqx-rc-t"));break;case"bottom":this._selectionTracker.addClass(this.toThemeProperty("jqx-rc-b"));break}}},_raiseEvent:function(d,g){var f=new a.Event(this._events[d]);f.owner=this;f.args=g;if(d===6||d===7){f.cancel=false;this._currentEvent=f}var b="";try{b=this.host.trigger(f);if(d==1){var e=this;if(this.selectionTracker||this.animationType!="none"){setTimeout(function(){if(!e._initTabContentList[e.selectedItem]){if(e.initTabContent){e.initTabContent(e.selectedItem);e._initTabContentList[e.selectedItem]=true}}var h=new a.Event("loadContent");h.owner=this;if(e._contentList.length>0&&e._contentList[e.selectedItem]){e._contentList[e.selectedItem].find("div").trigger(h)}},50+e.selectionTrackerAnimationDuration)}else{var f=new a.Event("loadContent");if(!e._initTabContentList[e.selectedItem]){if(e.initTabContent){e.initTabContent(e.selectedItem);e._initTabContentList[e.selectedItem]=true}}f.owner=this;var f=new a.Event("resize");this.host.trigger(f)}}}catch(c){}return b},_getArrowsDisplacement:function(){if(!this._needScroll){return 0}var d;var c=this.arrowButtonSize;var b=this.arrowButtonSize;if(this.scrollPosition==="left"){d=c+b}else{if(this.scrollPosition==="both"){d=c}else{d=0}}return d},_scrollRight:function(e,h){this._unorderedList.stop();this._unlockAnimation("unorderedList");var f=parseInt(this._unorderedList.width()+parseInt(this._unorderedList.css("margin-left")),10),i=parseInt(this.host.width(),10),g,j,b=parseInt(this._unorderedList.css("left"),10),c=this._getArrowsDisplacement(),d=0,k=undefined;if(this.scrollable){g=parseInt(this._leftArrow.outerWidth(),10);j=parseInt(this._rightArrow.outerWidth(),10)}else{g=0;j=0}e=(this.enableScrollAnimation)?e:0;if(parseInt(this._headerWrapper.width(),10)>parseInt(this._unorderedList.css("margin-left"))+parseInt(this._unorderedList.width(),10)){d=c}else{if(Math.abs(b)+this.scrollStep<Math.abs(i-f)+g+j+c){d=b-this.scrollStep;k=b-this.scrollStep+parseInt(this._titleList[this._selectedItem].position().left)}else{d=i-f-(2*this.arrowButtonSize-c);if(d<parseInt(this._unorderedList.css("left"),10)-4&&d>parseInt(this._unorderedList.css("left"),10)+4){k=i-f-g-j+parseInt(this._titleList[this._selectedItem].position().left)}}}this._performScrollAnimation(d,k,e)},_scrollLeft:function(f,g){this._unorderedList.stop();this._unlockAnimation("unorderedList");var b=parseInt(this._unorderedList.css("left")),c=this._getArrowsDisplacement(),e=0,d=undefined;f=(this.enableScrollAnimation)?f:0;if(parseInt(this._headerWrapper.width())>=parseInt(this._unorderedList.width())){e=c}else{if(b+this.scrollStep<c){e=b+this.scrollStep;d=b+this.scrollStep+parseInt(this._titleList[this._selectedItem].position().left)}else{e=c;if(e<parseInt(this._unorderedList.css("left"))-4&&e>parseInt(this._unorderedList.css("left"))+4){d=parseInt(this._titleList[this._selectedItem].position().left)}}}this._performScrollAnimation(e,d,f)},_performScrollAnimation:function(e,d,c){var b=this;if(d!==undefined){this._moveSelectionTrack(this._selectedItem,0,d)}this._lockAnimation("unorderedList");this._unorderedList.animate({left:e},c,function(){b._moveSelectionTrack(b.selectedItem,0);b._unlockAnimation("unorderedList")})},_addKeyboardHandlers:function(){var b=this;if(this.keyboardNavigation){this.addHandler(this.host,"keydown",function(e){if(!b._activeAnimation()){var f=b._selectedItem;var d=b.selectionTracker;var c=b.getContentAt(f);if(a(e.target).ischildof(c)){return true}switch(e.keyCode){case 37:if(b.rtl){b.next()}else{b.previous()}return false;case 39:if(b.rtl){b.previous()}else{b.next()}return false;case 36:b.first();return false;case 35:b.last();return false;case 27:if(b._tabCaptured){b._cancelClick=true;b._uncapture(null,b.selectedItem);b._tabCaptured=false}break}b.selectionTracker=d}return true})}},_addScrollHandlers:function(){var b=this;this.addHandler(this._leftArrow,"mousedown",function(){b._startScrollRepeat(true,b.scrollAnimationDuration)});this.addHandler(this._rightArrow,"mousedown",function(){b._startScrollRepeat(false,b.scrollAnimationDuration)});this.addHandler(this._rightArrow,"mouseleave",function(){clearTimeout(b._scrollTimeout)});this.addHandler(this._leftArrow,"mouseleave",function(){clearTimeout(b._scrollTimeout)});this.addHandler(a(document),"mouseup.tab"+this.element.id,this._mouseUpScrollDocumentHandler,this);this.addHandler(a(document),"mouseleave.tab"+this.element.id,this._mouseLeaveScrollDocumentHandler,this)},_mouseLeaveScrollDocumentHandler:function(c){var b=c.data;if(!b._scrollTimeout){return}clearTimeout(b._scrollTimeout)},_mouseUpScrollDocumentHandler:function(c){var b=c.data;clearTimeout(b._scrollTimeout)},_mouseUpDragDocumentHandler:function(c){var b=c.data;if(b._tabCaptured&&b._dragStarted){b._uncapture(c)}b._tabCaptured=false},_addReorderHandlers:function(){var b=this;this.addHandler(a(document),"mousemove.tab"+this.element.id,this._moveElement,this);this.addHandler(a(document),"mouseup.tab"+this.element.id,this._mouseUpDragDocumentHandler,this)},_addEventHandlers:function(){var e=this.length();while(e){e--;this._addEventListenerAt(e)}if(this.keyboardNavigation){this._addKeyboardHandlers()}if(this.scrollable){this._addScrollHandlers()}if(this.reorder&&!this._isTouchDevice){this._addReorderHandlers()}var d=this;try{if(document.referrer!=""||window.frameElement){if(window.top!=null&&window.top!=window.self){var c=function(g){if(d._tabCaptured){d._cancelClick=true;d._uncapture(null,d.selectedItem);d._tabCaptured=false}};var f=null;if(window.parent&&document.referrer){f=document.referrer}if(f&&f.indexOf(document.location.host)!=-1){if(window.top.document){this.addHandler(a(window.top.document),"mouseup",c)}}}}}catch(b){}},focus:function(){try{this.host.focus();var c=this;setTimeout(function(){c.host.focus()},25)}catch(b){}},_getFocusedItem:function(f,e){var i=this.length();while(i){i--;var h=this._titleList[i],g=parseInt(h.outerWidth(true)),d=parseInt(h.offset().left),c=parseInt(this._unorderedList.offset().left),j=parseInt(this.host.offset().left),b=d;if((b<=f&&b+g>=f)&&(h!==this._capturedElement)&&(!this._titleList[i].locked)&&(this._titleList[i].disabled!==true)){return i}}return -1},_uncapture:function(e){var d=this.selectionTracker;this._unorderedListLeftBackup=this._unorderedList.css("left");this._dragStarted=false;this._tabCaptured=false;var b=this._indexOf(this._capturedElement);if(!this._capturedElement){return}switch(this.position){case"top":this._capturedElement.css("bottom",0);break;case"bottom":this._capturedElement.css("top",0);break}if(e){var c=this._getFocusedItem(e.clientX,e.clientY)}if(c===-1||!e){this._capturedElement.css("left",0)}else{this._raiseEvent(10,{item:b,dropIndex:c});this._reorderItems(c,b)}a.each(this._titleList,function(){this.css("position","static")});this._reorderHeaderElements();this._unorderedList.css({position:"relative",top:"0px"});this._prepareTabs();if(c===-1||!e){this._selectedItem=b;this._moveSelectionTrack(b,0);this._addSelectStyle(this._selectedItem,true)}else{this._moveSelectionTrack(this._selectedItem,0);this._addSelectStyle(this._selectedItem,true)}if(document.selection){document.selection.clear()}this._unorderedList.css("left",this._unorderedListLeftBackup);this.selectionTracker=d},_reorderItems:function(c,b){var d=this._titleList[this.selectedItem];var e=this._contentList[b];if(typeof this._capturedElement==="undefined"){this._capturedElement=this._titleList[b]}this._titleList[b].remove();if(b<c){this._titleList[b].insertAfter(this._titleList[c])}else{this._titleList[b].insertBefore(this._titleList[c])}this._reorderElementArrays(c,b);this._getSelectedItem(d);this._removeEventHandlers();this._addEventHandlers()},_reorderElementArrays:function(d,b){var e=this._titleList[this.selectedItem];var f=this._contentList[b];if(b<d){for(var c=b;c<=d;c++){this._titleList[c]=this._titleList[c+1];this._contentList[c]=this._contentList[c+1]}this._contentList[d]=f;this._titleList[d]=this._capturedElement}else{for(var c=b;c>=d;c--){this._titleList[c]=this._titleList[c-1];this._contentList[c]=this._contentList[c-1]}this._contentList[d]=f;this._titleList[d]=this._capturedElement}},getSelectedItem:function(){return this.selectedItem},_getSelectedItem:function(c){var b=this.length();while(b){b--;if(this._titleList[b]===c){this._selectedItem=this.selectedItem=b;break}}},_moveElement:function(c,b){var b=c.data;if(b._tabCaptured){if(document.selection){document.selection.clear()}if(!b._dragStarted){unorderedListLeft=-parseInt(b._unorderedList.css("left"),10);if(c.clientX+unorderedListLeft>b._startX+3||c.clientX+unorderedListLeft<b._startX-3){b._prepareTabForDragging();b._dragStarted=true}}else{b._performDrag(c);clearTimeout(b._scrollTimeout)}}},_performDrag:function(c){var b=this.getZoomFactor();unorderedListLeft=-parseInt(this._unorderedList.css("left"),10);this._capturedElement.css("left",unorderedListLeft+c.clientX/b-this._startX/b);this._lastX=c.clientX/b;this._moveSelectionTrack(this.selectedItem,0)},getZoomFactor:function(){var c=1;if(document.body.getBoundingClientRect){var d=document.body.getBoundingClientRect();var e=d.right-d.left;var b=document.body.offsetWidth;c=Math.round((e/b)*100)/100}return c},_prepareTabForDragging:function(){this._capturedElement.css({position:"relative",left:"0px",top:"0px","z-index":"300"});this.selectedItem=this._indexOf(this._capturedElement);switch(this.position){case"top":this._capturedElement.css("bottom",parseInt(this._capturedElement.css("top")));break;case"bottom":this._capturedElement.css("top",parseInt(this._capturedElement.css("top")));break}this._raiseEvent(9,{item:this._indexOf(this._capturedElement)})},_dragScroll:function(d){var c=parseInt(this._unorderedList.css("left"));var b=this;var e=parseInt(this._capturedElement.css("left"));if(d.clientX<=this._headerWrapper.offset().left){this._scrollLeft(this.scrollAnimationDuration);this._capturedElement.css("left",parseInt(this._capturedElement.css("left"))+this._lastUnorderedListPosition-c)}else{if(d.clientX>this._headerWrapper.offset().left+parseInt(this._headerWrapper.width(),10)){this._scrollRight(this.scrollAnimationDuration);this._capturedElement.css("left",parseInt(this._capturedElement.css("left"))+this._lastUnorderedListPosition-c)}else{this._unorderedList.stop();this._unlockAnimation("unorderedList");clearTimeout(this._scrollTimeout)}}var b=this;this._scrollTimeout=setTimeout(function(){b._dragScroll(d)},this.scrollAnimationDuration);this._lastUnorderedListPosition=c},_captureElement:function(c,b){if(!this._tabCaptured&&!this._titleList[b].locked&&this._titleList[b].disabled!==true&&!this._activeAnimation()){unorderedListLeft=-parseInt(this._unorderedList.css("left"),10);this._startX=unorderedListLeft+c.clientX;this._startY=c.clientY;this._lastX=c.clientX;this._lastY=c.clientY;this._tabCaptured=true;this._capturedElement=this._titleList[b]}},_titleInteractionTrigger:function(b){if(this._headerExpandingBalance>0){this._removeOppositeBorder()}if(this._selectedItem!==b){this.select(this._titleList[b],"toggle");this._titleList[b].collapsed=false;if(!this.collapsible){if(this.height!=="auto"){this._contentWrapper.css("visibility","visible")}else{this._contentWrapper.css("display","block")}}}else{if(this.collapsible){if(this.isCollapsed){this.expand()}else{this.collapse()}}}},collapse:function(){var c=this._selectedItem,b=this;this.isCollapsed=true;if(b.height!=="auto"){b._contentWrapper.css("visibility","hidden")}else{b._contentWrapper.hide()}b._raiseEvent(13,{item:c});if(this.position=="top"){b._headerWrapper.addClass(this.toThemeProperty("jqx-tabs-header-collapsed"));b.host.addClass(this.toThemeProperty("jqx-tabs-collapsed"))}else{b._headerWrapper.addClass(this.toThemeProperty("jqx-tabs-header-collapsed-bottom"));b.host.addClass(this.toThemeProperty("jqx-tabs-collapsed-bottom"))}},expand:function(){var c=this._selectedItem,b=this;this.isCollapsed=false;this._select(c,b.contentTransitionDuration,null,false,true);if(b.height!=="auto"){b._contentWrapper.css("visibility","visible")}else{b._contentWrapper.show()}b._raiseEvent(14,{item:c});if(this.position=="top"){b._headerWrapper.removeClass(this.toThemeProperty("jqx-tabs-header-collapsed"));b.host.removeClass(this.toThemeProperty("jqx-tabs-collapsed"))}else{b._headerWrapper.removeClass(this.toThemeProperty("jqx-tabs-header-collapsed-bottom"));b.host.removeClass(this.toThemeProperty("jqx-tabs-collapsed-bottom"))}},_addSelectHandler:function(c){var b=this;this.addHandler(this._titleList[c],"selectstart",function(d){return false});this.addHandler(this._titleList[c],this.toggleMode,function(d){return function(){b._raiseEvent("15",{item:d});if(!b._tabCaptured&&!b._cancelClick){b._titleInteractionTrigger(d)}return true}}(c))},_addDragDropHandlers:function(c){var b=this;this.addHandler(this._titleList[c],"mousedown",function(d){b._captureElement(d,c);return false});this.addHandler(this._titleList[c],"mouseup",function(d){if(b._tabCaptured&&b._dragStarted){b._cancelClick=true;b._uncapture(d,c)}else{b._cancelClick=false}b._tabCaptured=false;return false})},_removeHoverStates:function(){var b=this;a.each(this._titleList,function(){this.removeClass(b.toThemeProperty("jqx-tabs-title-hover-top"));this.removeClass(b.toThemeProperty("jqx-tabs-title-hover-bottom"))})},_addHoverHandlers:function(c){var b=this;var d=this._titleList[c];this.addHandler(d,"mouseenter",function(f){if(c!=b._selectedItem){if(b.position=="top"){d.addClass(b.toThemeProperty("jqx-tabs-title-hover-top"))}else{d.addClass(b.toThemeProperty("jqx-tabs-title-hover-bottom"))}d.addClass(b.toThemeProperty("jqx-fill-state-hover"));if(b.showCloseButtons){var e=d.children(0).children(b.toThemeProperty(".jqx-tabs-close-button",true));e.addClass(b.toThemeProperty("jqx-tabs-close-button-hover",true))}}});this.addHandler(d,"mouseleave",function(f){if(c!=b._selectedItem){if(b.position=="top"){d.removeClass(b.toThemeProperty("jqx-tabs-title-hover-top"))}else{d.removeClass(b.toThemeProperty("jqx-tabs-title-hover-bottom"))}d.removeClass(b.toThemeProperty("jqx-fill-state-hover"));if(b.showCloseButtons){var e=d.children(0).children(b.toThemeProperty(".jqx-tabs-close-button",true));e.removeClass(b.toThemeProperty("jqx-tabs-close-button-hover",true))}}})},_addEventListenerAt:function(d){var c=this;if(this._titleList[d].disabled){return}if(this.reorder&&!this._isTouchDevice){this._addDragDropHandlers(d)}this._addSelectHandler(d);if(this.enabledHover){this._addHoverHandlers(d)}var b=this._titleList[d].find(this.toThemeProperty(".jqx-tabs-close-button",true));this.removeHandler(b,"click");this.addHandler(b,"click",function(e){c.removeAt(d);return false})},_removeEventHandlers:function(){var b=this;var c=this.length();while(c){c--;this._removeEventListenerAt(c)}if(this.scrollable){this.removeHandler(this._leftArrow,"mousedown");this.removeHandler(this._rightArrow,"mousedown")}this.removeHandler(a(document),"mousemove.tab"+this.element.id,this._moveElement);this.removeHandler(a(document),"mouseup.tab"+this.element.id,this._mouseUpScrollDocumentHandler);this.removeHandler(a(document),"mouseup.tab"+this.element.id,this._mouseUpDragDocumentHandler);this.removeHandler(this.host,"keydown")},_removeEventListenerAt:function(d){var c=this;this.removeHandler(this._titleList[d],this.toggleMode);this.removeHandler(this._titleList[d],"mouseenter");this.removeHandler(this._titleList[d],"mouseleave");this.removeHandler(this._titleList[d],"mousedown");this.removeHandler(this._titleList[d],"mouseup");var b=this._titleList[d].children(0).children(this.toThemeProperty(".jqx-tabs-close-button",true));this.removeHandler(b,"click")},_moveSelectionTrack:function(l,c,b){var m=this;if(l==-1){return}if(this._titleList.length==0){return}if(l>=this._titleList.length){return}if(this.selectionTracker&&this._selectionTracker){this._selectionTracker.stop();this._unlockAnimation("selectionTracker");if(b===undefined){var h=parseInt(this._titleList[l].position().left);if(!isNaN(parseInt(this._unorderedList.css("left")))){h+=parseInt(this._unorderedList.css("left"))}if(!isNaN(parseInt(this._unorderedList.css("margin-left")))){h+=parseInt(this._unorderedList.css("margin-left"))}if(!isNaN(parseInt(this._titleList[l].css("margin-left")))){h+=parseInt(this._titleList[l].css("margin-left"))}if(!isNaN(parseInt(this._titleList[l].css("margin-right")))){}}else{var h=b}var g=0;var e=0;if(this.position==="top"){g=parseInt(this._headerWrapper.height())-parseInt(this._titleList[l].outerHeight());if(!this.autoHeight){e+=parseInt(this._titleList[l].css("margin-top"))}}this._lockAnimation("selectionTracker");var k=parseInt(this._titleList[l].css("padding-left"))+parseInt(this._titleList[l].css("padding-right"));var f=this.position=="top"?0:1;var j=parseInt(this._headerWrapper.css("padding-top"));var i=parseInt(this._titleList[l].css("padding-top"))+parseInt(this._titleList[l].css("padding-bottom"));this._selectionTracker.css("visibility","visible");this._moveSelectionTrackerContainer.css("visibility","visible");var d=parseInt(this._titleList[l].css("margin-top"));if(isNaN(d)){d=0}this._selectionTracker.animate({top:j+d-f,left:h+"px",height:parseInt(this._titleList[l].height()+i),width:this._titleList[l].width()+k},c,function(){m._unlockAnimation("selectionTracker");m._selectionTracker.css("visibility","hidden");m._addSelectStyle(l,true);m._moveSelectionTrackerContainer.css("visibility","hidden")})}},destroy:function(){a.jqx.utilities.resize(this.host,null,true);this.host.remove()},_switchTabs:function(b,d){if(b!==d&&!this._activeAnimation()&&!this._tabCaptured){var c=this;this._raiseEvent(7,{item:d});this._raiseEvent(6,{item:b});if(this._currentEvent){if(this._currentEvent.cancel){this._currentEvent=null;return}}this._unselect(d,null,true);this._select(b,c.contentTransitionDuration,null,true);return true}return false},_activeAnimation:function(){for(child in this._isAnimated){if(this._isAnimated.hasOwnProperty(child)){if(this._isAnimated[child]){return true}}}return false},_indexOf:function(c){var b=this.length();while(b){b--;if(this._titleList[b][0]===c[0]||this._contentList[b][0]===c[0]){return b}}return -1},_validateProperties:function(){try{if(this.scrollAnimationDuration<0||isNaN(this.scrollAnimationDuration)){throw new Error(this._invalidArgumentExceptions.invalidScrollAnimationDuration)}if(parseInt(this.width)<0&&this.width!=="auto"){throw new Error(this._invalidArgumentExceptions.invalidWidth)}if(parseInt(this.height)<0&&this.height!=="auto"){throw new Error(this._invalidArgumentExceptions.invalidHeight)}if(this.animationType!=="none"&&this.animationType!=="fade"){throw new Error(this._invalidArgumentExceptions.invalidAnimationType)}if(this.contentTransitionDuration<0||isNaN(this.contentTransitionDuration)){throw new Error(this._invalidArgumentExceptions.invalidcontentTransitionDuration)}if(this.toggleMode!=="click"&&this.toggleMode!=="dblclick"&&this.toggleMode!=="mouseenter"&&this.toggleMode!=="none"){throw new Error(this._invalidArgumentExceptions.invalidToggleMode)}if(this.position!=="top"&&this.position!=="bottom"){throw new Error(this._invalidArgumentExceptions.invalidPosition)}if(this.scrollPosition!=="left"&&this.scrollPosition!=="right"&&this.scrollPosition!=="both"){throw new Error(this._invalidArgumentExceptions.invalidScrollPosition)}if(this.scrollStep<0||isNaN(this.scrollStep)){throw new Error(this._invalidArgumentExceptions.invalidScrollStep)}if(this._titleList.length!==this._contentList.length||this._titleList.length==0){throw new Error(this._invalidArgumentExceptions.invalidStructure)}if(this.arrowButtonSize<0||isNaN(this.arrowButtonSize)){throw new Error(this._invalidArgumentExceptions.invalidArrowSize)}if(this.closeButtonSize<0||isNaN(this.closeButtonSize)){throw new Error(this._invalidArgumentExceptions.invalidCloseSize)}}catch(b){alert(b)}},_startScrollRepeat:function(d,c){var b=this;if(d){this._scrollLeft(c)}else{this._scrollRight(c)}if(this._scrollTimeout){clearTimeout(this._scrollTimeout)}this._scrollTimeout=setTimeout(function(){b._startScrollRepeat(d,b.scrollAnimationDuration)},c)},_performLayout:function(){var b=this.length();while(b){b--;if(this.position==="top"||this.position==="bottom"){if(this.rtl){this._titleList[b].css("float","right")}else{this._titleList[b].css("float","left")}}}this._fitToSize();this._performHeaderLayout();this._fitToSize()},updatetabsheader:function(){this._performHeaderLayout()},_performResize:function(){var b=this;this._fitToSize();this._positionArrows(this._totalItemsWidth);if(this._totalItemsWidth>this.element.offsetWidth){this._unorderedList.width(this._totalItemsWidth)}else{this._unorderedList[0].style.width=this.element.offsetWidth-2+"px"}this._fitToSize()},_addArrows:function(){if(this._leftArrow&&this._rightArrow){this._leftArrow.remove();this._rightArrow.remove()}this._leftArrow=a('<div><span style="display: block; width: 16px; height: 16px;" class="'+this.toThemeProperty("jqx-tabs-arrow-left")+'"></span></div>');this._rightArrow=a('<div><span style="display: block; width: 16px; height: 16px;" class="'+this.toThemeProperty("jqx-tabs-arrow-right")+'"></span></div>');this._leftArrow.addClass(this.toThemeProperty("jqx-tabs-arrow-background"));this._rightArrow.addClass(this.toThemeProperty("jqx-tabs-arrow-background"));this._leftArrow.addClass(this.toThemeProperty("jqx-widget-header"));this._rightArrow.addClass(this.toThemeProperty("jqx-widget-header"));this._headerWrapper.append(this._leftArrow);this._headerWrapper.append(this._rightArrow);this._leftArrow.width(this.arrowButtonSize);this._leftArrow.height("100%");this._rightArrow.width(this.arrowButtonSize);this._rightArrow.height("100%");this._leftArrow.css({"z-index":"30"});this._rightArrow.css({"z-index":"30"});this._leftArrow.css("display","none");this._rightArrow.css("display","none")},_tabsWithVisibleCloseButtons:function(){if(!this.showCloseButtons){return 0}var c=this.length();var b=this;a.each(this._titleList,function(){var d=this.attr("hasclosebutton");if(d!=undefined&&d!=null){if(d=="false"||d==false){c--}}});return c},_calculateTitlesSize:function(){var g=0;var d=0;var c=this.length();if(this.rtl&&a.jqx.browser.msie&&a.jqx.browser.version<8){this._measureItem=a("<span style='position: relative; visibility: hidden;'></span>");a(document.body).append(this._measureItem)}while(c){c--;if(this._measureItem){this._measureItem.html(this._titleList[c].html());this._titleList[c].width(this._measureItem.width())}this._titleList[c].css("position","static");this._titleList[c].find(this.toThemeProperty(".jqx-tabs-close-button",true)).css("display","none");d+=parseInt(this._titleList[c].outerWidth(true));if(g<this._titleList[c].outerHeight(true)){g=Math.round(parseInt(this._titleList[c].outerHeight(true)))}if(this._titleList[c].height()==0){var f=this._titleList[c].clone();a(document.body).append(f);g=Math.round(parseInt(f.outerHeight(true)));f.remove()}var b=this._titleList[c].attr("hasCloseButton");if(b!=undefined&&b!=null){var e=false;if(this.hiddenCloseButtons){if(this.hiddenCloseButtons[c]==1){this._titleList[c].find(this.toThemeProperty(".jqx-tabs-close-button",true)).css("display","none");e=true}}if(!e){if(b=="true"||b==true){d+=this.closeButtonSize;this._titleList[c].find(this.toThemeProperty(".jqx-tabs-close-button",true)).css("display","block")}else{if(b=="false"||b==false){this._titleList[c].find(this.toThemeProperty(".jqx-tabs-close-button",true)).css("display","none")}}}}else{if(this.showCloseButtons&&(this.canCloseAllTabs||this._tabsWithVisibleCloseButtons()>1)){var e=false;if(this.hiddenCloseButtons){if(this.hiddenCloseButtons[c]==1){this._titleList[c].find(this.toThemeProperty(".jqx-tabs-close-button",true)).css("display","none");e=true}}if(!e){d+=this.closeButtonSize;this._titleList[c].find(this.toThemeProperty(".jqx-tabs-close-button",true)).css("display","block")}}}this._titleList[c].height(this._titleList[c].height())}if(this._measureItem){this._measureItem.remove()}return{height:g,width:10+d}},_reorderHeaderElements:function(){if(this.selectionTracker){this._moveSelectionTrackerContainer.css({position:"absolute",height:"100%",top:"0px",left:"0px",width:"100%"})}this._headerWrapper.css({position:"relative",left:"0px",top:"0px"});if(this.scrollable){this._rightArrow.css({width:this.arrowButtonSize,position:"absolute",top:"0px"});this._leftArrow.css({width:this.arrowButtonSize,position:"absolute",top:"0px"});var c=this.theme&&this.theme.indexOf("ui-")!=-1?3:0;if(c>0){this._rightArrow.addClass(this.toThemeProperty("jqx-rc-r"));this._leftArrow.addClass(this.toThemeProperty("jqx-rc-l"))}var b=this.scrollPosition;if(this.rtl){if(b=="left"){b="right"}if(b=="right"){b="left"}}switch(b){case"both":this._rightArrow.css("right","0px");this._leftArrow.css("left","0px");break;case"left":this._rightArrow.css("left",this.arrowButtonSize+"px");this._leftArrow.css("left","0px");break;case"right":this._rightArrow.css("right",-c+"px");this._leftArrow.css("right",(this.arrowButtonSize-c)+"px");break}}},_positionArrows:function(b){if(b>=parseInt(this._headerWrapper[0].offsetWidth)&&this.scrollable){this._needScroll=true;if(this._unorderedList.position().left===0){this._unorderedListLeftBackup=this._getArrowsDisplacement()+"px"}this._leftArrow.css("display","block");this._rightArrow.css("display","block")}else{this._needScroll=false;this._leftArrow[0].style.display="none";this._rightArrow[0].style.display="none";this._unorderedList[0].style.left="0px"}},_performHeaderLayout:function(){this._removeSelectStyle();var b=this._calculateTitlesSize();var d=b.height;var c=b.width;this._headerWrapper.height(d);this._unorderedList.height(d);if(this.headerHeight!=null&&this.headerHeight!="auto"){this._headerWrapper.height(this.headerHeight);this._unorderedList.height(this.headerHeight)}if(c>this.host.width()){this._unorderedList.width(c)}else{this._unorderedList.width(this.host.width())}if(a.jqx.browser.msie&&a.jqx.browser.version<8){this._unorderedList.css("position","relative");this._headerWrapper.css("overflow","hidden")}this._reorderHeaderElements();c=c+parseInt(this._unorderedList.css("margin-left"));this._totalItemsWidth=c;this._positionArrows(c);this._unorderedList.css({position:"relative",top:"0px"});this._verticalAlignElements();this._moveSelectionTrack(this._selectedItem,0);this._addSelectStyle(this.selectedItem)},_verticalAlignElements:function(){var k=this.length();var p=this._maxHeightTab();while(k){k--;var b=this._titleList[k].find(".jqx-tabs-titleContentWrapper"),l=b.height(),o=this._titleList[k].find(this.toThemeProperty(".jqx-tabs-close-button",true)),m=parseInt(this._titleList[k].css("padding-top"));if(!m){m=0}if(this.autoHeight){var h=this._titleList[k].outerHeight(true)-this._titleList[k].height();var c=parseInt(this._titleList[k].css("padding-top"));var q=parseInt(this._titleList[k].css("padding-bottom"));var j=parseInt(this._titleList[k].css("border-top-width"));var f=parseInt(this._titleList[k].css("border-bottom-width"));this._titleList[k].height(this._unorderedList.outerHeight()-c-q-j-f)}else{if(this.position==="top"){var i=parseInt(this._unorderedList.height())-parseInt(this._titleList[k].outerHeight(true));if(parseInt(this._titleList[k].css("margin-top"))!==i&&i!==0){this._titleList[k].css("margin-top",i)}}else{this._titleList[k].height(this._titleList[k].height())}}this._titleList[k].children(0).height("100%");var e=parseInt(this._titleList[k].height());var g=parseInt(e)/2-parseInt(o.height())/2;o.css("margin-top",1+g);var n=parseInt(e)/2-parseInt(b.height())/2;b.css("margin-top",n)}if(this.scrollable){var h=parseInt(this._headerWrapper.outerHeight())-this.arrowButtonSize;var d=h/2;this._rightArrow.children(0).css("margin-top",d);this._rightArrow.height("100%");this._leftArrow.height("100%");this._leftArrow.children(0).css("margin-top",d)}},_getImageUrl:function(c){var b=c.css("background-image");b=b.replace('url("',"");b=b.replace('")',"");b=b.replace("url(","");b=b.replace(")","");return b},_fitToSize:function(){var c=false;var e=false;var d=this;if(d.width!=null&&d.width.toString().indexOf("%")!=-1){c=true}if(d.height!=null&&d.height.toString().indexOf("%")!=-1){e=true}if(c){this.host[0].style.width=this.width;this._contentWrapper[0].style.width="100%"}if(e){this.host[0].style.height=this.height;this._contentWrapper[0].style.width="100%";this._contentWrapper[0].style.height="auto";var b=this.element.offsetHeight-this._headerWrapper[0].offsetHeight;this._contentWrapper[0].style.height=b+"px"}if(!c){this.host.width(this.width);if(this.width!="auto"){this._contentWrapper.css("width","100%")}}if(!e){if(this.height!=="auto"){this.host.height(this.height);var b=this.host.height()-this._headerWrapper.outerHeight();this._contentWrapper.height(b)}else{this._contentWrapper.css("height","auto")}}},_maxHeightTab:function(){var c=this.length();var d=-1;var b=-1;while(c){c--;if(d<parseInt(this._titleList[c].outerHeight(true))){b=c}}return b},_addSelectionTracker:function(){if(this._moveSelectionTrackerContainer){this._moveSelectionTrackerContainer.remove()}this._moveSelectionTrackerContainer=a('<div class="'+this.toThemeProperty("jqx-tabs-selection-tracker-container")+'">');var b=this.toThemeProperty("jqx-tabs-selection-tracker-"+this.position);this._selectionTracker=a('<div class="'+b+'">');this._selectionTracker.css("color","inherit");this._moveSelectionTrackerContainer.append(this._selectionTracker);this._headerWrapper.append(this._moveSelectionTrackerContainer);this._selectionTracker.css({position:"absolute","z-index":"10",left:"0px",top:"0px",display:"inline-block"})},_addContentWrapper:function(){var d="none";var b=this._contentWrapper==undefined;this._contentWrapper=this._contentWrapper||a('<div class="'+this.toThemeProperty("jqx-tabs-content")+'" style="float:'+d+';">');this._contentWrapper.addClass(this.toThemeProperty("jqx-widget-content"));var c=this.length();while(c){c--;this._contentList[c].addClass(this.toThemeProperty("jqx-tabs-content-element"))}if(b){this.host.find(".jqx-tabs-content-element").wrapAll(this._contentWrapper);this._contentWrapper=this.host.find(".jqx-tabs-content")}if(this.roundedCorners){if(this.position=="top"){this._contentWrapper.addClass(this.toThemeProperty("jqx-rc-b"))}else{this._contentWrapper.addClass(this.toThemeProperty("jqx-rc-t"))}this.host.addClass(this.toThemeProperty("jqx-rc-all"))}},_addHeaderWrappers:function(){var b=this.length();this._unorderedList.remove();this._headerWrapper=this._headerWrapper||a('<div class="jqx-tabs-headerWrapper" style="outline: none;">');this._headerWrapper.remove();if(this.position=="top"){this._headerWrapper.prependTo(this.host)}else{this._headerWrapper.appendTo(this.host)}this._unorderedList.appendTo(this._headerWrapper);this._headerWrapper.addClass(this.toThemeProperty("jqx-tabs-header"));this._headerWrapper.addClass(this.toThemeProperty("jqx-widget-header"));if(this.position=="bottom"){this._headerWrapper.addClass(this.toThemeProperty("jqx-tabs-header-bottom"))}else{this._headerWrapper.removeClass(this.toThemeProperty("jqx-tabs-header-bottom"))}if(this.roundedCorners){if(this.position=="top"){this._headerWrapper.addClass(this.toThemeProperty("jqx-rc-t"));this._headerWrapper.removeClass(this.toThemeProperty("jqx-rc-b"))}else{this._headerWrapper.removeClass(this.toThemeProperty("jqx-rc-t"));this._headerWrapper.addClass(this.toThemeProperty("jqx-rc-b"))}}while(b){b--;if(this._titleList[b].children(".jqx-tabs-titleWrapper").length<=0){var c=a('<div class="jqx-tabs-titleWrapper" style="outline: none; position: relative;">');c.append(this._titleList[b].html());this._titleList[b].empty();c.appendTo(this._titleList[b])}this._titleList[b].children(".jqx-tabs-titleWrapper").css("z-index","15")}},_render:function(){this._addCloseButtons();this._addHeaderWrappers();this._addContentWrapper();if(this.selectionTracker){this._addSelectionTracker()}this._addArrows()},_addCloseButton:function(c){var f=c;if(this._titleList[f].find(this.toThemeProperty(".jqx-tabs-close-button",true)).length<=0&&this._titleList[f].find(".jqx-tabs-titleContentWrapper").length<=0){var d=a('<div class="jqx-tabs-titleContentWrapper"></div>');var g="left";if(this.rtl){g="right"}d.css("float",g);d.addClass("jqx-disableselect");d.append(this._titleList[f].html());this._titleList[f].html("");var b=a('<div class="'+this.toThemeProperty("jqx-tabs-close-button")+'"></div>');b.css({height:this.closeButtonSize,width:this.closeButtonSize,"float":g,"font-size":"1px"});var e=this;this._titleList[f].append(d);this._titleList[f].append(b);if(!this.showCloseButtons){b.css("display","none")}else{if(this.hiddenCloseButtons){if(this.hiddenCloseButtons[c]==1){b.css("display","none")}}}}},_addCloseButtons:function(){var b=this.length();while(b){b--;this._addCloseButton(b)}},_prepareTabs:function(){var c=this.length();var b=this.selectionTracker;this.selectionTracker=false;while(c){c--;if(this._selectedItem!==c){this._unselect(c,null,false)}}this._select(this._selectedItem,0,null,false);this.selectionTracker=b;if(this.initTabContent){if(!this._initTabContentList[this.selectedItem]){if(!this._hiddenParent()){this.initTabContent(this.selectedItem);this._initTabContentList[this.selectedItem]=true}}}},_isValidIndex:function(b){return(b>=0&&b<this.length())},_removeSelectStyle:function(){var c=this.length();while(c){c--;var b=null;if(this.showCloseButtons){var b=this._titleList[c].children(0).children(this.toThemeProperty(".jqx-tabs-close-button",true));b.removeClass(this.toThemeProperty("jqx-tabs-close-button-selected"))}if(this.position=="top"){this._titleList[c].removeClass(this.toThemeProperty("jqx-tabs-title-selected-top"))}else{this._titleList[c].removeClass(this.toThemeProperty("jqx-tabs-title-selected-bottom"))}this._titleList[c].removeClass(this.toThemeProperty("jqx-fill-state-pressed"))}},_addSelectStyle:function(c,e){var d=this.length();this._removeSelectStyle();if(!this.selectionTracker||(e!=undefined&&e)){if(c>=0&&this._titleList[c]!=undefined){var b=null;if(this.showCloseButtons){var b=this._titleList[c].children(0).children(this.toThemeProperty(".jqx-tabs-close-button",true));if(this.hiddenCloseButtons){if(this.hiddenCloseButtons[c]==1){b=null}}}this._titleList[c].removeClass(this.toThemeProperty("jqx-fill-state-hover"));if(this.position=="top"){this._titleList[c].removeClass(this.toThemeProperty("jqx-tabs-title-hover-top"));this._titleList[c].addClass(this.toThemeProperty("jqx-tabs-title-selected-top"))}else{this._titleList[c].removeClass(this.toThemeProperty("jqx-tabs-title-hover-bottom"));this._titleList[c].addClass(this.toThemeProperty("jqx-tabs-title-selected-bottom"))}this._titleList[c].addClass(this.toThemeProperty("jqx-fill-state-pressed"));if(b!=null){b.addClass(this.toThemeProperty("jqx-tabs-close-button-selected"))}}}},_addItemTo:function(g,c,e){if(c<g.length){var b=undefined,f=undefined;for(var d=c;d+1<g.length;d++){if(b===undefined){b=g[d+1];g[d+1]=g[d]}else{f=g[d+1];g[d+1]=b;b=f}}if(b===undefined){b=g[c]}g[c]=e;g.push(b)}else{g.push(e)}},_select:function(d,g,h,b,f){if(!this._tabCaptured){this.host.attr("hideFocus","true");var c=this;if(f==undefined){this._addSelectStyle(d)}else{this._addSelectStyle(d,f)}if(this.isCollapsed&&this.collapsible){this._contentList[d].css("display","none");this._selectCallback(d,h,b);return}switch(this.animationType){case"none":if(!c.selectionTracker){for(var e=0;e<this._contentList.length;e++){if(d!=e&&this._contentList[e].css("display")=="block"){this._contentList[e].css("display","none");a.jqx.aria(this._titleList[e],"aria-selected",false);a.jqx.aria(this._contentList[e],"aria-hidden",true)}}this._contentList[d].css("display","block");a.jqx.aria(this._titleList[d],"aria-selected",true);a.jqx.aria(this._contentList[d],"aria-hidden",false);a.jqx.aria(this,"aria-activedescendant",this._titleList[d][0].id)}else{setTimeout(function(){c._contentList[d].css("display","block");a.jqx.aria(c._titleList[d],"aria-selected",true);a.jqx.aria(c._contentList[d],"aria-hidden",false);a.jqx.aria(c,"aria-activedescendant",c._titleList[d][0].id)},this.selectionTrackerAnimationDuration)}this._selectCallback(d,h,b);break;case"fade":this._lockAnimation("contentListSelect");c._selectCallback(d,h,b);this._contentList[d].fadeIn(g,function(){c._unlockAnimation("contentListSelect");a.jqx.aria(c._titleList[d],"aria-selected",true);a.jqx.aria(c._contentList[d],"aria-hidden",false);a.jqx.aria(c,"aria-activedescendant",c._titleList[d][0].id)});break}}},_selectCallback:function(c,d,b){this._selectedItem=c;this.selectedItem=this._selectedItem;if(d){d()}if(b){this._raiseEvent(1,{item:c})}},_unselect:function(d,e,b){if(d>=0){if(!this._tabCaptured){var c=this;this._contentList[d].stop();if(this.animationType=="fade"){this._contentList[d].css("display","none");a.jqx.aria(c._titleList[d],"aria-selected",false);a.jqx.aria(c._contentList[d],"aria-hidden",true)}else{if(this.selectionTracker){setTimeout(function(){c._contentList[d].css("display","none");a.jqx.aria(c._titleList[d],"aria-selected",false);a.jqx.aria(c._contentList[d],"aria-hidden",true)},this.selectionTrackerAnimationDuration)}else{this._contentList[d].css("display","none");a.jqx.aria(c._titleList[d],"aria-selected",false);a.jqx.aria(c._contentList[d],"aria-hidden",true)}}this._unselectCallback(d,e,b);if(!this.selectionTracker){this._titleList[d].removeClass(this.toThemeProperty("jqx-tabs-title-selected"));this._titleList[d].removeClass(this.toThemeProperty("jqx-fill-state-pressed"))}}}},_unselectCallback:function(c,d,b){if(b){this._raiseEvent(8,{item:c})}if(d){d()}},disable:function(){var b=this.length();while(b){b--;this.disableAt(b)}},enable:function(){var b=this.length();while(b){b--;this.enableAt(b)}},getEnabledTabsCount:function(){var b=0;a.each(this._titleList,function(){if(!this.disabled){b++}});return b},getDisabledTabsCount:function(){var b=0;a.each(this._titleList,function(){if(this.disabled){b++}});return b},removeAt:function(d){if(this._isValidIndex(d)&&(this.canCloseAllTabs||this.length()>1)){this._removeHoverStates();var b=this,c=this._titleList[this._selectedItem],e=parseInt(this._titleList[d].outerWidth(true)),i=this.getTitleAt(d);this._unorderedList.width(parseInt(this._unorderedList.width())-e);this._titleList[d].remove();this._contentList[d].remove();var h=0;this._titleList.splice(d,1);this._contentList.splice(d,1);this._addStyles();this._performHeaderLayout();this._removeEventHandlers();this._addEventHandlers();this._raiseEvent(3,{item:d,title:i});this._isAnimated={};if(this.selectedItem>0){this._selectedItem=-1;var g=this._getPreviousIndex(this.selectedItem);this.select(g)}else{this._selectedItem=-1;var g=this._getNextIndex(this.selectedItem);this.select(g)}if(parseInt(this._unorderedList.css("left"))>this._getArrowsDisplacement()){this._unorderedList.css("left",this._getArrowsDisplacement())}if(parseInt(this._unorderedList.width())<=parseInt(this._headerWrapper.width())){var f=(this.enableScrollAnimation)?this.scrollAnimationDuration:0;this._lockAnimation("unorderedList");this._unorderedList.animate({left:0},f,function(){b._unlockAnimation("unorderedList")})}}},removeFirst:function(){this.removeAt(0)},removeLast:function(){this.removeAt(this.length()-1)},disableAt:function(b){if(!this._titleList[b].disabled||this._titleList[b].disabled===undefined){if(this.selectedItem==b){var c=this.next();if(!c){c=this.previous()}}this._titleList[b].disabled=true;this.removeHandler(this._titleList[b],this.toggleMode);if(this.enabledHover){this._titleList[b].off("mouseenter").off("mouseleave")}this._removeEventListenerAt(b);this._titleList[b].addClass(this.toThemeProperty("jqx-tabs-title-disable"));this._titleList[b].addClass(this.toThemeProperty("jqx-fill-state-disabled"));this._raiseEvent(5,{item:b})}},enableAt:function(b){if(this._titleList[b].disabled){this._titleList[b].disabled=false;this._addEventListenerAt(b);this._titleList[b].removeClass(this.toThemeProperty("jqx-tabs-title-disable"));this._titleList[b].removeClass(this.toThemeProperty("jqx-fill-state-disabled"));this._raiseEvent(4,{item:b})}},addAt:function(d,g,e){if(d>=0||d<=this.length()){this._removeHoverStates();var b=a("<li>"+g+"</li>");var f=a("<div>"+e+"</div>");b.addClass(this.toThemeProperty("jqx-tabs-title"));b.addClass(this.toThemeProperty("jqx-item"));f.addClass(this.toThemeProperty("jqx-tabs-content-element"));if(this.position=="bottom"){b.addClass(this.toThemeProperty("jqx-tabs-title-bottom"))}var c=false;if(this._titleList.length==0){this._unorderedList.append(b)}else{if(d<this.length()&&d>=0){this._titleList[d].before(b)}else{this._titleList[this.length()-1].after(b)}}f.appendTo(this._contentWrapper);this._addItemTo(this._titleList,d,b);this._addItemTo(this._contentList,d,f);if(this._selectedItem>d){this._selectedItem++}this._switchTabs(d,this._selectedItem);this._selectedItem=d;if(this.showCloseButtons&&this._titleList.length>0){this._addCloseButton(d)}this._uiRefresh(c);this._raiseEvent(2,{item:d});this._moveSelectionTrack(this._selectedItem,0)}},addFirst:function(c,b){this.addAt(0,c,b)},addLast:function(c,b){this.addAt(this.length(),c,b)},val:function(b){if(arguments.length==0||typeof(b)=="object"){return this._selectedItem}this.select(b);return this._selectedItem},select:function(c,b){if(typeof(c)==="object"){c=this._indexOf(c)}var e=c>=0&&c<this._titleList.length?this._titleList[c].attr("canselect"):true;if(e==undefined||e=="true"||e==true){if(c!==this._selectedItem&&this._isValidIndex(c)){if(!this._activeAnimation()&&!this._titleList[c].disabled){var d=this._switchTabs(c,this._selectedItem);if(d){this.ensureVisible(c)}}}}},previous:function(c){var b=this._selectedItem;if(c!=undefined&&!isNaN(c)){b=c}while(b>0&&b<this._titleList.length){b--;if(!this._titleList[b].disabled){this.select(b);return true}}return false},_getPreviousIndex:function(c){if(c!=undefined&&!isNaN(c)){var b=c;while(c>0&&c<=this._titleList.length){c--;if(!this._titleList[c].disabled){return c;break}}return b}else{return 0}},_getNextIndex:function(c){if(c!=undefined&&!isNaN(c)){var b=c;while(c>=0&&c<this._titleList.length){if(!this._titleList[c].disabled){return c;break}c++}return b}else{return 0}},next:function(c){var b=this._selectedItem;if(c!=undefined&&!isNaN(c)){b=c}while(b>=0&&b<this._titleList.length-1){b++;if(!this._titleList[b].disabled){this.select(b);return true}}return false},first:function(){var b=0;if(this._titleList[b].disabled){this.next(b)}else{this.select(b)}},last:function(){var b=this._titleList.length-1;if(this._titleList[b].disabled){this.previous(b)}else{this.select(b)}},length:function(){return this._titleList.length},lockAt:function(b){if(this._isValidIndex(b)&&(!this._titleList[b].locked||this._titleList[b].locked===undefined)){this._titleList[b].locked=true;this._raiseEvent(11,{item:b})}},unlockAt:function(b){if(this._isValidIndex(b)&&this._titleList[b].locked){this._titleList[b].locked=false;this._raiseEvent(12,{item:b})}},lockAll:function(){var b=this.length();while(b){b--;this.lockAt(b)}},unlockAll:function(){var b=this.length();while(b){b--;this.unlockAt(b)}},showCloseButtonAt:function(c){if(this._isValidIndex(c)){if(!this.showCloseButtons){this.showCloseButtons=true;this.updatetabsheader()}var b=this._titleList[c].find(this.toThemeProperty(".jqx-tabs-close-button",true));b.css("display","block");if(!this.hiddenCloseButtons){this.hiddenCloseButtons=new Array()}this.hiddenCloseButtons[c]=0}},hideCloseButtonAt:function(c){if(this._isValidIndex(c)){var b=this._titleList[c].find(this.toThemeProperty(".jqx-tabs-close-button",true));b.css("display","none");if(!this.hiddenCloseButtons){this.hiddenCloseButtons=new Array()}this.hiddenCloseButtons[c]=1}},hideAllCloseButtons:function(){var b=this.length();while(b){b--;this.hideCloseButtonAt(b)}},showAllCloseButtons:function(){var b=this.length();while(b){b--;this.showCloseButtonAt(b)}},getTitleAt:function(b){if(this._titleList[b]){return this._titleList[b].text()}return null},getContentAt:function(b){if(this._contentList[b]){return this._contentList[b]}return null},setTitleAt:function(b,c){if(this._titleList[b]){this._titleList[b].text(c);if(this.showCloseButtons){this._addCloseButton(b);this._removeEventHandlers();this._addEventHandlers()}this.render();this.refresh()}},setContentAt:function(b,c){if(this._contentList[b]){this._contentList[b].html(c)}},ensureVisible:function(d){var k=this;if(d==undefined||d==-1||d==null){d=this.selectedItem}if(!this._isValidIndex(d)){return false}var j=parseInt(this._titleList[d].position().left)+parseInt(this._unorderedList.css("margin-left"));var f=parseInt(this._unorderedList.css("left"));var i=parseInt(this._headerWrapper.outerWidth(true));var e=parseInt(this._titleList[d].outerWidth(true));var h=f-this._getArrowsDisplacement();var b=i-this._getArrowsDisplacement()-h;var g,c;if(j<-h){g=-j+this._getArrowsDisplacement();c=this._getArrowsDisplacement()}else{if(j+e>b-this._getArrowsDisplacement()){g=-j+i-e-((this.scrollable)?(2*this.arrowButtonSize-this._getArrowsDisplacement()):0);c=i-e-this._getArrowsDisplacement()}else{this._moveSelectionTrack(d,this.selectionTrackerAnimationDuration);return true}}this._lockAnimation("unorderedList");this._unorderedList.animate({left:g},this.scrollAnimationDuration,function(){k._unlockAnimation("unorderedList");k._moveSelectionTrack(k._selectedItem,0);return true});this._moveSelectionTrack(d,this.selectionTrackerAnimationDuration,c);return true},isVisibleAt:function(d){var k=this;if(d==undefined||d==-1||d==null){d=this.selectedItem}if(!this._isValidIndex(d)){return false}var j=parseInt(this._titleList[d].position().left)+parseInt(this._unorderedList.css("margin-left"));var f=parseInt(this._unorderedList.css("left"));var i=parseInt(this._headerWrapper.outerWidth(true));var e=parseInt(this._titleList[d].outerWidth(true));var h=f-this._getArrowsDisplacement();var b=i-this._getArrowsDisplacement()-h;var g,c;if(j<-h){return false}else{if(j+e>b){return false}else{return true}}return true},isDisabled:function(b){return this._titleList[b].disabled},_lockAnimation:function(b){if(this._isAnimated){this._isAnimated[b]=true}},_unlockAnimation:function(b){if(this._isAnimated){this._isAnimated[b]=false}},propertyChangedHandler:function(b,c,e,d){this._validateProperties();switch(c){case"touchMode":if(d){b.enabledHover=false;b.keyboardNavigation=false}break;case"width":case"height":b._performResize();return;case"disabled":if(d){this.disable()}else{this.enable()}return;case"showCloseButtons":if(d){this.showAllCloseButtons()}else{this.hideAllCloseButtons()}this._moveSelectionTrack(this._selectedItem,this.selectionTrackerAnimationDuration);return;case"selectedItem":if(this._isValidIndex(d)){this.select(d)}return;case"scrollStep":case"contentTransitionDuration":case"scrollAnimationDuration":case"enableScrollAnimation":return;case"selectionTracker":if(d){this._refresh();this.select(this._selectedItem)}else{if(this._selectionTracker!=null){this._selectionTracker.remove()}}return;case"scrollable":if(d){this._refresh();this.select(this._selectedItem)}else{this._leftArrow.remove();this._rightArrow.remove();this._performHeaderLayout()}return;case"autoHeight":this._performHeaderLayout();return;case"theme":a.jqx.utilities.setTheme(e,d,this.host);return}this._unorderedList.css("left","0px");this._refresh();this.select(this._selectedItem);this._addSelectStyle(this._selectedItem,true)}})}(jqxBaseFramework));
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(i) {
    i.jqx.observableArray = function(e, J) {
        if (typeof(e) == "string") {
            e = i.parseJSON(e)
        }
        if (!Object.defineProperty || !(function() {
            try {
                Object.defineProperty({},
                "x", {});
                return true
            } catch(M) {
                return false
            }
        } ())) {
            var L = Object.defineProperty;
            Object.defineProperty = function(O, P, N) {
                if (L) {
                    try {
                        return L(O, P, N)
                    } catch(M) {}
                }
                if (O !== Object(O)) {
                    throw TypeError("Object.defineProperty called on non-object")
                }
                if (Object.prototype.__defineGetter__ && ("get" in N)) {
                    Object.prototype.__defineGetter__.call(O, P, N.get)
                }
                if (Object.prototype.__defineSetter__ && ("set" in N)) {
                    Object.prototype.__defineSetter__.call(O, P, N.set)
                }
                if ("value" in N) {
                    O[P] = N.value
                } else {
                    if (!O[P]) {
                        O[P] = N
                    }
                }
                return O
            }
        }
        if (!Array.prototype.forEach) {
            Array.prototype.forEach = function(N) {
                if (this === void 0 || this === null) {
                    throw TypeError()
                }
                var Q = Object(this);
                var M = Q.length >>> 0;
                if (typeof N !== "function") {
                    throw TypeError()
                }
                var P = arguments[1],
                O;
                for (O = 0; O < M; O++) {
                    if (O in Q) {
                        N.call(P, Q[O], O, Q)
                    }
                }
            }
        }
        if (typeof Object.getOwnPropertyNames !== "function") {
            Object.getOwnPropertyNames = function(O) {
                if (O !== Object(O)) {
                    throw TypeError("Object.getOwnPropertyNames called on non-object")
                }
                var M = [],
                N;
                for (N in O) {
                    if (Object.prototype.hasOwnProperty.call(O, N)) {
                        M.push(N)
                    }
                }
                return M
            }
        }
        var I = this,
        H, K = [];
        I.notifier = null;
        I.name = "observableArray";
        I.observing = true;
        I.changes = new Array();
        var J = J;
        I.observe = function() {
            I.observing = true;
            if (arguments.length == 1) {
                J = arguments[0]
            }
        };
        I.unobserve = function() {
            I.observing = false
        };
        I.toArray = function() {
            return K.slice(0)
        };
        I.toJSON = function(X, O) {
            var U = K;
            if (O) {
                U = O
            }
            var T = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
            W = {
                "\b": "\\b",
                "\t": "\\t",
                "\n": "\\n",
                "\f": "\\f",
                "\r": "\\r",
                '"': '\\"',
                "\\": "\\\\"
            };
            function M(Z) {
                return '"' + Z.replace(T,
                function(aa) {
                    var ab = W[aa];
                    return typeof ab === "string" ? ab: "\\u" + ("0000" + aa.charCodeAt(0).toString(16)).slice( - 4)
                }) + '"'
            }
            function N(Z) {
                return Z < 10 ? "0" + Z: Z
            }
            function P(aa) {
                var Z;
                if (isFinite(aa.valueOf())) {
                    Z = aa.getUTCFullYear() + "-" + N(aa.getUTCMonth() + 1) + "-" + N(aa.getUTCDate()) + "T" + N(aa.getUTCHours()) + ":" + N(aa.getUTCMinutes()) + ":" + N(aa.getUTCSeconds()) + 'Z"'
                } else {
                    Z = "null"
                }
                return Z
            }
            function Q(ac) {
                var Z = ac.length,
                aa = [],
                ab;
                for (ab = 0; ab < Z; ab++) {
                    aa.push(R(ab, ac) || "null")
                }
                return "[" + aa.join(",") + "]"
            }
            function Y(ac) {
                var aa = [],
                ab,
                Z;
                for (ab in ac) {
                    if (Object.prototype.hasOwnProperty.call(ac, ab)) {
                        if (ab != "" && X && X.indexOf(ab) === -1) {
                            continue
                        }
                        Z = R(ab, ac);
                        if (Z) {
                            aa.push(M(ab) + ":" + Z)
                        }
                    }
                }
                return "{" + aa.join(",") + "}"
            }
            function S(Z) {
                switch (Object.prototype.toString.call(Z)) {
                case "[object Date]":
                    return P(Z);
                case "[object Array]":
                    return Q(Z)
                }
                return Y(Z)
            }
            function V(aa, Z) {
                switch (Z) {
                case "string":
                    return M(aa);
                case "number":
                case "float":
                case "integer":
                case "int":
                    return isFinite(aa) ? aa: "null";
                case "boolean":
                    return aa
                }
                return "null"
            }
            function R(aa, Z) {
                var ac = Z[aa],
                ab = typeof ac;
                if (ac && typeof ac === "object" && typeof ac.toJSON === "function") {
                    ac = ac.toJSON(aa);
                    ab = typeof ac
                }
                if (/(number|float|int|integer|string|boolean)/.test(ab) || (!ac && ab === "object")) {
                    return V(ac, ab)
                } else {
                    return S(ac)
                }
            }
            if (!X && window.JSON && typeof window.JSON.stringify === "function") {
                return window.JSON.stringify(U)
            }
            return R("", {
                "": U
            })
        };
        I.defineIndexProperty = function(O) {
            if (! (O in I)) {
                var M = function(V, S, U, R) {
                    var T = V[S];
                    var Q = T;
                    var P = function() {
                        return Q
                    };
                    var W = function(ab) {
                        T = ab;
                        if (Q !== T) {
                            var aa = Q;
                            Q = T;
                            if (typeof H === "function") {
                                var Y = K.indexOf(R);
                                var Z = "";
                                var X = function(ad, ac) {
                                    Object.getOwnPropertyNames(ad).forEach(function(ae) {
                                        var af = i.type(ad[ae]);
                                        if (af == "array" || af == "object") {
                                            X(ad[ae], ac + "." + ae)
                                        } else {
                                            if (S === ae) {
                                                Z = ac + "." + ae
                                            }
                                        }
                                    })
                                };
                                X(R, Y);
                                H({
                                    object: I,
                                    type: "update",
                                    path: Z,
                                    index: Y,
                                    name: S,
                                    newValue: T,
                                    oldValue: aa
                                })
                            }
                        }
                        Q = T;
                        return T
                    };
                    if (V[S] && S != "length") {
                        if (Object.defineProperty) {
                            Object.defineProperty(V, S, {
                                get: P,
                                set: W
                            })
                        } else {
                            if (Object.prototype.__defineGetter__ && Object.prototype.__defineSetter__) {
                                Object.prototype.__defineGetter__.call(V, S, P);
                                Object.prototype.__defineSetter__.call(V, S, W)
                            }
                        }
                    }
                };
                var N = function(S, R, P) {
                    var Q = i.type(S);
                    if (/(number|float|int|integer|string|boolean)/.test(Q)) {
                        return
                    }
                    if (S === undefined) {
                        return
                    }
                    Object.getOwnPropertyNames(S).forEach(function(T) {
                        var U = i.type(S[T]);
                        if (U == "array" || U == "object") {
                            M(S, T, R + "." + T, P);
                            N(S[T], R + "." + T, P)
                        } else {
                            M(S, T, R + "." + T, P)
                        }
                    })
                };
                Object.defineProperty(I, O, {
                    configurable: true,
                    enumerable: true,
                    get: function() {
                        return K[O]
                    },
                    set: function(Q) {
                        var P = K[O];
                        if (I.toJSON(null, P) != I.toJSON(null, Q)) {
                            K[O] = Q;
                            if (typeof H === "function") {
                                H({
                                    object: I,
                                    type: "update",
                                    path: O.toString(),
                                    index: O,
                                    name: "index",
                                    newValue: Q,
                                    oldValue: P
                                })
                            }
                            N(Q, O, Q)
                        }
                    }
                });
                N(I[O], O, I[O])
            }
        };
        I.push = function() {
            var M;
            for (var N = 0,
            O = arguments.length; N < O; N++) {
                M = K.length;
                K.push(arguments[N]);
                I.defineIndexProperty(M);
                if (typeof H === "function") {
                    H({
                        object: I,
                        type: "add",
                        name: "length",
                        index: M,
                        newValue: K.length,
                        oldValue: M
                    })
                }
            }
            return K.length
        };
        I.pop = function() {
            if (~K.length) {
                var M = K.length - 1,
                N = K.pop();
                delete I[M];
                if (typeof H === "function") {
                    H({
                        object: I,
                        type: "delete",
                        name: "length",
                        index: M,
                        newValue: K.length,
                        oldValue: M
                    })
                }
                return N
            }
        };
        I.unshift = function() {
            var M = K.length;
            for (var N = 0,
            O = arguments.length; N < O; N++) {
                K.splice(N, 0, arguments[N]);
                I.defineIndexProperty(K.length - 1)
            }
            if (typeof H === "function") {
                H({
                    object: I,
                    type: "add",
                    index: 0,
                    name: "length",
                    newValue: K.length,
                    oldValue: M
                })
            }
            return K.length
        };
        I.shift = function() {
            var M = K.length;
            if (~K.length) {
                var N = K.shift();
                K.length === 0 && delete I[M];
                if (typeof H === "function") {
                    H({
                        object: I,
                        type: "delete",
                        index: M,
                        name: "length",
                        newValue: K.length,
                        oldValue: M
                    })
                }
                return N
            }
        };
        I.slice = function(Q, N, P) {
            var M = K.slice(Q, N);
            var O = new i.jqx.observableArray(M, P);
            return O
        };
        I.splice = function(Q, R, M) {
            var P = [],
            U,
            T;
            Q = !~Q ? K.length - Q: Q;
            R = (R == null ? K.length - Q: R) || 0;
            while (R--) {
                U = K.splice(Q, 1)[0];
                P.push(U);
                delete I[K.length];
                if (typeof H === "function") {
                    H({
                        object: I,
                        type: "delete",
                        index: Q,
                        name: "length",
                        newValue: -1,
                        oldValue: Q
                    })
                }
            }
            for (var N = 2,
            S = arguments.length; N < S; N++) {
                K.splice(Q, 0, arguments[N]);
                defineIndexProperty(K.length - 1);
                if (typeof H === "function") {
                    H({
                        object: I,
                        type: "add",
                        index: Q,
                        name: "length",
                        newValue: K.length - 1,
                        oldValue: Q
                    })
                }
                Q++
            }
            var O = new i.jqx.observableArray(P, M);
            return O
        };
        Object.defineProperty(I, "length", {
            configurable: false,
            enumerable: true,
            get: function() {
                return K.length
            },
            set: function(M) {
                var N = Number(M);
                if (N % 1 === 0 && N >= 0) {
                    if (N < K.length) {
                        I.splice(N)
                    } else {
                        if (N > K.length) {
                            I.push.apply(I, new Array(N - K.length))
                        }
                    }
                } else {
                    throw new RangeError("Invalid array length")
                }
                return M
            }
        });
        i.jqx.observableArray.prototype.fromArray = function(O, N) {
            var M = new i.jqx.observableArray(O, N);
            return M
        };
        i.jqx.observableArray.prototype.clone = function() {
            var M = new i.jqx.observableArray(K, J);
            M.observing = I.observing;
            M.changes = I.changes;
            M.notifier = I.notifier;
            return M
        };
        I.remove = function(N) {
            if (N < 0 || N >= I.length) {
                throw new Error("Invalid index : " + N)
            }
            if (I.hasOwnProperty(N)) {
                var M = I[N];
                I[N] = undefined;
                K[N] = undefined;
                if (typeof H === "function") {
                    H({
                        object: I,
                        type: "delete",
                        index: N,
                        name: "index",
                        newValue: undefined,
                        oldValue: M
                    })
                }
                return true
            }
            return false
        };
        I.concat = function(N, P) {
            var M = K.concat(N);
            var O = new i.jqx.observableArray(M, P);
            return O
        };
        Object.getOwnPropertyNames(Array.prototype).forEach(function(M) {
            if (! (M in I)) {
                var N = function() {
                    var Q = I.observing;
                    I.observing = false;
                    var P = K[M];
                    var O = P.apply(K, arguments);
                    I.observing = Q;
                    return O
                };
                Object.defineProperty(I, M, {
                    configurable: false,
                    enumerable: true,
                    writeable: false,
                    value: N
                })
            }
        });
        I.set = function(N, P) {
            if (i.type(N) == "string" && N.split(".").length > 1) {
                var M = N.split(".");
                var Q = I;
                for (var O = 0; O < M.length; O++) {
                    if (O === 0) {
                        if (M[O] >= I.length) {
                            throw new Error("Invalid Index: " + N)
                        }
                    }
                    if (O < M.length - 1) {
                        Q = Q[M[O]]
                    } else {
                        Q[M[O]] = P
                    }
                }
                return true
            }
            if (N >= I.length) {
                I.push(P)
            } else {
                I[N] = P
            }
            return true
        };
        I.get = function(M) {
            return I[M]
        };
        if (e instanceof Array) {
            I.push.apply(I, e)
        }
        H = function() {
            if (!I.observing) {
                return
            }
            if (arguments && arguments[0]) {
                I.changes.push(arguments[0])
            }
            if (J) {
                J.apply(I, arguments)
            }
            if (I.notifier) {
                I.notifier.apply(I, arguments)
            }
        };
        return I
    };
    i.jqx.formatDate = function(H, J, I) {
        var e = i.jqx.dataFormat.formatdate(H, J, I);
        return e
    };
    i.jqx.formatNumber = function(H, J, I) {
        var e = i.jqx.dataFormat.formatnumber(H, J, I);
        return e
    };
    i.jqx.dataAdapter = function(J, e) {
        if (J != undefined) {
            if (J.dataFields !== undefined) {
                J.datafields = J.dataFields
            }
            if (J.dataType !== undefined) {
                J.datatype = J.dataType
            }
            if (J.localData !== undefined) {
                J.localdata = J.localData
            }
            if (J.sortColumn !== undefined) {
                J.sortcolumn = J.sortColumn
            }
            if (J.sortDirection !== undefined) {
                J.sortdirection = J.sortDirection
            }
            if (J.sortOrder !== undefined) {
                J.sortdirection = J.sortOrder
            }
            if (J.formatData !== undefined) {
                J.formatdata = J.formatData
            }
            if (J.processData !== undefined) {
                J.processdata = J.processData
            }
            if (J.pageSize !== undefined) {
                J.pagesize = J.pageSize
            }
            if (J.pageNum !== undefined) {
                J.pagenum = J.pageNum
            }
            if (J.updateRow !== undefined) {
                J.updaterow = J.updateRow
            }
            if (J.addRow !== undefined) {
                J.addrow = J.addRow
            }
            if (J.deleteRow !== undefined) {
                J.deleterow = J.deleteRow
            }
            if (J.contentType !== undefined) {
                J.contenttype = J.contentType
            }
            if (J.totalRecords != undefined) {
                J.totalrecords = J.totalRecords
            }
            if (J.loadError != undefined) {
                J.loadError = J.loadError
            }
            if (J.sortComparer != undefined) {
                J.sortcomparer = J.sortComparer
            }
        }
        this._source = J;
        this._options = e || {};
        if (J.beforeLoadComplete != undefined) {
            this._options.beforeLoadComplete = this._source.beforeLoadComplete
        }
        if (J.downloadComplete != undefined) {
            this._options.downloadComplete = this._source.downloadComplete
        }
        if (J.loadComplete != undefined) {
            this._options.loadComplete = this._source.loadComplete
        }
        if (J.autoBind != undefined) {
            this._options.downloadComplete = this._source.autoBind
        }
        if (J.formatData != undefined) {
            this._options.formatData = this._source.formatData
        }
        if (J.loadError != undefined) {
            this._options.loadError = this._source.loadError
        }
        if (J.beforeSend != undefined) {
            this._options.beforeSend = this._source.beforeSend
        }
        if (J.contentType != undefined) {
            this._options.contentType = this._source.contentType
        }
        if (J.async != undefined) {
            this._options.async = this._source.async
        }
        if (J.loadServerData != undefined) {
            this._options.loadServerData = this._source.loadServerData
        }
        if (J.uniqueDataFields != undefined) {
            this._options.uniqueDataFields = this._source.uniqueDataFields
        }
        this.records = new Array();
        this._downloadComplete = new Array();
        this._bindingUpdate = new Array();
        if (J != undefined && J.localdata != null && typeof J.localdata == "function") {
            var I = J.localdata();
            if (I != null) {
                J._localdata = J.localdata;
                var H = this;
                if (J._localdata.subscribe) {
                    H._oldlocaldata = [];
                    J._localdata.subscribe(function(K) {
                        var L = function(M) {
                            if (i.isArray(M)) {
                                return i.makeArray(L(i(M)))
                            }
                            return i.extend(true, {},
                            M)
                        };
                        if (H.suspendKO == false || H.suspendKO == undefined || H._oldlocaldata.length == 0) {
                            H._oldlocaldata = L(K)
                        }
                    },
                    J._localdata, "beforeChange");
                    J._localdata.subscribe(function(L) {
                        if (H.suspendKO == false || H.suspendKO == undefined) {
                            var K = "";
                            H._oldrecords = H.records;
                            if (H._oldlocaldata.length == 0) {
                                J.localdata = J._localdata()
                            }
                            if (H._oldlocaldata.length == 0) {
                                K = "change"
                            } else {
                                if (L) {
                                    if (H._oldlocaldata.length == L.length) {
                                        K = "update"
                                    }
                                    if (H._oldlocaldata.length > L.length) {
                                        K = "remove"
                                    }
                                    if (H._oldlocaldata.length < L.length) {
                                        K = "add"
                                    }
                                }
                            }
                            H.dataBind(null, K)
                        }
                    },
                    J._localdata, "change");
                    H._knockoutdatasource = true
                }
                J.localdata = I
            }
        }
        if (this._options.autoBind == true) {
            this.dataBind()
        }
    };
    i.jqx.dataAdapter.prototype = {
        getrecords: function() {
            return this.records
        },
        beginUpdate: function() {
            this.isUpdating = true
        },
        endUpdate: function(e) {
            this.isUpdating = false;
            if (e != false) {
                if (this._changedrecords && this._changedrecords.length > 0) {
                    this.callBindingUpdate("update");
                    this._changedrecords = []
                } else {
                    this.dataBind(null, "")
                }
            }
        },
        formatDate: function(H, J, I) {
            var e = i.jqx.dataFormat.formatdate(H, J, I);
            return e
        },
        formatNumber: function(H, J, I) {
            var e = i.jqx.dataFormat.formatnumber(H, J, I);
            return e
        },
        dataBind: function(R, Z) {
            if (this.isUpdating == true) {
                return
            }
            var W = this._source;
            if (!W) {
                return
            }
            if (W.generatedfields) {
                W.datafields = null;
                W.generatedfields = null
            }
            i.jqx.dataFormat.datescache = new Array();
            if (W.dataFields != null) {
                W.datafields = W.dataFields
            }
            if (W.recordstartindex == undefined) {
                W.recordstartindex = 0
            }
            if (W.recordendindex == undefined) {
                W.recordendindex = 0
            }
            if (W.loadallrecords == undefined) {
                W.loadallrecords = true
            }
            if (W.root == undefined) {
                W.root = ""
            }
            if (W.record == undefined) {
                W.record = ""
            }
            if (W.sort != undefined) {
                this.sort = W.sort
            }
            if (W.filter != undefined) {
                this.filter = W.filter
            } else {
                this.filter = null
            }
            if (W.sortcolumn != undefined) {
                this.sortcolumn = W.sortcolumn
            }
            if (W.sortdirection != undefined) {
                this.sortdirection = W.sortdirection
            }
            if (W.sortcomparer != undefined) {
                this.sortcomparer = W.sortcomparer
            }
            this.records = new Array();
            var K = this._options || {};
            this.virtualmode = K.virtualmode != undefined ? K.virtualmode: false;
            this.totalrecords = K.totalrecords != undefined ? K.totalrecords: 0;
            this.pageable = K.pageable != undefined ? K.pageable: false;
            this.pagesize = K.pagesize != undefined ? K.pagesize: 0;
            this.pagenum = K.pagenum != undefined ? K.pagenum: 0;
            this.cachedrecords = K.cachedrecords != undefined ? K.cachedrecords: new Array();
            this.originaldata = new Array();
            this.recordids = new Array();
            this.updaterow = K.updaterow != undefined ? K.updaterow: null;
            this.addrow = K.addrow != undefined ? K.addrow: null;
            this.deleterow = K.deleterow != undefined ? K.deleterow: null;
            this.cache = K.cache != undefined ? K.cache: false;
            this.unboundmode = false;
            if (W.formatdata != undefined) {
                K.formatData = W.formatdata
            }
            if (W.data != undefined) {
                if (K.data == undefined) {
                    K.data = {}
                }
                i.extend(K.data, W.data)
            }
            if (W.mapchar != undefined) {
                this.mapChar = W.mapchar ? W.mapchar: ">"
            } else {
                this.mapChar = K.mapChar ? K.mapChar: ">"
            }
            if (K.unboundmode || W.unboundmode) {
                this.unboundmode = K.unboundmode || W.unboundmode
            }
            if (W.cache != undefined) {
                this.cache = W.cache
            }
            if (this.koSubscriptions) {
                for (var ab = 0; ab < this.koSubscriptions.length; ab++) {
                    this.koSubscriptions[ab].dispose()
                }
            }
            this.koSubscriptions = new Array();
            if (this.pagenum < 0) {
                this.pagenum = 0
            }
            var ag = this;
            var Q = W.datatype;
            if (W.datatype === "csv" || W.datatype === "tab" || W.datatype === "tsv" || W.datatype == "text") {
                Q = "text"
            }
            var N = K.async != undefined ? K.async: true;
            if (W.async != undefined) {
                N = W.async
            }
            switch (Q) {
            case "local":
            case "array":
            case "observablearray":
            case "observableArray":
            default:
                if (W.localdata == undefined && W.length) {
                    W.localdata = new Array();
                    for (var Y = 0; Y < W.length; Y++) {
                        W.localdata[W.localdata.length] = W[Y];
                        W[Y].uid = Y
                    }
                }
                if (W.beforeprocessing && i.isFunction(W.beforeprocessing)) {
                    W.beforeprocessing(W.localdata)
                }
                var M = W.localdata.length;
                this.totalrecords = this.virtualmode ? (W.totalrecords || M) : M;
                if (this.unboundmode) {
                    this.totalrecords = this.unboundmode ? (W.totalrecords || M) : M;
                    var ac = W.datafields ? W.datafields.length: 0;
                    if (ac > 0) {
                        for (var Y = 0; Y < this.totalrecords; Y++) {
                            var I = {};
                            for (var X = 0; X < ac; X++) {
                                I[W.datafields[X].name] = ""
                            }
                            I.uid = Y;
                            W.localdata[W.localdata.length] = I
                        }
                    }
                }
                if (this.totalrecords == undefined) {
                    this.totalrecords = 0
                }
                var ac = W.datafields ? W.datafields.length: 0;
                var H = function(an, ap) {
                    var ao = {};
                    for (var al = 0; al < ap; al++) {
                        var ak = W.datafields ? W.datafields[al] : {};
                        var aq = "";
                        if (undefined == ak || ak == null) {
                            continue
                        }
                        if (ak.map) {
                            if (i.isFunction(ak.map)) {
                                aq = ak.map(an)
                            } else {
                                var ai = ak.map.split(ag.mapChar);
                                if (ai.length > 0) {
                                    var am = an;
                                    for (var aj = 0; aj < ai.length; aj++) {
                                        if (!am) {
                                            continue
                                        }
                                        am = am[ai[aj]]
                                    }
                                    aq = am
                                } else {
                                    aq = an[ak.map]
                                }
                            }
                            if (aq != undefined && aq != null) {
                                aq = aq.toString()
                            } else {
                                if (aq == undefined && aq != null) {
                                    aq = ""
                                }
                            }
                        }
                        var ar = false;
                        if (aq == "") {
                            ar = true;
                            aq = an[ak.name];
                            if (aq != undefined && aq != null) {
                                if (W._localdata && aq.subscribe) {
                                    aq = aq()
                                } else {
                                    if (ak.type != "array") {
                                        aq = aq.toString()
                                    }
                                }
                            }
                        }
                        if (aq == "[object Object]" && ak.map && ar) {
                            aq = ""
                        }
                        aq = ag.getvaluebytype(aq, ak);
                        if (ak.displayname != undefined) {
                            ao[ak.displayname] = aq
                        } else {
                            ao[ak.name] = aq
                        }
                    }
                    return ao
                };
                if (W._localdata) {
                    this._changedrecords = [];
                    this.records = new Array();
                    var af = W._localdata();
                    i.each(af,
                    function(al, ao) {
                        if (typeof ao === "string") {
                            ag.records.push(ao)
                        } else {
                            var aj = {};
                            var an = 0;
                            var am = this;
                            i.each(this,
                            function(ax, aC) {
                                var ar = null;
                                var aD = "string";
                                var aB = ax;
                                if (ac > 0) {
                                    var aF = false;
                                    var aA = false;
                                    for (var aw = 0; aw < ac; aw++) {
                                        var av = W.datafields[aw];
                                        if (av != undefined && (av.name == ax)) {
                                            aF = true;
                                            ar = av.map;
                                            aD = av.type;
                                            aB = av.name;
                                            break
                                        } else {
                                            if (av != undefined && av.map && (av.map.indexOf(ax) >= 0)) {
                                                aF = true;
                                                ar = av.map;
                                                aD = av.type;
                                                aB = av.name;
                                                aA = true;
                                                var aE = am[ax];
                                                if (ar != null) {
                                                    var aq = ar.split(ag.mapChar);
                                                    if (aq.length > 0) {
                                                        var ay = am;
                                                        for (var at = 0; at < aq.length; at++) {
                                                            ay = ay[aq[at]]
                                                        }
                                                        aE = ay
                                                    } else {
                                                        aE = am[ar]
                                                    }
                                                }
                                                if (aD != "string") {
                                                    aE = ag.getvaluebytype(aE, {
                                                        type: aD
                                                    })
                                                }
                                                aj[aB] = aE;
                                                if (aj[aB] != undefined) {
                                                    an += aj[aB].toString().length + aj[aB].toString().substr(0, 1)
                                                }
                                            }
                                        }
                                    }
                                    if (!aF) {
                                        return true
                                    }
                                    if (aA) {
                                        return true
                                    }
                                }
                                var au = i.isFunction(am[ax]);
                                if (au) {
                                    var aE = am[ax]();
                                    if (aD != "string") {
                                        aE = ag.getvaluebytype(aE, {
                                            type: aD
                                        })
                                    }
                                    aj[ax] = aE;
                                    if (am[ax].subscribe) {
                                        var az = al;
                                        ag.koSubscriptions[ag.koSubscriptions.length] = am[ax].subscribe(function(aH) {
                                            var aG = az;
                                            aj[ax] = aH;
                                            var aI = {
                                                index: aG,
                                                oldrecord: aj,
                                                record: aj
                                            };
                                            ag._changedrecords.push(aI);
                                            if (ag.isUpdating) {
                                                return
                                            }
                                            ag.callBindingUpdate("update");
                                            ag._changedrecords = [];
                                            return false
                                        })
                                    }
                                } else {
                                    var aE = am[ax];
                                    if (ar != null) {
                                        var aq = ar.split(ag.mapChar);
                                        if (aq.length > 0) {
                                            var ay = am;
                                            for (var at = 0; at < aq.length; at++) {
                                                ay = ay[aq[at]]
                                            }
                                            aE = ay
                                        } else {
                                            aE = am[ar]
                                        }
                                    }
                                    if (aD != "string") {
                                        aE = ag.getvaluebytype(aE, {
                                            type: aD
                                        })
                                    }
                                    aj[aB] = aE;
                                    if (aj[aB] != undefined) {
                                        an += aj[aB].toString().length + aj[aB].toString().substr(0, 1)
                                    }
                                }
                            });
                            var ak = ag.getid(W.id, am, al);
                            aj.uid = ak;
                            ag.records.push(aj);
                            aj._koindex = an;
                            if (ag._oldrecords) {
                                var ai = ag.records.length - 1;
                                if (Z == "update") {
                                    if (ag._oldrecords[ai]._koindex != an) {
                                        var ap = {
                                            index: ai,
                                            oldrecord: ag._oldrecords[ai],
                                            record: aj
                                        };
                                        ag._changedrecords.push(ap)
                                    }
                                }
                            }
                        }
                    });
                    if (Z == "add") {
                        var M = ag.records.length;
                        for (var Y = 0; Y < M; Y++) {
                            var I = ag.records[Y];
                            var L = false;
                            for (var U = 0; U < ag._oldrecords.length; U++) {
                                if (ag._oldrecords[U]._koindex === I._koindex) {
                                    L = true;
                                    break
                                }
                            }
                            if (!L) {
                                ag._changedrecords.push({
                                    index: Y,
                                    oldrecord: null,
                                    record: I,
                                    position: (Y != 0 ? "last": "first")
                                })
                            }
                        }
                    } else {
                        if (Z == "remove") {
                            var M = ag._oldrecords.length;
                            for (var Y = 0; Y < M; Y++) {
                                var P = ag._oldrecords[Y];
                                if (!ag.records[Y]) {
                                    ag._changedrecords.push({
                                        index: Y,
                                        oldrecord: P,
                                        record: null
                                    })
                                } else {
                                    if (ag.records[Y]._koindex != P._koindex) {
                                        ag._changedrecords.push({
                                            index: Y,
                                            oldrecord: P,
                                            record: null
                                        })
                                    }
                                }
                            }
                        }
                    }
                } else {
                    if (!i.isArray(W.localdata)) {
                        this.records = new Array();
                        var V = 0;
                        var T = new Array();
                        i.each(W.localdata,
                        function(ak) {
                            var aj = ag.getid(W.id, this, ak);
                            if (ac == 0) {
                                if (! (typeof this === "string" || this instanceof String)) {
                                    for (var am in this) {
                                        V++;
                                        var an = i.type(this[am]);
                                        T.push({
                                            name: am,
                                            type: an
                                        })
                                    }
                                    ac = V;
                                    W.datafields = T;
                                    W.generatedfields = T
                                }
                            }
                            if (ac > 0) {
                                var ai = this;
                                var al = H(ai, ac);
                                al.uid = aj;
                                ag.records[ag.records.length] = al
                            } else {
                                this.uid = aj;
                                ag.records[ag.records.length] = this
                            }
                        })
                    } else {
                        if (ac == 0) {
                            var V = 0;
                            var T = new Array();
                            i.each(W.localdata,
                            function(ak, am) {
                                var ai = i.extend({},
                                this);
                                if (typeof am === "string") {
                                    ag.records = W.localdata;
                                    return false
                                } else {
                                    var aj = ag.getid(W.id, ai, ak);
                                    if (typeof(aj) === "object") {
                                        aj = ak
                                    }
                                    ai.uid = aj;
                                    if (ak == 0) {
                                        for (var an in this) {
                                            V++;
                                            var ao = i.type(this[an]);
                                            T.push({
                                                name: an,
                                                type: ao
                                            })
                                        }
                                        ac = V;
                                        W.datafields = T;
                                        W.generatedfields = T
                                    }
                                    if (ac > 0) {
                                        var al = H(ai, ac);
                                        al.uid = aj;
                                        ag.records[ag.records.length] = al
                                    } else {
                                        ag.records[ag.records.length] = ai
                                    }
                                }
                            })
                        } else {
                            i.each(W.localdata,
                            function(ak) {
                                var ai = this;
                                var al = H(ai, ac);
                                var aj = ag.getid(W.id, al, ak);
                                if (typeof(aj) === "object") {
                                    aj = ak
                                }
                                var ai = i.extend({},
                                al);
                                ai.uid = aj;
                                ag.records[ag.records.length] = ai
                            })
                        }
                    }
                }
                this.originaldata = W.localdata;
                this.cachedrecords = this.records;
                this.addForeignValues(W);
                if (K.uniqueDataFields) {
                    var S = this.getUniqueRecords(this.records, K.uniqueDataFields);
                    this.records = S;
                    this.cachedrecords = S
                }
                if (K.beforeLoadComplete) {
                    var ad = K.beforeLoadComplete(ag.records, this.originaldata);
                    if (ad != undefined) {
                        ag.records = ad;
                        ag.cachedrecords = ad
                    }
                }
                if (K.autoSort && K.autoSortField) {
                    var O = Object.prototype.toString;
                    Object.prototype.toString = (typeof field == "function") ? field: function() {
                        return this[K.autoSortField]
                    };
                    ag.records.sort(function(aj, ai) {
                        if (aj === undefined) {
                            aj = null
                        }
                        if (ai === undefined) {
                            ai = null
                        }
                        if (aj === null && ai === null) {
                            return 0
                        }
                        if (aj === null && ai !== null) {
                            return 1
                        }
                        if (aj !== null && ai === null) {
                            return - 1
                        }
                        aj = aj.toString();
                        ai = ai.toString();
                        if (aj === null && ai === null) {
                            return 0
                        }
                        if (aj === null && ai !== null) {
                            return 1
                        }
                        if (aj !== null && ai === null) {
                            return - 1
                        }
                        if (i.jqx.dataFormat.isNumber(aj) && i.jqx.dataFormat.isNumber(ai)) {
                            if (aj < ai) {
                                return - 1
                            }
                            if (aj > ai) {
                                return 1
                            }
                            return 0
                        } else {
                            if (i.jqx.dataFormat.isDate(aj) && i.jqx.dataFormat.isDate(ai)) {
                                if (aj < ai) {
                                    return - 1
                                }
                                if (aj > ai) {
                                    return 1
                                }
                                return 0
                            } else {
                                if (!i.jqx.dataFormat.isNumber(aj) && !i.jqx.dataFormat.isNumber(ai)) {
                                    aj = String(aj).toLowerCase();
                                    ai = String(ai).toLowerCase()
                                }
                            }
                        }
                        try {
                            if (aj < ai) {
                                return - 1
                            }
                            if (aj > ai) {
                                return 1
                            }
                        } catch(ak) {
                            var al = ak
                        }
                        return 0
                    });
                    Object.prototype.toString = O
                }
                ag.loadedData = W.localdata;
                ag.buildHierarchy();
                if (i.isFunction(K.loadComplete)) {
                    K.loadComplete(W.localdata, ag.records)
                }
                break;
            case "json":
            case "jsonp":
            case "xml":
            case "xhtml":
            case "script":
            case "text":
                if (W.localdata != null) {
                    if (i.isFunction(W.beforeprocessing)) {
                        W.beforeprocessing(W.localdata)
                    }
                    if (W.datatype === "xml") {
                        ag.loadxml(W.localdata, W.localdata, W)
                    } else {
                        if (Q === "text") {
                            ag.loadtext(W.localdata, W)
                        } else {
                            ag.loadjson(W.localdata, W.localdata, W)
                        }
                    }
                    ag.addForeignValues(W);
                    if (K.uniqueDataFields) {
                        var S = ag.getUniqueRecords(ag.records, K.uniqueDataFields);
                        ag.records = S;
                        ag.cachedrecords = S
                    }
                    if (K.beforeLoadComplete) {
                        var ad = K.beforeLoadComplete(ag.records, this.originaldata);
                        if (ad != undefined) {
                            ag.records = ad;
                            ag.cachedrecords = ad
                        }
                    }
                    ag.loadedData = W.localdata;
                    ag.buildHierarchy.call(ag);
                    if (i.isFunction(K.loadComplete)) {
                        K.loadComplete(W.localdata, ag.records)
                    }
                    ag.callBindingUpdate(Z);
                    return
                }
                var ae = K.data != undefined ? K.data: {};
                if (W.processdata) {
                    W.processdata(ae)
                }
                if (i.isFunction(K.processData)) {
                    K.processData(ae)
                }
                if (i.isFunction(K.formatData)) {
                    var e = K.formatData(ae);
                    if (e != undefined) {
                        ae = e
                    }
                }
                var aa = "application/x-www-form-urlencoded";
                if (K.contentType) {
                    aa = K.contentType
                }
                var J = "GET";
                if (W.type) {
                    J = W.type
                }
                if (K.type) {
                    J = K.type
                }
                if (W.url && W.url.length > 0) {
                    if (i.isFunction(K.loadServerData)) {
                        ag._requestData(ae, W, K)
                    } else {
                        this.xhr = i.jqx.data.ajax({
                            dataType: Q,
                            cache: this.cache,
                            type: J,
                            url: W.url,
                            async: N,
                            timeout: W.timeout,
                            contentType: aa,
                            data: ae,
                            success: function(al, ai, ao) {
                                if (i.isFunction(W.beforeprocessing)) {
                                    var an = W.beforeprocessing(al, ai, ao);
                                    if (an != undefined) {
                                        al = an
                                    }
                                }
                                if (i.isFunction(K.downloadComplete)) {
                                    var an = K.downloadComplete(al, ai, ao);
                                    if (an != undefined) {
                                        al = an
                                    }
                                }
                                if (al == null) {
                                    ag.records = new Array();
                                    ag.cachedrecords = new Array();
                                    ag.originaldata = new Array();
                                    ag.callDownloadComplete();
                                    if (i.isFunction(K.loadComplete)) {
                                        K.loadComplete(new Array())
                                    }
                                    return
                                }
                                var aj = al;
                                if (al.records) {
                                    aj = al.records
                                }
                                if (al.totalrecords != undefined) {
                                    W.totalrecords = al.totalrecords
                                } else {
                                    if (al.totalRecords != undefined) {
                                        W.totalrecords = al.totalRecords
                                    }
                                }
                                if (W.datatype === "xml") {
                                    ag.loadxml(null, aj, W)
                                } else {
                                    if (Q === "text") {
                                        ag.loadtext(aj, W)
                                    } else {
                                        ag.loadjson(null, aj, W)
                                    }
                                }
                                ag.addForeignValues(W);
                                if (K.uniqueDataFields) {
                                    var ak = ag.getUniqueRecords(ag.records, K.uniqueDataFields);
                                    ag.records = ak;
                                    ag.cachedrecords = ak
                                }
                                if (K.beforeLoadComplete) {
                                    var am = K.beforeLoadComplete(ag.records, al);
                                    if (am != undefined) {
                                        ag.records = am;
                                        ag.cachedrecords = am
                                    }
                                }
                                ag.loadedData = al;
                                ag.buildHierarchy.call(ag);
                                ag.callDownloadComplete();
                                if (i.isFunction(K.loadComplete)) {
                                    K.loadComplete(al, ai, ao, ag.records)
                                }
                            },
                            error: function(ak, ai, aj) {
                                if (i.isFunction(W.loaderror)) {
                                    W.loaderror(ak, ai, aj)
                                }
                                if (i.isFunction(K.loadError)) {
                                    K.loadError(ak, ai, aj)
                                }
                                ak = null;
                                ag.callDownloadComplete()
                            },
                            beforeSend: function(aj, ai) {
                                if (i.isFunction(K.beforeSend)) {
                                    K.beforeSend(aj, ai)
                                }
                                if (i.isFunction(W.beforesend)) {
                                    W.beforesend(aj, ai)
                                }
                            }
                        })
                    }
                } else {
                    ag.buildHierarchy(new Array());
                    ag.callDownloadComplete();
                    if (i.isFunction(K.loadComplete)) {
                        if (!ah) {
                            var ah = {}
                        }
                        K.loadComplete(ah)
                    }
                }
                break
            }
            this.callBindingUpdate(Z)
        },
        buildHierarchy: function(K) {
            var e = this._source;
            var P = new Array();
            if (!e.datafields) {
                return
            }
            if (e.hierarchy && !e.hierarchy.reservedNames) {
                e.hierarchy.reservedNames = {
                    leaf: "leaf",
                    parent: "parent",
                    expanded: "expanded",
                    checked: "checked",
                    selected: "selected",
                    level: "level",
                    icon: "icon",
                    data: "data"
                }
            } else {
                if (e.hierarchy) {
                    var O = e.hierarchy.reservedNames;
                    if (!O.leaf) {
                        O.leaf = "leaf"
                    }
                    if (!O.parent) {
                        O.parent = "parent"
                    }
                    if (!O.expanded) {
                        O.expanded = "expanded"
                    }
                    if (!O.checked) {
                        O.checked = "checked"
                    }
                    if (!O.selected) {
                        O.selected = "selected"
                    }
                    if (!O.level) {
                        O.level = "level"
                    }
                    if (!O.data) {
                        O.data = "data"
                    }
                }
            }
            if (!e.hierarchy) {
                return
            }
            var N = this;
            var O = e.hierarchy.reservedNames;
            if (e.hierarchy.root) {
                if (e.dataType == "xml") {
                    var P = this.getRecordsHierarchy("uid", "parentuid", "records", null, K);
                    this.hierarchy = P;
                    return P
                } else {
                    this.hierarchy = this.records;
                    var R = e.hierarchy.root;
                    for (var L = 0; L < this.records.length; L++) {
                        var M = this.records[L];
                        if (!M) {
                            continue
                        }
                        var H = function(S) {
                            if (e.hierarchy.record) {
                                S.records = S[R][e.hierarchy.record]
                            } else {
                                var U = R.split(N.mapChar);
                                var T = null;
                                if (U.length > 1) {
                                    var W = S;
                                    for (var V = 0; V < U.length; V++) {
                                        if (W != undefined) {
                                            W = W[U[V]]
                                        }
                                    }
                                    T = W
                                } else {
                                    T = S[R]
                                }
                                S.records = T
                            }
                            if (S.records == null || (S.records && S.records.length == 0)) {
                                S[O.leaf] = true
                            }
                        };
                        H(M);
                        M[O.level] = 0;
                        var I = this.getid(e.id, M, L);
                        M.uid = I;
                        M[O.parent] = null;
                        M[O.data] = M;
                        if (M[O.expanded] === undefined) {
                            M[O.expanded] = false
                        }
                        var Q = function(W, U) {
                            if (!U) {
                                W.records = new Array();
                                return
                            }
                            for (var V = 0; V < U.length; V++) {
                                var S = U[V];
                                if (!S) {
                                    continue
                                }
                                H(S);
                                S[O.level] = W[O.level] + 1;
                                S[O.parent] = W;
                                S[O.data] = S;
                                var T = N.getid(e.id, S, V);
                                if (T == V && e.id == null) {
                                    S.uid = W.uid + "_" + T
                                } else {
                                    S.uid = T
                                }
                                if (S[O.expanded] === undefined) {
                                    S[O.expanded] = false
                                }
                                Q(S, S.records)
                            }
                        };
                        Q(M, M.records)
                    }
                }
                return this.hierarchy
            }
            if (e.hierarchy.keyDataField && e.hierarchy.parentDataField) {
                var P = this.getRecordsHierarchy(e.hierarchy.keyDataField.name, e.hierarchy.parentDataField.name, "records", null, K);
                this.hierarchy = P;
                return P
            }
            if (e.hierarchy.groupingDataFields) {
                var J = new Array();
                for (var L = 0; L < e.hierarchy.groupingDataFields.length; L++) {
                    J.push(e.hierarchy.groupingDataFields[L].name)
                }
                var P = this.getGroupedRecords(J, "records", "label", null, "data", null, "parent", K);
                this.hierarchy = P;
                return P
            }
        },
        addRecord: function(H, e, M, I) {
            var J = this;
            var N = function() {
                return {
                    leaf: "leaf",
                    parent: "parent",
                    expanded: "expanded",
                    checked: "checked",
                    selected: "selected",
                    level: "level",
                    icon: "icon",
                    data: "data"
                }
            };
            if (H != undefined) {
                if (M != undefined) {
                    if (this.hierarchy.length > 0) {
                        var K = function(O) {
                            if (O) {
                                for (var P = 0; P < O.length; P++) {
                                    var Q = O[P];
                                    if (Q.uid == M) {
                                        var R = (J._source && J._source.hierarchy) ? J._source.hierarchy.reservedNames: null;
                                        if (R == null) {
                                            R = N()
                                        }
                                        H[R.parent] = Q;
                                        H[R.level] = Q[R.level] + 1;
                                        if (!Q.records) {
                                            Q.records = new Array();
                                            Q[R.leaf] = false
                                        } else {
                                            Q[R.leaf] = false
                                        }
                                        if (e == "last") {
                                            Q.records.push(H)
                                        } else {
                                            if (typeof e === "number" && isFinite(e)) {
                                                Q.records.splice(e, 0, H)
                                            } else {
                                                Q.records.splice(0, 0, H)
                                            }
                                        }
                                        return true
                                    }
                                    if (Q.records) {
                                        K(Q.records)
                                    }
                                }
                            }
                        };
                        K(this.hierarchy)
                    }
                } else {
                    if (this.hierarchy && this.hierarchy.length >= 0 && (this._source.hierarchy || I)) {
                        var L = (J._source && J._source.hierarchy) ? J._source.hierarchy.reservedNames: null;
                        if (L == null) {
                            L = N()
                        }
                        H[L.level] = 0;
                        if (e == "last") {
                            this.hierarchy.push(H)
                        } else {
                            if (typeof e === "number" && isFinite(e)) {
                                this.hierarchy.splice(e, 0, H)
                            } else {
                                this.hierarchy.splice(0, 0, H)
                            }
                        }
                    } else {
                        if (e == "last") {
                            this.records.push(H)
                        } else {
                            if (typeof e === "number" && isFinite(e)) {
                                this.records.splice(e, 0, H)
                            } else {
                                this.records.splice(0, 0, H)
                            }
                        }
                    }
                    return true
                }
            }
            return false
        },
        deleteRecord: function(H) {
            var J = this;
            if (this.hierarchy.length > 0) {
                var K = function(L) {
                    if (L) {
                        for (var O = 0; O < L.length; O++) {
                            var P = L[O];
                            if (P.uid == H) {
                                L.splice(O, 1);
                                if (J.recordids[H]) {
                                    delete J.recordids[H]
                                }
                                var N = function(T) {
                                    for (var Q = 0; Q < T.length; Q++) {
                                        var S = T[Q].uid;
                                        for (var R = 0; R < J.records.length; R++) {
                                            var U = J.records[R];
                                            if (U.uid == S) {
                                                J.records.splice(R, 1);
                                                break
                                            }
                                        }
                                        if (T[Q].records) {
                                            N(T[Q].records)
                                        }
                                    }
                                };
                                if (P.records) {
                                    N(P.records)
                                }
                                for (var M = 0; M < J.records.length; M++) {
                                    var P = J.records[M];
                                    if (P.uid == H) {
                                        J.records.splice(M, 1);
                                        break
                                    }
                                }
                                return true
                            }
                            if (P.records) {
                                K(P.records)
                            }
                        }
                    }
                };
                K(this.hierarchy)
            } else {
                for (var e = 0; e < this.records.length; e++) {
                    var I = this.records[e];
                    if (I.uid == H) {
                        this.records.splice(e, 1);
                        return true
                    }
                }
            }
            return false
        },
        addForeignValues: function(H) {
            var Q = this;
            var V = H.datafields ? H.datafields.length: 0;
            for (var N = 0; N < V; N++) {
                var L = H.datafields[N];
                if (L != undefined) {
                    if (L.values != undefined) {
                        if (L.value == undefined) {
                            L.value = L.name
                        }
                        if (L.values.value == undefined) {
                            L.values.value = L.value
                        }
                        var T = new Array();
                        var K, M;
                        if (Q.pageable && Q.virtualmode) {
                            K = Q.pagenum * Q.pagesize;
                            M = K + Q.pagesize;
                            if (M > Q.totalrecords) {
                                M = Q.totalrecords
                            }
                        } else {
                            if (Q.virtualmode) {
                                K = H.recordstartindex;
                                M = H.recordendindex;
                                if (M > Q.totalrecords) {
                                    M = Q.totalrecords
                                }
                            } else {
                                K = 0;
                                M = Q.records.length
                            }
                        }
                        for (var O = K; O < M; O++) {
                            var P = Q.records[O];
                            var I = L.name;
                            var U = P[L.value];
                            if (T[U] != undefined) {
                                P[I] = T[U]
                            } else {
                                for (var J = 0; J < L.values.source.length; J++) {
                                    var S = L.values.source[J];
                                    var e = S[L.values.value];
                                    if (e == undefined) {
                                        e = S.uid
                                    }
                                    if (e == U) {
                                        var R = S[L.values.name];
                                        P[I] = R;
                                        T[U] = R;
                                        break
                                    }
                                }
                            }
                        }
                    } else {
                        if (L.value != undefined) {
                            for (var O = 0; O < Q.records.length; O++) {
                                var P = Q.records[O];
                                P[L.name] = P[L.value]
                            }
                        }
                    }
                }
            }
        },
        abort: function() {
            if (this.xhr && this.xhr.readyState != 4) {
                this.xhr.abort();
                me.callDownloadComplete()
            }
        },
        _requestData: function(H, J, e) {
            var I = this;
            var K = function(P) {
                if (P.totalrecords) {
                    J.totalrecords = P.totalrecords;
                    I.totalrecords = P.totalrecords
                }
                if (P.records) {
                    I.records = P.records;
                    I.cachedrecords = P.records
                }
                I.addForeignValues(J);
                if (e.uniqueDataFields) {
                    var N = I.getUniqueRecords(I.records, e.uniqueDataFields);
                    I.records = N;
                    I.cachedrecords = N
                }
                if (e.beforeLoadComplete) {
                    var O = e.beforeLoadComplete(I.records, data);
                    if (O != undefined) {
                        I.records = O;
                        I.cachedrecords = O
                    }
                }
                for (var M = 0; M < I.records.length; M++) {
                    var L = I.records[M];
                    if (undefined == L) {
                        continue
                    }
                    if (undefined == L.uid) {
                        L.uid = I.getid(J.id, L, M)
                    }
                }
                I.buildHierarchy.call(I);
                if (i.isFunction(e.loadComplete)) {
                    e.loadComplete(P)
                }
                I.callDownloadComplete()
            };
            e.loadServerData(H, J, K)
        },
        getUniqueRecords: function(I, L) {
            if (I && L) {
                var e = I.length;
                var Q = L.length;
                var N = new Array();
                var O = new Array();
                for (var P = 0; P < e; P++) {
                    var M = I[P];
                    var J = "";
                    if (M == undefined) {
                        continue
                    }
                    for (var K = 0; K < Q; K++) {
                        var H = L[K];
                        J += M[H] + "_"
                    }
                    if (!O[J]) {
                        N[N.length] = M
                    }
                    O[J] = true
                }
            }
            return N
        },
        getAggregatedData: function(S, P, M, H) {
            var L = M;
            if (!L) {
                L = this.records
            }
            var Q = {};
            var K = new Array();
            var J = L.length;
            if (J == 0) {
                return
            }
            if (J == undefined) {
                return
            }
            for (var O = 0; O < J; O++) {
                var R = L[O];
                for (var N = 0; N < S.length; N++) {
                    var I = S[N];
                    var U = R[I.name];
                    if (I.aggregates) {
                        Q[I.name] = Q[I.name] || {};
                        K[I.name] = K[I.name] || 0;
                        K[I.name]++;
                        var e = function(W) {
                            for (obj in W) {
                                var X = Q[I.name][obj];
                                if (X == null) {
                                    Q[I.name][obj] = 0;
                                    X = 0
                                }
                                if (i.isFunction(W[obj])) {
                                    X = W[obj](X, U, I.name, R, H)
                                }
                                Q[I.name][obj] = X
                            }
                        };
                        var T = parseFloat(U);
                        if (isNaN(T)) {
                            T = false
                        } else {
                            T = true
                        }
                        if (T) {
                            U = parseFloat(U)
                        }
                        if (typeof U === "number" && isFinite(U)) {
                            i.each(I.aggregates,
                            function() {
                                var W = Q[I.name][this];
                                if (W == null) {
                                    W = 0;
                                    if (this == "min") {
                                        W = 9999999999999
                                    }
                                    if (this == "max") {
                                        W = -9999999999999
                                    }
                                }
                                if (this == "sum" || this == "avg" || this == "stdev" || this == "stdevp" || this == "var" || this == "varp") {
                                    W += parseFloat(U)
                                } else {
                                    if (this == "product") {
                                        if (O == 0) {
                                            W = parseFloat(U)
                                        } else {
                                            W *= parseFloat(U)
                                        }
                                    } else {
                                        if (this == "min") {
                                            W = Math.min(W, parseFloat(U))
                                        } else {
                                            if (this == "max") {
                                                W = Math.max(W, parseFloat(U))
                                            } else {
                                                if (this == "count") {
                                                    W++
                                                } else {
                                                    if (typeof(this) == "object") {
                                                        e(this);
                                                        return
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                Q[I.name][this] = W
                            })
                        } else {
                            i.each(I.aggregates,
                            function() {
                                if (this == "min" || this == "max" || this == "count" || this == "product" || this == "sum" || this == "avg" || this == "stdev" || this == "stdevp" || this == "var" || this == "varp") {
                                    if (U === null) {
                                        return true
                                    }
                                    var W = Q[I.name][this];
                                    if (W == null) {
                                        W = 0
                                    }
                                    Q[I.name][this] = W;
                                    return true
                                }
                                if (typeof(this) == "object") {
                                    e(this)
                                }
                            })
                        }
                    }
                }
            }
            for (var N = 0; N < S.length; N++) {
                var I = S[N];
                if (!Q[I.name]) {
                    Q[I.name] = {};
                    i.each(I.aggregates,
                    function(W) {
                        Q[I.name][this] = 0
                    })
                }
                if (Q[I.name]["avg"] != undefined) {
                    var U = Q[I.name]["avg"];
                    var V = K[I.name];
                    if (V === 0 || V == undefined) {
                        Q[I.name]["avg"] = 0
                    } else {
                        Q[I.name]["avg"] = U / V
                    }
                } else {
                    if (Q[I.name]["count"] != undefined) {
                        Q[I.name]["count"] = J
                    }
                }
                if (Q[I.name]["stdev"] || Q[I.name]["stdevp"] || Q[I.name]["var"] || Q[I.name]["varp"]) {
                    i.each(I.aggregates,
                    function(ac) {
                        if (this == "stdev" || this == "var" || this == "varp" || this == "stdevp") {
                            var ad = Q[I.name][this];
                            var ab = J;
                            var W = (ad / J);
                            var Y = 0;
                            for (var Z = 0; Z < J; Z++) {
                                var aa = L[Z];
                                var ae = aa[I.name];
                                Y += (ae - W) * (ae - W)
                            }
                            var X = (this == "stdevp" || this == "varp") ? ab: ab - 1;
                            if (X == 0) {
                                X = 1
                            }
                            if (this == "var" || this == "varp") {
                                Q[I.name][this] = Y / X
                            } else {
                                if (this == "stdevp" || this == "stdev") {
                                    Q[I.name][this] = Math.sqrt(Y / X)
                                }
                            }
                        }
                    })
                }
                if (I.formatStrings) {
                    i.each(I.aggregates,
                    function(X) {
                        var W = I.formatStrings[X];
                        if (W) {
                            if (this == "min" || this == "max" || this == "count" || this == "product" || this == "sum" || this == "avg" || this == "stdev" || this == "stdevp" || this == "var" || this == "varp") {
                                var Y = Q[I.name][this];
                                Q[I.name][this] = i.jqx.dataFormat.formatnumber(Y, W, P)
                            } else {
                                if (typeof this == "object") {
                                    for (obj in this) {
                                        var Y = Q[I.name][obj];
                                        Q[I.name][obj] = i.jqx.dataFormat.formatnumber(Y, W, P)
                                    }
                                }
                            }
                        }
                    })
                }
            }
            return Q
        },
        bindDownloadComplete: function(H, e) {
            this._downloadComplete[this._downloadComplete.length] = {
                id: H,
                func: e
            }
        },
        unbindDownloadComplete: function(H) {
            for (var e = 0; e < this._downloadComplete.length; e++) {
                if (this._downloadComplete[e].id == H) {
                    this._downloadComplete[e].func = null;
                    this._downloadComplete.splice(e, 1);
                    break
                }
            }
        },
        callDownloadComplete: function() {
            for (var e = 0; e < this._downloadComplete.length; e++) {
                var H = this._downloadComplete[e];
                if (H.func != null) {
                    H.func()
                }
            }
        },
        setSource: function(e) {
            this._source = e
        },
        generatekey: function() {
            var e = function() {
                return (((1 + Math.random()) * 65536) | 0).toString(16).substring(1)
            };
            return (e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e())
        },
        getGroupedRecords: function(aj, am, W, ae, ak, ab, ad, an, K) {
            var ag = 0;
            var aa = this;
            if (!K) {
                K = 0
            }
            var I = new Array();
            for (var N = 0; N < aj.length; N++) {
                I[N] = aa.generatekey()
            }
            if (!am) {
                am = "items"
            }
            if (!W) {
                W = "group"
            }
            if (!ak) {
                ak = "record"
            }
            if (!ad) {
                ad = "parentItem"
            }
            if (undefined === ab) {
                ab = "value"
            }
            var S = new Array();
            var L = 0;
            var J = new Array();
            var R = aj.length;
            var al = new Array();
            if (!an) {
                var an = this.records
            }
            var P = an.length;
            var af = function(ao) {
                var ap = ao;
                if (ae) {
                    i.each(ae,
                    function() {
                        if (this.name && this.map) {
                            ap[this.map] = ap[this.name]
                        }
                    })
                }
                return ap
            };
            for (var V = 0; V < P; V++) {
                var ai = af(an[V]);
                id = ai[aa.uniqueId];
                var H = new Array();
                var X = 0;
                for (N = 0; N < R; N++) {
                    var Q = aj[N];
                    var ac = ai[Q];
                    if (null == ac) {
                        continue
                    }
                    H[X++] = {
                        value: ac,
                        hash: I[N]
                    }
                }
                if (H.length != R) {
                    break
                }
                var Y = null;
                var T = "";
                var e = -1;
                for (var Z = 0; Z < H.length; Z++) {
                    e++;
                    var ah = H[Z].value;
                    var M = H[Z].hash;
                    T = T + "_" + M + "_" + ah;
                    if (J[T] != undefined && J[T] != null) {
                        Y = J[T];
                        continue
                    }
                    if (Y == null) {
                        Y = {
                            level: 0
                        };
                        Y[ad] = null;
                        Y[W] = ah;
                        Y[ak] = ai;
                        if (ai.expanded !== undefined) {
                            Y.expanded = ai.expanded
                        } else {
                            Y.expanded = false
                        }
                        if (ab) {
                            Y[ab] = ai[ab]
                        }
                        Y[am] = new Array();
                        var O = S.length + K;
                        if (!this._source.id || typeof ai.uid === "number" || isFinite(ai.uid)) {
                            O = "Row" + O
                        }
                        Y.uid = O;
                        S[L++] = Y
                    } else {
                        var U = {
                            level: Y.level + 1
                        };
                        U[ad] = Y;
                        U[W] = ah;
                        U[am] = new Array();
                        U[ak] = ai;
                        if (ai.expanded !== undefined) {
                            U.expanded = ai.expanded
                        } else {
                            U.expanded = false
                        }
                        if (ab) {
                            U[ab] = ai[ab]
                        }
                        U.uid = Y.uid + "_" + Y[am].length;
                        Y[am][Y[am].length] = U;
                        Y = U
                    }
                    J[T] = Y
                }
                if (ai) {
                    ai.leaf = true
                }
                if (Y != null) {
                    if (this._source.id == null) {
                        if (undefined == ai.uid) {
                            ai.uid = Y.uid + "_" + Y[am].length
                        } else {
                            if (ai.uid.toString().indexOf(Y.uid) == -1) {
                                ai.uid = Y.uid + "_" + ai.uid
                            }
                        }
                    }
                    ai[ad] = Y;
                    ai.level = Y.level + 1;
                    Y[am][Y[am].length] = ai
                } else {
                    if (undefined == ai.uid) {
                        ai.uid = this.generatekey()
                    }
                }
            }
            return S
        },
        getRecordsHierarchy: function(L, J, aa, U, H) {
            var e = new Array();
            var I = this.records;
            if (H) {
                I = H
            }
            if (this.records.length == 0) {
                return null
            }
            var Y = aa != null ? aa: "items";
            var R = [];
            var ab = I;
            var O = ab.length;
            var P = (this._source && this._source.hierarchy) ? this._source.hierarchy.reservedNames: null;
            var W = function(ac) {
                var ad = ac;
                if (U) {
                    i.each(U,
                    function() {
                        if (this.name && this.map) {
                            ad[this.map] = ad[this.name]
                        }
                    })
                }
                return ad
            };
            for (var X = 0; X < O; X++) {
                var Z = i.extend({},
                ab[X]);
                var T = Z[J];
                var S = Z[L];
                R[S] = {
                    parentid: T,
                    item: Z
                }
            }
            for (var X = 0; X < O; X++) {
                var Z = i.extend({},
                ab[X]);
                var T = Z[J];
                var S = Z[L];
                if (R[T] != undefined) {
                    var Z = {
                        parentid: T,
                        item: R[S].item
                    };
                    var Q = R[T].item;
                    if (!Q[Y]) {
                        Q[Y] = []
                    }
                    var M = Q[Y].length;
                    var K = Z.item;
                    if (!P) {
                        if (K.parent == undefined) {
                            K.parent = Q
                        }
                    } else {
                        if (K[P.parent] == undefined) {
                            K[P.parent] = Q
                        }
                    }
                    var N = W(K);
                    Q[Y][M] = N;
                    R[T].item = Q;
                    R[S] = Z
                } else {
                    var K = R[S].item;
                    if (!P) {
                        if (K.parent == undefined) {
                            K.parent = null
                        }
                    } else {
                        if (K[P.parent] == undefined) {
                            K[P.parent] = null
                        }
                    }
                    var N = W(K);
                    if (!P) {
                        N.level = 0
                    } else {
                        N[P.level] = 0
                    }
                    e[e.length] = N
                }
            }
            if (e.length != 0) {
                var V = function(af, ac) {
                    for (var ad = 0; ad < ac.length; ad++) {
                        if (!P) {
                            ac[ad].level = af
                        } else {
                            ac[ad][P.level] = af
                        }
                        var ae = ac[ad][Y];
                        if (ae) {
                            if (ae.length > 0) {
                                V(af + 1, ae)
                            } else {
                                if (!P) {
                                    ac[ad].leaf = true
                                } else {
                                    ac[ad][P.leaf] = true
                                }
                            }
                        } else {
                            if (!P) {
                                ac[ad].leaf = true
                            } else {
                                ac[ad][P.leaf] = true
                            }
                        }
                    }
                };
                V(0, e)
            }
            return e
        },
        bindBindingUpdate: function(H, e) {
            this._bindingUpdate[this._bindingUpdate.length] = {
                id: H,
                func: e
            }
        },
        unbindBindingUpdate: function(H) {
            for (var e = 0; e < this._bindingUpdate.length; e++) {
                if (this._bindingUpdate[e].id == H) {
                    this._bindingUpdate[e].func = null;
                    this._bindingUpdate.splice(e, 1);
                    break
                }
            }
        },
        callBindingUpdate: function(e) {
            for (var I = 0; I < this._bindingUpdate.length; I++) {
                var H = this._bindingUpdate[I];
                if (H.func != null) {
                    H.func(e)
                }
            }
        },
        getid: function(N, H, K) {
            if (N != null && N.name != undefined) {
                if (N.name) {
                    var e = i(H).attr(N.name);
                    if (e != null && e.toString().length > 0) {
                        return e
                    } else {
                        if (N.map) {
                            try {
                                var e = i(H).attr(N.map);
                                if (e != null && e.toString().length > 0) {
                                    return e
                                } else {
                                    if (i(N.map, H).length > 0) {
                                        return i(N.map, H).text()
                                    } else {
                                        if (i(N.name, H).length > 0) {
                                            return i(N.name, H).text()
                                        }
                                    }
                                }
                            } catch(J) {
                                return K
                            }
                        }
                    }
                    return
                }
            }
            if (i(N, H).length > 0) {
                return i(N, H).text()
            }
            if (N) {
                if (N.toString().length > 0) {
                    var e = i(H).attr(N);
                    if (e != null && e.toString().length > 0) {
                        return i.trim(e).split(" ").join("").replace(/([ #;?%&,.+*~\':"!^$[\]()=>|\/@])/g, "")
                    } else {
                        var I = N.split(this.mapChar);
                        if (I.length > 1) {
                            var M = H;
                            for (var L = 0; L < I.length; L++) {
                                if (M != undefined) {
                                    M = M[I[L]]
                                }
                            }
                            if (M != undefined) {
                                return M
                            }
                        } else {
                            if (H[N] != undefined) {
                                return H[N]
                            }
                        }
                    }
                }
            }
            return K
        },
        loadjson: function(ae, af, R) {
            if (typeof(ae) == "string") {
                ae = i.parseJSON(ae)
            }
            if (R.root == undefined) {
                R.root = ""
            }
            if (R.record == undefined) {
                R.record = ""
            }
            var ae = ae || af;
            if (!ae) {
                ae = []
            }
            var ad = this;
            if (R.root != "") {
                var K = R.root.split(ad.mapChar);
                if (K.length > 1) {
                    var aa = ae;
                    for (var Q = 0; Q < K.length; Q++) {
                        if (aa != undefined) {
                            aa = aa[K[Q]]
                        }
                    }
                    ae = aa
                } else {
                    if (ae[R.root] != undefined) {
                        ae = ae[R.root]
                    } else {
                        i.each(ae,
                        function(ah) {
                            var ag = this;
                            if (this == R.root) {
                                ae = this;
                                return false
                            } else {
                                if (this[R.root] != undefined) {
                                    ae = this[R.root]
                                }
                            }
                        })
                    }
                    if (!ae) {
                        var K = R.root.split(ad.mapChar);
                        if (K.length > 0) {
                            var aa = ae;
                            for (var Q = 0; Q < K.length; Q++) {
                                if (aa != undefined) {
                                    aa = aa[K[Q]]
                                }
                            }
                            ae = aa
                        }
                    }
                }
            } else {
                if (!ae.length) {
                    for (obj in ae) {
                        if (i.isArray(ae[obj])) {
                            ae = ae[obj];
                            break
                        }
                    }
                }
            }
            if (ae != null && ae.length == undefined) {
                ae = i.makeArray(ae)
            }
            if (ae == null || ae.length == undefined) {
                alert("JSON Parse error.");
                return
            }
            if (ae.length == 0) {
                this.totalrecords = 0;
                return
            }
            var J = ae.length;
            this.totalrecords = this.virtualmode ? (R.totalrecords || J) : J;
            this.records = new Array();
            this.originaldata = new Array();
            var W = this.records;
            var T = !this.pageable ? R.recordstartindex: this.pagesize * this.pagenum;
            this.recordids = new Array();
            if (R.loadallrecords) {
                T = 0;
                J = this.totalrecords
            }
            var P = 0;
            if (this.virtualmode) {
                T = !this.pageable ? R.recordstartindex: this.pagesize * this.pagenum;
                P = T;
                T = 0;
                J = this.totalrecords
            }
            var Y = R.datafields ? R.datafields.length: 0;
            if (Y == 0) {
                var e = ae[0];
                var ab = new Array();
                for (obj in e) {
                    var H = obj;
                    ab[ab.length] = {
                        name: H
                    }
                }
                R.datafields = ab;
                R.generatedfields = R.datafields;
                Y = ab.length
            }
            var M = T;
            for (var V = T; V < J; V++) {
                var I = ae[V];
                if (I == undefined) {
                    break
                }
                if (R.record && R.record != "") {
                    I = I[R.record];
                    if (I == undefined) {
                        continue
                    }
                }
                var ac = this.getid(R.id, I, V);
                if (typeof(ac) === "object") {
                    ac = V
                }
                if (!this.recordids[ac]) {
                    this.recordids[ac] = I;
                    var L = {};
                    for (var U = 0; U < Y; U++) {
                        var N = R.datafields[U];
                        var S = "";
                        if (undefined == N || N == null) {
                            continue
                        }
                        if (N.map) {
                            if (i.isFunction(N.map)) {
                                S = N.map(I)
                            } else {
                                var K = N.map.split(ad.mapChar);
                                if (K.length > 0) {
                                    var Z = I;
                                    for (var Q = 0; Q < K.length; Q++) {
                                        if (Z != undefined) {
                                            Z = Z[K[Q]]
                                        }
                                    }
                                    S = Z
                                } else {
                                    S = I[N.map]
                                }
                            }
                            if (S != undefined && S != null) {
                                S = this.getvaluebytype(S, N)
                            } else {
                                if (S == undefined && S != null) {
                                    S = ""
                                }
                            }
                        }
                        if (S == "" && !N.map) {
                            S = I[N.name];
                            if (S == undefined && S != null) {
                                S = ""
                            }
                            if (N.value != undefined) {
                                if (S != undefined) {
                                    var X = S[N.value];
                                    if (X != undefined) {
                                        S = X
                                    }
                                }
                            }
                        }
                        S = this.getvaluebytype(S, N);
                        if (N.displayname != undefined) {
                            L[N.displayname] = S
                        } else {
                            L[N.name] = S
                        }
                        if (N.type === "array") {
                            var O = function(aj) {
                                if (!aj) {
                                    return
                                }
                                for (var ap = 0; ap < aj.length; ap++) {
                                    var am = aj[ap];
                                    if (!am) {
                                        continue
                                    }
                                    for (var an = 0; an < Y; an++) {
                                        var ai = R.datafields[an];
                                        var ao = "";
                                        if (undefined == ai || ai == null) {
                                            continue
                                        }
                                        if (ai.map) {
                                            if (i.isFunction(ai.map)) {
                                                ao = ai.map(am)
                                            } else {
                                                var ag = ai.map.split(ad.mapChar);
                                                if (ag.length > 0) {
                                                    var al = am;
                                                    for (var ah = 0; ah < ag.length; ah++) {
                                                        if (al != undefined) {
                                                            al = al[ag[ah]]
                                                        }
                                                    }
                                                    ao = al
                                                } else {
                                                    ao = am[ai.map]
                                                }
                                            }
                                            if (ao != undefined && ao != null) {
                                                ao = this.getvaluebytype(ao, ai)
                                            } else {
                                                if (ao == undefined && ao != null) {
                                                    ao = ""
                                                }
                                            }
                                        }
                                        if (ao == "" && !ai.map) {
                                            ao = am[ai.name];
                                            if (ao == undefined && ao != null) {
                                                ao = ""
                                            }
                                            if (ai.value != undefined) {
                                                if (ao != undefined) {
                                                    var ak = ao[ai.value];
                                                    if (ak != undefined) {
                                                        ao = ak
                                                    }
                                                }
                                            }
                                        }
                                        ao = this.getvaluebytype(ao, ai);
                                        if (ai.displayname != undefined) {
                                            am[ai.displayname] = ao
                                        } else {
                                            am[ai.name] = ao
                                        }
                                        if (ai.type === "array") {
                                            O.call(this, ao)
                                        }
                                    }
                                }
                            };
                            O.call(this, S)
                        }
                    }
                    if (R.recordendindex <= 0 || T < R.recordendindex) {
                        W[P + M] = i.extend({},
                        L);
                        W[P + M].uid = ac;
                        this.originaldata[P + M] = i.extend({},
                        W[V]);
                        M++
                    }
                }
            }
            this.records = W;
            this.cachedrecords = this.records
        },
        loadxml: function(K, ai, U) {
            if (typeof(K) == "string") {
                K = ai = i(i.parseXML(K));
                K = null
            }
            if (U.root == undefined) {
                U.root = ""
            }
            if (U.record == undefined) {
                U.record = ""
            }
            var K;
            if (i.jqx.browser.msie && ai) {
                if (ai.xml != undefined) {
                    K = i(U.root + " " + U.record, i.parseXML(ai.xml))
                } else {
                    K = K || i(U.root + " " + U.record, ai)
                }
            } else {
                K = K || i(U.root + " " + U.record, ai)
            }
            if (!K) {
                K = []
            }
            var J = K.length;
            if (K.length == 0) {
                return
            }
            this.totalrecords = this.virtualmode ? (U.totalrecords || J) : J;
            this.records = new Array();
            this.originaldata = new Array();
            var aa = this.records;
            var X = !this.pageable ? U.recordstartindex: this.pagesize * this.pagenum;
            this.recordids = new Array();
            if (U.loadallrecords) {
                X = 0;
                J = this.totalrecords
            }
            var S = 0;
            if (this.virtualmode) {
                X = !this.pageable ? U.recordstartindex: this.pagesize * this.pagenum;
                S = X;
                X = 0;
                J = this.totalrecords
            }
            var ac = U.datafields ? U.datafields.length: 0;
            if (ac == 0) {
                var e = K[0];
                var af = new Array();
                for (obj in e) {
                    var H = obj;
                    af[af.length] = {
                        name: H
                    }
                }
                U.datafields = af;
                U.generatedfields = U.datafields;
                ac = af.length
            }
            var T = X;
            var ae = false;
            for (var Z = X; Z < J; Z++) {
                var I = K[Z];
                if (I == undefined) {
                    break
                }
                var ah = this.getid(U.id, I, Z);
                if (!this.recordids[ah]) {
                    this.recordids[ah] = I;
                    var L = {};
                    var P = false;
                    if (U.hierarchy && U.hierarchy.root) {
                        P = true
                    }
                    for (var Y = 0; Y < ac; Y++) {
                        var Q = U.datafields[Y];
                        var W = "";
                        if (undefined == Q || Q == null) {
                            continue
                        }
                        if (Q.map) {
                            if (i.isFunction(Q.map)) {
                                W = Q.map(I)
                            } else {
                                var M = Q.map.indexOf("[");
                                if (M < 0) {
                                    W = i(Q.map, I);
                                    if (W.length == 1) {
                                        W = W.text()
                                    } else {
                                        ae = true;
                                        var ag = new Array();
                                        for (var ab = 0; ab < W.length; ab++) {
                                            ag.push(i(W[ab]).text())
                                        }
                                        W = ag;
                                        if (P && ag.length > 0) {
                                            W = ag[0]
                                        }
                                    }
                                } else {
                                    var ad = Q.map.substring(0, M - 1);
                                    var O = Q.map.indexOf("]");
                                    var R = Q.map.substring(M + 1, O);
                                    W = i(ad, I).attr(R);
                                    if (W == undefined) {
                                        W = i(I).attr(R)
                                    }
                                    if (W == undefined) {
                                        W = ""
                                    }
                                }
                                if (W == "") {
                                    W = i(I).attr(Q.map);
                                    if (W == undefined) {
                                        W = ""
                                    }
                                }
                            }
                        }
                        if (W == "") {
                            W = i(Q.name, I);
                            if (W.length == 1) {
                                W = W.text()
                            } else {
                                var ag = new Array();
                                for (var ab = 0; ab < W.length; ab++) {
                                    ag.push(i(W[ab]).text())
                                }
                                W = ag;
                                if (P && ag.length > 0) {
                                    W = ag[0]
                                }
                            }
                            if (W == "") {
                                W = i(I).attr(Q.name);
                                if (W == undefined) {
                                    W = ""
                                }
                            }
                            if (W == "") {
                                if (I.nodeName && I.nodeName == Q.name && I.firstChild) {
                                    W = i(I.firstChild).text()
                                }
                            }
                        }
                        var V = W;
                        W = this.getvaluebytype(W, Q);
                        if (Q.displayname != undefined) {
                            L[Q.displayname] = W
                        } else {
                            L[Q.name] = W
                        }
                    }
                    if (U.recordendindex <= 0 || X < U.recordendindex) {
                        aa[S + T] = i.extend({},
                        L);
                        aa[S + T].uid = ah;
                        this.originaldata[S + T] = i.extend({},
                        aa[Z]);
                        T++
                    }
                }
            }
            if (U.hierarchy && U.hierarchy.root) {
                for (var Z = X; Z < J; Z++) {
                    var I = K[Z];
                    var N = aa[Z];
                    if (i(I).parent().length > 0) {
                        var ah = this.getid(U.id, i(I).parents(U.hierarchy.record + ":first"));
                        N.parentuid = ah
                    } else {
                        N.parentuid = null
                    }
                }
            }
            this.records = aa;
            this.cachedrecords = this.records
        },
        loadtext: function(Y, P) {
            if (Y == null) {
                return
            }
            var e = P.rowDelimiter || this.rowDelimiter || "\n";
            var L = Y.split(e);
            var J = L.length;
            var X = Y.split("\r");
            if (J == 1 && X.length > 1) {
                L = X;
                J = L.length
            }
            this.totalrecords = this.virtualmode ? (P.totalrecords || J) : J;
            this.records = new Array();
            this.originaldata = new Array();
            var U = this.records;
            var R = !this.pageable ? P.recordstartindex: this.pagesize * this.pagenum;
            this.recordids = new Array();
            if (P.loadallrecords) {
                R = 0;
                J = this.totalrecords
            }
            var N = 0;
            if (this.virtualmode) {
                R = !this.pageable ? P.recordstartindex: this.pagesize * this.pagenum;
                N = R;
                R = 0;
                J = this.totalrecords
            }
            var V = P.datafields.length;
            var O = P.columnDelimiter || this.columnDelimiter;
            if (!O) {
                O = (P.datatype === "tab" || P.datatype === "tsv") ? "\t": ","
            }
            for (var T = R; T < J; T++) {
                var I = L[T];
                var W = null;
                if (!this.recordids[W]) {
                    if (P.id == null) {
                        W = T;
                        this.recordids[W] = I
                    }
                    var K = {};
                    var H = L[T].split(O);
                    for (var S = 0; S < V; S++) {
                        if (S >= H.length) {
                            continue
                        }
                        var M = P.datafields[S];
                        var Q = H[S];
                        if (M.map && i.isFunction(M.map)) {
                            Q = M.map(I)
                        }
                        if (M.type) {
                            Q = this.getvaluebytype(Q, M)
                        }
                        var Z = M.map || M.name || S.toString();
                        K[Z] = Q;
                        if (P.id != null) {
                            if (P.id === M.name) {
                                W = Q;
                                this.recordids[W] = I
                            }
                        }
                    }
                    if (W == null) {
                        W = T
                    }
                    U[N + T] = i.extend({},
                    K);
                    U[N + T].uid = W;
                    this.originaldata[N + T] = i.extend({},
                    U[T])
                }
            }
            this.records = U;
            this.cachedrecords = this.records
        },
        getvaluebytype: function(L, H) {
            var J = L;
            if (L == null) {
                return L
            }
            if (i.isArray(L) && H.type != "array") {
                for (var I = 0; I < L.length; I++) {
                    L[I] = this.getvaluebytype(L[I], H)
                }
                return L
            }
            if (H.type == "date") {
                if (L == "NaN") {
                    L = ""
                } else {
                    var K = new Date(L);
                    if (typeof L == "string") {
                        if (H.format) {
                            var e = i.jqx.dataFormat.parsedate(L, H.format);
                            if (e != null) {
                                K = e
                            }
                        }
                    }
                    if (K.toString() == "NaN" || K.toString() == "Invalid Date") {
                        if (i.jqx.dataFormat) {
                            L = i.jqx.dataFormat.tryparsedate(L)
                        } else {
                            L = K
                        }
                    } else {
                        L = K
                    }
                    if (L == null) {
                        L = J
                    }
                }
            } else {
                if (H.type == "float" || H.type == "number" || H.type == "decimal") {
                    if (L == "NaN") {
                        L = ""
                    } else {
                        var L = parseFloat(L);
                        if (isNaN(L)) {
                            L = J
                        }
                    }
                } else {
                    if (H.type == "int" || H.type == "integer") {
                        var L = parseInt(L);
                        if (isNaN(L)) {
                            L = J
                        }
                    } else {
                        if (H.type == "bool" || H.type == "boolean") {
                            if (L != null) {
                                if (L.toLowerCase != undefined) {
                                    if (L.toLowerCase() == "false") {
                                        L = false
                                    } else {
                                        if (L.toLowerCase() == "true") {
                                            L = true
                                        }
                                    }
                                }
                            }
                            if (L == 1) {
                                L = true
                            } else {
                                if (L == 0 && L !== "") {
                                    L = false
                                } else {
                                    L = ""
                                }
                            }
                        }
                    }
                }
            }
            return L
        }
    };
    i.jqx.dataFormat = {};
    i.extend(i.jqx.dataFormat, {
        regexTrim: /^\s+|\s+$/g,
        regexInfinity: /^[+-]?infinity$/i,
        regexHex: /^0x[a-f0-9]+$/i,
        regexParseFloat: /^[+-]?\d*\.?\d*(e[+-]?\d+)?$/,
        toString: Object.prototype.toString,
        isBoolean: function(e) {
            return typeof e === "boolean"
        },
        isObject: function(e) {
            return (e && (typeof e === "object" || i.isFunction(e))) || false
        },
        isDate: function(e) {
            return e instanceof Date
        },
        arrayIndexOf: function(J, I) {
            if (J.indexOf) {
                return J.indexOf(I)
            }
            for (var e = 0,
            H = J.length; e < H; e++) {
                if (J[e] === I) {
                    return e
                }
            }
            return - 1
        },
        isString: function(e) {
            return typeof e === "string"
        },
        isNumber: function(e) {
            return typeof e === "number" && isFinite(e)
        },
        isNull: function(e) {
            return e === null
        },
        isUndefined: function(e) {
            return typeof e === "undefined"
        },
        isValue: function(e) {
            return (this.isObject(e) || this.isString(e) || this.isNumber(e) || this.isBoolean(e))
        },
        isEmpty: function(e) {
            if (!this.isString(e) && this.isValue(e)) {
                return false
            } else {
                if (!this.isValue(e)) {
                    return true
                }
            }
            e = i.trim(e).replace(/\&nbsp\;/ig, "").replace(/\&#160\;/ig, "");
            return e === ""
        },
        startsWith: function(H, e) {
            return H.indexOf(e) === 0
        },
        endsWith: function(H, e) {
            return H.substr(H.length - e.length) === e
        },
        trim: function(e) {
            return (e + "").replace(this.regexTrim, "")
        },
        isArray: function(e) {
            return this.toString.call(e) === "[object Array]"
        },
        defaultcalendar: function() {
            var e = {
                "/": "/",
                ":": ":",
                firstDay: 0,
                days: {
                    names: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                    namesAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                    namesShort: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]
                },
                months: {
                    names: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""],
                    namesAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""]
                },
                AM: ["AM", "am", "AM"],
                PM: ["PM", "pm", "PM"],
                eras: [{
                    name: "A.D.",
                    start: null,
                    offset: 0
                }],
                twoDigitYearMax: 2029,
                patterns: {
                    d: "M/d/yyyy",
                    D: "dddd, MMMM dd, yyyy",
                    t: "h:mm tt",
                    T: "h:mm:ss tt",
                    f: "dddd, MMMM dd, yyyy h:mm tt",
                    F: "dddd, MMMM dd, yyyy h:mm:ss tt",
                    M: "MMMM dd",
                    Y: "yyyy MMMM",
                    S: "yyyy\u0027-\u0027MM\u0027-\u0027dd\u0027T\u0027HH\u0027:\u0027mm\u0027:\u0027ss",
                    ISO: "yyyy-MM-dd hh:mm:ss",
                    ISO2: "yyyy-MM-dd HH:mm:ss",
                    d1: "dd.MM.yyyy",
                    d2: "dd-MM-yyyy",
                    d3: "MM-dd-yyyy",
                    zone1: "yyyy-MM-ddTHH:mm:ss-HH:mm",
                    zone2: "yyyy-MM-ddTHH:mm:ss+HH:mm",
                    custom: "yyyy-MM-ddTHH:mm:ss.fff",
                    custom2: "yyyy-MM-dd HH:mm:ss.fff"
                },
                percentsymbol: "%",
                currencysymbol: "$",
                currencysymbolposition: "before",
                decimalseparator: ".",
                thousandsseparator: ","
            };
            return e
        },
        expandFormat: function(K, J) {
            J = J || "F";
            var I, H = K.patterns,
            e = J.length;
            if (e === 1) {
                I = H[J];
                if (!I) {
                    throw "Invalid date format string '" + J + "'."
                }
                J = I
            } else {
                if (e === 2 && J.charAt(0) === "%") {
                    J = J.charAt(1)
                }
            }
            return J
        },
        getEra: function(I, H) {
            if (!H) {
                return 0
            }
            if (typeof I === "string") {
                return 0
            }
            var L, K = I.getTime();
            for (var J = 0,
            e = H.length; J < e; J++) {
                L = H[J].start;
                if (L === null || K >= L) {
                    return J
                }
            }
            return 0
        },
        toUpper: function(e) {
            return e.split("\u00A0").join(" ").toUpperCase()
        },
        toUpperArray: function(e) {
            var J = [];
            for (var I = 0,
            H = e.length; I < H; I++) {
                J[I] = this.toUpper(e[I])
            }
            return J
        },
        getEraYear: function(H, J, e, K) {
            var I = H.getFullYear();
            if (!K && J.eras) {
                I -= J.eras[e].offset
            }
            return I
        },
        toUpper: function(e) {
            if (e) {
                return e.toUpperCase()
            }
            return ""
        },
        getDayIndex: function(K, J, H) {
            var e, L = K.days,
            I = K._upperDays;
            if (!I) {
                K._upperDays = I = [this.toUpperArray(L.names), this.toUpperArray(L.namesAbbr), this.toUpperArray(L.namesShort)]
            }
            J = J.toUpperCase();
            if (H) {
                e = this.arrayIndexOf(I[1], J);
                if (e === -1) {
                    e = this.arrayIndexOf(I[2], J)
                }
            } else {
                e = this.arrayIndexOf(I[0], J)
            }
            return e
        },
        getMonthIndex: function(N, M, I) {
            var e = N.months,
            H = N.monthsGenitive || N.months,
            K = N._upperMonths,
            L = N._upperMonthsGen;
            if (!K) {
                N._upperMonths = K = [this.toUpperArray(e.names), this.toUpperArray(e.namesAbbr)];
                N._upperMonthsGen = L = [this.toUpperArray(H.names), this.toUpperArray(H.namesAbbr)]
            }
            M = this.toUpper(M);
            var J = this.arrayIndexOf(I ? K[1] : K[0], M);
            if (J < 0) {
                J = this.arrayIndexOf(I ? L[1] : L[0], M)
            }
            return J
        },
        appendPreOrPostMatch: function(J, e) {
            var I = 0,
            L = false;
            for (var K = 0,
            H = J.length; K < H; K++) {
                var M = J.charAt(K);
                switch (M) {
                case "'":
                    if (L) {
                        e.push("'")
                    } else {
                        I++
                    }
                    L = false;
                    break;
                case "\\":
                    if (L) {
                        e.push("\\")
                    }
                    L = !L;
                    break;
                default:
                    e.push(M);
                    L = false;
                    break
                }
            }
            return I
        },
        getTokenRegExp: function() {
            return /\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z|gg|g/g
        },
        formatlink: function(e, I) {
            var H = "";
            if (I && I.target) {
                H = "target=" + I.target
            }
            if (H != "") {
                return "<a " + H + ' href="' + e + '">' + e + "</a>"
            }
            return '<a href="' + e + '">' + e + "</a>"
        },
        formatemail: function(e) {
            return '<a href="mailto:' + e + '">' + e + "</a>"
        },
        formatNumber: function(e, I, H) {
            return this.formatnumber(e, I, H)
        },
        formatnumber: function(T, S, O) {
            if (O == undefined || O == null || O == "") {
                O = this.defaultcalendar()
            }
            if (S === "" || S === null) {
                return T
            }
            if (!this.isNumber(T)) {
                T *= 1
            }
            var P;
            if (S.length > 1) {
                P = parseInt(S.slice(1), 10)
            }
            var V = {};
            var Q = S.charAt(0).toUpperCase();
            V.thousandsSeparator = O.thousandsseparator;
            V.decimalSeparator = O.decimalseparator;
            switch (Q) {
            case "D":
            case "d":
            case "F":
            case "f":
                V.decimalPlaces = P;
                break;
            case "N":
            case "n":
                V.decimalPlaces = 0;
                break;
            case "C":
            case "c":
                V.decimalPlaces = P;
                if (O.currencysymbolposition == "before") {
                    V.prefix = O.currencysymbol
                } else {
                    V.suffix = O.currencysymbol
                }
                break;
            case "P":
            case "p":
                V.suffix = O.percentsymbol;
                V.decimalPlaces = P;
                break;
            default:
                throw "Bad number format specifier: " + Q
            }
            if (this.isNumber(T)) {
                var K = (T < 0);
                var I = T + "";
                var R = (V.decimalSeparator) ? V.decimalSeparator: ".";
                var e;
                if (this.isNumber(V.decimalPlaces)) {
                    var L = V.decimalPlaces;
                    var N = Math.pow(10, L);
                    I = (T * N).toFixed(0) / N + "";
                    e = I.lastIndexOf(".");
                    if (L > 0) {
                        if (e < 0) {
                            I += R;
                            e = I.length - 1
                        } else {
                            if (R !== ".") {
                                I = I.replace(".", R)
                            }
                        }
                        while ((I.length - 1 - e) < L) {
                            I += "0"
                        }
                    }
                } else {
                    var I = T + "";
                    e = I.lastIndexOf(".");
                    if (e > 0 && L == undefined) {
                        if (R !== ".") {
                            I = I.replace(".", R)
                        }
                    }
                }
                if (V.thousandsSeparator) {
                    var U = V.thousandsSeparator;
                    e = I.lastIndexOf(R);
                    e = (e > -1) ? e: I.length;
                    var J = I.substring(e);
                    var H = -1;
                    for (var M = e; M > 0; M--) {
                        H++;
                        if ((H % 3 === 0) && (M !== e) && (!K || (M > 1))) {
                            J = U + J
                        }
                        J = I.charAt(M - 1) + J
                    }
                    I = J
                }
                I = (V.prefix) ? V.prefix + I: I;
                I = (V.suffix) ? I + V.suffix: I;
                return I
            } else {
                return T
            }
        },
        tryparsedate: function(ai, aj) {
            if (aj == undefined || aj == null) {
                aj = this.defaultcalendar()
            }
            var O = this;
            if (ai == "") {
                return null
            }
            if (ai != null && !ai.substring) {
                ai = ai.toString()
            }
            if (ai != null && ai.substring(0, 6) == "/Date(") {
                var ar = /^\/Date\((-?\d+)(\+|-)?(\d+)?\)\/$/;
                var ap = new Date( + ai.replace(/\/Date\((\d+)\)\//, "$1"));
                if (ap == "Invalid Date") {
                    var al = ai.match(/^\/Date\((\d+)([-+]\d\d)(\d\d)\)\/$/);
                    var ap = null;
                    if (al) {
                        ap = new Date(1 * al[1] + 3600000 * al[2] + 60000 * al[3])
                    }
                }
                if (ap == null || ap == "Invalid Date" || isNaN(ap)) {
                    var P = ar.exec(ai);
                    if (P) {
                        var R = new Date(parseInt(P[1]));
                        if (P[2]) {
                            var X = parseInt(P[3]);
                            if (P[2] === "-") {
                                X = -X
                            }
                            var T = R.getUTCMinutes();
                            R.setUTCMinutes(T - X)
                        }
                        if (!isNaN(R.valueOf())) {
                            return R
                        }
                    }
                }
                return ap
            }
            patterns = aj.patterns;
            for (prop in patterns) {
                ap = O.parsedate(ai, patterns[prop], aj);
                if (ap) {
                    if (prop == "ISO") {
                        var aa = O.parsedate(ai, patterns.ISO2, aj);
                        if (aa) {
                            return aa
                        }
                    }
                    return ap
                }
            }
            if (ai != null) {
                var aa = null;
                var L = [":", "/", "-"];
                var an = true;
                for (var N = 0; N < L.length; N++) {
                    if (ai.indexOf(L[N]) != -1) {
                        an = false
                    }
                }
                if (an) {
                    var at = new Number(ai);
                    if (!isNaN(at)) {
                        return new Date(at)
                    }
                }
            }
            if (i.type(ai) === "string") {
                var ae = O;
                ai = ae.trim(ai);
                var ak = [":", "/", "-", " ", ","];
                var M = function(ax, av, aw) {
                    return aw.replace(new RegExp(ax, "g"), av)
                };
                ai = M(", ", ",", ai);
                var I = "";
                var W = ai;
                if (ai.indexOf(":") >= 0) {
                    I = ai.substring(ai.indexOf(":") - 2);
                    I = ae.trim(I);
                    W = ai.substring(0, ai.indexOf(":") - 2)
                } else {
                    if (ai.toUpperCase().indexOf("AM") >= 0) {
                        I = ai.substring(ai.toUpperCase().indexOf("AM") - 2);
                        I = ae.trim(I);
                        W = ai.substring(0, ai.toUpperCase().indexOf("AM") - 2)
                    } else {
                        if (ai.toUpperCase().indexOf("PM") >= 0) {
                            I = ai.substring(ai.toUpperCase().indexOf("PM") - 2);
                            I = ae.trim(I);
                            W = ai.substring(0, ai.toUpperCase().indexOf("PM") - 2)
                        }
                    }
                }
                var e = new Date();
                var ag = false;
                if (W) {
                    for (var ao = 0; ao < ak.length; ao++) {
                        if (W.indexOf(ak[ao]) >= 0) {
                            L = W.split(ak[ao]);
                            break
                        }
                    }
                    var H = new Array();
                    var U = new Array();
                    var ac = new Array();
                    var Q = null;
                    var au = null;
                    for (var ao = 0; ao < L.length; ao++) {
                        var N = L[ao];
                        var ab = ae.parsedate(N, "d", aj) || ae.parsedate(N, "dd", aj) || ae.parsedate(N, "ddd", aj) || ae.parsedate(N, "dddd", aj);
                        if (ab) {
                            H.push(ab.getDate());
                            if (N.length > 2) {
                                Q = ao;
                                break
                            }
                        }
                    }
                    for (var ao = 0; ao < L.length; ao++) {
                        var N = L[ao];
                        var S = ae.parsedate(N, "M", aj) || ae.parsedate(N, "MM", aj) || ae.parsedate(N, "MMM", aj) || ae.parsedate(N, "MMMM", aj);
                        if (S) {
                            if (Q != undefined && Q == ao) {
                                continue
                            }
                            U.push(S.getMonth());
                            if (N.length > 2) {
                                au = ao;
                                break
                            }
                        }
                    }
                    for (var ao = 0; ao < L.length; ao++) {
                        var N = L[ao];
                        var ad = ae.parsedate(N, "yyyy", aj);
                        if (ad) {
                            if (Q != undefined && Q == ao) {
                                continue
                            }
                            if (au != undefined && au == ao) {
                                continue
                            }
                            ac.push(ad.getFullYear())
                        }
                    }
                    var am = new Array();
                    for (var aq = 0; aq < H.length; aq++) {
                        for (var al = 0; al < U.length; al++) {
                            for (var ah = 0; ah < ac.length; ah++) {
                                var R = new Date(ac[ah], U[al], H[aq]);
                                if (ac[ah] < 1970) {
                                    R.setFullYear(ac[ah])
                                }
                                if (R.getTime() != NaN) {
                                    am.push(R)
                                }
                            }
                        }
                    }
                    if (am.length > 0) {
                        e = am[0];
                        ag = true
                    }
                }
                if (I) {
                    var af = I.indexOf(":") >= 0 ? I.split(":") : I;
                    var K = ae.parsedate(I, "h:mm tt", aj) || ae.parsedate(I, "h:mm:ss tt", aj) || ae.parsedate(I, "HH:mm:ss.fff", aj) || ae.parsedate(I, "HH:mm:ss.ff", aj) || ae.parsedate(I, "HH:mm:ss.tttt", aj) || ae.parsedate(I, "HH:mm:ss", aj) || ae.parsedate(I, "HH:mm", aj) || ae.parsedate(I, "HH", aj);
                    var V = 0,
                    J = 0,
                    Y = 0,
                    Z = 0;
                    if (K && K.getTime() != NaN) {
                        V = K.getHours();
                        J = K.getMinutes();
                        Y = K.getSeconds();
                        Z = K.getMilliseconds()
                    } else {
                        if (af.length == 1) {
                            V = parseInt(af[0])
                        }
                        if (af.length == 2) {
                            V = parseInt(af[0]);
                            J = parseInt(af[1])
                        }
                        if (af.length == 3) {
                            V = parseInt(af[0]);
                            J = parseInt(af[1]);
                            if (af[2].indexOf(".") >= 0) {
                                Y = parseInt(af[2].toString().split(".")[0]);
                                Z = parseInt(af[2].toString().split(".")[1])
                            } else {
                                Y = parseInt(af[2])
                            }
                        }
                        if (af.length == 4) {
                            V = parseInt(af[0]);
                            J = parseInt(af[1]);
                            Y = parseInt(af[2]);
                            Z = parseInt(af[3])
                        }
                    }
                    if (e && !isNaN(V) && !isNaN(J) && !isNaN(Y) && !isNaN(Z)) {
                        e.setHours(V, J, Y, Z);
                        ag = true
                    }
                }
                if (ag) {
                    return e
                }
            }
            return null
        },
        getparseregexp: function(e, R) {
            var T = e._parseRegExp;
            if (!T) {
                e._parseRegExp = T = {}
            } else {
                var K = T[R];
                if (K) {
                    return K
                }
            }
            var Q = this.expandFormat(e, R).replace(/([\^\$\.\*\+\?\|\[\]\(\)\{\}])/g, "\\\\$1"),
            O = ["^"],
            H = [],
            N = 0,
            J = 0,
            W = this.getTokenRegExp(),
            L;
            while ((L = W.exec(Q)) !== null) {
                var V = Q.slice(N, L.index);
                N = W.lastIndex;
                J += this.appendPreOrPostMatch(V, O);
                if (J % 2) {
                    O.push(L[0]);
                    continue
                }
                var I = L[0],
                M = I.length,
                S;
                switch (I) {
                case "dddd":
                case "ddd":
                case "MMMM":
                case "MMM":
                case "gg":
                case "g":
                    S = "(\\D+)";
                    break;
                case "tt":
                case "t":
                    S = "(\\D*)";
                    break;
                case "yyyy":
                case "fff":
                case "ff":
                case "f":
                    S = "(\\d{" + M + "})";
                    break;
                case "dd":
                case "d":
                case "MM":
                case "M":
                case "yy":
                case "y":
                case "HH":
                case "H":
                case "hh":
                case "h":
                case "mm":
                case "m":
                case "ss":
                case "s":
                    S = "(\\d\\d?)";
                    break;
                case "zzz":
                    S = "([+-]?\\d\\d?:\\d{2})";
                    break;
                case "zz":
                case "z":
                    S = "([+-]?\\d\\d?)";
                    break;
                case "/":
                    S = "(\\" + e["/"] + ")";
                    break;
                default:
                    throw "Invalid date format pattern '" + I + "'.";
                    break
                }
                if (S) {
                    O.push(S)
                }
                H.push(L[0])
            }
            this.appendPreOrPostMatch(Q.slice(N), O);
            O.push("$");
            var U = O.join("").replace(/\s+/g, "\\s+"),
            P = {
                regExp: U,
                groups: H
            };
            return T[R] = P
        },
        outOfRange: function(I, e, H) {
            return I < e || I > H
        },
        expandYear: function(L, J) {
            var H = new Date(),
            e = this.getEra(H);
            if (J < 100) {
                var I = L.twoDigitYearMax;
                I = typeof I === "string" ? new Date().getFullYear() % 100 + parseInt(I, 10) : I;
                var K = this.getEraYear(H, L, e);
                J += K - (K % 100);
                if (J > I) {
                    J -= 100
                }
            }
            return J
        },
        parsedate: function(ab, ai, W) {
            if (W == undefined || W == null) {
                W = this.defaultcalendar()
            }
            ab = this.trim(ab);
            var T = W,
            an = this.getparseregexp(T, ai),
            N = new RegExp(an.regExp).exec(ab);
            if (N === null) {
                return null
            }
            var aj = an.groups,
            Z = null,
            R = null,
            am = null,
            al = null,
            S = null,
            L = 0,
            ae, ad = 0,
            ak = 0,
            e = 0,
            I = null,
            U = false;
            for (var af = 0,
            ah = aj.length; af < ah; af++) {
                var H = N[af + 1];
                if (H) {
                    var aa = aj[af],
                    K = aa.length,
                    M = parseInt(H, 10);
                    switch (aa) {
                    case "dd":
                    case "d":
                        al = M;
                        if (this.outOfRange(al, 1, 31)) {
                            return null
                        }
                        break;
                    case "MMM":
                    case "MMMM":
                        am = this.getMonthIndex(T, H, K === 3);
                        if (this.outOfRange(am, 0, 11)) {
                            return null
                        }
                        break;
                    case "M":
                    case "MM":
                        am = M - 1;
                        if (this.outOfRange(am, 0, 11)) {
                            return null
                        }
                        break;
                    case "y":
                    case "yy":
                    case "yyyy":
                        R = K < 4 ? this.expandYear(T, M) : M;
                        if (this.outOfRange(R, 0, 9999)) {
                            return null
                        }
                        break;
                    case "h":
                    case "hh":
                        L = M;
                        if (L === 12) {
                            L = 0
                        }
                        if (this.outOfRange(L, 0, 11)) {
                            return null
                        }
                        break;
                    case "H":
                    case "HH":
                        L = M;
                        if (this.outOfRange(L, 0, 23)) {
                            return null
                        }
                        break;
                    case "m":
                    case "mm":
                        ad = M;
                        if (this.outOfRange(ad, 0, 59)) {
                            return null
                        }
                        break;
                    case "s":
                    case "ss":
                        ak = M;
                        if (this.outOfRange(ak, 0, 59)) {
                            return null
                        }
                        break;
                    case "tt":
                    case "t":
                        U = T.PM && (H === T.PM[0] || H === T.PM[1] || H === T.PM[2]);
                        if (!U && (!T.AM || (H !== T.AM[0] && H !== T.AM[1] && H !== T.AM[2]))) {
                            return null
                        }
                        break;
                    case "f":
                    case "ff":
                    case "fff":
                        e = M * Math.pow(10, 3 - K);
                        if (this.outOfRange(e, 0, 999)) {
                            return null
                        }
                        break;
                    case "ddd":
                    case "dddd":
                        S = this.getDayIndex(T, H, K === 3);
                        if (this.outOfRange(S, 0, 6)) {
                            return null
                        }
                        break;
                    case "zzz":
                        var J = H.split(/:/);
                        if (J.length !== 2) {
                            return null
                        }
                        ae = parseInt(J[0], 10);
                        if (this.outOfRange(ae, -12, 13)) {
                            return null
                        }
                        var P = parseInt(J[1], 10);
                        if (this.outOfRange(P, 0, 59)) {
                            return null
                        }
                        I = (ae * 60) + (this.startsWith(H, "-") ? -P: P);
                        break;
                    case "z":
                    case "zz":
                        ae = M;
                        if (this.outOfRange(ae, -12, 13)) {
                            return null
                        }
                        I = ae * 60;
                        break;
                    case "g":
                    case "gg":
                        var V = H;
                        if (!V || !T.eras) {
                            return null
                        }
                        V = trim(V.toLowerCase());
                        for (var ag = 0,
                        ac = T.eras.length; ag < ac; ag++) {
                            if (V === T.eras[ag].name.toLowerCase()) {
                                Z = ag;
                                break
                            }
                        }
                        if (Z === null) {
                            return null
                        }
                        break
                    }
                }
            }
            var Q = new Date(),
            Y,
            O = T.convert;
            Y = Q.getFullYear();
            if (R === null) {
                R = Y
            } else {
                if (T.eras) {
                    R += T.eras[(Z || 0)].offset
                }
            }
            if (am === null) {
                am = 0
            }
            if (al === null) {
                al = 1
            }
            if (O) {
                Q = O.toGregorian(R, am, al);
                if (Q === null) {
                    return null
                }
            } else {
                Q.setFullYear(R, am, al);
                if (Q.getDate() !== al) {
                    return null
                }
                if (S !== null && Q.getDay() !== S) {
                    return null
                }
            }
            if (U && L < 12) {
                L += 12
            }
            Q.setHours(L, ad, ak, e);
            if (I !== null) {
                var X = Q.getMinutes() - (I + Q.getTimezoneOffset());
                Q.setHours(Q.getHours() + parseInt(X / 60, 10), X % 60)
            }
            return Q
        },
        cleardatescache: function() {
            this.datescache = new Array()
        },
        formatDate: function(e, I, H) {
            return this.formatdate(e, I, H)
        },
        formatdate: function(Z, ad, U) {
            if (U == undefined || U == null) {
                U = this.defaultcalendar()
            }
            if (typeof Z === "string") {
                return Z
            }
            var J = Z.toString() + "_" + ad;
            if (this.datescache && this.datescache[J]) {
                return this.datescache[J]
            }
            if (!ad || !ad.length || ad === "i") {
                var af;
                af = this.formatDate(Z, U.patterns.F, U);
                return af
            }
            var aa = U.eras,
            H = ad === "s";
            ad = this.expandFormat(U, ad);
            af = [];
            var M, ab = ["0", "00", "000"],
            Q,
            R,
            e = /([^d]|^)(d|dd)([^d]|$)/g,
            ae = 0,
            W = this.getTokenRegExp(),
            I;
            function O(ag, aj) {
                var ai, ah = ag + "";
                if (aj > 1 && ah.length < aj) {
                    ai = (ab[aj - 2] + ah);
                    return ai.substr(ai.length - aj, aj)
                } else {
                    ai = ah
                }
                return ai
            }
            function ac() {
                if (Q || R) {
                    return Q
                }
                Q = e.test(ad);
                R = true;
                return Q
            }
            function K(ah, ag) {
                if (I) {
                    return I[ag]
                }
                if (ah.getMonth != undefined) {
                    switch (ag) {
                    case 0:
                        return ah.getFullYear();
                    case 1:
                        return ah.getMonth();
                    case 2:
                        return ah.getDate()
                    }
                }
            }
            for (;;) {
                var N = W.lastIndex,
                V = W.exec(ad);
                var S = ad.slice(N, V ? V.index: ad.length);
                ae += this.appendPreOrPostMatch(S, af);
                if (!V) {
                    break
                }
                if (ae % 2) {
                    af.push(V[0]);
                    continue
                }
                var X = V[0],
                L = X.length;
                switch (X) {
                case "ddd":
                case "dddd":
                    var T = (L === 3) ? U.days.namesAbbr: U.days.names;
                    af.push(T[Z.getDay()]);
                    break;
                case "d":
                case "dd":
                    Q = true;
                    af.push(O(K(Z, 2), L));
                    break;
                case "MMM":
                case "MMMM":
                    var Y = K(Z, 1);
                    af.push(U.months[L === 3 ? "namesAbbr": "names"][Y]);
                    break;
                case "M":
                case "MM":
                    af.push(O(K(Z, 1) + 1, L));
                    break;
                case "y":
                case "yy":
                case "yyyy":
                    Y = this.getEraYear(Z, U, this.getEra(Z, aa), H);
                    if (L < 4) {
                        Y = Y % 100
                    }
                    af.push(O(Y, L));
                    break;
                case "h":
                case "hh":
                    M = Z.getHours() % 12;
                    if (M === 0) {
                        M = 12
                    }
                    af.push(O(M, L));
                    break;
                case "H":
                case "HH":
                    af.push(O(Z.getHours(), L));
                    break;
                case "m":
                case "mm":
                    af.push(O(Z.getMinutes(), L));
                    break;
                case "s":
                case "ss":
                    af.push(O(Z.getSeconds(), L));
                    break;
                case "t":
                case "tt":
                    Y = Z.getHours() < 12 ? (U.AM ? U.AM[0] : " ") : (U.PM ? U.PM[0] : " ");
                    af.push(L === 1 ? Y.charAt(0) : Y);
                    break;
                case "f":
                case "ff":
                case "fff":
                    af.push(O(Z.getMilliseconds(), 3).substr(0, L));
                    break;
                case "z":
                case "zz":
                    M = Z.getTimezoneOffset() / 60;
                    af.push((M <= 0 ? "+": "-") + O(Math.floor(Math.abs(M)), L));
                    break;
                case "zzz":
                    M = Z.getTimezoneOffset() / 60;
                    af.push((M <= 0 ? "+": "-") + O(Math.floor(Math.abs(M)), 2) + ":" + O(Math.abs(Z.getTimezoneOffset() % 60), 2));
                    break;
                case "g":
                case "gg":
                    if (U.eras) {
                        af.push(U.eras[this.getEra(Z, aa)].name)
                    }
                    break;
                case "/":
                    af.push(U["/"]);
                    break;
                default:
                    throw "Invalid date format pattern '" + X + "'.";
                    break
                }
            }
            var P = af.join("");
            if (!this.datescache) {
                this.datescache = new Array()
            }
            this.datescache[J] = P;
            return P
        }
    });
    i.jqx.data = {};
    var l, E, p = /#.*$/,
    a = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,
    f = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,
    j = /^(?:GET|HEAD)$/,
    o = /^\/\//,
    k = /\?/,
    b = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
    d = /([?&])_=[^&]*/,
    h = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,
    t = /\s+/,
    F = i.fn.load,
    G = {},
    C = {},
    q = ["*/"] + ["*"];
    try {
        E = location.href
    } catch(A) {
        E = document.createElement("a");
        E.href = "";
        E = E.href
    }
    l = h.exec(E.toLowerCase()) || [];
    function r(e) {
        return function(K, M) {
            if (typeof K !== "string") {
                M = K;
                K = "*"
            }
            var H, N, O, J = K.toLowerCase().split(t),
            I = 0,
            L = J.length;
            if (i.isFunction(M)) {
                for (; I < L; I++) {
                    H = J[I];
                    O = /^\+/.test(H);
                    if (O) {
                        H = H.substr(1) || "*"
                    }
                    N = e[H] = e[H] || [];
                    N[O ? "unshift": "push"](M)
                }
            }
        }
    }
    function v(H, Q, L, O, N, J) {
        N = N || Q.dataTypes[0];
        J = J || {};
        J[N] = true;
        var P, M = H[N],
        I = 0,
        e = M ? M.length: 0,
        K = (H === G);
        for (; I < e && (K || !P); I++) {
            P = M[I](Q, L, O);
            if (typeof P === "string") {
                if (!K || J[P]) {
                    P = undefined
                } else {
                    Q.dataTypes.unshift(P);
                    P = v(H, Q, L, O, P, J)
                }
            }
        }
        if ((K || !P) && !J["*"]) {
            P = v(H, Q, L, O, "*", J)
        }
        return P
    }
    function u(I, J) {
        var H, e, K = i.jqx.data.ajaxSettings.flatOptions || {};
        for (H in J) {
            if (J[H] !== undefined) { (K[H] ? I: (e || (e = {})))[H] = J[H]
            }
        }
        if (e) {
            i.extend(true, I, e)
        }
    }
    i.extend(i.jqx.data, {
        ajaxSetup: function(H, e) {
            if (e) {
                u(H, i.jqx.data.ajaxSettings)
            } else {
                e = H;
                H = i.jqx.data.ajaxSettings
            }
            u(H, e);
            return H
        },
        ajaxSettings: {
            url: E,
            isLocal: f.test(l[1]),
            global: true,
            type: "GET",
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            processData: true,
            async: true,
            accepts: {
                xml: "application/xml, text/xml",
                html: "text/html",
                text: "text/plain",
                json: "application/json, text/javascript",
                "*": q
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText"
            },
            converters: {
                "* text": window.String,
                "text html": true,
                "text json": i.parseJSON,
                "text xml": i.parseXML
            },
            flatOptions: {
                context: true,
                url: true
            }
        },
        ajaxPrefilter: r(G),
        ajaxTransport: r(C),
        ajax: function(M, J) {
            if (typeof M === "object") {
                J = M;
                M = undefined
            }
            J = J || {};
            var P, ad, K, Y, R, V, I, X, Q = i.jqx.data.ajaxSetup({},
            J),
            af = Q.context || Q,
            T = af !== Q && (af.nodeType || af instanceof i) ? i(af) : i.event,
            ae = i.Deferred(),
            aa = i.Callbacks("once memory"),
            N = Q.statusCode || {},
            U = {},
            ab = {},
            L = 0,
            O = "canceled",
            W = {
                readyState: 0,
                setRequestHeader: function(ag, ah) {
                    if (!L) {
                        var e = ag.toLowerCase();
                        ag = ab[e] = ab[e] || ag;
                        U[ag] = ah
                    }
                    return this
                },
                getAllResponseHeaders: function() {
                    return L === 2 ? ad: null
                },
                getResponseHeader: function(ag) {
                    var e;
                    if (L === 2) {
                        if (!K) {
                            K = {};
                            while ((e = a.exec(ad))) {
                                K[e[1].toLowerCase()] = e[2]
                            }
                        }
                        e = K[ag.toLowerCase()]
                    }
                    return e === undefined ? null: e
                },
                overrideMimeType: function(e) {
                    if (!L) {
                        Q.mimeType = e
                    }
                    return this
                },
                abort: function(e) {
                    e = e || O;
                    if (Y) {
                        Y.abort(e)
                    }
                    S(0, e);
                    return this
                }
            };
            function S(ak, ag, al, ai) {
                var e, ao, am, aj, an, ah = ag;
                if (L === 2) {
                    return
                }
                L = 2;
                if (R) {
                    clearTimeout(R)
                }
                Y = undefined;
                ad = ai || "";
                W.readyState = ak > 0 ? 4 : 0;
                if (al) {
                    aj = B(Q, W, al)
                }
                if (ak >= 200 && ak < 300 || ak === 304) {
                    if (Q.ifModified) {
                        an = W.getResponseHeader("Last-Modified");
                        if (an) {
                            i.lastModified[P] = an
                        }
                        an = W.getResponseHeader("Etag");
                        if (an) {
                            i.etag[P] = an
                        }
                    }
                    if (ak === 304) {
                        ah = "notmodified";
                        e = true
                    } else {
                        e = c(Q, aj);
                        ah = e.state;
                        ao = e.data;
                        am = e.error;
                        e = !am
                    }
                } else {
                    am = ah;
                    if (!ah || ak) {
                        ah = "error";
                        if (ak < 0) {
                            ak = 0
                        }
                    }
                }
                W.status = ak;
                W.statusText = (ag || ah) + "";
                if (e) {
                    ae.resolveWith(af, [ao, ah, W])
                } else {
                    ae.rejectWith(af, [W, ah, am])
                }
                W.statusCode(N);
                N = undefined;
                if (I) {
                    T.trigger("ajax" + (e ? "Success": "Error"), [W, Q, e ? ao: am])
                }
                aa.fireWith(af, [W, ah]);
                if (I) {
                    T.trigger("ajaxComplete", [W, Q]);
                    if (! (--i.active)) {
                        i.event.trigger("ajaxStop")
                    }
                }
            }
            ae.promise(W);
            W.success = W.done;
            W.error = W.fail;
            W.complete = aa.add;
            W.statusCode = function(ag) {
                if (ag) {
                    var e;
                    if (L < 2) {
                        for (e in ag) {
                            N[e] = [N[e], ag[e]]
                        }
                    } else {
                        e = ag[W.status];
                        W.always(e)
                    }
                }
                return this
            };
            Q.url = ((M || Q.url) + "").replace(p, "").replace(o, l[1] + "//");
            Q.dataTypes = i.trim(Q.dataType || "*").toLowerCase().split(t);
            if (Q.crossDomain == null) {
                V = h.exec(Q.url.toLowerCase());
                Q.crossDomain = !!(V && (V[1] !== l[1] || V[2] !== l[2] || (V[3] || (V[1] === "http:" ? 80 : 443)) != (l[3] || (l[1] === "http:" ? 80 : 443))))
            }
            if (Q.data && Q.processData && typeof Q.data !== "string") {
                Q.data = i.param(Q.data, Q.traditional)
            }
            v(G, Q, J, W);
            if (L === 2) {
                return W
            }
            I = Q.global;
            Q.type = Q.type.toUpperCase();
            Q.hasContent = !j.test(Q.type);
            if (I && i.active++===0) {
                i.event.trigger("ajaxStart")
            }
            if (!Q.hasContent) {
                if (Q.data) {
                    Q.url += (k.test(Q.url) ? "&": "?") + Q.data;
                    delete Q.data
                }
                P = Q.url;
                if (Q.cache === false) {
                    var H = i.now(),
                    ac = Q.url.replace(d, "$1_=" + H);
                    Q.url = ac + ((ac === Q.url) ? (k.test(Q.url) ? "&": "?") + "_=" + H: "")
                }
            }
            if (Q.data && Q.hasContent && Q.contentType !== false || J.contentType) {
                W.setRequestHeader("Content-Type", Q.contentType)
            }
            if (Q.ifModified) {
                P = P || Q.url;
                if (i.lastModified[P]) {
                    W.setRequestHeader("If-Modified-Since", i.lastModified[P])
                }
                if (i.etag[P]) {
                    W.setRequestHeader("If-None-Match", i.etag[P])
                }
            }
            W.setRequestHeader("Accept", Q.dataTypes[0] && Q.accepts[Q.dataTypes[0]] ? Q.accepts[Q.dataTypes[0]] + (Q.dataTypes[0] !== "*" ? ", " + q + "; q=0.01": "") : Q.accepts["*"]);
            for (X in Q.headers) {
                W.setRequestHeader(X, Q.headers[X])
            }
            if (Q.beforeSend && (Q.beforeSend.call(af, W, Q) === false || L === 2)) {
                return W.abort()
            }
            O = "abort";
            for (X in {
                success: 1,
                error: 1,
                complete: 1
            }) {
                W[X](Q[X])
            }
            Y = v(C, Q, J, W);
            if (!Y) {
                S( - 1, "No Transport")
            } else {
                W.readyState = 1;
                if (I) {
                    T.trigger("ajaxSend", [W, Q])
                }
                if (Q.async && Q.timeout > 0) {
                    R = setTimeout(function() {
                        W.abort("timeout")
                    },
                    Q.timeout)
                }
                try {
                    L = 1;
                    Y.send(U, S)
                } catch(Z) {
                    if (L < 2) {
                        S( - 1, Z)
                    } else {
                        throw Z
                    }
                }
            }
            return W
        },
        active: 0,
        lastModified: {},
        etag: {}
    });
    function B(P, O, L) {
        var K, M, J, e, H = P.contents,
        N = P.dataTypes,
        I = P.responseFields;
        for (M in I) {
            if (M in L) {
                O[I[M]] = L[M]
            }
        }
        while (N[0] === "*") {
            N.shift();
            if (K === undefined) {
                K = P.mimeType || O.getResponseHeader("content-type")
            }
        }
        if (K) {
            for (M in H) {
                if (H[M] && H[M].test(K)) {
                    N.unshift(M);
                    break
                }
            }
        }
        if (N[0] in L) {
            J = N[0]
        } else {
            for (M in L) {
                if (!N[0] || P.converters[M + " " + N[0]]) {
                    J = M;
                    break
                }
                if (!e) {
                    e = M
                }
            }
            J = J || e
        }
        if (J) {
            if (J !== N[0]) {
                N.unshift(J)
            }
            return L[J]
        }
    }
    function c(R, J) {
        var P, H, N, L, O = R.dataTypes.slice(),
        I = O[0],
        Q = {},
        K = 0;
        if (R.dataFilter) {
            J = R.dataFilter(J, R.dataType)
        }
        if (O[1]) {
            for (P in R.converters) {
                Q[P.toLowerCase()] = R.converters[P]
            }
        }
        for (; (N = O[++K]);) {
            if (N !== "*") {
                if (I !== "*" && I !== N) {
                    P = Q[I + " " + N] || Q["* " + N];
                    if (!P) {
                        for (H in Q) {
                            L = H.split(" ");
                            if (L[1] === N) {
                                P = Q[I + " " + L[0]] || Q["* " + L[0]];
                                if (P) {
                                    if (P === true) {
                                        P = Q[H]
                                    } else {
                                        if (Q[H] !== true) {
                                            N = L[0];
                                            O.splice(K--, 0, N)
                                        }
                                    }
                                    break
                                }
                            }
                        }
                    }
                    if (P !== true) {
                        if (P && R["throws"]) {
                            J = P(J)
                        } else {
                            try {
                                J = P(J)
                            } catch(M) {
                                return {
                                    state: "parsererror",
                                    error: P ? M: "No conversion from " + I + " to " + N
                                }
                            }
                        }
                    }
                }
                I = N
            }
        }
        return {
            state: "success",
            data: J
        }
    }
    var y = [],
    n = /\?/,
    D = /(=)\?(?=&|$)|\?\?/,
    z = i.now();
    i.jqx.data.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var e = y.pop() || (i.expando + "_" + (z++));
            this[e] = true;
            return e
        }
    });
    i.jqx.data.ajaxPrefilter("json jsonp",
    function(Q, L, P) {
        var O, e, N, J = Q.data,
        H = Q.url,
        I = Q.jsonp !== false,
        M = I && D.test(H),
        K = I && !M && typeof J === "string" && !(Q.contentType || "").indexOf("application/x-www-form-urlencoded") && D.test(J);
        if (Q.dataTypes[0] === "jsonp" || M || K) {
            O = Q.jsonpCallback = i.isFunction(Q.jsonpCallback) ? Q.jsonpCallback() : Q.jsonpCallback;
            e = window[O];
            if (M) {
                Q.url = H.replace(D, "$1" + O)
            } else {
                if (K) {
                    Q.data = J.replace(D, "$1" + O)
                } else {
                    if (I) {
                        Q.url += (n.test(H) ? "&": "?") + Q.jsonp + "=" + O
                    }
                }
            }
            Q.converters["script json"] = function() {
                if (!N) {
                    i.error(O + " was not called")
                }
                return N[0]
            };
            Q.dataTypes[0] = "json";
            window[O] = function() {
                N = arguments
            };
            P.always(function() {
                window[O] = e;
                if (Q[O]) {
                    Q.jsonpCallback = L.jsonpCallback;
                    y.push(O)
                }
                if (N && i.isFunction(e)) {
                    e(N[0])
                }
                N = e = undefined
            });
            return "script"
        }
    });
    i.jqx.data.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /javascript|ecmascript/
        },
        converters: {
            "text script": function(e) {
                i.globalEval(e);
                return e
            }
        }
    });
    i.jqx.data.ajaxPrefilter("script",
    function(e) {
        if (e.cache === undefined) {
            e.cache = false
        }
        if (e.crossDomain) {
            e.type = "GET";
            e.global = false
        }
    });
    i.jqx.data.ajaxTransport("script",
    function(I) {
        if (I.crossDomain) {
            var e, H = document.head || document.getElementsByTagName("head")[0] || document.documentElement;
            return {
                send: function(J, K) {
                    e = document.createElement("script");
                    e.async = "async";
                    if (I.scriptCharset) {
                        e.charset = I.scriptCharset
                    }
                    e.src = I.url;
                    e.onload = e.onreadystatechange = function(M, L) {
                        if (L || !e.readyState || /loaded|complete/.test(e.readyState)) {
                            e.onload = e.onreadystatechange = null;
                            if (H && e.parentNode) {
                                H.removeChild(e)
                            }
                            e = undefined;
                            if (!L) {
                                K(200, "success")
                            }
                        }
                    };
                    H.insertBefore(e, H.firstChild)
                },
                abort: function() {
                    if (e) {
                        e.onload(0, 1)
                    }
                }
            }
        }
    });
    var w, x = window.ActiveXObject ?
    function() {
        for (var e in w) {
            w[e](0, 1)
        }
    }: false,
    m = 0;
    function g() {
        try {
            return new window.XMLHttpRequest()
        } catch(H) {}
    }
    function s() {
        try {
            return new window.ActiveXObject("Microsoft.XMLHTTP")
        } catch(H) {}
    }
    i.jqx.data.ajaxSettings.xhr = window.ActiveXObject ?
    function() {
        return ! this.isLocal && g() || s()
    }: g; (function(e) {
        i.extend(i.support, {
            ajax: !!e,
            cors: !!e && ("withCredentials" in e)
        })
    })(i.jqx.data.ajaxSettings.xhr());
    if (i.support.ajax) {
        i.jqx.data.ajaxTransport(function(e) {
            if (!e.crossDomain || i.support.cors) {
                var H;
                return {
                    send: function(N, I) {
                        var L, K, M = e.xhr();
                        if (e.username) {
                            M.open(e.type, e.url, e.async, e.username, e.password)
                        } else {
                            M.open(e.type, e.url, e.async)
                        }
                        if (e.xhrFields) {
                            for (K in e.xhrFields) {
                                M[K] = e.xhrFields[K]
                            }
                        }
                        if (e.mimeType && M.overrideMimeType) {
                            M.overrideMimeType(e.mimeType)
                        }
                        if (!e.crossDomain && !N["X-Requested-With"]) {
                            N["X-Requested-With"] = "XMLHttpRequest"
                        }
                        try {
                            for (K in N) {
                                M.setRequestHeader(K, N[K])
                            }
                        } catch(J) {}
                        M.send((e.hasContent && e.data) || null);
                        H = function(W, Q) {
                            var R, P, O, U, T;
                            try {
                                if (H && (Q || M.readyState === 4)) {
                                    H = undefined;
                                    if (L) {
                                        M.onreadystatechange = i.noop;
                                        if (x) {
                                            delete w[L]
                                        }
                                    }
                                    if (Q) {
                                        if (M.readyState !== 4) {
                                            M.abort()
                                        }
                                    } else {
                                        R = M.status;
                                        O = M.getAllResponseHeaders();
                                        U = {};
                                        T = M.responseXML;
                                        if (T && T.documentElement) {
                                            U.xml = T
                                        }
                                        try {
                                            U.text = M.responseText
                                        } catch(V) {}
                                        try {
                                            P = M.statusText
                                        } catch(V) {
                                            P = ""
                                        }
                                        if (!R && e.isLocal && !e.crossDomain) {
                                            R = U.text ? 200 : 404
                                        } else {
                                            if (R === 1223) {
                                                R = 204
                                            }
                                        }
                                    }
                                }
                            } catch(S) {
                                if (!Q) {
                                    I( - 1, S)
                                }
                            }
                            if (U) {
                                I(R, P, U, O)
                            }
                        };
                        if (!e.async) {
                            H()
                        } else {
                            if (M.readyState === 4) {
                                setTimeout(H, 0)
                            } else {
                                L = ++m;
                                if (x) {
                                    if (!w) {
                                        w = {};
                                        i(window).unload(x)
                                    }
                                    w[L] = H
                                }
                                M.onreadystatechange = H
                            }
                        }
                    },
                    abort: function() {
                        if (H) {
                            H(0, 1)
                        }
                    }
                }
            }
        })
    }
    i.jqx.filter = function() {
        this.operator = "and";
        var M = 0;
        var J = 1;
        var P = ["EMPTY", "NOT_EMPTY", "CONTAINS", "CONTAINS_CASE_SENSITIVE", "DOES_NOT_CONTAIN", "DOES_NOT_CONTAIN_CASE_SENSITIVE", "STARTS_WITH", "STARTS_WITH_CASE_SENSITIVE", "ENDS_WITH", "ENDS_WITH_CASE_SENSITIVE", "EQUAL", "EQUAL_CASE_SENSITIVE", "NULL", "NOT_NULL"];
        var R = ["EQUAL", "NOT_EQUAL", "LESS_THAN", "LESS_THAN_OR_EQUAL", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", "NULL", "NOT_NULL"];
        var S = ["EQUAL", "NOT_EQUAL", "LESS_THAN", "LESS_THAN_OR_EQUAL", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", "NULL", "NOT_NULL"];
        var L = ["EQUAL", "NOT_EQUAL"];
        var K = new Array();
        var Q = new Array();
        this.evaluate = function(X) {
            var V = true;
            for (var W = 0; W < K.length; W++) {
                var U = K[W].evaluate(X);
                if (W == 0) {
                    V = U
                } else {
                    if (Q[W] == J || Q[W] == "or") {
                        V = V || U
                    } else {
                        V = V && U
                    }
                }
            }
            return V
        };
        this.getfilterscount = function() {
            return K.length
        };
        this.setoperatorsbyfiltertype = function(U, V) {
            switch (U) {
            case "numericfilter":
                R = V;
                break;
            case "stringfilter":
                P = V;
                break;
            case "datefilter":
                S = V;
                break;
            case "booleanfilter":
                L = V;
                break
            }
        };
        this.getoperatorsbyfiltertype = function(U) {
            var V = new Array();
            switch (U) {
            case "numericfilter":
                V = R.slice(0);
                break;
            case "stringfilter":
                V = P.slice(0);
                break;
            case "datefilter":
                V = S.slice(0);
                break;
            case "booleanfilter":
                V = L.slice(0);
                break
            }
            return V
        };
        var O = function() {
            var U = function() {
                return (((1 + Math.random()) * 65536) | 0).toString(16).substring(1)
            };
            return (U() + "-" + U() + "-" + U())
        };
        this.createfilter = function(Y, V, X, W, U, Z) {
            if (Y == null || Y == undefined) {
                return null
            }
            switch (Y) {
            case "numericfilter":
                return new N(V, X.toUpperCase());
            case "stringfilter":
                return new T(V, X.toUpperCase());
            case "datefilter":
                return new H(V, X.toUpperCase(), U, Z);
            case "booleanfilter":
                return new I(V, X.toUpperCase());
            case "custom":
                return new e(V, X.toUpperCase(), W)
            }
            throw new Error("jqxGrid: There is no such filter type. The available filter types are: 'numericfilter', 'stringfilter', 'datefilter' and 'booleanfilter'");
            return null
        };
        this.getfilters = function() {
            var U = new Array();
            for (var V = 0; V < K.length; V++) {
                var W = {
                    value: K[V].filtervalue,
                    condition: K[V].comparisonoperator,
                    operator: Q[V],
                    type: K[V].type
                };
                if (K[V].data) {
                    W.id = K[V].data
                }
                U[V] = W
            }
            return U
        };
        this.addfilter = function(U, V) {
            K[K.length] = V;
            V.key = O();
            Q[Q.length] = U
        };
        this.removefilter = function(V) {
            for (var U = 0; U < K.length; U++) {
                if (K[U].key == V.key) {
                    K.splice(U, 1);
                    Q.splice(U, 1);
                    break
                }
            }
        };
        this.getoperatorat = function(U) {
            if (U == undefined || U == null) {
                return null
            }
            if (U < 0 || U > K.length) {
                return null
            }
            return Q[U]
        };
        this.setoperatorat = function(V, U) {
            if (V == undefined || V == null) {
                return null
            }
            if (V < 0 || V > K.length) {
                return null
            }
            Q[U] = U
        };
        this.getfilterat = function(U) {
            if (U == undefined || U == null) {
                return null
            }
            if (U < 0 || U > K.length) {
                return null
            }
            return K[U]
        };
        this.setfilterat = function(U, V) {
            if (U == undefined || U == null) {
                return null
            }
            if (U < 0 || U > K.length) {
                return null
            }
            V.key = O();
            K[U] = V
        };
        this.clear = function() {
            K = new Array();
            Q = new Array()
        };
        var T = function(V, U) {
            this.filtervalue = V;
            this.comparisonoperator = U;
            this.type = "stringfilter";
            this.evaluate = function(af) {
                var ae = this.filtervalue;
                var al = this.comparisonoperator;
                if (af == null || af == undefined || af == "") {
                    if (al == "NULL") {
                        return true
                    }
                    if (al == "EQUAL" && af == ae) {
                        return true
                    }
                    if (al == "NOT_EQUAL" && af != ae) {
                        return true
                    }
                    if (al != "EMPTY") {
                        return false
                    } else {
                        if (af == "") {
                            return true
                        }
                    }
                }
                var an = "";
                try {
                    an = af.toString()
                } catch(ag) {
                    return true
                }
                var am = function(ap, ao) {
                    switch (al) {
                    case "EQUAL":
                        return i.jqx.string.equalsIgnoreCase(ap, ao);
                    case "EQUAL_CASE_SENSITIVE":
                        return i.jqx.string.equals(ap, ao);
                    case "NOT_EQUAL":
                        return ! i.jqx.string.equalsIgnoreCase(ap, ao);
                    case "NOT_EQUAL_CASE_SENSITIVE":
                        return ! i.jqx.string.equals(ap, ao);
                    case "CONTAINS":
                        return i.jqx.string.containsIgnoreCase(ap, ao);
                    case "CONTAINS_CASE_SENSITIVE":
                        return i.jqx.string.contains(ap, ao);
                    case "DOES_NOT_CONTAIN":
                        return ! i.jqx.string.containsIgnoreCase(ap, ao);
                    case "DOES_NOT_CONTAIN_CASE_SENSITIVE":
                        return ! i.jqx.string.contains(ap, ao);
                    case "EMPTY":
                        return ap == "";
                    case "NOT_EMPTY":
                        return ap != "";
                    case "NOT_NULL":
                        return ap != null;
                    case "STARTS_WITH":
                        return i.jqx.string.startsWithIgnoreCase(ap, ao);
                    case "ENDS_WITH":
                        return i.jqx.string.endsWithIgnoreCase(ap, ao);
                    case "ENDS_WITH_CASE_SENSITIVE":
                        return i.jqx.string.endsWith(ap, ao);
                    case "STARTS_WITH_CASE_SENSITIVE":
                        return i.jqx.string.startsWith(ap, ao);
                    default:
                        return false
                    }
                };
                var Z = new Array();
                if (ae && ae.indexOf) {
                    if (ae.indexOf("|") >= 0 || ae.indexOf(" AND ") >= 0 || ae.indexOf(" OR ") >= 0 || ae.indexOf(" and ") >= 0 || ae.indexOf(" or ") >= 0) {
                        var aa = am(an, ae);
                        if (aa) {
                            return aa
                        }
                        var ab = ae.indexOf(" AND ") >= 0 ? ae.split(" AND ") : new Array();
                        var Y = ae.indexOf(" OR ") >= 0 ? ae.split(" OR ") : new Array();
                        var X = ae.indexOf(" and ") >= 0 ? ae.split(" and ") : new Array();
                        var ac = ae.indexOf(" or ") >= 0 ? ae.split(" or ") : new Array();
                        var W = ae.indexOf("|") >= 0 ? ae.split("|") : new Array();
                        if (W.length > 0) {
                            for (var ak = 0; ak < W.length; ak++) {
                                W[ak] = i.trim(W[ak])
                            }
                        }
                        var aj = ae.indexOf(" ") >= 0 ? ae.split(" ") : new Array();
                        if (aj.length > 0) {
                            for (var ak = 0; ak < aj.length; ak++) {
                                aj[ak] = i.trim(aj[ak])
                            }
                        }
                        ab = ab.concat(aj);
                        ab = ab.concat(X);
                        Y = Y.concat(W);
                        Y = Y.concat(ac);
                        if (ab.length > 0) {
                            for (var ak = 0; ak < ab.length; ak++) {
                                if (!ab[ak].indexOf(" OR ") >= 0) {
                                    Z.push(ab[ak])
                                }
                            }
                        }
                        if (Y.length > 0) {
                            for (var ak = 0; ak < Y.length; ak++) {
                                if (!Y[ak].indexOf(" AND ") >= 0) {
                                    Z.push(Y[ak])
                                }
                            }
                        }
                        var ai = undefined;
                        for (var ah = 0; ah < Z.length; ah++) {
                            var af = Z[ah];
                            var aa = am(an, af);
                            var ad = ah < ab.length ? "and": "or";
                            if (ai == undefined) {
                                ai = aa
                            } else {
                                if (ad == "or") {
                                    ai = ai || aa
                                } else {
                                    ai = ai && aa
                                }
                            }
                        }
                        return ai
                    }
                }
                return am(an, ae)
            }
        };
        var I = function(V, U) {
            this.filtervalue = V;
            this.comparisonoperator = U;
            this.type = "booleanfilter";
            this.evaluate = function(Y) {
                var X = this.filtervalue;
                var W = this.comparisonoperator;
                if (Y == null || Y == undefined) {
                    if (W == "NULL") {
                        return true
                    }
                    return false
                }
                var Z = Y;
                switch (W) {
                case "EQUAL":
                    return Z == X || Z.toString() == X.toString();
                case "NOT_EQUAL":
                    return Z != X && Z.toString() != X.toString();
                default:
                    return false
                }
            }
        };
        var N = function(V, U) {
            this.filtervalue = V;
            this.comparisonoperator = U;
            this.type = "numericfilter";
            this.evaluate = function(ag) {
                var af = this.filtervalue;
                var al = this.comparisonoperator;
                if (ag === null || ag === undefined || ag === "") {
                    if (al == "NOT_NULL") {
                        return false
                    }
                    if (al == "NULL") {
                        return true
                    } else {
                        switch (al) {
                        case "EQUAL":
                            return ag == af;
                        case "NOT_EQUAL":
                            return ag != af
                        }
                        return false
                    }
                } else {
                    if (al == "NULL") {
                        return false
                    }
                    if (al == "NOT_NULL") {
                        return true
                    }
                }
                var an = ag;
                try {
                    an = parseFloat(an)
                } catch(ah) {
                    if (ag.toString() != "") {
                        return false
                    }
                }
                var am = function(ap, ao) {
                    switch (al) {
                    case "EQUAL":
                        return ap == ao;
                    case "NOT_EQUAL":
                        return ap != ao;
                    case "GREATER_THAN":
                        return ap > ao;
                    case "GREATER_THAN_OR_EQUAL":
                        return ap >= ao;
                    case "LESS_THAN":
                        return ap < ao;
                    case "LESS_THAN_OR_EQUAL":
                        return ap <= ao;
                    case "STARTS_WITH":
                        return i.jqx.string.startsWithIgnoreCase(ap.toString(), ao.toString());
                    case "ENDS_WITH":
                        return i.jqx.string.endsWithIgnoreCase(ap.toString(), ao.toString());
                    case "ENDS_WITH_CASE_SENSITIVE":
                        return i.jqx.string.endsWith(ap.toString(), ao.toString());
                    case "STARTS_WITH_CASE_SENSITIVE":
                        return i.jqx.string.startsWith(ap.toString(), ao.toString());
                    case "CONTAINS":
                        return i.jqx.string.containsIgnoreCase(ap.toString(), ao.toString());
                    case "CONTAINS_CASE_SENSITIVE":
                        return i.jqx.string.contains(ap.toString(), ao.toString());
                    case "DOES_NOT_CONTAIN":
                        return ! i.jqx.string.containsIgnoreCase(ap.toString(), ao.toString());
                    case "DOES_NOT_CONTAIN_CASE_SENSITIVE":
                        return ! i.jqx.string.contains(ap.toString(), ao.toString());
                    default:
                        return true
                    }
                };
                var aa = new Array();
                if (af && af.indexOf) {
                    if (af.indexOf("|") >= 0 || af.indexOf(" AND ") >= 0 || af.indexOf(" OR ") >= 0 || af.indexOf(" and ") >= 0 || af.indexOf(" or ") >= 0) {
                        var ab = am(an, af);
                        if (ab) {
                            return ab
                        }
                        af = af.toString();
                        var ac = af.indexOf(" AND ") >= 0 ? af.split(" AND ") : new Array();
                        var Z = af.indexOf(" OR ") >= 0 ? af.split(" OR ") : new Array();
                        var Y = af.indexOf(" and ") >= 0 ? af.split(" and ") : new Array();
                        var ad = af.indexOf(" or ") >= 0 ? af.split(" or ") : new Array();
                        ac = ac.concat(Y);
                        Z = Z.concat(ad);
                        var X = af.indexOf("|") >= 0 ? af.split("|") : new Array();
                        if (X.length > 0) {
                            for (var ak = 0; ak < X.length; ak++) {
                                X[ak] = i.trim(X[ak])
                            }
                        }
                        Z = Z.concat(X);
                        if (ac.length > 0) {
                            for (var ak = 0; ak < ac.length; ak++) {
                                if (!ac[ak].indexOf(" OR ") >= 0) {
                                    aa.push(ac[ak])
                                }
                            }
                        }
                        if (Z.length > 0) {
                            for (var ak = 0; ak < Z.length; ak++) {
                                if (!Z[ak].indexOf(" AND ") >= 0) {
                                    aa.push(Z[ak])
                                }
                            }
                        }
                        var aj = undefined;
                        for (var ai = 0; ai < aa.length; ai++) {
                            var ag = aa[ai];
                            if (ag && ag.indexOf && ag.indexOf("..") >= 0) {
                                var W = ag.toString().split("..");
                                if (W.length == 2) {
                                    ab = an >= W[0] && an <= W[1]
                                }
                            } else {
                                var ab = am(an, ag)
                            }
                            var ae = ai < ac.length ? "and": "or";
                            if (aj == undefined) {
                                aj = ab
                            } else {
                                if (ae == "or") {
                                    aj = aj || ab
                                } else {
                                    aj = aj && ab
                                }
                            }
                        }
                        return aj
                    }
                }
                if (af && af.indexOf && af.indexOf("..") >= 0) {
                    aa = af.toString().split("..");
                    if (aa.length == 2) {
                        return an >= aa[0] && an <= aa[1]
                    }
                }
                return am(an, af)
            }
        };
        var H = function(X, V, W, aa) {
            this.filtervalue = X;
            this.type = "datefilter";
            if (W != undefined && aa != undefined) {
                var Y = i.jqx.dataFormat.parsedate(X, W, aa);
                if (Y != null) {
                    this.filterdate = Y
                } else {
                    var U = i.jqx.dataFormat.tryparsedate(X, aa);
                    if (U != null) {
                        this.filterdate = U
                    }
                }
            } else {
                var Z = new Date(X);
                if (Z.toString() == "NaN" || Z.toString() == "Invalid Date") {
                    this.filterdate = i.jqx.dataFormat.tryparsedate(X)
                } else {
                    this.filterdate = Z
                }
            }
            if (!this.filterdate) {
                var Z = new Date(X);
                if (Z.toString() == "NaN" || Z.toString() == "Invalid Date") {
                    this.filterdate = i.jqx.dataFormat.tryparsedate(X)
                } else {
                    this.filterdate = Z
                }
            }
            this.comparisonoperator = V;
            this.evaluate = function(an) {
                var am = this.filtervalue;
                var av = this.comparisonoperator;
                if (an == null || an == undefined || an == "") {
                    if (av == "NOT_NULL") {
                        return false
                    }
                    if (av == "NULL") {
                        return true
                    } else {
                        switch (av) {
                        case "EQUAL":
                            return an == am;
                        case "NOT_EQUAL":
                            return an != am
                        }
                        return false
                    }
                } else {
                    if (av == "NULL") {
                        return false
                    }
                    if (av == "NOT_NULL") {
                        return true
                    }
                }
                var ax = new Date();
                ax.setFullYear(1900, 0, 1);
                ax.setHours(12, 0, 0, 0);
                try {
                    var au = new Date(an);
                    if (au.toString() == "NaN" || au.toString() == "Invalid Date") {
                        an = i.jqx.dataFormat.tryparsedate(an)
                    } else {
                        an = au
                    }
                    ax = an;
                    var ar = false;
                    if (W != undefined && aa != undefined) {
                        if (W.indexOf("t") >= 0 || W.indexOf("T") >= 0 || W.indexOf(":") >= 0 || W.indexOf("f") >= 0) {
                            ar = true;
                            if (am && am.toString().indexOf(":") == -1) {
                                var ai = i.jqx.dataFormat.tryparsedate(am.toString() + ":00", aa);
                                if (ai != null) {
                                    this.filterdate = ai
                                }
                            }
                        }
                    }
                    if (!ar) {
                        ax.setHours(0);
                        ax.setMinutes(0);
                        ax.setSeconds(0)
                    }
                } catch(ao) {
                    if (an.toString() != "") {
                        return false
                    }
                }
                if (this.filterdate != null) {
                    am = this.filterdate
                } else {
                    if (am.indexOf) {
                        if (am.indexOf(":") != -1 || !isNaN(parseInt(am))) {
                            var ah = new Date(ax);
                            ah.setHours(12, 0, 0, 0);
                            var ag = am.split(":");
                            for (var at = 0; at < ag.length; at++) {
                                if (at == 0) {
                                    ah.setHours(ag[at])
                                }
                                if (at == 1) {
                                    ah.setMinutes(ag[at])
                                }
                                if (at == 2) {
                                    ah.setSeconds(ag[at])
                                }
                            }
                            am = ah
                        }
                    }
                }
                if (ar) {
                    if (am && am.setFullYear) {
                        if (ax && ax.getFullYear) {
                            if (W.indexOf("d") == -1 && W.indexOf("M") == -1 && W.indexOf("y") == -1) {
                                am.setFullYear(ax.getFullYear(), ax.getMonth(), ax.getDate())
                            }
                        }
                    }
                }
                var aw = function(az, ay) {
                    if (az == null) {
                        az = ""
                    }
                    switch (av) {
                    case "EQUAL":
                        return az.toString() == ay.toString();
                    case "NOT_EQUAL":
                        return az.toString() != ay.toString();
                    case "GREATER_THAN":
                        return az > ay;
                    case "GREATER_THAN_OR_EQUAL":
                        return az >= ay;
                    case "LESS_THAN":
                        return az < ay;
                    case "LESS_THAN_OR_EQUAL":
                        return az <= ay;
                    case "STARTS_WITH":
                        return i.jqx.string.startsWithIgnoreCase(az.toString(), ay.toString());
                    case "ENDS_WITH":
                        return i.jqx.string.endsWithIgnoreCase(az.toString(), ay.toString());
                    case "ENDS_WITH_CASE_SENSITIVE":
                        return i.jqx.string.endsWith(az.toString(), ay.toString());
                    case "STARTS_WITH_CASE_SENSITIVE":
                        return i.jqx.string.startsWith(az.toString(), ay.toString());
                    case "CONTAINS":
                        return i.jqx.string.containsIgnoreCase(az.toString(), ay.toString());
                    case "CONTAINS_CASE_SENSITIVE":
                        return i.jqx.string.contains(az.toString(), ay.toString());
                    case "DOES_NOT_CONTAIN":
                        return ! i.jqx.string.containsIgnoreCase(az.toString(), ay.toString());
                    case "DOES_NOT_CONTAIN_CASE_SENSITIVE":
                        return ! i.jqx.string.contains(az.toString(), ay.toString());
                    default:
                        return true
                    }
                };
                var af = new Array();
                if (am && am.indexOf) {
                    if (am.indexOf("|") >= 0 || am.indexOf(" AND ") >= 0 || am.indexOf(" OR ") >= 0 || am.indexOf(" and ") >= 0 || am.indexOf(" or ") >= 0) {
                        var ai = aw(ax, am);
                        if (ai) {
                            return ai
                        }
                        var aj = am.indexOf(" AND ") >= 0 ? am.split(" AND ") : new Array();
                        var ae = am.indexOf(" OR ") >= 0 ? am.split(" OR ") : new Array();
                        var ad = am.indexOf(" and ") >= 0 ? am.split(" and ") : new Array();
                        var ak = am.indexOf(" or ") >= 0 ? am.split(" or ") : new Array();
                        aj = aj.concat(ad);
                        ae = ae.concat(ak);
                        var ac = am.indexOf("|") >= 0 ? am.split("|") : new Array();
                        if (ac.length > 0) {
                            for (var at = 0; at < ac.length; at++) {
                                ac[at] = i.trim(ac[at])
                            }
                        }
                        ae = ae.concat(ac);
                        if (aj.length > 0) {
                            for (var at = 0; at < aj.length; at++) {
                                if (!aj[at].indexOf(" OR ") >= 0) {
                                    af.push(aj[at])
                                }
                            }
                        }
                        if (ae.length > 0) {
                            for (var at = 0; at < ae.length; at++) {
                                if (!ae[at].indexOf(" AND ") >= 0) {
                                    af.push(ae[at])
                                }
                            }
                        }
                        var aq = undefined;
                        for (var ap = 0; ap < af.length; ap++) {
                            var an = af[ap];
                            if (an && an.indexOf && an.indexOf("..") >= 0) {
                                var ab = an.toString().split("..");
                                if (ab.length == 2) {
                                    ai = ax >= ab[0] && ax <= ab[1]
                                }
                            } else {
                                var ai = aw(ax, an)
                            }
                            var al = ap < aj.length ? "and": "or";
                            if (aq == undefined) {
                                aq = ai
                            } else {
                                if (al == "or") {
                                    aq = aq || ai
                                } else {
                                    aq = aq && ai
                                }
                            }
                        }
                        return aq
                    }
                }
                if (am && am.indexOf && am.indexOf("..") >= 0) {
                    af = am.toString().split("..");
                    if (af.length == 2) {
                        return ax >= af[0] && ax <= af[1]
                    }
                }
                return aw(ax, am)
            }
        };
        var e = function(V, U, W) {
            this.filtervalue = V;
            this.comparisonoperator = U;
            this.evaluate = function(Y, X) {
                return W(this.filtervalue, Y, this.comparisonoperator)
            }
        }
    };
    i.jqx.longInt = function() {
        var H = this;
        H.longObj = new Object();
        var e = H.longObj;
        e.mathObj = new Object();
        e.mathObj.Long = new Object();
        e.mathObj.Long = function(I, J) {
            this.lowBits = I | 0;
            this.highBits = J | 0
        };
        e.mathObj.Long.IntCache = {};
        e.mathObj.Long.fromInt = function(I) {
            if ( - 128 <= I && I < 128) {
                var K = e.mathObj.Long.IntCache[I];
                if (K) {
                    return K
                }
            }
            var J = new e.mathObj.Long(I | 0, I < 0 ? -1 : 0);
            if ( - 128 <= I && I < 128) {
                e.mathObj.Long.IntCache[I] = J
            }
            return J
        };
        e.mathObj.Long.fromNumber = function(I) {
            if (isNaN(I) || !isFinite(I)) {
                return e.mathObj.Long.ZERO
            } else {
                if (I <= -e.mathObj.Long.TWO_PWR_63_DBL_) {
                    return e.mathObj.Long.MIN_VALUE
                } else {
                    if (I + 1 >= e.mathObj.Long.TWO_PWR_63_DBL_) {
                        return e.mathObj.Long.MAX_VALUE
                    } else {
                        if (I < 0) {
                            return e.mathObj.Long.fromNumber( - I).negate()
                        } else {
                            return new e.mathObj.Long((I % e.mathObj.Long.TWO_PWR_32_DBL_) | 0, (I / e.mathObj.Long.TWO_PWR_32_DBL_) | 0)
                        }
                    }
                }
            }
        };
        e.mathObj.Long.fromBits = function(I, J) {
            return new e.mathObj.Long(I, J)
        };
        e.mathObj.Long.fromString = function(K, N) {
            if (K.length === 0) {
                throw new Error("number format error: empty string")
            }
            var L = N || 10;
            if (L < 2 || 36 < L) {
                throw new Error("radix out of range: " + L)
            }
            if (K.charAt(0) === "-") {
                return e.mathObj.Long.fromString(K.substring(1), L).negate()
            } else {
                if (K.indexOf("-") >= 0) {
                    throw new Error('number format error: interior "-" character: ' + K)
                }
            }
            var O = e.mathObj.Long.fromNumber(Math.pow(L, 8));
            var Q = e.mathObj.Long.ZERO;
            for (var J = 0; J < K.length; J += 8) {
                var P = Math.min(8, K.length - J);
                var M = parseInt(K.substring(J, J + P), L);
                if (P < 8) {
                    var I = e.mathObj.Long.fromNumber(Math.pow(L, P));
                    Q = Q.multiply(I).add(e.mathObj.Long.fromNumber(M))
                } else {
                    Q = Q.multiply(O);
                    Q = Q.add(e.mathObj.Long.fromNumber(M))
                }
            }
            return Q
        };
        e.mathObj.Long.TWO_PWR_16_DBL_ = 1 << 16;
        e.mathObj.Long.TWO_PWR_24_DBL_ = 1 << 24;
        e.mathObj.Long.TWO_PWR_32_DBL_ = e.mathObj.Long.TWO_PWR_16_DBL_ * e.mathObj.Long.TWO_PWR_16_DBL_;
        e.mathObj.Long.TWO_PWR_31_DBL_ = e.mathObj.Long.TWO_PWR_32_DBL_ / 2;
        e.mathObj.Long.TWO_PWR_48_DBL_ = e.mathObj.Long.TWO_PWR_32_DBL_ * e.mathObj.Long.TWO_PWR_16_DBL_;
        e.mathObj.Long.TWO_PWR_64_DBL_ = e.mathObj.Long.TWO_PWR_32_DBL_ * e.mathObj.Long.TWO_PWR_32_DBL_;
        e.mathObj.Long.TWO_PWR_63_DBL_ = e.mathObj.Long.TWO_PWR_64_DBL_ / 2;
        e.mathObj.Long.ZERO = e.mathObj.Long.fromInt(0);
        e.mathObj.Long.ONE = e.mathObj.Long.fromInt(1);
        e.mathObj.Long.NEG_ONE = e.mathObj.Long.fromInt( - 1);
        e.mathObj.Long.MAX_VALUE = e.mathObj.Long.fromBits(4294967295 | 0, 2147483647 | 0);
        e.mathObj.Long.MIN_VALUE = e.mathObj.Long.fromBits(0, 2147483648 | 0);
        e.mathObj.Long.TWO_PWR_24_ = e.mathObj.Long.fromInt(1 << 24);
        e.mathObj.Long.prototype.toInt = function() {
            return this.lowBits
        };
        e.mathObj.Long.prototype.toNumber = function() {
            return this.highBits * e.mathObj.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned()
        };
        e.mathObj.Long.prototype.toString = function(O) {
            var M = O || 10;
            if (M < 2 || 36 < M) {
                throw new Error("radix out of range: " + M)
            }
            if (this.isZero()) {
                return "0"
            }
            var P, R;
            if (this.isNegative()) {
                if (this.equals(e.mathObj.Long.MIN_VALUE)) {
                    var K = e.mathObj.Long.fromNumber(M);
                    var I = this.div(K);
                    P = I.multiply(K).subtract(this);
                    return I.toString(M) + P.toInt().toString(M)
                } else {
                    switch (M) {
                    case 2:
                    case 8:
                    case 16:
                        R = "-" + this.negate().toString(2);
                        return H._negativeBinary(R, M);
                    default:
                        R = "-" + this.negate().toString(M);
                        return R
                    }
                }
            }
            var Q = e.mathObj.Long.fromNumber(Math.pow(M, 6));
            P = this;
            R = "";
            while (true) {
                var N = P.div(Q);
                var L = P.subtract(N.multiply(Q)).toInt();
                var J = L.toString(M);
                P = N;
                if (P.isZero()) {
                    return J + R
                } else {
                    while (J.length < 6) {
                        J = "0" + J
                    }
                    R = "" + J + R
                }
            }
        };
        e.mathObj.Long.prototype.getHighBits = function() {
            return this.highBits
        };
        e.mathObj.Long.prototype.getLowBits = function() {
            return this.lowBits
        };
        e.mathObj.Long.prototype.getLowBitsUnsigned = function() {
            return (this.lowBits >= 0) ? this.lowBits: e.mathObj.Long.TWO_PWR_32_DBL_ + this.lowBits
        };
        e.mathObj.Long.prototype.getNumBitsAbs = function() {
            if (this.isNegative()) {
                if (this.equals(e.mathObj.Long.MIN_VALUE)) {
                    return 64
                } else {
                    return this.negate().getNumBitsAbs()
                }
            } else {
                var J = this.highBits !== 0 ? this.highBits: this.lowBits;
                for (var I = 31; I > 0; I--) {
                    if ((J & (1 << I)) !== 0) {
                        break
                    }
                }
                return this.highBits !== 0 ? I + 33 : I + 1
            }
        };
        e.mathObj.Long.prototype.isZero = function() {
            return this.highBits === 0 && this.lowBits === 0
        };
        e.mathObj.Long.prototype.isNegative = function() {
            return this.highBits < 0
        };
        e.mathObj.Long.prototype.isOdd = function() {
            return (this.lowBits & 1) === 1
        };
        e.mathObj.Long.prototype.equals = function(I) {
            return (this.highBits === I.highBits) && (this.lowBits === I.lowBits)
        };
        e.mathObj.Long.prototype.notEquals = function(I) {
            return (this.highBits !== I.highBits) || (this.lowBits !== I.lowBits)
        };
        e.mathObj.Long.prototype.lessThan = function(I) {
            return this.compare(I) < 0
        };
        e.mathObj.Long.prototype.lessThanOrEqual = function(I) {
            return this.compare(I) <= 0
        };
        e.mathObj.Long.prototype.greaterThan = function(I) {
            return this.compare(I) > 0
        };
        e.mathObj.Long.prototype.greaterThanOrEqual = function(I) {
            return this.compare(I) >= 0
        };
        e.mathObj.Long.prototype.compare = function(J) {
            if (this.equals(J)) {
                return 0
            }
            var I = this.isNegative();
            var K = J.isNegative();
            if (I && !K) {
                return - 1
            }
            if (!I && K) {
                return 1
            }
            if (this.subtract(J).isNegative()) {
                return - 1
            } else {
                return 1
            }
        };
        e.mathObj.Long.prototype.negate = function() {
            if (this.equals(e.mathObj.Long.MIN_VALUE)) {
                return e.mathObj.Long.MIN_VALUE
            } else {
                return this.not().add(e.mathObj.Long.ONE)
            }
        };
        e.mathObj.Long.prototype.add = function(P) {
            var N = this.highBits >>> 16;
            var J = this.highBits & 65535;
            var Q = this.lowBits >>> 16;
            var K = this.lowBits & 65535;
            var S = P.highBits >>> 16;
            var L = P.highBits & 65535;
            var T = P.lowBits >>> 16;
            var M = P.lowBits & 65535;
            var U = 0,
            O = 0,
            I = 0,
            R = 0;
            R += K + M;
            I += R >>> 16;
            R &= 65535;
            I += Q + T;
            O += I >>> 16;
            I &= 65535;
            O += J + L;
            U += O >>> 16;
            O &= 65535;
            U += N + S;
            U &= 65535;
            return e.mathObj.Long.fromBits((I << 16) | R, (U << 16) | O)
        };
        e.mathObj.Long.prototype.subtract = function(I) {
            return this.add(I.negate())
        };
        e.mathObj.Long.prototype.multiply = function(P) {
            if (this.isZero()) {
                return e.mathObj.Long.ZERO
            } else {
                if (P.isZero()) {
                    return e.mathObj.Long.ZERO
                }
            }
            if (this.equals(e.mathObj.Long.MIN_VALUE)) {
                return P.isOdd() ? e.mathObj.Long.MIN_VALUE: e.mathObj.Long.ZERO
            } else {
                if (P.equals(e.mathObj.Long.MIN_VALUE)) {
                    return this.isOdd() ? e.mathObj.Long.MIN_VALUE: e.mathObj.Long.ZERO
                }
            }
            if (this.isNegative()) {
                if (P.isNegative()) {
                    return this.negate().multiply(P.negate())
                } else {
                    return this.negate().multiply(P).negate()
                }
            } else {
                if (P.isNegative()) {
                    return this.multiply(P.negate()).negate()
                }
            }
            if (this.lessThan(e.mathObj.Long.TWO_PWR_24_) && P.lessThan(e.mathObj.Long.TWO_PWR_24_)) {
                return e.mathObj.Long.fromNumber(this.toNumber() * P.toNumber())
            }
            var N = this.highBits >>> 16;
            var J = this.highBits & 65535;
            var Q = this.lowBits >>> 16;
            var K = this.lowBits & 65535;
            var S = P.highBits >>> 16;
            var L = P.highBits & 65535;
            var T = P.lowBits >>> 16;
            var M = P.lowBits & 65535;
            var U = 0,
            O = 0,
            I = 0,
            R = 0;
            R += K * M;
            I += R >>> 16;
            R &= 65535;
            I += Q * M;
            O += I >>> 16;
            I &= 65535;
            I += K * T;
            O += I >>> 16;
            I &= 65535;
            O += J * M;
            U += O >>> 16;
            O &= 65535;
            O += Q * T;
            U += O >>> 16;
            O &= 65535;
            O += K * L;
            U += O >>> 16;
            O &= 65535;
            U += N * M + J * T + Q * L + K * S;
            U &= 65535;
            return e.mathObj.Long.fromBits((I << 16) | R, (U << 16) | O)
        };
        e.mathObj.Long.prototype.div = function(K) {
            if (K.isZero()) {
                throw new Error("division by zero")
            } else {
                if (this.isZero()) {
                    return e.mathObj.Long.ZERO
                }
            }
            var N, P;
            if (this.equals(e.mathObj.Long.MIN_VALUE)) {
                if (K.equals(e.mathObj.Long.ONE) || K.equals(e.mathObj.Long.NEG_ONE)) {
                    return e.mathObj.Long.MIN_VALUE
                } else {
                    if (K.equals(e.mathObj.Long.MIN_VALUE)) {
                        return e.mathObj.Long.ONE
                    } else {
                        var I = this.shiftRight(1);
                        N = I.div(K).shiftLeft(1);
                        if (N.equals(e.mathObj.Long.ZERO)) {
                            return K.isNegative() ? e.mathObj.Long.ONE: e.mathObj.Long.NEG_ONE
                        } else {
                            P = this.subtract(K.multiply(N));
                            var R = N.add(P.div(K));
                            return R
                        }
                    }
                }
            } else {
                if (K.equals(e.mathObj.Long.MIN_VALUE)) {
                    return e.mathObj.Long.ZERO
                }
            }
            if (this.isNegative()) {
                if (K.isNegative()) {
                    return this.negate().div(K.negate())
                } else {
                    return this.negate().div(K).negate()
                }
            } else {
                if (K.isNegative()) {
                    return this.div(K.negate()).negate()
                }
            }
            var L = e.mathObj.Long.ZERO;
            P = this;
            while (P.greaterThanOrEqual(K)) {
                N = Math.max(1, Math.floor(P.toNumber() / K.toNumber()));
                var Q = Math.ceil(Math.log(N) / Math.LN2);
                var O = (Q <= 48) ? 1 : Math.pow(2, Q - 48);
                var J = e.mathObj.Long.fromNumber(N);
                var M = J.multiply(K);
                while (M.isNegative() || M.greaterThan(P)) {
                    N -= O;
                    J = e.mathObj.Long.fromNumber(N);
                    M = J.multiply(K)
                }
                if (J.isZero()) {
                    J = e.mathObj.Long.ONE
                }
                L = L.add(J);
                P = P.subtract(M)
            }
            return L
        };
        e.mathObj.Long.prototype.modulo = function(I) {
            return this.subtract(this.div(I).multiply(I))
        };
        e.mathObj.Long.prototype.not = function() {
            return e.mathObj.Long.fromBits(~this.lowBits, ~this.highBits)
        };
        e.mathObj.Long.prototype.and = function(I) {
            return e.mathObj.Long.fromBits(this.lowBits & I.lowBits, this.highBits & I.highBits)
        };
        e.mathObj.Long.prototype.or = function(I) {
            return e.mathObj.Long.fromBits(this.lowBits | I.lowBits, this.highBits | I.highBits)
        };
        e.mathObj.Long.prototype.xor = function(I) {
            return e.mathObj.Long.fromBits(this.lowBits ^ I.lowBits, this.highBits ^ I.highBits)
        };
        e.mathObj.Long.prototype.shiftLeft = function(K) {
            K &= 63;
            if (K === 0) {
                return this
            } else {
                var I = this.lowBits;
                if (K < 32) {
                    var J = this.highBits;
                    return e.mathObj.Long.fromBits(I << K, (J << K) | (I >>> (32 - K)))
                } else {
                    return e.mathObj.Long.fromBits(0, I << (K - 32))
                }
            }
        };
        e.mathObj.Long.prototype.shiftRight = function(K) {
            K &= 63;
            if (K === 0) {
                return this
            } else {
                var J = this.highBits;
                if (K < 32) {
                    var I = this.lowBits;
                    return e.mathObj.Long.fromBits((I >>> K) | (J << (32 - K)), J >> K)
                } else {
                    return e.mathObj.Long.fromBits(J >> (K - 32), J >= 0 ? 0 : -1)
                }
            }
        };
        e.mathObj.Long.prototype.shiftRightUnsigned = function(K) {
            K &= 63;
            if (K === 0) {
                return this
            } else {
                var J = this.highBits;
                if (K < 32) {
                    var I = this.lowBits;
                    return e.mathObj.Long.fromBits((I >>> K) | (J << (32 - K)), J >>> K)
                } else {
                    if (K === 32) {
                        return e.mathObj.Long.fromBits(J, 0)
                    } else {
                        return e.mathObj.Long.fromBits(J >>> (K - 32), 0)
                    }
                }
            }
        };
        return e
    };
    i.jqx.math = function() {
        var H = new Object();
        var e = new i.jqx.longInt();
        H.getDecimalNotation = function(M, K) {
            if (K === "decimal") {
                return M
            }
            M = M.toString();
            function I(T) {
                var S = "-0123456789";
                var Q = "⁻⁰¹²³⁴⁵⁶⁷⁸⁹";
                var P = "";
                for (var R = 0; R < T.length; R++) {
                    var U = S.indexOf(T.charAt(R));
                    P += (U !== -1 ? Q[U] : T[R])
                }
                return P
            }
            function O(R) {
                if (R === "0") {
                    return parseInt(R).toExponential()
                }
                var Q;
                if (R.charAt(0) === "-") {
                    Q = "-";
                    R = R.slice(1, R.length)
                } else {
                    Q = ""
                }
                var S = R.length - 1;
                while (R.charAt(R.length - 1) === "0") {
                    R = R.slice(0, R.length - 1)
                }
                var P = R.slice(1, R.length);
                if (P !== "") {
                    P = "." + P
                }
                return Q + "" + R.charAt(0) + P + "e+" + S
            }
            function L(S) {
                var R = S.indexOf("e");
                var Q = S.slice(R + 1);
                var P = S.slice(0, R + 1);
                P = P.replace("e", "×10");
                P += I(Q);
                P = P.replace("+", "");
                return P
            }
            function J(V) {
                var U = V.indexOf("e");
                var T = V.slice(U + 1);
                var R = V.slice(0, U);
                var S = parseInt(T, 10) % 3;
                R = R * Math.pow(10, S);
                var Q = V.slice(0, U).length - S - 2;
                if (Q >= 0) {
                    R = R.toFixed(Q)
                }
                var P = R + "×10" + I((parseInt(T, 10) - S).toString());
                return P
            }
            var N = O(M);
            if (K === "scientific") {
                return L(N)
            } else {
                if (K === "engineering") {
                    return J(N)
                } else {
                    return N
                }
            }
        };
        i.extend(H, e.mathObj.Long);
        return H
    }
})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.cssroundedcorners=function(b){var c={all:"jqx-rc-all",top:"jqx-rc-t",bottom:"jqx-rc-b",left:"jqx-rc-l",right:"jqx-rc-r","top-right":"jqx-rc-tr","top-left":"jqx-rc-tl","bottom-right":"jqx-rc-br","bottom-left":"jqx-rc-bl"};for(prop in c){if(!c.hasOwnProperty(prop)){continue}if(b==prop){return c[prop]}}};a.jqx.jqxWidget("jqxButton","",{});a.extend(a.jqx._jqxButton.prototype,{defineInstance:function(){var b={cursor:"arrow",roundedCorners:"all",disabled:false,height:null,width:null,overrideTheme:false,enableHover:true,enableDefault:true,enablePressed:true,rtl:false,_ariaDisabled:false,_scrollAreaButton:false,template:"default",aria:{"aria-disabled":{name:"disabled",type:"boolean"}}};a.extend(true,this,b);return b},createInstance:function(d){var b=this;b._setSize();if(!b._ariaDisabled){b.host.attr("role","button")}if(!b.overrideTheme){b.host.addClass(b.toThemeProperty(a.jqx.cssroundedcorners(b.roundedCorners)));if(b.enableDefault){b.host.addClass(b.toThemeProperty("jqx-button"))}b.host.addClass(b.toThemeProperty("jqx-widget"))}b.isTouchDevice=a.jqx.mobile.isTouchDevice();if(!b._ariaDisabled){a.jqx.aria(this)}if(b.cursor!="arrow"){if(!b.disabled){b.host.css({cursor:b.cursor})}else{b.host.css({cursor:"arrow"})}}var g="mouseenter mouseleave mousedown focus blur";if(b._scrollAreaButton){var g="mousedown"}if(b.isTouchDevice){b.addHandler(b.host,a.jqx.mobile.getTouchEventName("touchstart"),function(h){b.isPressed=true;b.refresh()});b.addHandler(a(document),a.jqx.mobile.getTouchEventName("touchend")+"."+b.element.id,function(h){b.isPressed=false;b.refresh()})}b.addHandler(b.host,g,function(h){switch(h.type){case"mouseenter":if(!b.isTouchDevice){if(!b.disabled&&b.enableHover){b.isMouseOver=true;b.refresh()}}break;case"mouseleave":if(!b.isTouchDevice){if(!b.disabled&&b.enableHover){b.isMouseOver=false;b.refresh()}}break;case"mousedown":if(!b.disabled){b.isPressed=true;b.refresh()}break;case"focus":if(!b.disabled){b.isFocused=true;b.refresh()}break;case"blur":if(!b.disabled){b.isFocused=false;b.refresh()}break}});b.mouseupfunc=function(h){if(!b.disabled){if(b.isPressed||b.isMouseOver){b.isPressed=false;b.refresh()}}};b.addHandler(a(document),"mouseup.button"+b.element.id,b.mouseupfunc);try{if(document.referrer!=""||window.frameElement){if(window.top!=null&&window.top!=window.self){var f="";if(window.parent&&document.referrer){f=document.referrer}if(f.indexOf(document.location.host)!=-1){var e=function(h){b.isPressed=false;b.refresh()};if(window.top.document){b.addHandler(a(window.top.document),"mouseup",e)}}}}}catch(c){}b.propertyChangeMap.roundedCorners=function(h,j,i,k){h.host.removeClass(h.toThemeProperty(a.jqx.cssroundedcorners(i)));h.host.addClass(h.toThemeProperty(a.jqx.cssroundedcorners(k)))};b.propertyChangeMap.width=function(h,j,i,k){h._setSize();h.refresh()};b.propertyChangeMap.height=function(h,j,i,k){h._setSize();h.refresh()};b.propertyChangeMap.disabled=function(h,j,i,k){if(i!=k){h.host[0].disabled=k;h.host.attr("disabled",k);h.refresh();if(!k){h.host.css({cursor:h.cursor})}else{h.host.css({cursor:"default"})}a.jqx.aria(h,"aria-disabled",h.disabled)}};b.propertyChangeMap.rtl=function(h,j,i,k){if(i!=k){h.refresh()}};b.propertyChangeMap.template=function(h,j,i,k){if(i!=k){h.host.removeClass("jqx-"+i);h.refresh()}};b.propertyChangeMap.theme=function(h,j,i,k){h.host.removeClass();if(h.enableDefault){h.host.addClass(h.toThemeProperty("jqx-button"))}h.host.addClass(h.toThemeProperty("jqx-widget"));if(!h.overrideTheme){h.host.addClass(h.toThemeProperty(a.jqx.cssroundedcorners(h.roundedCorners)))}h._oldCSSCurrent=null;h.refresh()};if(b.disabled){b.element.disabled=true;b.host.attr("disabled",true)}},resize:function(c,b){this.width=c;this.height=b;this._setSize()},val:function(){var c=this;var b=c.host.find("input");if(b.length>0){if(arguments.length==0||typeof(value)=="object"){return b.val()}b.val(value);c.refresh();return b.val()}if(arguments.length==0||typeof(value)=="object"){if(c.element.nodeName.toLowerCase()=="button"){return a(c.element).text()}return c.element.value}c.element.value=arguments[0];if(c.element.nodeName.toLowerCase()=="button"){a(c.element).text(arguments[0])}c.refresh()},_setSize:function(){var b=this;if(b.width!=null&&(b.width.toString().indexOf("px")!=-1||b.width.toString().indexOf("%")!=-1)){b.host.css("width",b.width)}else{if(b.width!=undefined&&!isNaN(b.width)){b.host.css("width",b.width)}}if(b.height!=null&&(b.height.toString().indexOf("px")!=-1||b.height.toString().indexOf("%")!=-1)){b.host.css("height",b.height)}else{if(b.height!=undefined&&!isNaN(b.height)){b.host.css("height",parseInt(b.height))}}},_removeHandlers:function(){var b=this;b.removeHandler(b.host,"selectstart");b.removeHandler(b.host,"click");b.removeHandler(b.host,"focus");b.removeHandler(b.host,"blur");b.removeHandler(b.host,"mouseenter");b.removeHandler(b.host,"mouseleave");b.removeHandler(b.host,"mousedown");b.removeHandler(a(document),"mouseup.button"+b.element.id,b.mouseupfunc);if(b.isTouchDevice){b.removeHandler(b.host,a.jqx.mobile.getTouchEventName("touchstart"));b.removeHandler(a(document),a.jqx.mobile.getTouchEventName("touchend")+"."+b.element.id)}b.mouseupfunc=null;delete b.mouseupfunc},focus:function(){this.host.focus()},destroy:function(){var b=this;b._removeHandlers();var c=a.data(b.element,"jqxButton");if(c){delete c.instance}b.host.removeClass();b.host.removeData();b.host.remove();delete b.set;delete b.get;delete b.call;delete b.element;delete b.host},render:function(){this.refresh()},refresh:function(){var c=this;if(c.overrideTheme){return}var e=c.toThemeProperty("jqx-fill-state-focus");var i=c.toThemeProperty("jqx-fill-state-disabled");var b=c.toThemeProperty("jqx-fill-state-normal");if(!c.enableDefault){b=""}var h=c.toThemeProperty("jqx-fill-state-hover");var f=c.toThemeProperty("jqx-fill-state-pressed");var g=c.toThemeProperty("jqx-fill-state-pressed");if(!c.enablePressed){f=""}var d="";if(!c.host){return}c.host[0].disabled=c.disabled;if(c.disabled){d=b+" "+i;if(c.template!=="default"&&c.template!==""){d+=" jqx-"+c.template}c.host.addClass(d);c._oldCSSCurrent=d;return}else{if(c.isMouseOver&&!c.isTouchDevice){if(c.isPressed){d=g}else{d=h}}else{if(c.isPressed){d=f}else{d=b}}}if(c.isFocused){d+=" "+e}if(c.template!=="default"&&c.template!==""){d+=" jqx-"+c.template}if(d!=c._oldCSSCurrent){if(c._oldCSSCurrent){c.host.removeClass(c._oldCSSCurrent)}c.host.addClass(d);c._oldCSSCurrent=d}if(c.rtl){c.host.addClass(c.toThemeProperty("jqx-rtl"));c.host.css("direction","rtl")}}});a.jqx.jqxWidget("jqxLinkButton","",{});a.extend(a.jqx._jqxLinkButton.prototype,{defineInstance:function(){this.disabled=false;this.height=null;this.width=null;this.rtl=false;this.href=null},createInstance:function(d){var c=this;this.host.onselectstart=function(){return false};this.host.attr("role","button");var b=this.height||this.host.height();var e=this.width||this.host.width();this.href=this.host.attr("href");this.target=this.host.attr("target");this.content=this.host.text();this.element.innerHTML="";this.host.append("<input type='button' class='jqx-wrapper'/>");var f=this.host.find("input");f.addClass(this.toThemeProperty("jqx-reset"));f.width(e);f.height(b);f.val(this.content);this.host.find("tr").addClass(this.toThemeProperty("jqx-reset"));this.host.find("td").addClass(this.toThemeProperty("jqx-reset"));this.host.find("tbody").addClass(this.toThemeProperty("jqx-reset"));this.host.css("color","inherit");this.host.addClass(this.toThemeProperty("jqx-link"));f.css({width:e});f.css({height:b});var g=d==undefined?{}:d[0]||{};f.jqxButton(g);if(this.disabled){this.host[0].disabled=true}this.propertyChangeMap.disabled=function(h,j,i,k){h.host[0].disabled=k;h.host.find("input").jqxButton({disabled:k})};this.addHandler(f,"click",function(h){if(!this.disabled){c.onclick(h)}return false})},onclick:function(b){if(this.target!=null){window.open(this.href,this.target)}else{window.location=this.href}}});a.jqx.jqxWidget("jqxRepeatButton","jqxButton",{});a.extend(a.jqx._jqxRepeatButton.prototype,{defineInstance:function(){this.delay=50},createInstance:function(e){var c=this;var d=a.jqx.mobile.isTouchDevice();var b=!d?"mouseup."+this.base.element.id:"touchend."+this.base.element.id;var f=!d?"mousedown."+this.base.element.id:"touchstart."+this.base.element.id;this.addHandler(a(document),b,function(g){if(c.timeout!=null){clearTimeout(c.timeout);c.timeout=null;c.refresh()}if(c.timer!=undefined){clearInterval(c.timer);c.timer=null;c.refresh()}});this.addHandler(this.base.host,f,function(g){if(c.timer!=null){clearInterval(c.timer)}c.timeout=setTimeout(function(){clearInterval(c.timer);c.timer=setInterval(function(h){c.ontimer(h)},c.delay)},150)});this.mousemovefunc=function(g){if(!d){if(g.which==0){if(c.timer!=null){clearInterval(c.timer);c.timer=null}}}};this.addHandler(this.base.host,"mousemove",this.mousemovefunc)},destroy:function(){var c=a.jqx.mobile.isTouchDevice();var b=!c?"mouseup."+this.base.element.id:"touchend."+this.base.element.id;var e=!c?"mousedown."+this.base.element.id:"touchstart."+this.base.element.id;this.removeHandler(this.base.host,"mousemove",this.mousemovefunc);this.removeHandler(this.base.host,e);this.removeHandler(a(document),b);this.timer=null;delete this.mousemovefunc;delete this.timer;var d=a.data(this.base.element,"jqxRepeatButton");if(d){delete d.instance}a(this.base.element).removeData();this.base.destroy();delete this.base},stop:function(){clearInterval(this.timer);this.timer=null},ontimer:function(b){var b=new a.Event("click");if(this.base!=null&&this.base.host!=null){this.base.host.trigger(b)}}});a.jqx.jqxWidget("jqxToggleButton","jqxButton",{});a.extend(a.jqx._jqxToggleButton.prototype,{defineInstance:function(){this.toggled=false;this.uiToggle=true;this.aria={"aria-checked":{name:"toggled",type:"boolean"},"aria-disabled":{name:"disabled",type:"boolean"}}},createInstance:function(c){var b=this;b.base.overrideTheme=true;b.isTouchDevice=a.jqx.mobile.isTouchDevice();a.jqx.aria(this);b.propertyChangeMap.roundedCorners=function(d,f,e,g){d.base.host.removeClass(d.toThemeProperty(a.jqx.cssroundedcorners(e)));d.base.host.addClass(d.toThemeProperty(a.jqx.cssroundedcorners(g)))};b.propertyChangeMap.toggled=function(d,f,e,g){d.refresh()};b.propertyChangeMap.disabled=function(d,f,e,g){d.base.disabled=g;d.refresh()};b.addHandler(b.base.host,"click",function(d){if(!b.base.disabled&&b.uiToggle){b.toggle()}});if(!b.isTouchDevice){b.addHandler(b.base.host,"mouseenter",function(d){if(!b.base.disabled){b.refresh()}});b.addHandler(b.base.host,"mouseleave",function(d){if(!b.base.disabled){b.refresh()}})}b.addHandler(b.base.host,"mousedown",function(d){if(!b.base.disabled){b.refresh()}});b.addHandler(a(document),"mouseup.togglebutton"+b.base.element.id,function(d){if(!b.base.disabled){b.refresh()}})},destroy:function(){this._removeHandlers();this.base.destroy()},_removeHandlers:function(){this.removeHandler(this.base.host,"click");this.removeHandler(this.base.host,"mouseenter");this.removeHandler(this.base.host,"mouseleave");this.removeHandler(this.base.host,"mousedown");this.removeHandler(a(document),"mouseup.togglebutton"+this.base.element.id)},toggle:function(){this.toggled=!this.toggled;this.refresh();a.jqx.aria(this,"aria-checked",this.toggled)},unCheck:function(){this.toggled=false;this.refresh()},check:function(){this.toggled=true;this.refresh()},refresh:function(){var c=this;var h=c.base.toThemeProperty("jqx-fill-state-disabled");var b=c.base.toThemeProperty("jqx-fill-state-normal");if(!c.base.enableDefault){b=""}var g=c.base.toThemeProperty("jqx-fill-state-hover");var e=c.base.toThemeProperty("jqx-fill-state-pressed");var f=c.base.toThemeProperty("jqx-fill-state-pressed");var d="";c.base.host[0].disabled=c.base.disabled;if(c.base.disabled){d=b+" "+h;c.base.host.addClass(d);return}else{if(c.base.isMouseOver&&!c.isTouchDevice){if(c.base.isPressed||c.toggled){d=f}else{d=g}}else{if(c.base.isPressed||c.toggled){d=e}else{d=b}}}if(c.base.template!=="default"&&c.base.template!==""){d+=" jqx-"+c.base.template}if(c.base.host.hasClass(h)&&h!=d){c.base.host.removeClass(h)}if(c.base.host.hasClass(b)&&b!=d){c.base.host.removeClass(b)}if(c.base.host.hasClass(g)&&g!=d){c.base.host.removeClass(g)}if(c.base.host.hasClass(e)&&e!=d){c.base.host.removeClass(e)}if(c.base.host.hasClass(f)&&f!=d){c.base.host.removeClass(f)}if(!c.base.host.hasClass(d)){c.base.host.addClass(d)}}})})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxScrollBar","",{});a.extend(a.jqx._jqxScrollBar.prototype,{defineInstance:function(){var b={height:null,width:null,vertical:false,min:0,max:1000,value:0,step:10,largestep:50,thumbMinSize:10,thumbSize:0,thumbStep:"auto",roundedCorners:"all",showButtons:true,disabled:false,touchMode:"auto",touchModeStyle:"auto",thumbTouchSize:0,_triggervaluechanged:true,rtl:false,areaDownCapture:false,areaUpCapture:false,_initialLayout:false};a.extend(true,this,b);return b},createInstance:function(b){this.render()},render:function(){this._mouseup=new Date();var c=this;var d="<div id='jqxScrollOuterWrap' style='box-sizing: content-box; width:100%; height: 100%; align:left; border: 0px; valign:top; position: relative;'><div id='jqxScrollWrap' style='box-sizing: content-box; width:100%; height: 100%; left: 0px; top: 0px; align:left; valign:top; position: absolute;'><div id='jqxScrollBtnUp' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'><div></div></div><div id='jqxScrollAreaUp' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollThumb' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollAreaDown' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollBtnDown' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'><div></div></div></div></div>";if(a.jqx.utilities&&a.jqx.utilities.scrollBarButtonsVisibility=="hidden"){this.showButtons=false}if(c.WinJS){MSApp.execUnsafeLocalFunction(function(){c.host.html(d)})}else{this.element.innerHTML=d}if(this.width!=undefined&&parseInt(this.width)>0){this.host.width(parseInt(this.width))}if(this.height!=undefined&&parseInt(this.height)>0){this.host.height(parseInt(this.height))}this.isPercentage=false;if(this.width!=null&&this.width.toString().indexOf("%")!=-1){this.host.width(this.width);this.isPercentage=true}if(this.height!=null&&this.height.toString().indexOf("%")!=-1){this.host.height(this.height);this.isPercentage=true}if(this.isPercentage){var e=this;a.jqx.utilities.resize(this.host,function(){e._arrange()},false)}this.thumbCapture=false;this.scrollOuterWrap=a(this.element.firstChild);this.scrollWrap=a(this.scrollOuterWrap[0].firstChild);this.btnUp=a(this.scrollWrap[0].firstChild);this.areaUp=a(this.btnUp[0].nextSibling);this.btnThumb=a(this.areaUp[0].nextSibling);this.arrowUp=a(this.btnUp[0].firstChild);this.areaDown=a(this.btnThumb[0].nextSibling);this.btnDown=a(this.areaDown[0].nextSibling);this.arrowDown=a(this.btnDown[0].firstChild);var b=this.element.id;this.btnUp[0].id="jqxScrollBtnUp"+b;this.btnDown[0].id="jqxScrollBtnDown"+b;this.btnThumb[0].id="jqxScrollThumb"+b;this.areaUp[0].id="jqxScrollAreaUp"+b;this.areaDown[0].id="jqxScrollAreaDown"+b;this.scrollWrap[0].id="jqxScrollWrap"+b;this.scrollOuterWrap[0].id="jqxScrollOuterWrap"+b;if(!this.host.jqxRepeatButton){throw new Error("jqxScrollBar: Missing reference to jqxbuttons.js.");return}this.btnUp.jqxRepeatButton({_ariaDisabled:true,overrideTheme:true,disabled:this.disabled});this.btnDown.jqxRepeatButton({_ariaDisabled:true,overrideTheme:true,disabled:this.disabled});this.btnDownInstance=a.data(this.btnDown[0],"jqxRepeatButton").instance;this.btnUpInstance=a.data(this.btnUp[0],"jqxRepeatButton").instance;this.areaUp.jqxRepeatButton({_scrollAreaButton:true,_ariaDisabled:true,overrideTheme:true});this.areaDown.jqxRepeatButton({_scrollAreaButton:true,_ariaDisabled:true,overrideTheme:true});this.btnThumb.jqxButton({_ariaDisabled:true,overrideTheme:true,disabled:this.disabled});this.propertyChangeMap.value=function(f,h,g,i){if(!(isNaN(i))){if(g!=i){f.setPosition(parseFloat(i),true)}}};this.propertyChangeMap.width=function(f,h,g,i){if(f.width!=undefined&&parseInt(f.width)>0){f.host.width(parseInt(f.width));f._arrange()}};this.propertyChangeMap.height=function(f,h,g,i){if(f.height!=undefined&&parseInt(f.height)>0){f.host.height(parseInt(f.height));f._arrange()}};this.propertyChangeMap.theme=function(f,h,g,i){f.setTheme()};this.propertyChangeMap.max=function(f,h,g,i){if(!(isNaN(i))){if(g!=i){f.max=parseInt(i);if(f.min>f.max){f.max=f.min+1}f._arrange();f.setPosition(f.value)}}};this.propertyChangeMap.min=function(f,h,g,i){if(!(isNaN(i))){if(g!=i){f.min=parseInt(i);if(f.min>f.max){f.max=f.min+1}f._arrange();f.setPosition(f.value)}}};this.propertyChangeMap.disabled=function(f,h,g,i){if(g!=i){if(i){f.host.addClass(f.toThemeProperty("jqx-fill-state-disabled"))}else{f.host.removeClass(f.toThemeProperty("jqx-fill-state-disabled"))}f.btnUp.jqxRepeatButton("disabled",f.disabled);f.btnDown.jqxRepeatButton("disabled",f.disabled);f.btnThumb.jqxButton("disabled",f.disabled)}};this.propertyChangeMap.touchMode=function(f,h,g,i){if(g!=i){f._updateTouchBehavior();if(i===true){f.showButtons=false;f.refresh()}else{if(i===false){f.showButtons=true;f.refresh()}}}};this.propertyChangeMap.rtl=function(f,h,g,i){if(g!=i){f.refresh()}};this.buttonUpCapture=false;this.buttonDownCapture=false;this._updateTouchBehavior();this.setPosition(this.value);this._addHandlers();this.setTheme()},resize:function(c,b){this.width=c;this.height=b;this._arrange()},_updateTouchBehavior:function(){this.isTouchDevice=a.jqx.mobile.isTouchDevice();if(this.touchMode==true){if(a.jqx.browser.msie&&a.jqx.browser.version<9){this.setTheme();return}this.isTouchDevice=true;a.jqx.mobile.setMobileSimulator(this.btnThumb[0]);this._removeHandlers();this._addHandlers();this.setTheme()}else{if(this.touchMode==false){this.isTouchDevice=false}}},_addHandlers:function(){var j=this;var e=false;try{if(("ontouchstart" in window)||window.DocumentTouch&&document instanceof DocumentTouch){e=true;this._touchSupport=true}}catch(f){}if(j.isTouchDevice||e){this.addHandler(this.btnThumb,a.jqx.mobile.getTouchEventName("touchend"),function(k){var l=j.vertical?j.toThemeProperty("jqx-scrollbar-thumb-state-pressed"):j.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal");var m=j.toThemeProperty("jqx-fill-state-pressed");j.btnThumb.removeClass(l);j.btnThumb.removeClass(m);if(!j.disabled){j.handlemouseup(j,k)}return false});this.addHandler(this.btnThumb,a.jqx.mobile.getTouchEventName("touchstart"),function(k){if(!j.disabled){if(j.touchMode==true){k.clientX=k.originalEvent.clientX;k.clientY=k.originalEvent.clientY}else{var l=k;if(l.originalEvent.touches&&l.originalEvent.touches.length){k.clientX=l.originalEvent.touches[0].clientX;k.clientY=l.originalEvent.touches[0].clientY}else{k.clientX=k.originalEvent.clientX;k.clientY=k.originalEvent.clientY}}j.handlemousedown(k);if(k.preventDefault){k.preventDefault()}}});a.jqx.mobile.touchScroll(this.element,j.max,function(q,p,l,k,m){if(j.host.css("visibility")=="visible"){if(j.touchMode==true){m.clientX=m.originalEvent.clientX;m.clientY=m.originalEvent.clientY}else{var o=m;if(o.originalEvent.touches&&o.originalEvent.touches.length){m.clientX=o.originalEvent.touches[0].clientX;m.clientY=o.originalEvent.touches[0].clientY}else{m.clientX=m.originalEvent.clientX;m.clientY=m.originalEvent.clientY}}var n=j.vertical?j.toThemeProperty("jqx-scrollbar-thumb-state-pressed"):j.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal");j.btnThumb.addClass(n);j.btnThumb.addClass(j.toThemeProperty("jqx-fill-state-pressed"));j.thumbCapture=true;j.handlemousemove(m)}},j.element.id)}if(!this.isTouchDevice){try{if(document.referrer!=""||window.frameElement){if(window.top!=null&&window.top!=window.self){var b=null;if(window.parent&&document.referrer){b=document.referrer}if(b&&b.indexOf(document.location.host)!=-1){var g=function(k){if(!j.disabled){j.handlemouseup(j,k)}};if(window.top.document.addEventListener){window.top.document.addEventListener("mouseup",g,false)}else{if(window.top.document.attachEvent){window.top.document.attachEvent("onmouseup",g)}}}}}}catch(i){}var c="click mouseup mousedown";this.addHandler(this.btnDown,c,function(l){switch(l.type){case"click":var k=j.step;if(j.rtl&&!j.vertical){k=-j.step}if(j.buttonDownCapture&&!j.isTouchDevice){if(!j.disabled){j.setPosition(j.value+k)}}else{if(!j.disabled&&j.isTouchDevice){j.setPosition(j.value+k)}}break;case"mouseup":if(!j.btnDownInstance.base.disabled&&j.buttonDownCapture){j.buttonDownCapture=false;j.btnDown.removeClass(j.toThemeProperty("jqx-scrollbar-button-state-pressed"));j.btnDown.removeClass(j.toThemeProperty("jqx-fill-state-pressed"));j._removeArrowClasses("pressed","down");j.handlemouseup(j,l);var k=j.step;if(j.rtl&&!j.vertical){k=-j.step}j.setPosition(j.value+k);return false}break;case"mousedown":if(!j.btnDownInstance.base.disabled){j.buttonDownCapture=true;j.btnDown.addClass(j.toThemeProperty("jqx-fill-state-pressed"));j.btnDown.addClass(j.toThemeProperty("jqx-scrollbar-button-state-pressed"));j._addArrowClasses("pressed","down");return false}break}});this.addHandler(this.btnUp,c,function(l){switch(l.type){case"click":var k=j.step;if(j.rtl&&!j.vertical){k=-j.step}if(j.buttonUpCapture&&!j.isTouchDevice){if(!j.disabled){j.setPosition(j.value-k)}}else{if(!j.disabled&&j.isTouchDevice){j.setPosition(j.value-k)}}break;case"mouseup":if(!j.btnUpInstance.base.disabled&&j.buttonUpCapture){j.buttonUpCapture=false;j.btnUp.removeClass(j.toThemeProperty("jqx-scrollbar-button-state-pressed"));j.btnUp.removeClass(j.toThemeProperty("jqx-fill-state-pressed"));j._removeArrowClasses("pressed","up");j.handlemouseup(j,l);var k=j.step;if(j.rtl&&!j.vertical){k=-j.step}j.setPosition(j.value-k);return false}break;case"mousedown":if(!j.btnUpInstance.base.disabled){j.buttonUpCapture=true;j.btnUp.addClass(j.toThemeProperty("jqx-fill-state-pressed"));j.btnUp.addClass(j.toThemeProperty("jqx-scrollbar-button-state-pressed"));j._addArrowClasses("pressed","up");return false}break}})}var h="click";if(this.isTouchDevice){h=a.jqx.mobile.getTouchEventName("touchend")}this.addHandler(this.areaUp,h,function(l){if(!j.disabled){var k=j.largestep;if(j.rtl&&!j.vertical){k=-j.largestep}j.setPosition(j.value-k);return false}});this.addHandler(this.areaDown,h,function(l){if(!j.disabled){var k=j.largestep;if(j.rtl&&!j.vertical){k=-j.largestep}j.setPosition(j.value+k);return false}});this.addHandler(this.areaUp,"mousedown",function(k){if(!j.disabled){j.areaUpCapture=true;return false}});this.addHandler(this.areaDown,"mousedown",function(k){if(!j.disabled){j.areaDownCapture=true;return false}});this.addHandler(this.btnThumb,"mousedown dragstart",function(k){if(k.type==="dragstart"){return false}if(!j.disabled){j.handlemousedown(k)}if(k.preventDefault){k.preventDefault()}});this.addHandler(a(document),"mouseup."+this.element.id,function(k){if(!j.disabled){j.handlemouseup(j,k)}});if(!this.isTouchDevice){this.mousemoveFunc=function(k){if(!j.disabled){j.handlemousemove(k)}};this.addHandler(a(document),"mousemove."+this.element.id,this.mousemoveFunc);this.addHandler(a(document),"mouseleave."+this.element.id,function(k){if(!j.disabled){j.handlemouseleave(k)}});this.addHandler(a(document),"mouseenter."+this.element.id,function(k){if(!j.disabled){j.handlemouseenter(k)}});if(!j.disabled){this.addHandler(this.btnUp,"mouseenter mouseleave",function(k){if(k.type==="mouseenter"){if(!j.disabled&&!j.btnUpInstance.base.disabled&&j.touchMode!=true){j.btnUp.addClass(j.toThemeProperty("jqx-scrollbar-button-state-hover"));j.btnUp.addClass(j.toThemeProperty("jqx-fill-state-hover"));j._addArrowClasses("hover","up")}}else{if(!j.disabled&&!j.btnUpInstance.base.disabled&&j.touchMode!=true){j.btnUp.removeClass(j.toThemeProperty("jqx-scrollbar-button-state-hover"));j.btnUp.removeClass(j.toThemeProperty("jqx-fill-state-hover"));j._removeArrowClasses("hover","up")}}});var d=j.toThemeProperty("jqx-scrollbar-thumb-state-hover");if(!j.vertical){d=j.toThemeProperty("jqx-scrollbar-thumb-state-hover-horizontal")}this.addHandler(this.btnThumb,"mouseenter mouseleave",function(k){if(k.type==="mouseenter"){if(!j.disabled&&j.touchMode!=true){j.btnThumb.addClass(d);j.btnThumb.addClass(j.toThemeProperty("jqx-fill-state-hover"))}}else{if(!j.disabled&&j.touchMode!=true){j.btnThumb.removeClass(d);j.btnThumb.removeClass(j.toThemeProperty("jqx-fill-state-hover"))}}});this.addHandler(this.btnDown,"mouseenter mouseleave",function(k){if(k.type==="mouseenter"){if(!j.disabled&&!j.btnDownInstance.base.disabled&&j.touchMode!=true){j.btnDown.addClass(j.toThemeProperty("jqx-scrollbar-button-state-hover"));j.btnDown.addClass(j.toThemeProperty("jqx-fill-state-hover"));j._addArrowClasses("hover","down")}}else{if(!j.disabled&&!j.btnDownInstance.base.disabled&&j.touchMode!=true){j.btnDown.removeClass(j.toThemeProperty("jqx-scrollbar-button-state-hover"));j.btnDown.removeClass(j.toThemeProperty("jqx-fill-state-hover"));j._removeArrowClasses("hover","down")}}})}}},destroy:function(){var b=this.btnUp;var f=this.btnDown;var d=this.btnThumb;var c=this.scrollWrap;var h=this.areaUp;var e=this.areaDown;this.arrowUp.remove();delete this.arrowUp;this.arrowDown.remove();delete this.arrowDown;e.removeClass();h.removeClass();f.removeClass();b.removeClass();d.removeClass();b.jqxRepeatButton("destroy");f.jqxRepeatButton("destroy");h.jqxRepeatButton("destroy");e.jqxRepeatButton("destroy");d.jqxButton("destroy");var g=a.data(this.element,"jqxScrollBar");this._removeHandlers();this.btnUp=null;this.btnDown=null;this.scrollWrap=null;this.areaUp=null;this.areaDown=null;this.scrollOuterWrap=null;delete this.mousemoveFunc;delete this.btnDownInstance;delete this.btnUpInstance;delete this.scrollOuterWrap;delete this.scrollWrap;delete this.btnDown;delete this.areaDown;delete this.areaUp;delete this.btnDown;delete this.btnUp;delete this.btnThumb;delete this.propertyChangeMap.value;delete this.propertyChangeMap.min;delete this.propertyChangeMap.max;delete this.propertyChangeMap.touchMode;delete this.propertyChangeMap.disabled;delete this.propertyChangeMap.theme;delete this.propertyChangeMap;if(g){delete g.instance}this.host.removeData();this.host.remove();delete this.host;delete this.set;delete this.get;delete this.call;delete this.element},_removeHandlers:function(){this.removeHandler(this.btnUp,"mouseenter");this.removeHandler(this.btnDown,"mouseenter");this.removeHandler(this.btnThumb,"mouseenter");this.removeHandler(this.btnUp,"mouseleave");this.removeHandler(this.btnDown,"mouseleave");this.removeHandler(this.btnThumb,"mouseleave");this.removeHandler(this.btnUp,"click");this.removeHandler(this.btnDown,"click");this.removeHandler(this.btnDown,"mouseup");this.removeHandler(this.btnUp,"mouseup");this.removeHandler(this.btnDown,"mousedown");this.removeHandler(this.btnUp,"mousedown");this.removeHandler(this.areaUp,"mousedown");this.removeHandler(this.areaDown,"mousedown");this.removeHandler(this.areaUp,"click");this.removeHandler(this.areaDown,"click");this.removeHandler(this.btnThumb,"mousedown");this.removeHandler(this.btnThumb,"dragstart");this.removeHandler(a(document),"mouseup."+this.element.id);if(!this.mousemoveFunc){this.removeHandler(a(document),"mousemove."+this.element.id)}else{this.removeHandler(a(document),"mousemove."+this.element.id,this.mousemoveFunc)}this.removeHandler(a(document),"mouseleave."+this.element.id);this.removeHandler(a(document),"mouseenter."+this.element.id);var b=this},_addArrowClasses:function(c,b){if(c=="pressed"){c="selected"}if(c!=""){c="-"+c}if(this.vertical){if(b=="up"||b==undefined){this.arrowUp.addClass(this.toThemeProperty("jqx-icon-arrow-up"+c))}if(b=="down"||b==undefined){this.arrowDown.addClass(this.toThemeProperty("jqx-icon-arrow-down"+c))}}else{if(b=="up"||b==undefined){this.arrowUp.addClass(this.toThemeProperty("jqx-icon-arrow-left"+c))}if(b=="down"||b==undefined){this.arrowDown.addClass(this.toThemeProperty("jqx-icon-arrow-right"+c))}}},_removeArrowClasses:function(c,b){if(c=="pressed"){c="selected"}if(c!=""){c="-"+c}if(this.vertical){if(b=="up"||b==undefined){this.arrowUp.removeClass(this.toThemeProperty("jqx-icon-arrow-up"+c))}if(b=="down"||b==undefined){this.arrowDown.removeClass(this.toThemeProperty("jqx-icon-arrow-down"+c))}}else{if(b=="up"||b==undefined){this.arrowUp.removeClass(this.toThemeProperty("jqx-icon-arrow-left"+c))}if(b=="down"||b==undefined){this.arrowDown.removeClass(this.toThemeProperty("jqx-icon-arrow-right"+c))}}},setTheme:function(){var o=this.btnUp;var m=this.btnDown;var p=this.btnThumb;var e=this.scrollWrap;var g=this.areaUp;var h=this.areaDown;var f=this.arrowUp;var i=this.arrowDown;this.scrollWrap[0].className=this.toThemeProperty("jqx-reset");this.scrollOuterWrap[0].className=this.toThemeProperty("jqx-reset");var k=this.toThemeProperty("jqx-reset");this.areaDown[0].className=k;this.areaUp[0].className=k;var d=this.toThemeProperty("jqx-scrollbar")+" "+this.toThemeProperty("jqx-widget")+" "+this.toThemeProperty("jqx-widget-content");this.host.addClass(d);m[0].className=this.toThemeProperty("jqx-scrollbar-button-state-normal");o[0].className=this.toThemeProperty("jqx-scrollbar-button-state-normal");var q="";if(this.vertical){f[0].className=k+" "+this.toThemeProperty("jqx-icon-arrow-up");i[0].className=k+" "+this.toThemeProperty("jqx-icon-arrow-down");q=this.toThemeProperty("jqx-scrollbar-thumb-state-normal")}else{f[0].className=k+" "+this.toThemeProperty("jqx-icon-arrow-left");i[0].className=k+" "+this.toThemeProperty("jqx-icon-arrow-right");q=this.toThemeProperty("jqx-scrollbar-thumb-state-normal-horizontal")}q+=" "+this.toThemeProperty("jqx-fill-state-normal");p[0].className=q;if(this.disabled){e.addClass(this.toThemeProperty("jqx-fill-state-disabled"));e.removeClass(this.toThemeProperty("jqx-scrollbar-state-normal"))}else{e.addClass(this.toThemeProperty("jqx-scrollbar-state-normal"));e.removeClass(this.toThemeProperty("jqx-fill-state-disabled"))}if(this.roundedCorners=="all"){this.host.addClass(this.toThemeProperty("jqx-rc-all"));if(this.vertical){var j=a.jqx.cssroundedcorners("top");j=this.toThemeProperty(j);o.addClass(j);var c=a.jqx.cssroundedcorners("bottom");c=this.toThemeProperty(c);m.addClass(c)}else{var n=a.jqx.cssroundedcorners("left");n=this.toThemeProperty(n);o.addClass(n);var l=a.jqx.cssroundedcorners("right");l=this.toThemeProperty(l);m.addClass(l)}}else{var b=a.jqx.cssroundedcorners(this.roundedCorners);b=this.toThemeProperty(b);elBtnUp.addClass(b);elBtnDown.addClass(b)}var b=a.jqx.cssroundedcorners(this.roundedCorners);b=this.toThemeProperty(b);if(!p.hasClass(b)){p.addClass(b)}if(this.isTouchDevice&&this.touchModeStyle!=false){this.showButtons=false;p.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-normal-touch"))}},isScrolling:function(){if(this.thumbCapture==undefined||this.buttonDownCapture==undefined||this.buttonUpCapture==undefined||this.areaDownCapture==undefined||this.areaUpCapture==undefined){return false}return this.thumbCapture||this.buttonDownCapture||this.buttonUpCapture||this.areaDownCapture||this.areaUpCapture},handlemousedown:function(c){if(this.thumbCapture==undefined||this.thumbCapture==false){this.thumbCapture=true;var b=this.btnThumb;if(b!=null){b.addClass(this.toThemeProperty("jqx-fill-state-pressed"));if(this.vertical){b.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-pressed"))}else{b.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal"))}}}this.dragStartX=c.clientX;this.dragStartY=c.clientY;this.dragStartValue=this.value},toggleHover:function(c,b){},refresh:function(){this._arrange()},_setElementPosition:function(c,b,d){if(!isNaN(b)){if(parseInt(c[0].style.left)!=parseInt(b)){c[0].style.left=b+"px"}}if(!isNaN(d)){if(parseInt(c[0].style.top)!=parseInt(d)){c[0].style.top=d+"px"}}},_setElementTopPosition:function(b,c){if(!isNaN(c)){b[0].style.top=c+"px"}},_setElementLeftPosition:function(c,b){if(!isNaN(b)){c[0].style.left=b+"px"}},handlemouseleave:function(e){var b=this.btnUp;var d=this.btnDown;if(this.buttonDownCapture||this.buttonUpCapture){b.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed"));d.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed"));this._removeArrowClasses("pressed")}if(this.thumbCapture!=true){return}var c=this.btnThumb;var f=this.vertical?this.toThemeProperty("jqx-scrollbar-thumb-state-pressed"):this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal");c.removeClass(f);c.removeClass(this.toThemeProperty("jqx-fill-state-pressed"))},handlemouseenter:function(e){var b=this.btnUp;var d=this.btnDown;if(this.buttonUpCapture){b.addClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed"));b.addClass(this.toThemeProperty("jqx-fill-state-pressed"));this._addArrowClasses("pressed","up")}if(this.buttonDownCapture){d.addClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed"));d.addClass(this.toThemeProperty("jqx-fill-state-pressed"));this._addArrowClasses("pressed","down")}if(this.thumbCapture!=true){return}var c=this.btnThumb;if(this.vertical){c.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-pressed"))}else{c.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal"))}c.addClass(this.toThemeProperty("jqx-fill-state-pressed"))},handlemousemove:function(b){var i=this.btnUp;var e=this.btnDown;var d=0;if(e==null||i==null){return}if(i!=null&&e!=null&&this.buttonDownCapture!=undefined&&this.buttonUpCapture!=undefined){if(this.buttonDownCapture&&b.which==d){e.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed"));e.removeClass(this.toThemeProperty("jqx-fill-state-pressed"));this._removeArrowClasses("pressed","down");this.buttonDownCapture=false}else{if(this.buttonUpCapture&&b.which==d){i.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed"));i.removeClass(this.toThemeProperty("jqx-fill-state-pressed"));this._removeArrowClasses("pressed","up");this.buttonUpCapture=false}}}if(this.thumbCapture!=true){return false}var k=this.btnThumb;if(b.which==d&&!this.isTouchDevice&&!this._touchSupport){this.thumbCapture=false;this._arrange();var j=this.vertical?this.toThemeProperty("jqx-scrollbar-thumb-state-pressed"):this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal");k.removeClass(j);k.removeClass(this.toThemeProperty("jqx-fill-state-pressed"));return true}if(b.preventDefault!=undefined){b.preventDefault()}if(b.originalEvent!=null){b.originalEvent.mouseHandled=true}if(b.stopPropagation!=undefined){b.stopPropagation()}var l=0;try{if(!this.vertical){l=b.clientX-this.dragStartX}else{l=b.clientY-this.dragStartY}var f=this._btnAndThumbSize;if(!this._btnAndThumbSize){f=(this.vertical)?i.height()+e.height()+k.height():i.width()+e.width()+k.width()}var g=(this.max-this.min)/(this.scrollBarSize-f);if(this.thumbStep=="auto"){l*=g}else{l*=g;if(Math.abs(this.dragStartValue+l-this.value)>=parseInt(this.thumbStep)){var c=Math.round(parseInt(l)/this.thumbStep)*this.thumbStep;if(this.rtl&&!this.vertical){this.setPosition(this.dragStartValue-c)}else{this.setPosition(this.dragStartValue+c)}return false}else{return false}}var c=l;if(this.rtl&&!this.vertical){c=-l}this.setPosition(this.dragStartValue+c)}catch(h){alert(h)}return false},handlemouseup:function(d,g){var c=false;if(this.thumbCapture){this.thumbCapture=false;var e=this.btnThumb;var h=this.vertical?this.toThemeProperty("jqx-scrollbar-thumb-state-pressed"):this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal");e.removeClass(h);e.removeClass(this.toThemeProperty("jqx-fill-state-pressed"));c=true;this._mouseup=new Date()}this.areaDownCapture=this.areaUpCapture=false;if(this.buttonUpCapture||this.buttonDownCapture){var b=this.btnUp;var f=this.btnDown;this.buttonUpCapture=false;this.buttonDownCapture=false;b.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed"));f.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed"));b.removeClass(this.toThemeProperty("jqx-fill-state-pressed"));f.removeClass(this.toThemeProperty("jqx-fill-state-pressed"));this._removeArrowClasses("pressed");c=true;this._mouseup=new Date()}if(c){if(g.preventDefault!=undefined){g.preventDefault()}if(g.originalEvent!=null){g.originalEvent.mouseHandled=true}if(g.stopPropagation!=undefined){g.stopPropagation()}}},setPosition:function(b,g){var d=this.element;if(b==undefined||b==NaN){b=this.min}if(b>=this.max){b=this.max}if(b<this.min){b=this.min}if(this.value!==b||g==true){if(b==this.max){var c=new a.Event("complete");this.host.trigger(c)}var f=this.value;if(this._triggervaluechanged){var e=new a.Event("valueChanged");e.previousValue=this.value;e.currentValue=b}this.value=b;this._positionelements();if(this._triggervaluechanged){this.host.trigger(e)}if(this.valueChanged){this.valueChanged({currentValue:this.value,previousvalue:f})}}return b},val:function(b){var c=function(e){for(var d in e){if(e.hasOwnProperty(d)){return false}}if(typeof b=="number"){return false}if(typeof b=="date"){return false}if(typeof b=="boolean"){return false}if(typeof b=="string"){return false}return true};if(c(b)||arguments.length==0){return this.value}else{this.setPosition(b);return b}},_getThumbSize:function(b){var d=this.max-this.min;var c=0;if(d>1){c=(b/(d+b)*b)}else{if(d==1){c=b}}if(this.thumbSize>0){c=this.thumbSize}if(c<this.thumbMinSize){c=this.thumbMinSize}return Math.min(c,b)},_positionelements:function(){var g=this.element;var n=this.areaUp;var e=this.areaDown;var h=this.btnUp;var f=this.btnDown;var o=this.btnThumb;var b=this.scrollWrap;var p=this._height?this._height:this.host.height();var c=this._width?this._width:this.host.width();var l=(!this.vertical)?p:c;if(!this.showButtons){l=0}var m=(!this.vertical)?c:p;this.scrollBarSize=m;var d=this._getThumbSize(m-2*l);d=Math.round(d);if(d<this.thumbMinSize){d=this.thumbMinSize}if(p==NaN||p<10){p=10}if(c==NaN||c<10){c=10}l+=2;this.btnSize=l;var i=this._btnAndThumbSize;if(!this._btnAndThumbSize){var i=(this.vertical)?2*this.btnSize+o.outerHeight():2*this.btnSize+o.outerWidth();i=Math.round(i)}var k=(m-i)/(this.max-this.min)*(this.value-this.min);if(this.rtl&&!this.vertical){k=(m-i)/(this.max-this.min)*(this.max-this.value-this.min)}k=Math.round(k);if(k<0){k=0}if(this.vertical){var j=m-k-i;if(j<0){j=0}e[0].style.height=j+"px";n[0].style.height=k+"px";this._setElementTopPosition(n,l);this._setElementTopPosition(o,l+k);this._setElementTopPosition(e,l+k+d)}else{n[0].style.width=k+"px";if(m-k-i>=0){e[0].style.width=m-k-i+"px"}else{e[0].style.width="0px"}this._setElementLeftPosition(n,l);this._setElementLeftPosition(o,l+k);this._setElementLeftPosition(e,2+l+k+d)}},_arrange:function(){if(this._initialLayout){this._initialLayout=false;return}var d=this.element;var g=this.areaUp;var r=this.areaDown;var c=this.btnUp;var k=this.btnDown;var s=this.btnThumb;var n=this.scrollWrap;var l=parseInt(this.element.style.height);var o=parseInt(this.element.style.width);if(this.isPercentage){var l=this.host.height();var o=this.host.width()}if(isNaN(l)){l=0}if(isNaN(o)){o=0}this._width=o;this._height=l;var b=(!this.vertical)?l:o;if(!this.showButtons){b=0}c[0].style.width=b+"px";c[0].style.height=b+"px";k[0].style.width=b+"px";k[0].style.height=b+"px";if(this.vertical){n[0].style.width=o+2+"px"}else{n[0].style.height=l+2+"px"}this._setElementPosition(c,0,0);var q=b+2;if(this.vertical){this._setElementPosition(k,0,l-q)}else{this._setElementPosition(k,o-q,0)}var e=(!this.vertical)?o:l;this.scrollBarSize=e;var h=this._getThumbSize(e-2*b);h=Math.round(h);if(h<this.thumbMinSize){h=this.thumbMinSize}var m=false;if(this.isTouchDevice&&this.touchModeStyle!=false){m=true}if(!this.vertical){s[0].style.width=h+"px";s[0].style.height=l+"px";if(m&&this.thumbTouchSize!==0){s.css({height:this.thumbTouchSize+"px"});s.css("margin-top",(this.host.height()-this.thumbTouchSize)/2)}}else{s[0].style.width=o+"px";s[0].style.height=h+"px";if(m&&this.thumbTouchSize!==0){s.css({width:this.thumbTouchSize+"px"});s.css("margin-left",(this.host.width()-this.thumbTouchSize)/2)}}if(l==NaN||l<10){l=10}if(o==NaN||o<10){o=10}b+=2;this.btnSize=b;var f=(this.vertical)?2*this.btnSize+(2+parseInt(s[0].style.height)):2*this.btnSize+(2+parseInt(s[0].style.width));f=Math.round(f);this._btnAndThumbSize=f;var u=(e-f)/(this.max-this.min)*(this.value-this.min);if(this.rtl&&!this.vertical){u=(e-f)/(this.max-this.min)*(this.max-this.value-this.min)}u=Math.round(u);if(u===-Infinity||u==Infinity){u=0}if(isNaN(u)){u=0}if(u<0){u=0}if(this.vertical){var t=(e-u-f);if(t<0){t=0}r[0].style.height=t+"px";r[0].style.width=o+"px";g[0].style.height=u+"px";g[0].style.width=o+"px";var i=parseInt(this.element.style.height);if(this.isPercentage){i=this.host.height()}s[0].style.visibility="inherit";if(i-3*parseInt(b)<0){s[0].style.visibility="hidden"}else{if(i<f){s[0].style.visibility="hidden"}else{if(this.element.style.visibility=="visible"){s[0].style.visibility="inherit"}}}this._setElementPosition(g,0,b);this._setElementPosition(s,0,b+u);this._setElementPosition(r,0,b+u+h)}else{if(u>0){g[0].style.width=u+"px"}if(l>0){g[0].style.height=l+"px"}var j=(e-u-f);if(j<0){j=0}r[0].style.width=j+"px";r[0].style.height=l+"px";var p=parseInt(this.element.style.width);if(this.isPercentage){p=this.host.width()}s[0].style.visibility="inherit";if(p-3*parseInt(b)<0){s[0].style.visibility="hidden"}else{if(p<f){s[0].style.visibility="hidden"}else{if(this.element.style.visibility=="visible"){s[0].style.visibility="inherit"}}}this._setElementPosition(g,b,0);this._setElementPosition(s,b+u,0);this._setElementPosition(r,2+b+u+h,0)}}})})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxMenu","",{});a.extend(a.jqx._jqxMenu.prototype,{defineInstance:function(){var b={items:new Array(),mode:"horizontal",width:null,height:null,minimizeWidth:"auto",easing:"easeInOutSine",animationShowDuration:200,animationHideDuration:200,autoCloseInterval:0,animationHideDelay:100,animationShowDelay:100,menuElements:new Array(),autoSizeMainItems:false,autoCloseOnClick:true,autoCloseOnMouseLeave:true,enableRoundedCorners:true,disabled:false,autoOpenPopup:true,enableHover:true,autoOpen:true,autoGenerate:true,clickToOpen:false,showTopLevelArrows:false,touchMode:"auto",source:null,popupZIndex:17000,rtl:false,keyboardNavigation:false,lockFocus:false,title:"",events:["shown","closed","itemclick","initialized"]};a.extend(true,this,b);return b},createInstance:function(c){var b=this;this.host.attr("role","menubar");a.jqx.utilities.resize(this.host,function(){b.refresh()},false,this.mode!="popup");if(this.minimizeWidth!="auto"&&this.minimizeWidth!=null&&this.width&&this.width.toString().indexOf("%")==-1){a(window).resize(function(){b.refresh()})}this.host.css("outline","none");if(this.source){if(this.source!=null){var d=this.loadItems(this.source);this.element.innerHTML=d}}this._tmpHTML=this.element.innerHTML;if(this.element.innerHTML.indexOf("UL")){var e=this.host.find("ul:first");if(e.length>0){this._createMenu(e[0])}}this.host.data("autoclose",{});this._render();this.setSize();if(a.jqx.browser.msie&&a.jqx.browser.version<8){this.host.attr("hideFocus",true)}},focus:function(){try{this.host.focus();if(this.mode==="popup"){var c=this.host.closest("div.jqx-menu-wrapper");c.focus()}if(this.keyboardNavigation){if(!this.activeItem){a(this.items[0].element).addClass(this.toThemeProperty("jqx-fill-state-focus"));this.activeItem=this.items[0]}}}catch(b){}},loadItems:function(c,e){if(c==null){return}if(c.length==0){return""}var b=this;this.items=new Array();var d="<ul>";if(e){d='<ul style="width:'+e+';">'}a.map(c,function(f){if(f==undefined){return null}d+=b._parseItem(f)});d+="</ul>";return d},_parseItem:function(f){var c="";if(f==undefined){return null}var b=f.label;if(!f.label&&f.html){b=f.html}if(!b){b="Item"}if(typeof f==="string"){b=f}var e=false;if(f.selected!=undefined&&f.selected){e=true}var d=false;if(f.disabled!=undefined&&f.disabled){d=true}c+="<li";if(d){c+=' item-disabled="true" '}if(f.label&&!f.html){c+=' item-label="'+b+'" '}if(f.value!=null){c+=' item-value="'+f.value+'" '}if(f.id!=undefined){c+=' id="'+f.id+'" '}c+=">"+b;if(f.items){if(f.subMenuWidth){c+=this.loadItems(f.items,f.subMenuWidth)}else{c+=this.loadItems(f.items)}}c+="</li>";return c},setSize:function(){if(this.width!=null&&this.width.toString().indexOf("%")!=-1){this.host.width(this.width)}else{if(this.width!=null&&this.width.toString().indexOf("px")!=-1){this.host.width(this.width)}else{if(this.width!=undefined&&!isNaN(this.width)){this.host.width(this.width)}}}if(this.height!=null&&this.height.toString().indexOf("%")!=-1){this.host.height(this.height)}else{if(this.height!=null&&this.height.toString().indexOf("px")!=-1){this.host.height(this.height)}else{if(this.height!=undefined&&!isNaN(this.height)){this.host.height(this.height)}}}if(this.height===null){this.host.height("auto")}var g=this;if(this.minimizeWidth!=null&&this.mode!="popup"){var f=a(window).width();if(!a.jqx.response){var e=false;if(navigator.userAgent.match(/Windows|Linux|MacOS/)){var b=navigator.userAgent.indexOf("Windows Phone")>=0||navigator.userAgent.indexOf("WPDesktop")>=0||navigator.userAgent.indexOf("IEMobile")>=0||navigator.userAgent.indexOf("ZuneWP7")>=0;if(!b){e=true}}var c=this.minimizeWidth;if(e&&this.minimizeWidth=="auto"){return}}if(this.minimizeWidth=="auto"&&a.jqx.response){var d=new a.jqx.response();if(d.device.type=="Phone"||d.device.type=="Tablet"){if(!this.minimized){this.minimize()}}}else{if((f<c)&&!this.minimized){this.minimize()}else{if(this.minimized&&f>=c){this.restore()}}}}},minimize:function(){if(this.minimized){return}var e=this;this.host.addClass(this.toThemeProperty("jqx-menu-minimized"));this.minimized=true;this._tmpMode=this.mode;this.mode="simple";var h=this.host.closest("div.jqx-menu-wrapper");h.remove();a("#menuWrapper"+this.element.id).remove();a.each(this.items,function(){var k=this;var j=a(k.element);var i=a(k.subMenuElement);var l=i.closest("div.jqx-menu-popup");l.remove()});if(this.source){var d=this.loadItems(this.source);this.element.innerHTML=d;this._tmpHTML=this.element.innerHTML}this.element.innerHTML=this._tmpHTML;if(this.element.innerHTML.indexOf("UL")){var g=this.host.find("ul:first");if(g.length>0){this._createMenu(g[0])}}this._render();var c=this.host.find("ul:first");c.wrap('<div class="jqx-menu-wrapper" style="z-index:'+this.popupZIndex+'; padding: 0px; display: none; margin: 0px; height: auto; width: auto; position: absolute; top: 0; left: 0; display: block; visibility: visible;"></div>');var h=c.closest("div.jqx-menu-wrapper");h[0].id="menuWrapper"+this.element.id;h.detach();h.appendTo(a(document.body));h.addClass(this.toThemeProperty("jqx-widget"));h.addClass(this.toThemeProperty("jqx-menu"));h.addClass(this.toThemeProperty("jqx-menu-minimized"));h.addClass(this.toThemeProperty("jqx-widget-header"));c.children().hide();h.hide();h.find("ul").addClass(this.toThemeProperty("jqx-menu-ul-minimized"));this.minimizedItem=a("<div></div>");this.minimizedItem.addClass(this.toThemeProperty("jqx-item"));this.minimizedItem.addClass(this.toThemeProperty("jqx-menu-item-top"));this.addHandler(h,"keydown",function(i){return e.handleKeyDown(i)});this.minimizedItem.addClass(this.toThemeProperty("jqx-menu-minimized-button"));this.minimizedItem.prependTo(this.host);this.titleElement=a("<div>"+this.title+"</div>");this.titleElement.addClass(this.toThemeProperty("jqx-item"));this.titleElement.addClass(this.toThemeProperty("jqx-menu-title"));this.titleElement.prependTo(this.host);a("<div style='clear:both;'></div>").insertAfter(this.minimizedItem);e.minimizedHidden=true;var b=function(j){e.minimizedHidden=true;e.minimizedItem.show();var i=false;if(e.minimizedItem.css("float")=="right"){i=true}h.animate({left:!i?-h.outerWidth():e.host.coord().left+e.host.width()+h.width(),opacity:0},e.animationHideDuration,function(){h.find("ul:first").children().hide();h.hide()})};var f=function(k){if(e.minimizedHidden){h.find("ul:first").children().show();e.minimizedHidden=false;h.show();h.css("opacity",0);h.css("left",-h.outerWidth());var j=false;var i=h.width();if(e.minimizedItem.css("float")=="right"){h.css("left",e.host.coord().left+e.host.width()+i);j=true}h.css("top",e.host.coord().top+e.host.height());h.animate({left:!j?e.host.coord().left:e.host.coord().left+e.host.width()-i,opacity:0.95},e.animationShowDuration,function(){})}else{b(k)}e._raiseEvent("2",{item:e.minimizedItem[0],event:k});e.setSize()};this.addHandler(a(window),"orientationchange.jqxmenu"+this.element.id,function(i){setTimeout(function(){if(!e.minimizedHidden){var j=h.width();var k=false;var j=h.width();if(e.minimizedItem.css("float")=="right"){k=true}h.css("top",e.host.coord().top+e.host.height());h.css({left:!k?e.host.coord().left:e.host.coord().left+e.host.width()-j})}},25)});this.addHandler(this.minimizedItem,"click",function(i){f(i)})},restore:function(){if(!this.minimized){return}this.host.find("ul").removeClass(this.toThemeProperty("jqx-menu-ul-minimized"));this.host.removeClass(this.toThemeProperty("jqx-menu-minimized"));this.minimized=false;this.mode=this._tmpMode;if(this.minimizedItem){this.minimizedItem.remove()}var d=a("#menuWrapper"+this.element.id);d.remove();if(this.source){var b=this.loadItems(this.source);this.element.innerHTML=b;this._tmpHTML=b}this.element.innerHTML=this._tmpHTML;if(this.element.innerHTML.indexOf("UL")){var c=this.host.find("ul:first");if(c.length>0){this._createMenu(c[0])}}this.setSize();this._render()},isTouchDevice:function(){if(this._isTouchDevice!=undefined){return this._isTouchDevice}var b=a.jqx.mobile.isTouchDevice();if(this.touchMode==true){b=true}else{if(this.touchMode==false){b=false}}if(b){this.host.addClass(this.toThemeProperty("jqx-touch"));a(".jqx-menu-item").addClass(this.toThemeProperty("jqx-touch"))}this._isTouchDevice=b;return b},refresh:function(b){if(!b){this.setSize()}},resize:function(c,b){this.width=c;this.height=b;this.refresh()},_closeAll:function(f){var d=f!=null?f.data:this;var b=d.items;a.each(b,function(){var e=this;if(e.hasItems==true){if(e.isOpen){d._closeItem(d,e)}}});if(d.mode=="popup"){if(f!=null){var c=d._isRightClick(f);if(!c){d.close()}}}},closeItem:function(e){if(e==null){return false}var b=e;var c=document.getElementById(b);var d=this;a.each(d.items,function(){var f=this;if(f.isOpen==true&&f.element==c){d._closeItem(d,f);if(f.parentId){d.closeItem(f.parentId)}}});return true},openItem:function(e){if(e==null){return false}var b=e;var c=document.getElementById(b);var d=this;a.each(d.items,function(){var f=this;if(f.isOpen==false&&f.element==c){d._openItem(d,f);if(f.parentId){d.openItem(f.parentId)}}});return true},_getClosedSubMenuOffset:function(c){var b=a(c.subMenuElement);var f=-b.outerHeight();var e=-b.outerWidth();var d=c.level==0&&this.mode=="horizontal";if(d){e=0}else{f=0}switch(c.openVerticalDirection){case"up":case"center":f=b.outerHeight();break}switch(c.openHorizontalDirection){case this._getDir("left"):if(d){e=0}else{e=b.outerWidth()}break;case"center":if(d){e=0}else{e=b.outerWidth()}break}return{left:e,top:f}},_closeItem:function(l,o,g,c){if(l==null||o==null){return false}var j=a(o.subMenuElement);var b=o.level==0&&this.mode=="horizontal";var f=this._getClosedSubMenuOffset(o);var m=f.top;var e=f.left;var i=a(o.element);var k=j.closest("div.jqx-menu-popup");if(k!=null){var h=l.animationHideDelay;if(c==true){h=0}if(j.data("timer")&&j.data("timer").show!=null){clearTimeout(j.data("timer").show);j.data("timer").show=null}var n=function(){o.isOpen=false;if(b){j.stop().animate({top:m},l.animationHideDuration,function(){a(o.element).removeClass(l.toThemeProperty("jqx-fill-state-pressed"));a(o.element).removeClass(l.toThemeProperty("jqx-menu-item-top-selected"));a(o.element).removeClass(l.toThemeProperty("jqx-rc-b-expanded"));k.removeClass(l.toThemeProperty("jqx-rc-t-expanded"));var p=a(o.arrow);if(p.length>0&&l.showTopLevelArrows){p.removeClass();if(o.openVerticalDirection=="down"){p.addClass(l.toThemeProperty("jqx-menu-item-arrow-down"));p.addClass(l.toThemeProperty("jqx-icon-arrow-down"))}else{p.addClass(l.toThemeProperty("jqx-menu-item-arrow-up"));p.addClass(l.toThemeProperty("jqx-icon-arrow-up"))}}a.jqx.aria(a(o.element),"aria-expanded",false);k.css({display:"none"});if(l.animationHideDuration==0){j.css({top:m})}l._raiseEvent("1",o)})}else{if(!a.jqx.browser.msie){}j.stop().animate({left:e},l.animationHideDuration,function(){if(l.animationHideDuration==0){j.css({left:e})}if(o.level>0){a(o.element).removeClass(l.toThemeProperty("jqx-fill-state-pressed"));a(o.element).removeClass(l.toThemeProperty("jqx-menu-item-selected"));var p=a(o.arrow);if(p.length>0){p.removeClass();if(o.openHorizontalDirection!="left"){p.addClass(l.toThemeProperty("jqx-menu-item-arrow-"+l._getDir("right")));p.addClass(l.toThemeProperty("jqx-icon-arrow-"+l._getDir("right")))}else{p.addClass(l.toThemeProperty("jqx-menu-item-arrow-"+l._getDir("left")));p.addClass(l.toThemeProperty("jqx-icon-arrow-"+l._getDir("left")))}}}else{a(o.element).removeClass(l.toThemeProperty("jqx-fill-state-pressed"));a(o.element).removeClass(l.toThemeProperty("jqx-menu-item-top-selected"));var p=a(o.arrow);if(p.length>0){p.removeClass();if(o.openHorizontalDirection!="left"){p.addClass(l.toThemeProperty("jqx-menu-item-arrow-top-"+l._getDir("right")));p.addClass(l.toThemeProperty("jqx-icon-arrow-"+l._getDir("right")))}else{p.addClass(l.toThemeProperty("jqx-menu-item-arrow-top-"+l._getDir("left")));p.addClass(l.toThemeProperty("jqx-icon-arrow-"+l._getDir("left")))}}}a.jqx.aria(a(o.element),"aria-expanded",false);k.css({display:"none"});l._raiseEvent("1",o)})}};if(h>0){if(j.data("timer")){j.data("timer").hide=setTimeout(function(){n()},h)}}else{n()}if(g!=undefined&&g){var d=j.children();a.each(d,function(){if(l.menuElements[this.id]&&l.menuElements[this.id].isOpen){var p=a(l.menuElements[this.id].subMenuElement);l._closeItem(l,l.menuElements[this.id],true,true)}})}}},getSubItems:function(i,h){if(i==null){return false}var g=this;var c=new Array();if(h!=null){a.extend(c,h)}var d=i;var f=this.menuElements[d];var b=a(f.subMenuElement);var e=b.find(".jqx-menu-item");a.each(e,function(){c[this.id]=g.menuElements[this.id];var j=g.getSubItems(this.id,c);a.extend(c,j)});return c},disable:function(g,d){if(g==null){return}var c=g;var f=this;if(this.menuElements[c]){var e=this.menuElements[c];e.disabled=d;var b=a(e.element);e.element.disabled=d;a.each(b.children(),function(){this.disabled=d});if(d){b.addClass(f.toThemeProperty("jqx-menu-item-disabled"));b.addClass(f.toThemeProperty("jqx-fill-state-disabled"))}else{b.removeClass(f.toThemeProperty("jqx-menu-item-disabled"));b.removeClass(f.toThemeProperty("jqx-fill-state-disabled"))}}},_setItemProperty:function(g,c,f){if(g==null){return}var b=g;var e=this;if(this.menuElements[b]){var d=this.menuElements[b];if(d[c]){d[c]=f}}},setItemOpenDirection:function(d,c,e){if(d==null){return}var j=d;var g=this;var f=a.jqx.browser.msie&&a.jqx.browser.version<8;if(this.menuElements[j]){var i=this.menuElements[j];if(c!=null){i.openHorizontalDirection=c;if(i.hasItems&&i.level>0){var h=a(i.element);if(h!=undefined){var b=a(i.arrow);if(i.arrow==null){b=a('<span id="arrow'+h[0].id+'"></span>');if(!f){b.prependTo(h)}else{b.appendTo(h)}i.arrow=b[0]}b.removeClass();if(i.openHorizontalDirection=="left"){b.addClass(g.toThemeProperty("jqx-menu-item-arrow-"+g._getDir("left")));b.addClass(g.toThemeProperty("jqx-icon-arrow-"+g._getDir("left")))}else{b.addClass(g.toThemeProperty("jqx-menu-item-arrow-"+g._getDir("right")));b.addClass(g.toThemeProperty("jqx-icon-arrow-"+g._getDir("right")))}b.css("visibility","visible");if(!f){b.css("display","block");b.css("float","right")}else{b.css("display","inline-block");b.css("float","none")}}}}if(e!=null){i.openVerticalDirection=e;var b=a(i.arrow);var h=a(i.element);if(!g.showTopLevelArrows){return}if(h!=undefined){if(i.arrow==null){b=a('<span id="arrow'+h[0].id+'"></span>');if(!f){b.prependTo(h)}else{b.appendTo(h)}i.arrow=b[0]}b.removeClass();if(i.openVerticalDirection=="down"){b.addClass(g.toThemeProperty("jqx-menu-item-arrow-down"));b.addClass(g.toThemeProperty("jqx-icon-arrow-down"))}else{b.addClass(g.toThemeProperty("jqx-menu-item-arrow-up"));b.addClass(g.toThemeProperty("jqx-icon-arrow-up"))}b.css("visibility","visible");if(!f){b.css("display","block");b.css("float","right")}else{b.css("display","inline-block");b.css("float","none")}}}}},_getSiblings:function(d){var e=new Array();var b=0;for(var c=0;c<this.items.length;c++){if(this.items[c]==d){continue}if(this.items[c].parentId==d.parentId&&this.items[c].hasItems){e[b++]=this.items[c]}}return e},_openItem:function(s,r,q){if(s==null||r==null){return false}if(r.isOpen){return false}if(r.disabled){return false}if(s.disabled){return false}var l=s.popupZIndex;if(q!=undefined){l=q}var e=s.animationHideDuration;s.animationHideDuration=0;s._closeItem(s,r,true,true);s.animationHideDuration=e;a(r.element).focus();var f=[5,5];var t=a(r.subMenuElement);if(t!=null){t.stop()}if(t.data("timer")&&t.data("timer").hide!=null){clearTimeout(t.data("timer").hide)}var o=t.closest("div.jqx-menu-popup");var h=a(r.element);var i=r.level==0?this._getOffset(r.element):h.position();if(r.level>0&&this.hasTransform){var p=parseInt(h.coord().top)-parseInt(this._getOffset(r.element).top);i.top+=p}if(r.level==0&&this.mode=="popup"){i=h.coord()}var j=r.level==0&&this.mode=="horizontal";var b=j?i.left:this.menuElements[r.parentId]!=null&&this.menuElements[r.parentId].subMenuElement!=null?parseInt(a(a(this.menuElements[r.parentId].subMenuElement).closest("div.jqx-menu-popup")).outerWidth())-f[0]:parseInt(t.outerWidth());o.css({visibility:"visible",display:"block",left:b,top:j?i.top+h.outerHeight():i.top,zIndex:l});t.css("display","block");if(this.mode!="horizontal"&&r.level==0){var d=this._getOffset(this.element);o.css("left",-1+d.left+this.host.outerWidth());t.css("left",-t.outerWidth())}else{var c=this._getClosedSubMenuOffset(r);t.css("left",c.left);t.css("top",c.top)}o.css({height:parseInt(t.outerHeight())+parseInt(f[1])+"px"});var n=0;var g=0;switch(r.openVerticalDirection){case"up":if(j){t.css("top",t.outerHeight());n=f[1];var k=parseInt(t.parent().css("padding-bottom"));if(isNaN(k)){k=0}if(k>0){o.addClass(this.toThemeProperty("jqx-menu-popup-clear"))}t.css("top",t.outerHeight()-k);o.css({display:"block",top:i.top-o.outerHeight(),zIndex:l})}else{n=f[1];t.css("top",t.outerHeight());o.css({display:"block",top:i.top-o.outerHeight()+f[1]+h.outerHeight(),zIndex:l})}break;case"center":if(j){t.css("top",0);o.css({display:"block",top:i.top-o.outerHeight()/2+f[1],zIndex:l})}else{t.css("top",0);o.css({display:"block",top:i.top+h.outerHeight()/2-o.outerHeight()/2+f[1],zIndex:l})}break}switch(r.openHorizontalDirection){case this._getDir("left"):if(j){o.css({left:i.left-(o.outerWidth()-h.outerWidth()-f[0])})}else{g=0;t.css("left",o.outerWidth());o.css({left:i.left-(o.outerWidth())+2*r.level})}break;case"center":if(j){o.css({left:i.left-(o.outerWidth()/2-h.outerWidth()/2-f[0]/2)})}else{o.css({left:i.left-(o.outerWidth()/2-h.outerWidth()/2-f[0]/2)});t.css("left",o.outerWidth())}break}if(j){if(parseInt(t.css("top"))==n){r.isOpen=true;return}}else{if(parseInt(t.css("left"))==g){r.isOpen==true;return}}a.each(s._getSiblings(r),function(){s._closeItem(s,this,true,true)});var m=a.data(s.element,"animationHideDelay");s.animationHideDelay=m;if(this.autoCloseInterval>0){if(this.host.data("autoclose")!=null&&this.host.data("autoclose").close!=null){clearTimeout(this.host.data("autoclose").close)}if(this.host.data("autoclose")!=null){this.host.data("autoclose").close=setTimeout(function(){s._closeAll()},this.autoCloseInterval)}}if(t.data("timer")){t.data("timer").show=setTimeout(function(){if(o!=null){if(j){t.stop();t.css("left",g);if(!a.jqx.browser.msie){}h.addClass(s.toThemeProperty("jqx-fill-state-pressed"));h.addClass(s.toThemeProperty("jqx-menu-item-top-selected"));if(r.openVerticalDirection=="down"){a(r.element).addClass(s.toThemeProperty("jqx-rc-b-expanded"));o.addClass(s.toThemeProperty("jqx-rc-t-expanded"))}else{a(r.element).addClass(s.toThemeProperty("jqx-rc-t-expanded"));o.addClass(s.toThemeProperty("jqx-rc-b-expanded"))}var u=a(r.arrow);if(u.length>0&&s.showTopLevelArrows){u.removeClass();if(r.openVerticalDirection=="down"){u.addClass(s.toThemeProperty("jqx-menu-item-arrow-down-selected"));u.addClass(s.toThemeProperty("jqx-icon-arrow-down"))}else{u.addClass(s.toThemeProperty("jqx-menu-item-arrow-up-selected"));u.addClass(s.toThemeProperty("jqx-icon-arrow-up"))}}if(s.animationShowDuration==0){t.css({top:n});r.isOpen=true;s._raiseEvent("0",r);a.jqx.aria(a(r.element),"aria-expanded",true)}else{t.animate({top:n},s.animationShowDuration,s.easing,function(){r.isOpen=true;a.jqx.aria(a(r.element),"aria-expanded",true);s._raiseEvent("0",r)})}}else{t.stop();t.css("top",n);if(!a.jqx.browser.msie){}if(r.level>0){h.addClass(s.toThemeProperty("jqx-fill-state-pressed"));h.addClass(s.toThemeProperty("jqx-menu-item-selected"));var u=a(r.arrow);if(u.length>0){u.removeClass();if(r.openHorizontalDirection!="left"){u.addClass(s.toThemeProperty("jqx-menu-item-arrow-"+s._getDir("right")+"-selected"));u.addClass(s.toThemeProperty("jqx-icon-arrow-"+s._getDir("right")))}else{u.addClass(s.toThemeProperty("jqx-menu-item-arrow-"+s._getDir("left")+"-selected"));u.addClass(s.toThemeProperty("jqx-icon-arrow-"+s._getDir("left")))}}}else{h.addClass(s.toThemeProperty("jqx-fill-state-pressed"));h.addClass(s.toThemeProperty("jqx-menu-item-top-selected"));var u=a(r.arrow);if(u.length>0){u.removeClass();if(r.openHorizontalDirection!="left"){u.addClass(s.toThemeProperty("jqx-menu-item-arrow-"+s._getDir("right")+"-selected"));u.addClass(s.toThemeProperty("jqx-icon-arrow-"+s._getDir("right")))}else{u.addClass(s.toThemeProperty("jqx-menu-item-arrow-"+s._getDir("left")+"-selected"));u.addClass(s.toThemeProperty("jqx-icon-arrow-"+s._getDir("left")))}}}if(!a.jqx.browser.msie){}if(s.animationShowDuration==0){t.css({left:g});s._raiseEvent("0",r);r.isOpen=true;a.jqx.aria(a(r.element),"aria-expanded",true)}else{t.animate({left:g},s.animationShowDuration,s.easing,function(){s._raiseEvent("0",r);r.isOpen=true;a.jqx.aria(a(r.element),"aria-expanded",true)})}}}},this.animationShowDelay)}},_getDir:function(b){switch(b){case"left":return !this.rtl?"left":"right";case"right":return this.rtl?"left":"right"}return"left"},_applyOrientation:function(i,d){var g=this;var f=0;g.host.removeClass(g.toThemeProperty("jqx-menu-horizontal"));g.host.removeClass(g.toThemeProperty("jqx-menu-vertical"));g.host.removeClass(g.toThemeProperty("jqx-menu"));g.host.removeClass(g.toThemeProperty("jqx-widget"));g.host.addClass(g.toThemeProperty("jqx-widget"));g.host.addClass(g.toThemeProperty("jqx-menu"));if(i!=undefined&&d!=undefined&&d=="popup"){if(g.host.parent().length>0&&g.host.parent().parent().length>0&&g.host.parent().parent()[0]==document.body){var h=a.data(document.body,"jqxMenuOldHost"+g.element.id);if(h!=null){var e=g.host.closest("div.jqx-menu-wrapper");e.remove();e.appendTo(h);g.host.css("display","block");g.host.css("visibility","visible");e.css("display","block");e.css("visibility","visible")}}}else{if(i==undefined&&d==undefined){a.data(document.body,"jqxMenuOldHost"+g.element.id,g.host.parent()[0])}}if(g.autoOpenPopup){if(g.mode=="popup"){g.addHandler(a(document),"contextmenu."+g.element.id,function(j){return false});g.addHandler(a(document),"mousedown.menu"+g.element.id,function(j){g._openContextMenu(j)})}else{g.removeHandler(a(document),"contextmenu."+g.element.id);g.removeHandler(a(document),"mousedown.menu"+g.element.id)}}else{g.removeHandler(a(document),"contextmenu."+g.element.id);g.removeHandler(a(document),"mousedown.menu"+g.element.id)}if(g.rtl){g.host.addClass(g.toThemeProperty("jqx-rtl"))}switch(g.mode){case"horizontal":g.host.addClass(g.toThemeProperty("jqx-widget-header"));g.host.addClass(g.toThemeProperty("jqx-menu-horizontal"));a.each(g.items,function(){var l=this;$element=a(l.element);var k=a(l.arrow);k.removeClass();if(l.hasItems&&l.level>0){var k=a('<span style="border: none; background-color: transparent;" id="arrow'+$element[0].id+'"></span>');k.prependTo($element);k.css("float",g._getDir("right"));k.addClass(g.toThemeProperty("jqx-menu-item-arrow-"+g._getDir("right")));k.addClass(g.toThemeProperty("jqx-icon-arrow-"+g._getDir("right")));l.arrow=k[0]}if(l.level==0){a(l.element).css("float",g._getDir("left"));if(!l.ignoretheme&&l.hasItems&&g.showTopLevelArrows){var k=a('<span style="border: none; background-color: transparent;" id="arrow'+$element[0].id+'"></span>');var j=a.jqx.browser.msie&&a.jqx.browser.version<8;if(l.arrow==null){if(!j){k.prependTo($element)}else{k.appendTo($element)}}else{k=a(l.arrow)}if(l.openVerticalDirection=="down"){k.addClass(g.toThemeProperty("jqx-menu-item-arrow-down"));k.addClass(g.toThemeProperty("jqx-icon-arrow-down"))}else{k.addClass(g.toThemeProperty("jqx-menu-item-arrow-up"));k.addClass(g.toThemeProperty("jqx-icon-arrow-up"))}k.css("visibility","visible");if(!j){k.css("display","block");k.css("float","right")}else{k.css("display","inline-block")}l.arrow=k[0]}else{if(!l.ignoretheme&&l.hasItems&&!g.showTopLevelArrows){if(l.arrow!=null){var k=a(l.arrow);k.remove();l.arrow=null}}}f=Math.max(f,$element.height())}});break;case"vertical":case"popup":case"simple":g.host.addClass(g.toThemeProperty("jqx-menu-vertical"));a.each(g.items,function(){var k=this;$element=a(k.element);if(k.hasItems&&!k.ignoretheme){if(k.arrow){a(k.arrow).remove()}if(g.mode=="simple"){return true}var j=a('<span style="border: none; background-color: transparent;" id="arrow'+$element[0].id+'"></span>');j.prependTo($element);j.css("float","right");if(k.level==0){j.addClass(g.toThemeProperty("jqx-menu-item-arrow-top-"+g._getDir("right")));j.addClass(g.toThemeProperty("jqx-icon-arrow-"+g._getDir("right")))}else{j.addClass(g.toThemeProperty("jqx-menu-item-arrow-"+g._getDir("right")));j.addClass(g.toThemeProperty("jqx-icon-arrow-"+g._getDir("right")))}k.arrow=j[0]}$element.css("float","none")});if(g.mode=="popup"){g.host.addClass(g.toThemeProperty("jqx-widget-content"));g.host.wrap('<div tabindex=0 class="jqx-menu-wrapper" style="z-index:'+g.popupZIndex+'; border: none; background-color: transparent; padding: 0px; margin: 0px; position: absolute; top: 0; left: 0; display: block; visibility: visible;"></div>');var e=g.host.closest("div.jqx-menu-wrapper");g.host.addClass(g.toThemeProperty("jqx-popup"));e[0].id="menuWrapper"+g.element.id;e.appendTo(a(document.body));g.addHandler(e,"keydown",function(j){return g.handleKeyDown(j)})}else{g.host.addClass(g.toThemeProperty("jqx-widget-header"))}if(g.mode=="popup"){var b=g.host.height();g.host.css("position","absolute");g.host.css("top","0");g.host.css("left","0");if(g.mode!="simple"){g.host.height(b);g.host.css("display","none")}}break}var c=g.isTouchDevice();if(g.autoCloseOnClick){g.removeHandler(a(document),"mousedown.menu"+g.element.id,g._closeAfterClick);g.addHandler(a(document),"mousedown.menu"+g.element.id,g._closeAfterClick,g);if(c){g.removeHandler(a(document),a.jqx.mobile.getTouchEventName("touchstart")+".menu"+g.element.id,g._closeAfterClick,g);g.addHandler(a(document),a.jqx.mobile.getTouchEventName("touchstart")+".menu"+g.element.id,g._closeAfterClick,g)}}},_getBodyOffset:function(){var c=0;var b=0;if(a("body").css("border-top-width")!="0px"){c=parseInt(a("body").css("border-top-width"));if(isNaN(c)){c=0}}if(a("body").css("border-left-width")!="0px"){b=parseInt(a("body").css("border-left-width"));if(isNaN(b)){b=0}}return{left:b,top:c}},_getOffset:function(c){var e=a.jqx.mobile.isSafariMobileBrowser();var h=a(c).coord(true);var g=h.top;var f=h.left;if(a("body").css("border-top-width")!="0px"){g=parseInt(g)+this._getBodyOffset().top}if(a("body").css("border-left-width")!="0px"){f=parseInt(f)+this._getBodyOffset().left}var d=a.jqx.mobile.isWindowsPhone();if(this.hasTransform||(e!=null&&e)||d){var b={left:a.jqx.mobile.getLeftPos(c),top:a.jqx.mobile.getTopPos(c)};return b}else{return{left:f,top:g}}},_isRightClick:function(c){var b;if(!c){var c=window.event}if(c.which){b=(c.which==3)}else{if(c.button){b=(c.button==2)}}return b},_openContextMenu:function(d){var c=this;var b=c._isRightClick(d);if(b){c.open(parseInt(d.clientX)+5,parseInt(d.clientY)+5)}},close:function(){var c=this;var d=a.data(this.element,"contextMenuOpened"+this.element.id);if(d){var b=this.host;a.each(c.items,function(){var e=this;if(e.hasItems){c._closeItem(c,e)}});a.each(c.items,function(){var e=this;if(e.isOpen==true){$submenu=a(e.subMenuElement);var f=$submenu.closest("div.jqx-menu-popup");f.hide(this.animationHideDuration)}});this.host.hide(this.animationHideDuration);a.data(c.element,"contextMenuOpened"+this.element.id,false);c._raiseEvent("1",c)}},open:function(e,d){if(this.mode=="popup"){var c=0;if(this.host.css("display")=="block"){this.close();c=this.animationHideDuration}var b=this;if(e==undefined||e==null){e=0}if(d==undefined||d==null){d=0}setTimeout(function(){b.host.show(b.animationShowDuration);b.host.css("visibility","visible");a.data(b.element,"contextMenuOpened"+b.element.id,true);b._raiseEvent("0",b);b.host.css("z-index",9999);if(e!=undefined&&d!=undefined){b.host.css({left:e,top:d})}},c)}},_renderHover:function(c,e,b){var d=this;if(!e.ignoretheme){this.addHandler(c,"mouseenter",function(){d.hoveredItem=e;if(!e.disabled&&!e.separator&&d.enableHover&&!d.disabled){if(e.level>0){c.addClass(d.toThemeProperty("jqx-fill-state-hover"));c.addClass(d.toThemeProperty("jqx-menu-item-hover"))}else{c.addClass(d.toThemeProperty("jqx-fill-state-hover"));c.addClass(d.toThemeProperty("jqx-menu-item-top-hover"))}}});this.addHandler(c,"mouseleave",function(){if(!e.disabled&&!e.separator&&d.enableHover&&!d.disabled){if(e.level>0){c.removeClass(d.toThemeProperty("jqx-fill-state-hover"));c.removeClass(d.toThemeProperty("jqx-menu-item-hover"))}else{c.removeClass(d.toThemeProperty("jqx-fill-state-hover"));c.removeClass(d.toThemeProperty("jqx-menu-item-top-hover"))}}})}},_closeAfterClick:function(c){var b=c!=null?c.data:this;var d=false;if(b.autoCloseOnClick){a.each(a(c.target).parents(),function(){if(this.className.indexOf){if(this.className.indexOf("jqx-menu")!=-1){d=true;return false}}});if(!d){c.data=b;b._closeAll(c)}}},_autoSizeHorizontalMenuItems:function(){var c=this;if(c.autoSizeMainItems&&this.mode=="horizontal"){var b=this.maxHeight;if(parseInt(b)>parseInt(this.host.height())){b=parseInt(this.host.height())}b=parseInt(this.host.height());a.each(this.items,function(){var l=this;$element=a(l.element);if(l.level==0&&b>0){var d=$element.children().length>0?parseInt($element.children().height()):$element.height();var g=c.host.find("ul:first");var h=parseInt(g.css("padding-top"));var m=parseInt(g.css("margin-top"));var j=b-2*(m+h);var i=parseInt(j)/2-d/2;var e=parseInt(i);var k=parseInt(i);$element.css("padding-top",e);$element.css("padding-bottom",k);if(parseInt($element.outerHeight())>j){var f=1;$element.css("padding-top",e-f);e=e-f}}})}a.each(this.items,function(){var f=this;$element=a(f.element);if(f.hasItems&&f.level>0){if(f.arrow){var e=a(f.arrow);var d=a(f.element).height();if(d>15){e.css("margin-top",(d-15)/2)}}}})},_nextVisibleItem:function(c,d){if(c==null||c==undefined){return null}var b=c;while(b!=null){b=b.nextItem;if(this._isVisible(b)&&!b.disabled&&b.type!=="separator"){if(this.minimized){return b}if(d!=undefined){if(b&&b.level!=d){continue}}return b}}return null},_prevVisibleItem:function(c,d){if(c==null||c==undefined){return null}var b=c;while(b!=null){b=b.prevItem;if(this._isVisible(b)&&!b.disabled&&b.type!=="separator"){if(this.minimized){return b}if(d!=undefined){if(b&&b.level!=d){continue}}return b}}return null},_parentItem:function(d){if(d==null||d==undefined){return null}var c=d.parentElement;if(!c){return null}var b=null;a.each(this.items,function(){if(this.element==c){b=this;return false}});return b},_isElementVisible:function(b){if(b==null){return false}if(a(b).css("display")!="none"&&a(b).css("visibility")!="hidden"){return true}return false},_isVisible:function(c){if(c==null||c==undefined){return false}if(!this._isElementVisible(c.element)){return false}var b=this._parentItem(c);if(b==null){return true}if(this.minimized){return true}if(b!=null){if(!this._isElementVisible(b.element)){return false}if(b.isOpen||this.minimized){while(b!=null){b=this._parentItem(b);if(b!=null&&!this._isElementVisible(b.element)){return false}if(b!=null&&!b.isOpen){return false}}}else{return false}}return true},_render:function(f,g){if(this.disabled){this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled"));this.host.addClass(this.toThemeProperty("jqx-menu-disabled"))}if(this.host.attr("tabindex")==undefined){this.host.attr("tabindex",0)}var i=this.popupZIndex;var d=[5,5];var h=this;a.data(h.element,"animationHideDelay",h.animationHideDelay);var e=this.isTouchDevice();var c=e&&(a.jqx.mobile.isWindowsPhone()||navigator.userAgent.indexOf("Touch")>=0);var j=false;if(navigator.platform.toLowerCase().indexOf("win")!=-1){if(navigator.userAgent.indexOf("Windows Phone")>=0||navigator.userAgent.indexOf("WPDesktop")>=0||navigator.userAgent.indexOf("IEMobile")>=0||navigator.userAgent.indexOf("ZuneWP7")>=0){this.touchDevice=true}else{if(navigator.userAgent.indexOf("Touch")>=0){var b=("MSPointerDown" in window);if(b||a.jqx.mobile.isWindowsPhone()||navigator.userAgent.indexOf("ARM")>=0){j=true;c=true;h.clickToOpen=true;h.autoCloseOnClick=false;h.enableHover=false}}}}a.data(document.body,"menuel",this);this.hasTransform=a.jqx.utilities.hasTransform(this.host);this._applyOrientation(f,g);this.removeHandler(this.host,"blur");this.removeHandler(this.host,"focus");this.addHandler(this.host,"blur",function(k){if(h.keyboardNavigation){if(h.activeItem){a(h.activeItem.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=null}}});this.addHandler(this.host,"focus",function(k){if(h.keyboardNavigation){if(!h.activeItem){if(h.hoveredItem){a(h.hoveredItem.element).addClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=h.hoveredItem}else{a(h.items[0].element).addClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=h.items[0]}}}});this.removeHandler(this.host,"keydown");h.handleKeyDown=function(k){if(h.keyboardNavigation){if(k.target.nodeName.toLowerCase()==="input"){return true}var q=null;var o=null;a.each(h.items,function(){var A=this;if(this.disabled){return true}if(this.element.className.indexOf("pressed")>=0){o=this}if(this.element.className.indexOf("focus")>=0){q=this;return false}});if(!q&&o){q=o}if(!q){a(h.items[0].element).addClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=h.items[0]}var t=false;if(k.keyCode==27){k.data=h;h._closeAll(k);if(q){var z=q;while(z!=null){if(z.parentItem){z=z.parentItem}else{a(h.activeItem.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=z;a(h.activeItem.element).addClass(h.toThemeProperty("jqx-fill-state-focus"));z=z.parentItem}}}t=true}if(k.keyCode==13){if(q){t=true;h._raiseEvent("2",{item:q.element,event:k});var r=q.anchor!=null?a(q.anchor):null;if(r!=null&&r.length>0){var l=r.attr("href");var u=r.attr("target");if(l!=null){if(u!=null){window.open(l,u)}else{window.location=l}}}k.preventDefault();k.stopPropagation();a(q.element).focus()}}var n=function(D){if(D==null){return new Array()}var C=new Array();var A=0;for(var B=0;B<h.items.length;B++){if(h.items[B].parentId==D.parentId){C[A++]=h.items[B]}}return C};var v="";switch(k.keyCode){case 40:v="down";break;case 38:v="up";break;case 39:v="right";break;case 37:v="left";break}if(q&&q.openHorizontalDirection==="left"&&v==="left"){v="right"}if(q&&q.openHorizontalDirection==="left"&&v==="right"){v="left"}if(q&&q.openVerticalDirection==="top"&&v==="top"){v="bottom"}if(q&&q.openVerticalDirection==="top"&&v==="bottom"){v="top"}if(h.rtl){if(v==="right"){v="left"}else{if(v==="left"){v="right"}}}if(v==="right"&&!h.minimized){if(k.altKey&&(q.level!=0&&q.hasItems||h.mode!="horizontal")){h._openItem(h,q)}else{var x=h._nextVisibleItem(q,0);var m=h._nextVisibleItem(q);var w=n(m);if(!x){x=m}if(x&&((x.parentId===q.parentId&&x.level==0&&h.mode=="horizontal")||(m.id==w[0].id&&m.level!=0))){if(m.id==w[0].id&&((q.level!=0)||(q.level==0&&h.mode!="horizontal"))){x=m}a(x.element).addClass(h.toThemeProperty("jqx-fill-state-focus"));a(q.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=x}}k.preventDefault();k.stopPropagation()}if(v==="left"&&!h.minimized){if(k.altKey&&((q.level!=0&&h.mode!=="horizontal")||(q.level>1&&h.mode==="horizontal")||(q.level==1&&q.hasItems&&h.mode==="horizontal"))){if(q.hasItems){h._closeItem(h,q)}else{if(q.parentItem){h._closeItem(h,q.parentItem);a(q.parentItem.element).addClass(h.toThemeProperty("jqx-fill-state-focus"));a(q.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=q.parentItem}}}else{var x=h._prevVisibleItem(q,0);var y=q.parentItem;if(x&&(x.parentId===q.parentId&&x.level==0&&h.mode=="horizontal")){a(x.element).addClass(h.toThemeProperty("jqx-fill-state-focus"));a(q.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=x}else{if(!(y&&y.level==0&&h.mode=="horizontal")&&y&&y.level==q.level-1){a(y.element).addClass(h.toThemeProperty("jqx-fill-state-focus"));a(q.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=y}}}k.preventDefault();k.stopPropagation()}if(v==="down"){if(k.altKey){if(q.level==0&&q.hasItems){h._openItem(h,q)}if(h.minimized){if(h.minimizedHidden){h.minimizedItem.trigger("click")}}}else{var x=h._nextVisibleItem(q,q.level);var w=n(x);if(h.minimized&&x){a(x.element).addClass(h.toThemeProperty("jqx-fill-state-focus"));a(q.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=x}else{if(x&&(x.parentId===q.parentId||(x.id==w[0].id&&h.mode=="horizontal"))){if(!(x.level==0&&h.mode=="horizontal")){a(x.element).addClass(h.toThemeProperty("jqx-fill-state-focus"));a(q.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=x}}if(h.mode==="horizontal"&&q.level===0&&q.isOpen&&q.hasItems){var x=h._nextVisibleItem(q);a(x.element).addClass(h.toThemeProperty("jqx-fill-state-focus"));a(q.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=x}}}k.preventDefault();k.stopPropagation()}else{if(v==="up"){if(k.altKey){if(q.parentItem&&q.parentItem.level==0){h._closeItem(h,q.parentItem);a(q.parentItem.element).addClass(h.toThemeProperty("jqx-fill-state-focus"));a(q.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=q.parentItem}else{if(q.parentItem===null&&q.level===0&&h.mode==="horizontal"){h._closeItem(h,q)}}if(h.minimized){if(!h.minimizedHidden){h.minimizedItem.trigger("click")}}}else{var x=h._prevVisibleItem(q,q.level);var w=n(q);if(h.minimized&&x){a(x.element).addClass(h.toThemeProperty("jqx-fill-state-focus"));a(q.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=x}else{if(x&&(x.parentId===q.parentId||(x.id==q.parentId&&x.level==0&&h.mode=="horizontal"))){if(!(x.level==0&&h.mode==="horizontal"&&q.level===0)){a(x.element).addClass(h.toThemeProperty("jqx-fill-state-focus"));a(q.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=x}}else{if(q&&q.id==w[0].id&&q.parentItem&&q.parentItem.level===0&&h.mode==="horizontal"){var x=q.parentItem;a(x.element).addClass(h.toThemeProperty("jqx-fill-state-focus"));a(q.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=x}}}}k.preventDefault();k.stopPropagation()}}if(k.keyCode==9){var x=k.shiftKey?h._prevVisibleItem(q):h._nextVisibleItem(q);if(x){a(x.element).addClass(h.toThemeProperty("jqx-fill-state-focus"));a(q.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=x;k.preventDefault();k.stopPropagation()}else{if(h.lockFocus){var w=new Array();var s=0;for(var p=0;p<h.items.length;p++){if(h.items[p]==q){continue}if(h.items[p].parentId==q.parentId){w[s++]=h.items[p]}}if(w.length>0){if(k.shiftKey){a(w[w.length-1].element).addClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=w[w.length-1]}else{a(w[0].element).addClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=w[0]}a(q.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"))}k.preventDefault();k.stopPropagation()}else{if(q){a(q.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"));h.activeItem=null}}}}}else{return true}};this.addHandler(this.host,"keydown",function(k){h.handleKeyDown(k)});if(h.enableRoundedCorners){this.host.addClass(h.toThemeProperty("jqx-rc-all"))}a.each(this.items,function(){var r=this;var n=a(r.element);n.attr("role","menuitem");if(h.enableRoundedCorners){n.addClass(h.toThemeProperty("jqx-rc-all"))}h.removeHandler(n,"click");h.addHandler(n,"click",function(w){if(r.disabled){return}if(h.disabled){return}if(h.keyboardNavigation){if(h.activeItem){a(h.activeItem.element).removeClass(h.toThemeProperty("jqx-fill-state-focus"))}h.activeItem=r;a(r.element).addClass(h.toThemeProperty("jqx-fill-state-focus"));if(h.minimized){w.stopPropagation()}}h._raiseEvent("2",{item:r.element,event:w});if(!h.autoOpen){if(r.level>0){if(h.autoCloseOnClick&&!e&&!h.clickToOpen){w.data=h;h._closeAll(w)}}}else{if(h.autoCloseOnClick&&!e&&!h.clickToOpen){if(r.closeOnClick){w.data=h;h._closeAll(w)}}}if(e&&h.autoCloseOnClick){w.data=h;if(!r.hasItems){h._closeAll(w)}}if(w.target.tagName!="A"&&w.target.tagName!="a"){var u=r.anchor!=null?a(r.anchor):null;if(u!=null&&u.length>0){var t=u.attr("href");var v=u.attr("target");if(t!=null){if(v!=null){window.open(t,v)}else{window.location=t}}}}});h.removeHandler(n,"mouseenter");h.removeHandler(n,"mouseleave");if(!c&&h.mode!="simple"){h._renderHover(n,r,e)}if(r.subMenuElement!=null){var o=a(r.subMenuElement);if(h.mode=="simple"){o.show();return true}o.wrap('<div class="jqx-menu-popup '+h.toThemeProperty("jqx-menu-popup")+'" style="border: none; background-color: transparent; z-index:'+i+'; padding: 0px; margin: 0px; position: absolute; top: 0; left: 0; display: block; visibility: hidden;"><div style="background-color: transparent; border: none; position:absolute; overflow:hidden; left: 0; top: 0; right: 0; width: 100%; height: 100%;"></div></div>');o.css({overflow:"hidden",position:"absolute",left:0,display:"inherit",top:-o.outerHeight()});o.data("timer",{});if(r.level>0){o.css("left",-o.outerWidth())}else{if(h.mode=="horizontal"){o.css("left",0)}}i++;var q=a(r.subMenuElement).closest("div.jqx-menu-popup").css({width:"138px",height:parseInt(a(r.subMenuElement).outerHeight())+parseInt(d[1])+"px"});var s=n.closest("div.jqx-menu-popup");if(s.length>0){var k=o.css("margin-left");var m=o.css("margin-right");var l=o.css("padding-left");var p=o.css("padding-right");q.appendTo(s);o.css("margin-left",k);o.css("margin-right",m);o.css("padding-left",l);o.css("padding-right",p)}else{var k=o.css("margin-left");var m=o.css("margin-right");var l=o.css("padding-left");var p=o.css("padding-right");q.appendTo(a(document.body));o.css("margin-left",k);o.css("margin-right",m);o.css("padding-left",l);o.css("padding-right",p)}if(!h.clickToOpen){if(e||c){h.removeHandler(n,a.jqx.mobile.getTouchEventName("touchstart"));h.addHandler(n,a.jqx.mobile.getTouchEventName("touchstart"),function(t){clearTimeout(o.data("timer").hide);if(o!=null){o.stop()}if(r.level==0&&!r.isOpen&&h.mode!="popup"){t.data=h;h._closeAll(t)}if(!r.isOpen){h._openItem(h,r)}else{h._closeItem(h,r,true)}return false})}if(!c){h.addHandler(n,"mouseenter",function(){if(h.autoOpen||(r.level>0&&!h.autoOpen)){clearTimeout(o.data("timer").hide)}if(r.parentId&&r.parentId!=0){if(h.menuElements[r.parentId]){var t=h.menuElements[r.parentId].isOpen;if(!t){return}}}if(h.autoOpen||(r.level>0&&!h.autoOpen)){h._openItem(h,r)}return false});h.addHandler(n,"mousedown",function(){if(!h.autoOpen&&r.level==0){clearTimeout(o.data("timer").hide);if(o!=null){o.stop()}if(!r.isOpen){h._openItem(h,r)}else{h._closeItem(h,r,true)}}});h.addHandler(n,"mouseleave",function(u){if(h.autoCloseOnMouseLeave){clearTimeout(o.data("timer").hide);var x=a(r.subMenuElement);var t={left:parseInt(u.pageX),top:parseInt(u.pageY)};var w={left:parseInt(x.coord().left),top:parseInt(x.coord().top),width:"138px",height:parseInt(x.outerHeight())};var v=true;if(w.left-5<=t.left&&t.left<=w.left+w.width+5){if(w.top<=t.top&&t.top<=w.top+w.height){v=false}}if(v){h._closeItem(h,r,true)}}});h.removeHandler(q,"mouseenter");h.addHandler(q,"mouseenter",function(){clearTimeout(o.data("timer").hide)});h.removeHandler(q,"mouseleave");h.addHandler(q,"mouseleave",function(t){if(h.autoCloseOnMouseLeave){clearTimeout(o.data("timer").hide);clearTimeout(o.data("timer").show);if(o!=null){o.stop()}h._closeItem(h,r,true)}})}}else{h.removeHandler(n,"mousedown");h.addHandler(n,"mousedown",function(t){clearTimeout(o.data("timer").hide);if(o!=null){o.stop()}if(r.level==0&&!r.isOpen){t.data=h;h._closeAll(t)}if(!r.isOpen){h._openItem(h,r)}else{h._closeItem(h,r,true)}})}}});if(this.mode=="simple"){this._renderSimpleMode()}this._autoSizeHorizontalMenuItems();this._raiseEvent("3",this)},_renderSimpleMode:function(){this.host.show()},createID:function(){var b=Math.random()+"";b=b.replace(".","");b="99"+b;b=b/1;while(this.items[b]){b=Math.random()+"";b=b.replace(".","");b=b/1}return"menuItem"+b},_createMenu:function(c,f){if(c==null){return}if(f==undefined){f=true}if(f==null){f=true}var o=this;var u=a(c).find("li");var q=0;this.itemMapping=new Array();for(var j=0;j<u.length;j++){var m=u[j];var s=a(m);if(m.className.indexOf("jqx-menu")==-1&&this.autoGenerate==false){continue}var p=m.id;if(!p){p=this.createID()}if(f){m.id=p;this.items[q]=new a.jqx._jqxMenu.jqxMenuItem();this.menuElements[p]=this.items[q]}q+=1;var t=0;var x=this;var h=s.children();h.each(function(){if(!f){this.className="";if(x.autoGenerate){a(x.items[q-1].subMenuElement)[0].className="";if(!x.minimized){a(x.items[q-1].subMenuElement).addClass(x.toThemeProperty("jqx-widget-content"))}a(x.items[q-1].subMenuElement).addClass(x.toThemeProperty("jqx-menu-dropdown"));a(x.items[q-1].subMenuElement).addClass(x.toThemeProperty("jqx-popup"))}}if(this.className.indexOf("jqx-menu-dropdown")!=-1){if(f){x.items[q-1].subMenuElement=this}return false}else{if(x.autoGenerate&&(this.tagName=="ul"||this.tagName=="UL")){if(f){x.items[q-1].subMenuElement=this}this.className="";if(!x.minimized){a(this).addClass(x.toThemeProperty("jqx-widget-content"))}a(this).addClass(x.toThemeProperty("jqx-menu-dropdown"));a(this).addClass(x.toThemeProperty("jqx-popup"));a(this).attr("role","menu");if(x.rtl){a(this).addClass(x.toThemeProperty("jqx-rc-l"))}else{a(this).addClass(x.toThemeProperty("jqx-rc-r"))}a(this).addClass(x.toThemeProperty("jqx-rc-b"));return false}}});var w=s.parents();w.each(function(){if(this.className.indexOf("jqx-menu-item")!=-1){t=this.id;return false}else{if(x.autoGenerate&&(this.tagName=="li"||this.tagName=="LI")){t=this.id;return false}}});var e=false;var d=m.getAttribute("type");var b=m.getAttribute("ignoretheme")||m.getAttribute("data-ignoretheme");if(b){if(b=="true"||b==true){b=true}}else{b=false}if(!d){d=m.type}else{if(d=="separator"){var e=true}}if(!e){if(t){d="sub"}else{d="top"}}var g=this.items[q-1];if(f){g.id=p;g.parentId=t;g.type=d;g.separator=e;g.element=u[j];var l=s.children("a");g.disabled=m.getAttribute("item-disabled")=="true"?true:false;g.level=s.parents("li").length;g.anchor=l.length>0?l:null;if(g.anchor){a(g.anchor).attr("tabindex",-1)}}g.ignoretheme=b;var n=this.menuElements[t];if(n!=null){if(n.ignoretheme){g.ignoretheme=n.ignoretheme;b=n.ignoretheme}g.parentItem=n;g.parentElement=n.element}if(this.autoGenerate){if(d=="separator"){s.removeClass();s.addClass(this.toThemeProperty("jqx-menu-item-separator"));s.attr("role","separator")}else{if(!b){s[0].className="";if(this.rtl){s.addClass(this.toThemeProperty("jqx-rtl"))}if(g.level>0&&!x.minimized){s.addClass(this.toThemeProperty("jqx-item"));s.addClass(this.toThemeProperty("jqx-menu-item"))}else{s.addClass(this.toThemeProperty("jqx-item"));s.addClass(this.toThemeProperty("jqx-menu-item-top"))}}}}if(g.disabled){s.addClass(x.toThemeProperty("jqx-menu-item-disabled"));s.addClass(x.toThemeProperty("jqx-fill-state-disabled"))}this.itemMapping[j]={element:u[j],item:g};this.itemMapping["id"+u[j].id]=this.itemMapping[j];if(f&&!b){g.hasItems=s.find("li").length>0;if(g.hasItems){if(g.element){a.jqx.aria(a(g.element),"aria-haspopup",true);if(!g.subMenuElement.id){g.subMenuElement.id=a.jqx.utilities.createId()}a.jqx.aria(a(g.element),"aria-owns",g.subMenuElement.id)}}}}for(var r=0;r<u.length;r++){var v=u[r];if(this.itemMapping["id"+v.id]){var g=this.itemMapping["id"+v.id].item;if(!g){continue}g.prevItem=null;g.nextItem=null;if(r>0){if(this.itemMapping["id"+u[r-1].id]){g.prevItem=this.itemMapping["id"+u[r-1].id].item}}if(r<u.length-1){if(this.itemMapping["id"+u[r+1].id]){g.nextItem=this.itemMapping["id"+u[r+1].id].item}}}}},destroy:function(){a.jqx.utilities.resize(this.host,null,true);var d=this.host.closest("div.jqx-menu-wrapper");d.remove();a("#menuWrapper"+this.element.id).remove();var b=this;this.removeHandler(this.host,"keydown");this.removeHandler(this.host,"focus");this.removeHandler(this.host,"blur");this.removeHandler(a(document),"mousedown.menu"+this.element.id,b._closeAfterClick);this.removeHandler(a(document),"mouseup.menu"+this.element.id,b._closeAfterClick);a.data(document.body,"jqxMenuOldHost"+this.element.id,null);if(this.isTouchDevice()){this.removeHandler(a(document),a.jqx.mobile.getTouchEventName("touchstart")+".menu"+this.element.id,this._closeAfterClick,this)}if(a(window).off){a(window).off("resize.menu"+b.element.id)}a.each(this.items,function(){var g=this;var f=a(g.element);b.removeHandler(f,"click");b.removeHandler(f,"selectstart");b.removeHandler(f,"mouseenter");b.removeHandler(f,"mouseleave");b.removeHandler(f,"mousedown");b.removeHandler(f,"mouseleave");var e=a(g.subMenuElement);var h=e.closest("div.jqx-menu-popup");h.remove();delete this.subMenuElement;delete this.element});a.data(document.body,"menuel",null);delete this.menuElements;this.items=new Array();delete this.items;var c=a.data(this.element,"jqxMenu");if(c){delete c.instance}this.host.removeClass();this.host.remove();delete this.host;delete this.element},_raiseEvent:function(f,c){if(c==undefined){c={owner:null}}var d=this.events[f];args=c;args.owner=this;var e=new a.Event(d);if(f=="2"){args=c.item;args.owner=this;a.extend(e,c.event);e.type="itemclick"}e.owner=this;e.args=args;var b=this.host.trigger(e);return b},propertyChangedHandler:function(b,d,h,g){if(this.isInitialized==undefined||this.isInitialized==false){return}if(d=="disabled"){if(b.disabled){b.host.addClass(b.toThemeProperty("jqx-fill-state-disabled"));b.host.addClass(b.toThemeProperty("jqx-menu-disabled"))}else{b.host.removeClass(b.toThemeProperty("jqx-fill-state-disabled"));b.host.removeClass(b.toThemeProperty("jqx-menu-disabled"))}}if(g==h){return}if(d=="touchMode"){this._isTouchDevice=null;b._render(g,h)}if(d==="width"||d==="height"){b.setSize();if(b.mode==="popup"){var e=this.host.closest("div.jqx-menu-wrapper");e[d](g);var i=this.host[0].id;a("#"+i)[d](g)}return}if(d=="source"){if(b.source!=null){var c=b.loadItems(b.source);b.element.innerHTML=c;var f=b.host.find("ul:first");if(f.length>0){b.refresh();b._createMenu(f[0]);b._render()}}}if(d=="autoCloseOnClick"){if(g==false){b.removeHandler(a(document),"mousedown.menu"+this.element.id,b._closeAll)}else{b.addHandler(a(document),"mousedown.menu"+this.element.id,b,b._closeAll)}}else{if(d=="mode"||d=="width"||d=="height"||d=="showTopLevelArrows"){b.refresh();if(d=="mode"){b._render(g,h)}else{b._applyOrientation()}}else{if(d=="theme"){a.jqx.utilities.setTheme(h,g,b.host)}}}}})})(jqxBaseFramework);(function(a){a.jqx._jqxMenu.jqxMenuItem=function(e,d,c){var b={id:e,parentId:d,parentItem:null,anchor:null,type:c,disabled:false,level:0,isOpen:false,hasItems:false,element:null,subMenuElement:null,arrow:null,openHorizontalDirection:"right",openVerticalDirection:"down",closeOnClick:true};return b}})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a) {
    a.jqx.jqxWidget("jqxListBox", "", {});
    a.extend(a.jqx._jqxListBox.prototype, {
        defineInstance: function() {
            var b = {
                disabled: false,
                width: null,
                height: null,
                items: new Array(),
                multiple: false,
                selectedIndex: -1,
                selectedIndexes: new Array(),
                source: null,
                scrollBarSize: a.jqx.utilities.scrollBarSize,
                enableHover: true,
                enableSelection: true,
                visualItems: new Array(),
                groups: new Array(),
                equalItemsWidth: true,
                itemHeight: -1,
                visibleItems: new Array(),
                emptyGroupText: "Group",
                checkboxes: false,
                hasThreeStates: false,
                autoHeight: false,
                autoItemsHeight: false,
                roundedcorners: true,
                touchMode: "auto",
                displayMember: "",
                groupMember: "",
                valueMember: "",
                searchMember: "",
                searchMode: "startswithignorecase",
                incrementalSearch: true,
                incrementalSearchDelay: 1000,
                incrementalSearchKeyDownDelay: 300,
                allowDrag: false,
                allowDrop: true,
                dropAction: "default",
                touchModeStyle: "auto",
                keyboardNavigation: true,
                enableMouseWheel: true,
                multipleextended: false,
                selectedValues: new Array(),
                emptyString: "",
                rtl: false,
                rendered: null,
                renderer: null,
                dragStart: null,
                dragEnd: null,
                focusable: true,
                ready: null,
                _checkForHiddenParent: true,
                autoBind: true,
                filterable: false,
                filterHeight: 27,
                filterPlaceHolder: "Looking for",
                filterDelay: 100,
                aria: {
                    "aria-disabled": {
                        name: "disabled",
                        type: "boolean"
                    }
                },
                events: ["select", "unselect", "change", "checkChange", "dragStart", "dragEnd", "bindingComplete"]
            };
            a.extend(true, this, b);
            return b
        },
        createInstance: function(c) {
            var b = this;
            if (a.jqx.utilities.scrollBarSize != 15) {
                b.scrollBarSize = a.jqx.utilities.scrollBarSize
            }
            if (b.width == null) {
                b.width = 200
            }
            if (b.height == null) {
                b.height = 200
            }
            b.render();
            var d = b;
            a.jqx.utilities.resize(b.host,
            function() {
                d._updateSize()
            },
            false, b._checkForHiddenParent)
        },
        resize: function(c, b) {
            this.width = c;
            this.height = b;
            this._updateSize()
        },
        render: function() {
            var m = this;
            var l = m.element.nodeName.toLowerCase();
            if (l == "select" || l == "ul" || l == "ol") {
                m.field = m.element;
                if (m.field.className) {
                    m._className = m.field.className
                }
                var i = {
                    title: m.field.title
                };
                if (m.field.id.length) {
                    i.id = m.field.id.replace(/[^\w]/g, "_") + "_jqxListBox"
                } else {
                    i.id = a.jqx.utilities.createId() + "_jqxListBox"
                }
                var b = a("<div></div>", i);
                if (!m.width) {
                    m.width = a(m.field).width()
                }
                if (!m.height) {
                    m.height = a(m.field).outerHeight()
                }
                a(m.field).hide().after(b);
                var f = m.host.data();
                m.host = b;
                m.host.data(f);
                m.element = b[0];
                m.element.id = m.field.id;
                m.field.id = i.id;
                if (m._className) {
                    m.host.addClass(m._className);
                    a(m.field).removeClass(m._className)
                }
                if (m.field.tabIndex) {
                    var c = m.field.tabIndex;
                    m.field.tabIndex = -1;
                    m.element.tabIndex = c
                }
            }
            m.element.innerHTML = "";
            var m = m;
            var h = m.element.className;
            h += " " + m.toThemeProperty("jqx-listbox");
            h += " " + m.toThemeProperty("jqx-reset");
            h += " " + m.toThemeProperty("jqx-rc-all");
            h += " " + m.toThemeProperty("jqx-widget");
            h += " " + m.toThemeProperty("jqx-widget-content");
            m.element.className = h;
            var g = false;
            if (m.width != null && m.width.toString().indexOf("%") != -1) {
                m.host.width(m.width);
                g = true
            }
            if (m.height != null && m.height.toString().indexOf("%") != -1) {
                m.host.height(m.height);
                if (m.host.height() == 0) {
                    m.host.height(200)
                }
                g = true
            }
            if (m.width != null && m.width.toString().indexOf("px") != -1) {
                m.host.width(m.width)
            } else {
                if (m.width != undefined && !isNaN(m.width)) {
                    m.element.style.width = parseInt(m.width) + "px"
                }
            }
            if (m.height != null && m.height.toString().indexOf("px") != -1) {
                m.host.height(m.height)
            } else {
                if (m.height != undefined && !isNaN(m.height)) {
                    m.element.style.height = parseInt(m.height) + "px"
                }
            }
            if (m.multiple || m.multipleextended || m.checkboxes) {
                a.jqx.aria(m, "aria-multiselectable", true)
            } else {
                a.jqx.aria(m, "aria-multiselectable", false)
            }
            var e = "<div style='-webkit-appearance: none; background: transparent; outline: none; width:100%; height: 100%; align:left; border: 0px; padding: 0px; margin: 0px; left: 0px; top: 0px; valign:top; position: relative;'><div style='-webkit-appearance: none; border: none; background: transparent; outline: none; width:100%; height: 100%; padding: 0px; margin: 0px; align:left; left: 0px; top: 0px; valign:top; position: relative;'><div id='filter" + m.element.id + "' style='display: none; visibility: inherit; align:left; valign:top; left: 0px; top: 0px; position: absolute;'><input style='position: absolute;'/></div><div id='listBoxContent' style='-webkit-appearance: none; border: none; background: transparent; outline: none; border: none; padding: 0px; overflow: hidden; margin: 0px; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='verticalScrollBar" + m.element.id + "' style='visibility: inherit; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='horizontalScrollBar" + m.element.id + "' style='visibility: inherit; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='bottomRight' style='align:left; valign:top; left: 0px; top: 0px; border: none; position: absolute;'/></div></div>";
            m.host.attr("role", "listbox");
            m.element.innerHTML = e;
            if (m._checkForHiddenParent) {
                m._addInput();
                if (!m.host.attr("tabIndex")) {
                    m.host.attr("tabIndex", 1)
                }
            }
            m.filter = a(m.element.firstChild.firstChild.firstChild);
            m.filterInput = a(m.filter[0].firstChild);
            m.filterInput.attr("placeholder", m.filterPlaceHolder);
            m.filterInput.addClass(m.toThemeProperty("jqx-widget jqx-input jqx-rc-all"));
            m.addHandler(m.filterInput, "keyup.textchange",
            function(o) {
                if (o.keyCode == 13) {
                    m._search(o)
                } else {
                    if (m.filterDelay > 0) {
                        if (m._filterTimer) {
                            clearTimeout(m._filterTimer)
                        }
                        m._filterTimer = setTimeout(function() {
                            m._search(o)
                        },
                        m.filterDelay)
                    }
                }
                o.stopPropagation()
            });
            var j = a(m.element.firstChild.firstChild.firstChild.nextSibling.nextSibling);
            if (!m.host.jqxButton) {
                throw new Error("jqxListBox: Missing reference to jqxbuttons.js.");
                return
            }
            if (!j.jqxScrollBar) {
                throw new Error("jqxListBox: Missing reference to jqxscrollbar.js.");
                return
            }
            var d = parseInt(m.host.height()) / 2;
            if (d == 0) {
                d = 10
            }
            m.vScrollBar = j.jqxScrollBar({
                _initialLayout: true,
                vertical: true,
                rtl: m.rtl,
                theme: m.theme,
                touchMode: m.touchMode,
                largestep: d
            });
            var n = a(m.element.firstChild.firstChild.firstChild.nextSibling.nextSibling.nextSibling);
            m.hScrollBar = n.jqxScrollBar({
                _initialLayout: true,
                vertical: false,
                rtl: m.rtl,
                touchMode: m.touchMode,
                theme: m.theme
            });
            m.content = a(m.element.firstChild.firstChild.firstChild.nextSibling);
            m.content[0].id = "listBoxContent" + m.element.id;
            m.bottomRight = a(m.element.firstChild.firstChild.firstChild.nextSibling.nextSibling.nextSibling.nextSibling).addClass(m.toThemeProperty("jqx-listbox-bottomright")).addClass(m.toThemeProperty("jqx-scrollbar-state-normal"));
            m.bottomRight[0].id = "bottomRight" + m.element.id;
            m.vScrollInstance = a.data(m.vScrollBar[0], "jqxScrollBar").instance;
            m.hScrollInstance = a.data(m.hScrollBar[0], "jqxScrollBar").instance;
            if (m.isTouchDevice()) {
                if (! (a.jqx.browser.msie && a.jqx.browser.version < 9)) {
                    var k = a("<div class='overlay' unselectable='on' style='z-index: 99; -webkit-appearance: none; border: none; background: black; opacity: 0.01; outline: none; border: none; padding: 0px; overflow: hidden; margin: 0px; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div>");
                    m.content.parent().append(k);
                    m.overlayContent = m.host.find(".overlay");
                    if (m.filterable) {
                        m.overlayContent.css("top", "30px")
                    }
                }
            }
            m._updateTouchScrolling();
            m.host.addClass("jqx-disableselect");
            if (m.host.jqxDragDrop) {
                jqxListBoxDragDrop()
            }
        },
        _highlight: function(b, c) {
            var d = c.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
            return b.replace(new RegExp("(" + d + ")", "ig"),
            function(e, f) {
                return "<b>" + f + "</b>"
            })
        },
        _addInput: function() {
            var b = this.host.attr("name");
            if (b) {
                this.host.attr("name", "")
            }
            this.input = a("<input type='hidden'/>");
            this.host.append(this.input);
            this.input.attr("name", b)
        },
        _updateTouchScrolling: function() {
            var b = this;
            if (this.isTouchDevice()) {
                b.enableHover = false;
                var c = this.overlayContent ? this.overlayContent: this.content;
                this.removeHandler(a(c), a.jqx.mobile.getTouchEventName("touchstart") + ".touchScroll");
                this.removeHandler(a(c), a.jqx.mobile.getTouchEventName("touchmove") + ".touchScroll");
                this.removeHandler(a(c), a.jqx.mobile.getTouchEventName("touchend") + ".touchScroll");
                this.removeHandler(a(c), "touchcancel.touchScroll");
                a.jqx.mobile.touchScroll(c, b.vScrollInstance.max,
                function(f, e) {
                    if (b.vScrollBar.css("visibility") != "hidden") {
                        var d = b.vScrollInstance.value;
                        b.vScrollInstance.setPosition(d + e);
                        b._lastScroll = new Date()
                    }
                    if (b.hScrollBar.css("visibility") != "hidden") {
                        var d = b.hScrollInstance.value;
                        b.hScrollInstance.setPosition(d + f);
                        b._lastScroll = new Date()
                    }
                },
                this.element.id, this.hScrollBar, this.vScrollBar);
                if (b.vScrollBar.css("visibility") != "visible" && b.hScrollBar.css("visibility") != "visible") {
                    a.jqx.mobile.setTouchScroll(false, this.element.id)
                } else {
                    a.jqx.mobile.setTouchScroll(true, this.element.id)
                }
                this._arrange()
            }
        },
        isTouchDevice: function() {
            var b = a.jqx.mobile.isTouchDevice();
            if (this.touchMode == true) {
                if (this.touchDevice) {
                    return true
                }
                if (a.jqx.browser.msie && a.jqx.browser.version < 9) {
                    return false
                }
                this.touchDevice = true;
                b = true;
                a.jqx.mobile.setMobileSimulator(this.element)
            } else {
                if (this.touchMode == false) {
                    b = false
                }
            }
            if (b && this.touchModeStyle != false) {
                this.scrollBarSize = a.jqx.utilities.touchScrollBarSize
            }
            if (b) {
                this.host.addClass(this.toThemeProperty("jqx-touch"))
            }
            return b
        },
        beginUpdate: function() {
            this.updatingListBox = true
        },
        endUpdate: function() {
            this.updatingListBox = false;
            this._addItems();
            this._renderItems()
        },
        beginUpdateLayout: function() {
            this.updating = true
        },
        resumeUpdateLayout: function() {
            this.updating = false;
            this.vScrollInstance.value = 0;
            this._render(false)
        },
        propertiesChangedHandler: function(b, c, d) {
            b._cachedItemHtml = new Array();
            b.clearSelection();
            b.refresh()
        },
        propertyChangedHandler: function(b, c, e, d) {
            if (this.isInitialized == undefined || this.isInitialized == false) {
                return
            }
            if (b.batchUpdate && c != "touchMode" && c != "rtl") {
                return
            }
            if (c == "filterable") {
                b.refresh()
            }
            if (c == "filterHeight") {
                b._arrange()
            }
            if (c == "filterPlaceHolder") {
                b.filterInput.attr("placeholder", d)
            }
            if (c == "renderer") {
                b._cachedItemHtml = new Array();
                b.refresh()
            }
            if (c == "itemHeight") {
                b.refresh()
            }
            if (c == "source" || c == "checkboxes") {
                if (d == null && e && e.unbindBindingUpdate) {
                    e.unbindBindingUpdate(b.element.id);
                    e.unbindDownloadComplete(b.element.id)
                }
                b.clearSelection();
                b.refresh()
            }
            if (c == "scrollBarSize" || c == "equalItemsWidth") {
                if (d != e) {
                    b._updatescrollbars()
                }
            }
            if (c == "disabled") {
                b._renderItems();
                b.vScrollBar.jqxScrollBar({
                    disabled: d
                });
                b.hScrollBar.jqxScrollBar({
                    disabled: d
                })
            }
            if (c == "touchMode" || c == "rtl") {
                b._removeHandlers();
                b.vScrollBar.jqxScrollBar({
                    touchMode: d
                });
                b.hScrollBar.jqxScrollBar({
                    touchMode: d
                });
                if (c == "touchMode") {
                    if (! (a.jqx.browser.msie && a.jqx.browser.version < 9)) {
                        var g = a("<div class='overlay' unselectable='on' style='z-index: 99; -webkit-appearance: none; border: none; background: black; opacity: 0.01; outline: none; border: none; padding: 0px; overflow: hidden; margin: 0px; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div>");
                        b.content.parent().append(g);
                        b.overlayContent = b.host.find(".overlay")
                    }
                }
                b._updateTouchScrolling();
                b._addHandlers();
                b._render(false)
            }
            if (!this.updating) {
                if (c == "width" || c == "height") {
                    b._updateSize()
                }
            }
            if (c == "theme") {
                if (e != d) {
                    b.hScrollBar.jqxScrollBar({
                        theme: b.theme
                    });
                    b.vScrollBar.jqxScrollBar({
                        theme: b.theme
                    });
                    b.host.removeClass();
                    b.host.addClass(b.toThemeProperty("jqx-listbox"));
                    b.host.addClass(b.toThemeProperty("jqx-widget"));
                    b.host.addClass(b.toThemeProperty("jqx-widget-content"));
                    b.host.addClass(b.toThemeProperty("jqx-reset"));
                    b.host.addClass(b.toThemeProperty("jqx-rc-all"));
                    b.refresh()
                }
            }
            if (c == "selectedIndex") {
                b.clearSelection();
                b.selectIndex(d, true)
            }
            if (c == "displayMember" || c == "valueMember") {
                if (e != d) {
                    var f = b.selectedIndex;
                    b.refresh();
                    b.selectedIndex = f;
                    b.selectedIndexes[f] = f
                }
                b._renderItems()
            }
            if (c == "autoHeight") {
                if (e != d) {
                    b._render(false)
                } else {
                    b._updatescrollbars();
                    b._renderItems()
                }
            }
            if (b._checkForHiddenParent && a.jqx.isHidden(b.host)) {
                a.jqx.utilities.resize(this.host,
                function() {
                    b._updateSize()
                },
                false, b._checkForHiddenParent)
            }
        },
        loadFromSelect: function(g) {
            if (g == null) {
                return
            }
            var c = "#" + g;
            var d = a(c);
            if (d.length > 0) {
                var b = a.jqx.parseSourceTag(d[0]);
                var f = b.items;
                var e = b.index;
                this.source = f;
                this.fromSelect = true;
                this.clearSelection();
                this.selectedIndex = e;
                this.selectedIndexes[this.selectedIndex] = this.selectedIndex;
                this.refresh()
            }
        },
        invalidate: function() {
            this._cachedItemHtml = [];
            this._renderItems();
            this.virtualSize = null;
            this._updateSize()
        },
        refresh: function(c) {
            var b = this;
            if (this.vScrollBar == undefined) {
                return
            }
            this._cachedItemHtml = [];
            this.visibleItems = new Array();
            var d = function(e) {
                if (e == true) {
                    if (b.selectedIndex != -1) {
                        var f = b.selectedIndex;
                        b.selectedIndex = -1;
                        b._stopEvents = true;
                        b.selectIndex(f, false, true);
                        if (b.selectedIndex == -1) {
                            b.selectedIndex = f
                        }
                        b._stopEvents = false
                    }
                }
            };
            if (this.itemswrapper != null) {
                this.itemswrapper.remove();
                this.itemswrapper = null
            }
            if (a.jqx.dataAdapter && this.source != null && this.source._source) {
                this.databind(this.source, c);
                d(c);
                return
            }
            if (this.autoBind || (!this.autoBind && !c)) {
                if (this.field) {
                    this.loadSelectTag()
                }
                this.items = this.loadItems(this.source)
            }
            this._raiseEvent("6");
            this._render(false, c == true);
            d(c)
        },
        loadSelectTag: function() {
            var b = a.jqx.parseSourceTag(this.field);
            this.source = b.items;
            if (this.selectedIndex == -1) {
                this.selectedIndex = b.index
            }
        },
        _render: function(c, b) {
            this._addItems();
            this._renderItems();
            this.vScrollInstance.setPosition(0);
            this._cachedItemHtml = new Array();
            if (c == undefined || c) {
                if (this.items != undefined && this.items != null) {
                    if (this.selectedIndex >= 0 && this.selectedIndex < this.items.length) {
                        this.selectIndex(this.selectedIndex, true, true, true)
                    }
                }
            }
            if (this.allowDrag && this._enableDragDrop) {
                this._enableDragDrop();
                if (this.isTouchDevice()) {
                    this._removeHandlers();
                    if (this.overlayContent) {
                        this.overlayContent.remove();
                        this.overlayContent = null
                    }
                    this._updateTouchScrolling();
                    this._addHandlers();
                    return
                }
            }
            this._updateTouchScrolling();
            if (this.rendered) {
                this.rendered()
            }
            if (this.ready) {
                this.ready()
            }
        },
        _hitTest: function(c, f) {
            if (this.filterable) {
                f -= this.filterHeight;
                if (f < 0) {
                    f = 0
                }
            }
            var e = parseInt(this.vScrollInstance.value);
            var b = this._searchFirstVisibleIndex(f + e, this.renderedVisibleItems);
            if (this.renderedVisibleItems[b] != undefined && this.renderedVisibleItems[b].isGroup) {
                return null
            }
            if (this.renderedVisibleItems.length > 0) {
                var d = this.renderedVisibleItems[this.renderedVisibleItems.length - 1];
                if (d.height + d.top < f + e) {
                    return null
                }
            }
            b = this._searchFirstVisibleIndex(f + e);
            return this.visibleItems[b];
            return null
        },
        _searchFirstVisibleIndex: function(e, f) {
            if (e == undefined) {
                e = parseInt(this.vScrollInstance.value)
            }
            var c = 0;
            if (f == undefined || f == null) {
                f = this.visibleItems
            }
            var b = f.length;
            while (c <= b) {
                mid = parseInt((c + b) / 2);
                var d = f[mid];
                if (d == undefined) {
                    break
                }
                if (d.initialTop > e && d.initialTop + d.height > e) {
                    b = mid - 1
                } else {
                    if (d.initialTop < e && d.initialTop + d.height <= e) {
                        c = mid + 1
                    } else {
                        return mid;
                        break
                    }
                }
            }
            return 0
        },
        _renderItems: function() {
            if (this.items == undefined || this.items.length == 0) {
                this.visibleItems = new Array();
                return
            }
            if (this.updatingListBox == true) {
                return
            }
            var N = this.isTouchDevice();
            var G = this.vScrollInstance;
            var h = this.hScrollInstance;
            var g = parseInt(G.value);
            var f = parseInt(h.value);
            if (this.rtl) {
                if (this.hScrollBar[0].style.visibility != "hidden") {
                    f = h.max - f
                }
            }
            var B = this.items.length;
            var M = this.host.width();
            var K = parseInt(this.content[0].style.width);
            var b = K + parseInt(h.max);
            var q = parseInt(this.vScrollBar[0].style.width) + 2;
            if (this.vScrollBar[0].style.visibility == "hidden") {
                q = 0
            }
            if (this.hScrollBar[0].style.visibility != "visible") {
                b = K
            }
            var l = this._getVirtualItemsCount();
            var L = new Array();
            var F = 0;
            var E = parseInt(this.element.style.height) + 2;
            if (this.element.style.height.indexOf("%") != -1) {
                E = this.host.outerHeight()
            }
            if (isNaN(E)) {
                E = 0
            }
            var t = 0;
            var s = 0;
            var Q = 0;
            if (G.value == 0 || this.visibleItems.length == 0) {
                for (var r = 0; r < this.items.length; r++) {
                    var x = this.items[r];
                    if (x.visible) {
                        x.top = -g;
                        x.initialTop = -g;
                        if (!x.isGroup && x.visible) {
                            this.visibleItems[s++] = x;
                            x.visibleIndex = s - 1
                        }
                        this.renderedVisibleItems[Q++] = x;
                        x.left = -f;
                        var c = x.top + x.height;
                        if (c >= 0 && x.top - x.height <= E) {
                            L[F++] = {
                                index: r,
                                item: x
                            }
                        }
                        g -= x.height
                    }
                }
            }
            var m = g > 0 ? this._searchFirstVisibleIndex(this.vScrollInstance.value, this.renderedVisibleItems) : 0;
            var O = 0;
            F = 0;
            var z = this.vScrollInstance.value;
            var J = 0;
            while (O < 100 + E) {
                var x = this.renderedVisibleItems[m];
                if (x == undefined) {
                    break
                }
                if (x.visible) {
                    x.left = -f;
                    var c = x.top + x.height - z;
                    if (c >= 0 && x.initialTop - z - x.height <= 2 * E) {
                        L[F++] = {
                            index: m,
                            item: x
                        }
                    }
                }
                m++;
                if (x.visible) {
                    O += x.initialTop - z + x.height - O
                }
                J++;
                if (J > this.items.length - 1) {
                    break
                }
            }
            var o = this.toThemeProperty("jqx-listitem-state-normal") + " " + this.toThemeProperty("jqx-item");
            var i = this.toThemeProperty("jqx-listitem-state-group");
            var P = this.toThemeProperty("jqx-listitem-state-disabled") + " " + this.toThemeProperty("jqx-fill-state-disabled");
            var C = 0;
            var n = this;
            for (var r = 0; r < this.visualItems.length; r++) {
                var D = this.visualItems[r];
                var I = function() {
                    var y = D[0].firstChild;
                    if (n.checkboxes) {
                        y = D[0].lastChild
                    }
                    if (y != null) {
                        y.style.visibility = "hidden";
                        y.className = ""
                    }
                    if (n.checkboxes) {
                        var R = D.find(".chkbox");
                        R.css({
                            visibility: "hidden"
                        })
                    }
                };
                if (r < L.length) {
                    var x = L[r].item;
                    if (x.initialTop - z >= E) {
                        I();
                        continue
                    }
                    var A = a(D[0].firstChild);
                    if (this.checkboxes) {
                        A = a(D[0].lastChild)
                    }
                    if (A.length == 0) {
                        continue
                    }
                    if (A[0] == null) {
                        continue
                    }
                    A[0].className = "";
                    A[0].style.display = "block";
                    A[0].style.visibility = "inherit";
                    var p = "";
                    if (!x.isGroup && !this.selectedIndexes[x.index] >= 0) {
                        p = o
                    } else {
                        p = i
                    }
                    if (x.disabled || this.disabled) {
                        p += " " + P
                    }
                    if (this.roundedcorners) {
                        p += " " + this.toThemeProperty("jqx-rc-all")
                    }
                    if (N) {
                        p += " " + this.toThemeProperty("jqx-listitem-state-normal-touch")
                    }
                    A[0].className = p;
                    if (this.renderer) {
                        if (!x.key) {
                            x.key = this.generatekey()
                        }
                        if (!this._cachedItemHtml) {
                            this._cachedItemHtml = new Array()
                        }
                        if (this._cachedItemHtml[x.key]) {
                            if (A[0].innerHTML != this._cachedItemHtml[x.key]) {
                                A[0].innerHTML = this._cachedItemHtml[x.key]
                            }
                        } else {
                            var w = this.renderer(x.index, x.label, x.value);
                            A[0].innerHTML = w;
                            this._cachedItemHtml[x.key] = A[0].innerHTML
                        }
                    } else {
                        if (this.itemHeight !== -1) {
                            var k = 2 + 2 * parseInt(A.css("padding-top"));
                            A[0].style.lineHeight = (x.height - k) + "px";
                            A.css("vertical-align", "middle")
                        }
                        if (x.html != null && x.html.toString().length > 0) {
                            A[0].innerHTML = x.html
                        } else {
                            if (x.label != null || x.value != null) {
                                if (x.label != null) {
                                    if (A[0].innerHTML !== x.label) {
                                        A[0].innerHTML = x.label
                                    }
                                    if (a.trim(x.label) == "") {
                                        A[0].innerHTML = this.emptyString;
                                        if (this.emptyString == "") {
                                            A[0].style.height = (x.height - 8) + "px"
                                        }
                                    }
                                    if (!this.incrementalSearch && !x.disabled) {
                                        if (this.searchString != undefined && this.searchString != "") {
                                            A[0].innerHTML = this._highlight(x.label.toString(), this.searchString)
                                        }
                                    }
                                } else {
                                    if (x.label === null) {
                                        A[0].innerHTML = this.emptyString;
                                        if (this.emptyString == "") {
                                            A[0].style.height = (x.height - 8) + "px"
                                        }
                                    } else {
                                        if (A[0].innerHTML !== x.value) {
                                            A[0].innerHTML = x.value
                                        } else {
                                            if (x.label == "") {
                                                A[0].innerHTML = " "
                                            }
                                        }
                                    }
                                }
                            } else {
                                if (x.label == "" || x.label == null) {
                                    A[0].innerHTML = "";
                                    A[0].style.height = (x.height - 8) + "px"
                                }
                            }
                        }
                    }
                    D[0].style.left = x.left + "px";
                    D[0].style.top = x.initialTop - z + "px";
                    x.element = A[0];
                    if (x.title) {
                        A[0].title = x.title
                    }
                    if (this.equalItemsWidth && !x.isGroup) {
                        if (t == 0) {
                            var d = parseInt(b);
                            var v = parseInt(A.outerWidth()) - parseInt(A.width());
                            d -= v;
                            var H = 1;
                            if (H != null) {
                                H = parseInt(H)
                            } else {
                                H = 0
                            }
                            d -= 2 * H;
                            t = d;
                            if (this.checkboxes && this.hScrollBar[0].style.visibility == "hidden") {
                                t -= 18
                            }
                        }
                        if (K > this.virtualSize.width) {
                            A[0].style.width = t + "px";
                            x.width = t
                        } else {
                            A[0].style.width = -4 + this.virtualSize.width + "px";
                            x.width = this.virtualSize.width - 4
                        }
                    } else {
                        if (A.width() < this.host.width()) {
                            A.width(this.host.width() - 2)
                        }
                    }
                    if (this.rtl) {
                        A[0].style.textAlign = "right"
                    }
                    if (this.autoItemsHeight) {
                        A[0].style.whiteSpace = "normal";
                        A.width(t);
                        x.width = t
                    }
                    C = 0;
                    if (this.checkboxes && !x.isGroup) {
                        if (C == 0) {
                            C = (x.height - 16) / 2;
                            C++
                        }
                        var e = a(D.children()[0]);
                        e[0].item = x;
                        if (!this.rtl) {
                            if (A[0].style.left != "18px") {
                                A[0].style.left = "18px"
                            }
                        } else {
                            if (A[0].style.left != "0px") {
                                A[0].style.left = "0px"
                            }
                        }
                        if (this.rtl) {
                            e.css("left", 8 + x.width + "px")
                        }
                        e[0].style.top = C + "px";
                        e[0].style.display = "block";
                        e[0].style.visibility = "inherit";
                        var u = x.checked;
                        var j = x.checked ? " " + this.toThemeProperty("jqx-checkbox-check-checked") : "";
                        if (e[0].firstChild && e[0].firstChild.firstChild && e[0].firstChild.firstChild.firstChild) {
                            if (e[0].firstChild.firstChild) {
                                if (u) {
                                    e[0].firstChild.firstChild.firstChild.className = j
                                } else {
                                    if (u === false) {
                                        e[0].firstChild.firstChild.firstChild.className = ""
                                    } else {
                                        if (u === null) {
                                            e[0].firstChild.firstChild.firstChild.className = this.toThemeProperty("jqx-checkbox-check-indeterminate")
                                        }
                                    }
                                }
                            }
                        }
                        if (a.jqx.ariaEnabled) {
                            if (u) {
                                D[0].setAttribute("aria-selected", true)
                            } else {
                                D[0].removeAttribute("aria-selected")
                            }
                        }
                    } else {
                        if (this.checkboxes) {
                            var e = a(D.children()[0]);
                            e.css({
                                display: "none",
                                visibility: "inherit"
                            })
                        }
                    }
                    if (!x.disabled && ((!this.filterable && this.selectedIndexes[x.visibleIndex] >= 0) || (x.selected && this.filterable))) {
                        A.addClass(this.toThemeProperty("jqx-listitem-state-selected"));
                        A.addClass(this.toThemeProperty("jqx-fill-state-pressed"));
                        if (a.jqx.ariaEnabled) {
                            D[0].setAttribute("aria-selected", true);
                            this._activeElement = D[0]
                        }
                    } else {
                        if (!this.checkboxes) {
                            if (a.jqx.ariaEnabled) {
                                D[0].removeAttribute("aria-selected")
                            }
                        }
                    }
                } else {
                    I()
                }
            }
        },
        generatekey: function() {
            var b = function() {
                return (((1 + Math.random()) * 65536) | 0).toString(16).substring(1)
            };
            return (b() + b() + "-" + b() + "-" + b() + "-" + b() + "-" + b() + b() + b())
        },
        _calculateVirtualSize: function(l) {
            var p = 0;
            var n = 2;
            var g = 0;
            var o = document.createElement("span");
            if (this.equalItemsWidth) {
                a(o).css("float", "left")
            }
            var h = 0;
            var i = undefined === l ? this.host.outerHeight() : l + 2;
            document.body.appendChild(o);
            var e = this.items.length;
            var j = this.host.width();
            if (this.autoItemsHeight) {
                j -= 10;
                if (this.vScrollBar.css("visibility") != "hidden") {
                    j -= 20
                }
            }
            if (this.autoItemsHeight || this.renderer || this.groups.length > 1 || (e > 0 && this.items[0].html != null && this.items[0].html != "")) {
                for (var g = 0; g < e; g++) {
                    var s = this.items[g];
                    if (s.isGroup && (s.label == "" && s.html == "")) {
                        continue
                    }
                    if (!s.visible) {
                        continue
                    }
                    var d = "";
                    if (!s.isGroup) {
                        d += this.toThemeProperty("jqx-listitem-state-normal jqx-rc-all")
                    } else {
                        d += this.toThemeProperty("jqx-listitem-state-group jqx-rc-all")
                    }
                    d += " " + this.toThemeProperty("jqx-fill-state-normal");
                    if (this.isTouchDevice()) {
                        d += " " + this.toThemeProperty("jqx-touch")
                    }
                    o.className = d;
                    if (this.autoItemsHeight) {
                        o.style.whiteSpace = "normal";
                        var b = this.checkboxes ? -20 : 0;
                        o.style.width = (b + j) + "px"
                    }
                    if (this.renderer) {
                        var k = this.renderer(s.index, s.label, s.value);
                        o.innerHTML = k
                    } else {
                        if (s.html != null && s.html.toString().length > 0) {
                            o.innerHTML = s.html
                        } else {
                            if (s.label != null || s.value != null) {
                                if (s.label != null) {
                                    o.innerHTML = s.label;
                                    if (s.label == "") {
                                        o.innerHTML = "Empty"
                                    }
                                } else {
                                    o.innerHTML = s.value
                                }
                            }
                        }
                    }
                    var r = o.offsetHeight;
                    var t = o.offsetWidth;
                    if (this.itemHeight > -1) {
                        r = this.itemHeight
                    }
                    s.height = r;
                    s.width = t;
                    n += r;
                    p = Math.max(p, t);
                    if (n <= i) {
                        h++
                    }
                }
            } else {
                var n = 0;
                var m = 0;
                var c = "";
                var u = 0;
                var f = 0;
                var q = -1;
                for (var g = 0; g < e; g++) {
                    var s = this.items[g];
                    if (s.isGroup && (s.label == "" && s.html == "")) {
                        continue
                    }
                    if (!s.visible) {
                        continue
                    }
                    q++;
                    var d = "";
                    if (q == 0) {
                        d += this.toThemeProperty("jqx-listitem-state-normal jqx-rc-all");
                        d += " " + this.toThemeProperty("jqx-fill-state-normal");
                        d += " " + this.toThemeProperty("jqx-widget");
                        d += " " + this.toThemeProperty("jqx-listbox");
                        d += " " + this.toThemeProperty("jqx-widget-content");
                        if (this.isTouchDevice()) {
                            d += " " + this.toThemeProperty("jqx-touch");
                            d += " " + this.toThemeProperty("jqx-listitem-state-normal-touch")
                        }
                        o.className = d;
                        if (this.autoItemsHeight) {
                            o.style.whiteSpace = "normal";
                            var b = this.checkboxes ? -20 : 0;
                            o.style.width = (b + j) + "px"
                        }
                        if (s.html == null || (s.label == "" || s.label == null)) {
                            o.innerHTML = "Item"
                        } else {
                            if (s.html != null && s.html.toString().length > 0) {
                                o.innerHTML = s.html
                            } else {
                                if (s.label != null || s.value != null) {
                                    if (s.label != null) {
                                        if (s.label.toString().match(new RegExp("\\w")) != null || s.label.toString().match(new RegExp("\\d")) != null) {
                                            o.innerHTML = s.label
                                        } else {
                                            o.innerHTML = "Item"
                                        }
                                    } else {
                                        o.innerHTML = s.value
                                    }
                                }
                            }
                        }
                        var r = 1 + o.offsetHeight;
                        if (this.itemHeight > -1) {
                            r = this.itemHeight
                        }
                        m = r
                    }
                    if (u != undefined) {
                        f = u
                    }
                    if (s.html != null && s.html.toString().length > 0) {
                        u = Math.max(u, s.html.toString().length);
                        if (f != u) {
                            c = s.html
                        }
                    } else {
                        if (s.label != null) {
                            u = Math.max(u, s.label.length);
                            if (f != u) {
                                c = s.label
                            }
                        } else {
                            if (s.value != null) {
                                u = Math.max(u, s.value.length);
                                if (f != u) {
                                    c = s.value
                                }
                            }
                        }
                    }
                    s.height = m;
                    n += m;
                    if (n <= i) {
                        h++
                    }
                }
                o.innerHTML = c;
                p = o.offsetWidth
            }
            n += 2;
            if (h < 10) {
                h = 10
            }
            if (this.filterable) {
                n += this.filterHeight
            }
            o.parentNode.removeChild(o);
            return {
                width: p,
                height: n,
                itemsPerPage: h
            }
        },
        _getVirtualItemsCount: function() {
            if (this.virtualItemsCount == 0) {
                var b = parseInt(this.host.height()) / 5;
                if (b > this.items.length) {
                    b = this.items.length
                }
                return b
            } else {
                return this.virtualItemsCount
            }
        },
        _addItems: function(r) {
            var v = this;
            if (v.updatingListBox == true) {
                return
            }
            if (v.items == undefined || v.items.length == 0) {
                v.virtualSize = {
                    width: 0,
                    height: 0,
                    itemsPerPage: 0
                };
                v._updatescrollbars();
                v.renderedVisibleItems = new Array();
                if (v.itemswrapper) {
                    v.itemswrapper.children().remove()
                }
                return
            }
            var h = v.host.height();
            if (r == false) {
                var b = v._calculateVirtualSize(h);
                var g = b.itemsPerPage * 2;
                if (v.autoHeight) {
                    g = v.items.length
                }
                v.virtualItemsCount = Math.min(g, v.items.length);
                var q = b.width;
                v.virtualSize = b;
                v._updatescrollbars();
                return
            }
            var n = this;
            var l = 0;
            v.visibleItems = new Array();
            v.renderedVisibleItems = new Array();
            v._removeHandlers();
            if (v.allowDrag && v._enableDragDrop) {
                v.itemswrapper = null
            }
            if (v.itemswrapper == null) {
                v.content[0].innerHTML = "";
                v.itemswrapper = a('<div style="outline: 0 none; overflow:hidden; width:100%; position: relative;"></div>');
                v.itemswrapper[0].style.height = (2 * h) + "px";
                v.content[0].appendChild(v.itemswrapper[0])
            }
            var b = v._calculateVirtualSize(h);
            var g = b.itemsPerPage * 2;
            if (v.autoHeight) {
                g = v.items.length
            }
            v.virtualItemsCount = Math.min(g, v.items.length);
            var v = this;
            var q = b.width;
            v.virtualSize = b;
            var c = Math.max(v.host.width(), 17 + b.width);
            v.itemswrapper[0].style.width = c + "px";
            var e = 0;
            var i = "";
            var f = a.jqx.browser.msie && a.jqx.browser.version < 9;
            var s = f ? ' unselectable="on"': "";
            for (var j = e; j < v.virtualItemsCount; j++) {
                var u = v.items[j];
                var p = "listitem" + j + v.element.id;
                i += "<div" + s + " role='option' id='" + p + "' class='jqx-listitem-element'>";
                if (v.checkboxes) {
                    i += '<div style="background-color: transparent; padding: 0; margin: 0; position: absolute; float: left; width: 16px; height: 16px;" class="chkbox">';
                    var o = '<div class="' + v.toThemeProperty("jqx-checkbox-default") + " " + v.toThemeProperty("jqx-fill-state-normal") + " " + v.toThemeProperty("jqx-rc-all") + '"><div style="cursor: pointer; width: 13px; height: 13px;">';
                    var w = u.checked ? " " + v.toThemeProperty("jqx-checkbox-check-checked") : "";
                    o += '<span style="width: 13px; height: 13px;" class="checkBoxCheck' + w + '"></span>';
                    o += "</div></div>";
                    i += o;
                    i += "</div>"
                }
                i += "<span" + s + " style='-ms-touch-action: none;'></span></div>"
            }
            if (n.WinJS) {
                v.itemswrapper.html(i)
            } else {
                v.itemswrapper[0].innerHTML = i
            }
            var d = v.itemswrapper.children();
            for (var j = e; j < v.virtualItemsCount; j++) {
                var u = v.items[j];
                var t = a(d[j]);
                if (v.allowDrag && v._enableDragDrop) {
                    t.addClass("draggable")
                }
                if (v.checkboxes) {
                    var k = a(t.children()[0]);
                    t.css("float", "left");
                    var m = a(t[0].firstChild);
                    m.css("float", "left")
                }
                t[0].style.height = u.height + "px";
                t[0].style.top = l + "px";
                l += u.height;
                v.visualItems[j] = t
            }
            v._addHandlers();
            v._updatescrollbars();
            if (v.autoItemsHeight) {
                var b = v._calculateVirtualSize(h);
                var g = b.itemsPerPage * 2;
                if (v.autoHeight) {
                    g = v.items.length
                }
                v.virtualItemsCount = Math.min(g, v.items.length);
                var v = this;
                var q = b.width;
                v.virtualSize = b;
                v._updatescrollbars()
            }
            if (a.jqx.browser.msie && a.jqx.browser.version < 8) {
                v.host.attr("hideFocus", true);
                v.host.find("div").attr("hideFocus", true)
            }
        },
        _updatescrollbars: function() {
            var k = this;
            if (!k.virtualSize) {
                return
            }
            var n = k.virtualSize.height;
            var j = k.virtualSize.width;
            var f = k.vScrollInstance;
            var e = k.hScrollInstance;
            k._arrange(false);
            var l = false;
            var o = k.host.outerWidth();
            var m = k.host.outerHeight();
            var b = 0;
            if (j > o) {
                b = k.hScrollBar.outerHeight() + 2
            }
            if (n + b > m) {
                var d = f.max;
                f.max = 2 + parseInt(n) + b - parseInt(m - 2);
                if (k.vScrollBar[0].style.visibility != "inherit") {
                    k.vScrollBar[0].style.visibility = "inherit";
                    l = true
                }
                if (d != f.max) {
                    f._arrange()
                }
            } else {
                if (k.vScrollBar[0].style.visibility != "hidden") {
                    k.vScrollBar[0].style.visibility = "hidden";
                    l = true;
                    f.setPosition(0)
                }
            }
            var h = 0;
            if (k.vScrollBar[0].style.visibility != "hidden") {
                h = k.scrollBarSize + 6
            }
            var g = k.checkboxes ? 20 : 0;
            if (k.autoItemsHeight) {
                k.hScrollBar[0].style.visibility = "hidden"
            } else {
                if (j >= o - h - g) {
                    var i = e.max;
                    if (k.vScrollBar[0].style.visibility == "inherit") {
                        e.max = g + h + parseInt(j) - k.host.width() + 4
                    } else {
                        e.max = g + parseInt(j) - k.host.width() + 6
                    }
                    if (k.hScrollBar[0].style.visibility != "inherit") {
                        k.hScrollBar[0].style.visibility = "inherit";
                        l = true
                    }
                    if (i != e.max) {
                        e._arrange()
                    }
                    if (k.vScrollBar[0].style.visibility == "inherit") {
                        f.max = 2 + parseInt(n) + k.hScrollBar.outerHeight() + 2 - parseInt(k.host.height())
                    }
                } else {
                    if (k.hScrollBar[0].style.visibility != "hidden") {
                        k.hScrollBar[0].style.visibility = "hidden";
                        l = true
                    }
                }
            }
            e.setPosition(0);
            if (l) {
                k._arrange()
            }
            if (k.itemswrapper) {
                k.itemswrapper[0].style.width = Math.max(0, Math.max(o - 2, 17 + j)) + "px";
                k.itemswrapper[0].style.height = Math.max(0, 2 * m) + "px"
            }
            var c = k.isTouchDevice();
            if (c) {
                if (k.vScrollBar.css("visibility") != "visible" && k.hScrollBar.css("visibility") != "visible") {
                    a.jqx.mobile.setTouchScroll(false, k.element.id)
                } else {
                    a.jqx.mobile.setTouchScroll(true, k.element.id)
                }
            }
        },
        clear: function() {
            this.source = null;
            this.clearSelection();
            this.refresh()
        },
        clearSelection: function(b) {
            for (var c = 0; c < this.selectedIndexes.length; c++) {
                if (this.selectedIndexes[c] && this.selectedIndexes[c] != -1) {
                    this._raiseEvent("1", {
                        index: c,
                        type: "api",
                        item: this.getVisibleItem(c),
                        originalEvent: null
                    })
                }
                this.selectedIndexes[c] = -1
            }
            this.selectedIndex = -1;
            this.selectedValue = null;
            this.selectedValues = new Array();
            if (b != false) {
                this._renderItems()
            }
        },
        unselectIndex: function(c, d) {
            if (isNaN(c)) {
                return
            }
            this.selectedIndexes[c] = -1;
            var g = false;
            for (var e = 0; e < this.selectedIndexes.length; e++) {
                var b = this.selectedIndexes[e];
                if (b != -1 && b != undefined) {
                    g = true
                }
            }
            if (!g) {
                this.selectedValue = null;
                this.selectedIndex = -1;
                var f = this.getVisibleItem(c);
                if (f) {
                    if (this.selectedValues[f.value]) {
                        this.selectedValues[f.value] = null
                    }
                }
            }
            if (d == undefined || d == true) {
                this._renderItems();
                this._raiseEvent("1", {
                    index: c,
                    type: "api",
                    item: this.getVisibleItem(c),
                    originalEvent: null
                })
            }
            this._updateInputSelection();
            this._raiseEvent("2", {
                index: c,
                type: "api",
                item: this.getItem(c)
            })
        },
        getInfo: function() {
            var d = this;
            var c = this.getItems();
            var b = this.getVisibleItems();
            var e = function() {
                var h = d.vScrollInstance.value;
                if (d.filterable) {
                    h -= d.filterHeight
                }
                var m = new Array();
                for (var g = 0; g < b.length; g++) {
                    var j = b[g];
                    if (j) {
                        var f = j.initialTop;
                        var l = j.height;
                        var k = true;
                        if (f + l - h < 0 || f - h >= d.host.height()) {
                            k = false
                        }
                        if (k) {
                            m.push(j)
                        }
                    }
                }
                return m
            } ();
            return {
                items: c,
                visibleItems: b,
                viewItems: e
            }
        },
        getItem: function(c) {
            if (c == -1 || isNaN(c) || typeof(c) === "string") {
                if (c === -1) {
                    return null
                }
                return this.getItemByValue(c)
            }
            var b = null;
            var d = a.each(this.items,
            function() {
                if (this.index == c) {
                    b = this;
                    return false
                }
            });
            return b
        },
        getVisibleItem: function(b) {
            if (b == -1 || isNaN(b) || typeof(b) === "string") {
                if (b === -1) {
                    return null
                }
                return this.getItemByValue(b)
            }
            return this.visibleItems[b]
        },
        getVisibleItems: function() {
            return this.visibleItems
        },
        checkIndex: function(b, c, e) {
            if (!this.checkboxes) {
                return
            }
            if (isNaN(b)) {
                return
            }
            if (b < 0 || b >= this.visibleItems.length) {
                return
            }
            if (this.visibleItems[b] != null && this.visibleItems[b].disabled) {
                return
            }
            if (this.disabled) {
                return
            }
            var d = this.getItem(b);
            if (this.groups.length > 0 || this.filterable) {
                var d = this.getVisibleItem(b)
            }
            if (d != null) {
                var f = a(d.checkBoxElement);
                d.checked = true;
                if (c == undefined || c == true) {
                    this._updateCheckedItems()
                }
            }
            if (e == undefined || e == true) {
                this._raiseEvent(3, {
                    label: d.label,
                    value: d.value,
                    checked: true,
                    item: d
                })
            }
        },
        getCheckedItems: function() {
            if (!this.checkboxes) {
                return null
            }
            var b = new Array();
            if (this.items == undefined) {
                return
            }
            a.each(this.items,
            function() {
                if (this.checked) {
                    b[b.length] = this
                }
            });
            return b
        },
        checkAll: function(b) {
            if (!this.checkboxes) {
                return
            }
            if (this.disabled) {
                return
            }
            var c = this;
            a.each(this.items,
            function() {
                var d = this;
                if (b !== false && d.checked !== true) {
                    c._raiseEvent(3, {
                        label: d.label,
                        value: d.value,
                        checked: true,
                        item: d
                    })
                }
                this.checked = true
            });
            this._updateCheckedItems()
        },
        uncheckAll: function(b) {
            if (!this.checkboxes) {
                return
            }
            if (this.disabled) {
                return
            }
            var c = this;
            a.each(this.items,
            function() {
                var d = this;
                if (b !== false && d.checked !== false) {
                    this.checked = false;
                    c._raiseEvent(3, {
                        label: d.label,
                        value: d.value,
                        checked: false,
                        item: d
                    })
                }
                this.checked = false
            });
            this._updateCheckedItems()
        },
        uncheckIndex: function(b, c, e) {
            if (!this.checkboxes) {
                return
            }
            if (isNaN(b)) {
                return
            }
            if (b < 0 || b >= this.visibleItems.length) {
                return
            }
            if (this.visibleItems[b] != null && this.visibleItems[b].disabled) {
                return
            }
            if (this.disabled) {
                return
            }
            var d = this.getItem(b);
            if (this.groups.length > 0 || this.filterable) {
                var d = this.getVisibleItem(b)
            }
            if (d != null) {
                var f = a(d.checkBoxElement);
                d.checked = false;
                if (c == undefined || c == true) {
                    this._updateCheckedItems()
                }
            }
            if (e == undefined || e == true) {
                this._raiseEvent(3, {
                    label: d.label,
                    value: d.value,
                    checked: false,
                    item: d
                })
            }
        },
        indeterminateIndex: function(b, c, e) {
            if (!this.checkboxes) {
                return
            }
            if (isNaN(b)) {
                return
            }
            if (b < 0 || b >= this.visibleItems.length) {
                return
            }
            if (this.visibleItems[b] != null && this.visibleItems[b].disabled) {
                return
            }
            if (this.disabled) {
                return
            }
            var d = this.getItem(b);
            if (this.groups.length > 0 || this.filterable) {
                var d = this.getVisibleItem(b)
            }
            if (d != null) {
                var f = a(d.checkBoxElement);
                d.checked = null;
                if (c == undefined || c == true) {
                    this._updateCheckedItems()
                }
            }
            if (e == undefined || e == true) {
                this._raiseEvent(3, {
                    checked: null
                })
            }
        },
        getSelectedIndex: function() {
            return this.selectedIndex
        },
        getSelectedItems: function() {
            var b = this.getVisibleItems();
            var e = this.selectedIndexes;
            var d = [];
            for (var c in e) {
                if (e[c] != -1) {
                    d[d.length] = b[c]
                }
            }
            return d
        },
        getSelectedItem: function() {
            var b = this.getSelectedItems();
            if (b && b.length > 0) {
                return b[0]
            }
            return null
        },
        _updateCheckedItems: function() {
            var b = this.selectedIndex;
            this.clearSelection(false);
            var c = this.getCheckedItems();
            this.selectedIndex = b;
            this._renderItems();
            var d = a.data(this.element, "hoveredItem");
            if (d != null) {
                a(d).addClass(this.toThemeProperty("jqx-listitem-state-hover"));
                a(d).addClass(this.toThemeProperty("jqx-fill-state-hover"))
            }
            this._updateInputSelection()
        },
        getItemByValue: function(d) {
            if (this.visibleItems == null) {
                return
            }
            if (d && d.value) {
                d = d.value
            }
            if (this.itemsByValue) {
                return this.itemsByValue[a.trim(d).split(" ").join("")]
            }
            var b = this.visibleItems;
            for (var c = 0; c < b.length; c++) {
                if (b[c].value == d) {
                    return b[c];
                    break
                }
            }
        },
        checkItem: function(c) {
            if (c != null) {
                var b = this._getItemByParam(c);
                return this.checkIndex(b.index, true)
            }
            return false
        },
        uncheckItem: function(c) {
            if (c != null) {
                var b = this._getItemByParam(c);
                return this.uncheckIndex(b.index, true)
            }
            return false
        },
        indeterminateItem: function(c) {
            if (c != null) {
                var b = this._getItemByParam(c);
                return this.indeterminateIndex(b.index, true)
            }
            return false
        },
        val: function(c) {
            if (!this.input) {
                return
            }
            var d = function(f) {
                for (var e in f) {
                    if (f.hasOwnProperty(e)) {
                        return false
                    }
                }
                if (typeof c == "number") {
                    return false
                }
                if (typeof c == "date") {
                    return false
                }
                if (typeof c == "boolean") {
                    return false
                }
                if (typeof c == "string") {
                    return false
                }
                return true
            };
            if (d(c) || arguments.length == 0) {
                return this.input.val()
            }
            var b = this.getItemByValue(c);
            if (b != null) {
                this.selectItem(b)
            }
            if (this.input) {
                return this.input.val()
            }
        },
        selectItem: function(c) {
            if (c != null) {
                if (c.index == undefined) {
                    var b = this.getItemByValue(c);
                    if (b) {
                        c = b
                    }
                }
                return this.selectIndex(c.visibleIndex, true)
            }
            return false
        },
        unselectItem: function(c) {
            if (c != null) {
                if (c.index == undefined) {
                    var b = this.getItemByValue(c);
                    if (b) {
                        c = b
                    }
                }
                return this.unselectIndex(c.visibleIndex, true)
            }
            return false
        },
        selectIndex: function(j, r, c, d, m, b) {
            if (isNaN(j)) {
                return
            }
            var q = this.selectedIndex;
            if (this.filterable) {
                this.selectedIndex = -1
            }
            if (j < -1 || j >= this.visibleItems.length) {
                return
            }
            if (this.visibleItems[j] != null && this.visibleItems[j].disabled) {
                return
            }
            if (this.disabled) {
                return
            }
            if (!this.multiple && !this.multipleextended && this.selectedIndex == j && !d) {
                if (this.visibleItems && this.items && this.visibleItems.length != this.items.length) {
                    h = this.getVisibleItem(j);
                    if (h) {
                        this.selectedValue = h.value;
                        this.selectedValues[h.value] = h.value
                    }
                }
                return
            }
            if (this.checkboxes) {
                this._updateCheckedItems();
                return
            }
            this.focused = true;
            var p = false;
            if (this.selectedIndex != j) {
                p = true
            }
            var o = q;
            if (this.selectedIndex == j && !this.multiple) {
                o = -1
            }
            if (m == undefined) {
                m = "none"
            }
            var h = this.getItem(j);
            var s = this.getItem(o);
            if (this.visibleItems && this.items && this.visibleItems.length != this.items.length) {
                h = this.getVisibleItem(j);
                s = this.getVisibleItem(o)
            }
            if (d != undefined && d) {
                this._raiseEvent("1", {
                    index: o,
                    type: m,
                    item: s,
                    originalEvent: b
                });
                this.selectedIndex = j;
                this.selectedIndexes[o] = -1;
                this.selectedIndexes[j] = j;
                if (h) {
                    this.selectedValue = h.value;
                    this.selectedValues[h.value] = h.value
                }
                this._raiseEvent("0", {
                    index: j,
                    type: m,
                    item: h,
                    originalEvent: b
                })
            } else {
                var l = this;
                var e = function(t, x, v, w, u, i) {
                    l._raiseEvent("1", {
                        index: x,
                        type: v,
                        item: w,
                        originalEvent: i
                    });
                    l.selectedIndex = t;
                    l.selectedIndexes = [];
                    x = t;
                    l.selectedIndexes[t] = t;
                    l.selectedValues = new Array();
                    if (u) {
                        l.selectedValues[u.value] = u.value
                    }
                    l._raiseEvent("0", {
                        index: t,
                        type: v,
                        item: u,
                        originalEvent: i
                    })
                };
                var k = function(t, x, v, w, u, i) {
                    if (l.selectedIndexes[t] == undefined || l.selectedIndexes[t] == -1) {
                        l.selectedIndexes[t] = t;
                        l.selectedIndex = t;
                        if (u) {
                            l.selectedValues[u.value] = u.value;
                            l._raiseEvent("0", {
                                index: t,
                                type: v,
                                item: u,
                                originalEvent: i
                            })
                        }
                    } else {
                        x = l.selectedIndexes[t];
                        w = l.getVisibleItem(x);
                        if (w) {
                            l.selectedValues[w.value] = null
                        }
                        l.selectedIndexes[t] = -1;
                        l.selectedIndex = -1;
                        l._raiseEvent("1", {
                            index: x,
                            type: v,
                            item: w,
                            originalEvent: i
                        })
                    }
                };
                if (this.multipleextended) {
                    if (!this._shiftKey && !this._ctrlKey) {
                        if (m != "keyboard" && m != "mouse") {
                            k(j, o, m, s, h, b);
                            l._clickedIndex = j
                        } else {
                            this.clearSelection(false);
                            l._clickedIndex = j;
                            e(j, o, m, s, h, b)
                        }
                    } else {
                        if (this._ctrlKey) {
                            if (m == "keyboard") {
                                this.clearSelection(false);
                                l._clickedIndex = j
                            }
                            k(j, o, m, s, h, b)
                        } else {
                            if (this._shiftKey) {
                                if (l._clickedIndex == undefined) {
                                    l._clickedIndex = o
                                }
                                var f = Math.min(l._clickedIndex, j);
                                var n = Math.max(l._clickedIndex, j);
                                this.clearSelection(false);
                                for (var g = f; g <= n; g++) {
                                    l.selectedIndexes[g] = g;
                                    l.selectedValues[l.getVisibleItem(g).value] = l.getVisibleItem(g).value;
                                    l._raiseEvent("0", {
                                        index: g,
                                        type: m,
                                        item: this.getVisibleItem(g),
                                        originalEvent: b
                                    })
                                }
                                if (m != "keyboard") {
                                    l.selectedIndex = l._clickedIndex
                                } else {
                                    l.selectedIndex = j
                                }
                            }
                        }
                    }
                } else {
                    if (this.multiple) {
                        k(j, o, m, s, h, b)
                    } else {
                        if (h) {
                            this.selectedValue = h.value
                        }
                        e(j, o, m, s, h, b)
                    }
                }
            }
            if (c == undefined || c == true) {
                this._renderItems()
            }
            if (r != undefined && r != null && r == true) {
                this.ensureVisible(j)
            }
            this._raiseEvent("2", {
                index: j,
                item: h,
                oldItem: s,
                type: m,
                originalEvent: b
            });
            this._updateInputSelection();
            return p
        },
        _updateInputSelection: function() {
            this._syncSelection();
            var c = new Array();
            if (this.input) {
                if (this.selectedIndex == -1) {
                    this.input.val("")
                } else {
                    if (this.items) {
                        if (this.items[this.selectedIndex] != undefined) {
                            this.input.val(this.items[this.selectedIndex].value);
                            c.push(this.items[this.selectedIndex].value)
                        }
                    }
                }
                if (this.multiple || this.multipleextended || this.checkboxes) {
                    var b = !this.checkboxes ? this.getSelectedItems() : this.getCheckedItems();
                    var e = "";
                    if (b) {
                        for (var d = 0; d < b.length; d++) {
                            if (undefined != b[d]) {
                                if (d == b.length - 1) {
                                    e += b[d].value
                                } else {
                                    e += b[d].value + ","
                                }
                                c.push(b[d].value)
                            }
                        }
                        this.input.val(e)
                    }
                }
            }
            if (this.field && this.input) {
                if (this.field.nodeName.toLowerCase() == "select") {
                    a.each(this.field,
                    function(f, g) {
                        a(this).removeAttr("selected");
                        this.selected = c.indexOf(this.value) >= 0;
                        if (this.selected) {
                            a(this).attr("selected", true)
                        }
                    })
                } else {
                    a.each(this.items,
                    function(f, g) {
                        a(this.originalItem.originalItem).removeAttr("data-selected");
                        this.selected = c.indexOf(this.value) >= 0;
                        if (this.selected) {
                            a(this.originalItem.originalItem).attr("data-selected", true)
                        }
                    })
                }
            }
        },
        isIndexInView: function(c) {
            if (isNaN(c)) {
                return false
            }
            if (!this.items) {
                return false
            }
            if (c < 0 || c >= this.items.length) {
                return false
            }
            var e = this.vScrollInstance.value;
            var d = 0;
            if (this.filterable) {
                d = this.filterHeight
            }
            var f = this.visibleItems[c];
            if (f == undefined) {
                return true
            }
            var b = f.initialTop;
            var g = f.height;
            if (b - e < d || b - e + d + g >= this.host.outerHeight()) {
                return false
            }
            return true
        },
        _itemsInPage: function() {
            var b = 0;
            var c = this;
            if (this.items) {
                a.each(this.items,
                function() {
                    if ((this.initialTop + this.height) >= c.content.height()) {
                        return false
                    }
                    b++
                })
            }
            return b
        },
        _firstItemIndex: function() {
            if (this.visibleItems != null) {
                if (this.visibleItems[0]) {
                    if (this.visibleItems[0].isGroup) {
                        return this._nextItemIndex(0)
                    } else {
                        return 0
                    }
                } else {
                    return 0
                }
            }
            return - 1
        },
        _lastItemIndex: function() {
            if (this.visibleItems != null) {
                if (this.visibleItems[this.visibleItems.length - 1]) {
                    if (this.visibleItems[this.visibleItems.length - 1].isGroup) {
                        return this._prevItemIndex(this.visibleItems.length - 1)
                    } else {
                        return this.visibleItems.length - 1
                    }
                } else {
                    return this.visibleItems.length - 1
                }
            }
            return - 1
        },
        _nextItemIndex: function(b) {
            for (indx = b + 1; indx < this.visibleItems.length; indx++) {
                if (this.visibleItems[indx]) {
                    if (!this.visibleItems[indx].disabled && !this.visibleItems[indx].isGroup) {
                        return indx
                    }
                }
            }
            return - 1
        },
        _prevItemIndex: function(b) {
            for (indx = b - 1; indx >= 0; indx--) {
                if (this.visibleItems[indx]) {
                    if (!this.visibleItems[indx].disabled && !this.visibleItems[indx].isGroup) {
                        return indx
                    }
                }
            }
            return - 1
        },
        clearFilter: function() {
            this.filterInput.val("");
            this._updateItemsVisibility("")
        },
        _search: function(c) {
            var b = this;
            var d = b.filterInput.val();
            if (c.keyCode == 9) {
                return
            }
            if (b.searchMode == "none" || b.searchMode == null || b.searchMode == "undefined") {
                return
            }
            if (c.keyCode == 16 || c.keyCode == 17 || c.keyCode == 20) {
                return
            }
            if (c.keyCode == 37 || c.keyCode == 39) {
                return false
            }
            if (c.altKey || c.keyCode == 18) {
                return
            }
            if (c.keyCode >= 33 && c.keyCode <= 40) {
                return
            }
            if (c.ctrlKey || c.metaKey || b.ctrlKey) {
                if (c.keyCode != 88 && c.keyCode != 86) {
                    return
                }
            }
            if (d === b.searchString) {
                return
            }
            b._updateItemsVisibility(d)
        },
        _updateItemsVisibility: function(h) {
            var e = this.getItems();
            if (e == undefined) {
                return {
                    index: -1,
                    matchItem: new Array()
                }
            }
            var f = this;
            var d = -1;
            var i = new Array();
            var g = 0;
            a.each(e,
            function(k) {
                var m = "";
                if (!this.isGroup) {
                    if (this.searchLabel) {
                        m = this.searchLabel
                    } else {
                        if (this.label) {
                            m = this.label
                        } else {
                            if (this.value) {
                                m = this.value
                            } else {
                                if (this.title) {
                                    m = this.title
                                } else {
                                    m = "jqxItem"
                                }
                            }
                        }
                    }
                    m = m.toString();
                    var l = false;
                    switch (f.searchMode) {
                    case "containsignorecase":
                        l = a.jqx.string.containsIgnoreCase(m, h);
                        break;
                    case "contains":
                        l = a.jqx.string.contains(m, h);
                        break;
                    case "equals":
                        l = a.jqx.string.equals(m, h);
                        break;
                    case "equalsignorecase":
                        l = a.jqx.string.equalsIgnoreCase(m, h);
                        break;
                    case "startswith":
                        l = a.jqx.string.startsWith(m, h);
                        break;
                    case "startswithignorecase":
                        l = a.jqx.string.startsWithIgnoreCase(m, h);
                        break;
                    case "endswith":
                        l = a.jqx.string.endsWith(m, h);
                        break;
                    case "endswithignorecase":
                        l = a.jqx.string.endsWithIgnoreCase(m, h);
                        break
                    }
                    if (!l) {
                        this.visible = false
                    }
                    if (l) {
                        i[g++] = this;
                        this.visible = true;
                        d = this.visibleIndex
                    }
                    if (h == "") {
                        this.visible = true;
                        l = false
                    }
                }
            });
            f.renderedVisibleItems = new Array();
            f.visibleItems = new Array();
            f.vScrollInstance.setPosition(0, true);
            f._addItems(false);
            f._renderItems();
            for (var b = 0; b < f.items.length; b++) {
                f.selectedIndexes[b] = -1
            }
            f.selectedIndex = -1;
            for (var c in f.selectedValues) {
                var h = f.selectedValues[c];
                var j = f.getItemByValue(h);
                if (j) {
                    if (j.visible) {
                        f.selectedIndex = j.visibleIndex;
                        f.selectedIndexes[j.visibleIndex] = j.visibleIndex
                    }
                }
            }
            f._syncSelection()
        },
        _getMatches: function(g, d) {
            if (g == undefined || g.length == 0) {
                return - 1
            }
            if (d == undefined) {
                d = 0
            }
            var b = this.getItems();
            var f = this;
            var c = -1;
            var e = 0;
            a.each(b,
            function(h) {
                var k = "";
                if (!this.isGroup) {
                    if (this.searchLabel) {
                        k = this.searchLabel.toString()
                    } else {
                        if (this.label) {
                            k = this.label.toString()
                        } else {
                            if (this.value) {
                                k = this.value.toString()
                            } else {
                                if (this.title) {
                                    k = this.title.toString()
                                } else {
                                    k = "jqxItem"
                                }
                            }
                        }
                    }
                    var j = false;
                    switch (f.searchMode) {
                    case "containsignorecase":
                        j = a.jqx.string.containsIgnoreCase(k, g);
                        break;
                    case "contains":
                        j = a.jqx.string.contains(k, g);
                        break;
                    case "equals":
                        j = a.jqx.string.equals(k, g);
                        break;
                    case "equalsignorecase":
                        j = a.jqx.string.equalsIgnoreCase(k, g);
                        break;
                    case "startswith":
                        j = a.jqx.string.startsWith(k, g);
                        break;
                    case "startswithignorecase":
                        j = a.jqx.string.startsWithIgnoreCase(k, g);
                        break;
                    case "endswith":
                        j = a.jqx.string.endsWith(k, g);
                        break;
                    case "endswithignorecase":
                        j = a.jqx.string.endsWithIgnoreCase(k, g);
                        break
                    }
                    if (j && this.visibleIndex >= d) {
                        c = this.visibleIndex;
                        return false
                    }
                }
            });
            return c
        },
        findItems: function(e) {
            var b = this.getItems();
            var d = this;
            var c = 0;
            var f = new Array();
            a.each(b,
            function(g) {
                var j = "";
                if (!this.isGroup) {
                    if (this.label) {
                        j = this.label
                    } else {
                        if (this.value) {
                            j = this.value
                        } else {
                            if (this.title) {
                                j = this.title
                            } else {
                                j = "jqxItem"
                            }
                        }
                    }
                    var h = false;
                    switch (d.searchMode) {
                    case "containsignorecase":
                        h = a.jqx.string.containsIgnoreCase(j, e);
                        break;
                    case "contains":
                        h = a.jqx.string.contains(j, e);
                        break;
                    case "equals":
                        h = a.jqx.string.equals(j, e);
                        break;
                    case "equalsignorecase":
                        h = a.jqx.string.equalsIgnoreCase(j, e);
                        break;
                    case "startswith":
                        h = a.jqx.string.startsWith(j, e);
                        break;
                    case "startswithignorecase":
                        h = a.jqx.string.startsWithIgnoreCase(j, e);
                        break;
                    case "endswith":
                        h = a.jqx.string.endsWith(j, e);
                        break;
                    case "endswithignorecase":
                        h = a.jqx.string.endsWithIgnoreCase(j, e);
                        break
                    }
                    if (h) {
                        f[c++] = this
                    }
                }
            });
            return f
        },
        _syncSelection: function() {
            var d = this;
            if (d.filterable) {
                if (d.items) {
                    for (var b = 0; b < d.items.length; b++) {
                        var c = d.items[b];
                        c.selected = false
                    }
                }
                for (var b = 0; b < d.visibleItems.length; b++) {
                    var c = d.visibleItems[b];
                    if (d.selectedIndexes && d.selectedIndexes[b] == c.visibleIndex) {
                        c.selected = true
                    }
                }
                if (d.itemswrapper) {
                    d._renderItems()
                }
            }
        },
        _handleKeyDown: function(n) {
            var s = n.keyCode;
            var k = this;
            var g = k.selectedIndex;
            var d = k.selectedIndex;
            var l = false;
            if (!this.keyboardNavigation || !this.enableSelection) {
                return
            }
            if (this.filterInput && n.target == this.filterInput[0]) {
                return
            }
            var j = function() {
                if (k.multiple) {
                    k.clearSelection(false)
                }
            };
            if (n.altKey) {
                s = -1
            }
            if (k.incrementalSearch) {
                var o = -1;
                if (!k._searchString) {
                    k._searchString = ""
                }
                if ((s == 8 || s == 46) && k._searchString.length >= 1) {
                    k._searchString = k._searchString.substr(0, k._searchString.length - 1)
                }
                var r = String.fromCharCode(s);
                var m = (!isNaN(parseInt(r)));
                var i = false;
                if ((s >= 65 && s <= 97) || m || s == 8 || s == 32 || s == 46) {
                    if (!n.shiftKey) {
                        r = r.toLocaleLowerCase()
                    }
                    var e = 1 + k.selectedIndex;
                    if (s != 8 && s != 32 && s != 46) {
                        if (k._searchString.length > 0 && k._searchString.substr(0, 1) == r) {
                            e = 1 + k.selectedIndex
                        } else {
                            k._searchString += r
                        }
                    }
                    if (s == 32) {
                        k._searchString += " "
                    }
                    var b = this._getMatches(k._searchString, e);
                    o = b;
                    if (o == k._lastMatchIndex || o == -1) {
                        var b = this._getMatches(k._searchString, 0);
                        o = b
                    }
                    k._lastMatchIndex = o;
                    if (o >= 0) {
                        var h = function() {
                            j();
                            k.selectIndex(o, false, false, false, "keyboard", n);
                            var t = k.isIndexInView(o);
                            if (!t) {
                                k.ensureVisible(o)
                            } else {
                                k._renderItems()
                            }
                        };
                        if (k._toSelectTimer) {
                            clearTimeout(k._toSelectTimer)
                        }
                        k._toSelectTimer = setTimeout(function() {
                            h()
                        },
                        k.incrementalSearchKeyDownDelay)
                    }
                    i = true
                }
                if (k._searchTimer != undefined) {
                    clearTimeout(k._searchTimer)
                }
                if (s == 27 || s == 13) {
                    k._searchString = ""
                }
                k._searchTimer = setTimeout(function() {
                    k._searchString = "";
                    k._renderItems()
                },
                k.incrementalSearchDelay);
                if (o >= 0) {
                    return
                }
                if (i) {
                    return false
                }
            }
            if (this.checkboxes) {
                return true
            }
            if (s == 33) {
                var p = k._itemsInPage();
                if (k.selectedIndex - p >= 0) {
                    j();
                    k.selectIndex(d - p, false, false, false, "keyboard", n)
                } else {
                    j();
                    k.selectIndex(k._firstItemIndex(), false, false, false, "keyboard", n)
                }
                k._searchString = ""
            }
            if (s == 32 && this.checkboxes) {
                var f = this.getItem(g);
                if (f != null) {
                    k._updateItemCheck(f, g);
                    n.preventDefault()
                }
                k._searchString = ""
            }
            if (s == 36) {
                j();
                k.selectIndex(k._firstItemIndex(), false, false, false, "keyboard", n);
                k._searchString = ""
            }
            if (s == 35) {
                j();
                k.selectIndex(k._lastItemIndex(), false, false, false, "keyboard", n);
                k._searchString = ""
            }
            if (s == 34) {
                var p = k._itemsInPage();
                if (k.selectedIndex + p < k.visibleItems.length) {
                    j();
                    k.selectIndex(d + p, false, false, false, "keyboard", n)
                } else {
                    j();
                    k.selectIndex(k._lastItemIndex(), false, false, false, "keyboard", n)
                }
                k._searchString = ""
            }
            if (s == 38) {
                k._searchString = "";
                if (k.selectedIndex > 0) {
                    var c = k._prevItemIndex(k.selectedIndex);
                    if (c != k.selectedIndex && c != -1) {
                        j();
                        k.selectIndex(c, false, false, false, "keyboard", n)
                    } else {
                        return true
                    }
                } else {
                    return false
                }
            } else {
                if (s == 40) {
                    k._searchString = "";
                    if (k.selectedIndex + 1 < k.visibleItems.length) {
                        var c = k._nextItemIndex(k.selectedIndex);
                        if (c != k.selectedIndex && c != -1) {
                            j();
                            k.selectIndex(c, false, false, false, "keyboard", n)
                        } else {
                            return true
                        }
                    } else {
                        return false
                    }
                }
            }
            if (s == 35 || s == 36 || s == 38 || s == 40 || s == 34 || s == 33) {
                var q = k.isIndexInView(k.selectedIndex);
                if (!q) {
                    k.ensureVisible(k.selectedIndex)
                } else {
                    k._renderItems()
                }
                return false
            }
            return true
        },
        _updateItemCheck: function(b, c) {
            if (this.disabled) {
                return
            }
            if (b.checked == true) {
                b.checked = (b.hasThreeStates && this.hasThreeStates) ? null: false
            } else {
                b.checked = b.checked != null
            }
            switch (b.checked) {
            case true:
                this.checkIndex(c);
                break;
            case false:
                this.uncheckIndex(c);
                break;
            default:
                this.indeterminateIndex(c);
                break
            }
        },
        wheel: function(d, c) {
            if (c.autoHeight || !c.enableMouseWheel) {
                d.returnValue = true;
                return true
            }
            if (c.disabled) {
                return true
            }
            var e = 0;
            if (!d) {
                d = window.event
            }
            if (d.originalEvent && d.originalEvent.wheelDelta) {
                d.wheelDelta = d.originalEvent.wheelDelta
            }
            if (d.wheelDelta) {
                e = d.wheelDelta / 120
            } else {
                if (d.detail) {
                    e = -d.detail / 3
                }
            }
            if (e) {
                var b = c._handleDelta(e);
                if (b) {
                    if (d.preventDefault) {
                        d.preventDefault()
                    }
                    if (d.originalEvent != null) {
                        d.originalEvent.mouseHandled = true
                    }
                    if (d.stopPropagation != undefined) {
                        d.stopPropagation()
                    }
                }
                if (b) {
                    b = false;
                    d.returnValue = b;
                    return b
                } else {
                    return false
                }
            }
            if (d.preventDefault) {
                d.preventDefault()
            }
            d.returnValue = false
        },
        _handleDelta: function(d) {
            var c = this.vScrollInstance.value;
            if (d < 0) {
                this.scrollDown()
            } else {
                this.scrollUp()
            }
            var b = this.vScrollInstance.value;
            if (c != b) {
                return true
            }
            return false
        },
        focus: function() {
            try {
                this.focused = true;
                this.host.focus();
                var c = this;
                setTimeout(function() {
                    c.host.focus()
                },
                25)
            } catch(b) {}
        },
        _removeHandlers: function() {
            var b = this;
            this.removeHandler(a(document), "keydown.listbox" + this.element.id);
            this.removeHandler(a(document), "keyup.listbox" + this.element.id);
            this.removeHandler(this.vScrollBar, "valueChanged");
            this.removeHandler(this.hScrollBar, "valueChanged");
            if (this._mousewheelfunc) {
                this.removeHandler(this.host, "mousewheel", this._mousewheelfunc)
            } else {
                this.removeHandler(this.host, "mousewheel")
            }
            this.removeHandler(this.host, "keydown");
            this.removeHandler(this.content, "mouseleave");
            this.removeHandler(this.content, "focus");
            this.removeHandler(this.content, "blur");
            this.removeHandler(this.host, "focus");
            this.removeHandler(this.host, "blur");
            this.removeHandler(this.content, "mouseenter");
            this.removeHandler(this.content, "mouseup");
            this.removeHandler(this.content, "mousedown");
            this.removeHandler(this.content, "touchend");
            if (this._mousemovefunc) {
                this.removeHandler(this.content, "mousemove", this._mousemovefunc)
            } else {
                this.removeHandler(this.content, "mousemove")
            }
            this.removeHandler(this.content, "selectstart");
            if (this.overlayContent) {
                this.removeHandler(this.overlayContent, a.jqx.mobile.getTouchEventName("touchend"))
            }
        },
        _updateSize: function() {
            if (!this.virtualSize) {
                this._oldheight = null;
                this.virtualSize = this._calculateVirtualSize()
            }
            var b = this;
            b._arrange();
            if (b.host.height() != b._oldheight || b.host.width() != b._oldwidth) {
                var c = b.host.width() != b._oldwidth;
                if (b.autoItemsHeight) {
                    b._render(false)
                } else {
                    if (b.items) {
                        if (b.items.length > 0 && b.virtualItemsCount * b.items[0].height < b._oldheight - 2) {
                            b._render(false)
                        } else {
                            var d = b.vScrollInstance.value;
                            b._updatescrollbars();
                            b._renderItems();
                            if (d < b.vScrollInstance.max) {
                                b.vScrollInstance.setPosition(d)
                            } else {
                                b.vScrollInstance.setPosition(b.vScrollInstance.max)
                            }
                        }
                    }
                }
                b._oldwidth = b.host.width();
                b._oldheight = b.host.height()
            }
        },
        _addHandlers: function() {
            var l = this;
            this.focused = false;
            var m = false;
            var j = 0;
            var g = null;
            var j = 0;
            var b = 0;
            var h = new Date();
            var e = this.isTouchDevice();
            this.addHandler(this.vScrollBar, "valueChanged",
            function(n) {
                if (a.jqx.browser.msie && a.jqx.browser.version > 9) {
                    setTimeout(function() {
                        l._renderItems()
                    },
                    1)
                } else {
                    l._renderItems()
                }
            });
            this.addHandler(this.hScrollBar, "valueChanged",
            function() {
                l._renderItems()
            });
            if (this._mousewheelfunc) {
                this.removeHandler(this.host, "mousewheel", this._mousewheelfunc)
            }
            this._mousewheelfunc = function(n) {
                l.wheel(n, l)
            };
            this.addHandler(this.host, "mousewheel", this._mousewheelfunc);
            this.addHandler(a(document), "keydown.listbox" + this.element.id,
            function(n) {
                l._ctrlKey = n.ctrlKey || n.metaKey;
                l._shiftKey = n.shiftKey
            });
            this.addHandler(a(document), "keyup.listbox" + this.element.id,
            function(n) {
                l._ctrlKey = n.ctrlKey || n.metaKey;
                l._shiftKey = n.shiftKey
            });
            this.addHandler(this.host, "keydown",
            function(n) {
                return l._handleKeyDown(n)
            });
            this.addHandler(this.content, "mouseleave",
            function(n) {
                l.focused = false;
                var o = a.data(l.element, "hoveredItem");
                if (o != null) {
                    a(o).removeClass(l.toThemeProperty("jqx-listitem-state-hover"));
                    a(o).removeClass(l.toThemeProperty("jqx-fill-state-hover"));
                    a.data(l.element, "hoveredItem", null)
                }
            });
            this.addHandler(this.content, "focus",
            function(n) {
                if (!l.disabled) {
                    l.host.addClass(l.toThemeProperty("jqx-fill-state-focus"));
                    l.focused = true
                }
            });
            this.addHandler(this.content, "blur",
            function(n) {
                l.focused = false;
                l.host.removeClass(l.toThemeProperty("jqx-fill-state-focus"))
            });
            this.addHandler(this.host, "focus",
            function(n) {
                if (!l.disabled) {
                    l.host.addClass(l.toThemeProperty("jqx-fill-state-focus"));
                    l.focused = true
                }
            });
            this.addHandler(this.host, "blur",
            function(n) {
                if (a.jqx.browser.msie && a.jqx.browser.version < 9 && l.focused) {
                    return
                }
                l.host.removeClass(l.toThemeProperty("jqx-fill-state-focus"));
                l.focused = false
            });
            this.addHandler(this.content, "mouseenter",
            function(n) {
                l.focused = true
            });
            var c = a.jqx.utilities.hasTransform(this.host);
            if (this.enableSelection) {
                var f = l.isTouchDevice() && this.touchMode !== true;
                var i = !f ? "mousedown": "touchend";
                var k = !f ? "mouseup": "touchend";
                if (this.overlayContent) {
                    this.addHandler(this.overlayContent, a.jqx.mobile.getTouchEventName("touchend"),
                    function(p) {
                        if (!l.enableSelection) {
                            return true
                        }
                        if (f) {
                            l._newScroll = new Date();
                            if (l._newScroll - l._lastScroll < 500) {
                                return true
                            }
                        }
                        var s = a.jqx.mobile.getTouches(p);
                        var t = s[0];
                        if (t != undefined) {
                            var n = l.host.offset();
                            var r = parseInt(t.pageX);
                            var q = parseInt(t.pageY);
                            if (l.touchMode == true) {
                                if (t._pageX != undefined) {
                                    r = parseInt(t._pageX);
                                    q = parseInt(t._pageY)
                                }
                            }
                            r = r - n.left;
                            q = q - n.top;
                            var o = l._hitTest(r, q);
                            if (o != null && !o.isGroup) {
                                l._newScroll = new Date();
                                if (l._newScroll - l._lastScroll < 500) {
                                    return false
                                }
                                if (l.checkboxes) {
                                    l._updateItemCheck(o, o.visibleIndex);
                                    return
                                }
                                if (o.html.indexOf("href") != -1) {
                                    setTimeout(function() {
                                        l.selectIndex(o.visibleIndex, false, true, false, "mouse", p);
                                        l.content.trigger("click");
                                        return false
                                    },
                                    100)
                                } else {
                                    l.selectIndex(o.visibleIndex, false, true, false, "mouse", p);
                                    if (p.preventDefault) {
                                        p.preventDefault()
                                    }
                                    l.content.trigger("click");
                                    return false
                                }
                            }
                        }
                    })
                } else {
                    var d = false;
                    this.addHandler(this.content, i,
                    function(n) {
                        if (!l.enableSelection) {
                            return true
                        }
                        d = true;
                        if (f) {
                            l._newScroll = new Date();
                            if (l._newScroll - l._lastScroll < 500) {
                                return false
                            }
                        }
                        l.focused = true;
                        if (!l.isTouchDevice() && l.focusable) {
                            l.host.focus()
                        }
                        if (n.target.id != ("listBoxContent" + l.element.id) && l.itemswrapper[0] != n.target) {
                            var r = n.target;
                            var z = a(r).offset();
                            var q = l.host.offset();
                            if (c) {
                                var o = a.jqx.mobile.getLeftPos(r);
                                var t = a.jqx.mobile.getTopPos(r);
                                z.left = o;
                                z.top = t;
                                o = a.jqx.mobile.getLeftPos(l.element);
                                t = a.jqx.mobile.getTopPos(l.element);
                                q.left = o;
                                q.top = t
                            }
                            var s = parseInt(z.top) - parseInt(q.top);
                            var v = parseInt(z.left) - parseInt(q.left);
                            var w = l._hitTest(v, s);
                            if (w != null && !w.isGroup) {
                                var p = function(y, x) {
                                    if (!l._shiftKey) {
                                        l._clickedIndex = y.visibleIndex
                                    }
                                    if (!l.checkboxes) {
                                        l.selectIndex(y.visibleIndex, false, true, false, "mouse", x)
                                    } else {
                                        l.selectedIndex = y.visibleIndex;
                                        v = 20 + x.pageX - z.left;
                                        if (l.rtl) {
                                            var A = l.hScrollBar.css("visibility") != "hidden" ? l.hScrollInstance.max: l.host.width();
                                            if (v <= l.host.width() - 20) {
                                                if (!l.allowDrag) {
                                                    l._updateItemCheck(y, y.visibleIndex)
                                                } else {
                                                    setTimeout(function() {
                                                        if (!l._dragItem) {
                                                            if (!d) {
                                                                l._updateItemCheck(y, y.visibleIndex)
                                                            }
                                                        }
                                                    },
                                                    200)
                                                }
                                            }
                                        } else {
                                            if (v + l.hScrollInstance.value >= 20) {
                                                if (!l.allowDrag) {
                                                    l._updateItemCheck(y, y.visibleIndex)
                                                } else {
                                                    setTimeout(function() {
                                                        if (!l._dragItem) {
                                                            if (!d) {
                                                                l._updateItemCheck(y, y.visibleIndex)
                                                            }
                                                        }
                                                    },
                                                    200)
                                                }
                                            }
                                        }
                                    }
                                };
                                if (!w.disabled) {
                                    if (w.html.indexOf("href") != -1) {
                                        setTimeout(function() {
                                            p(w, n)
                                        },
                                        100)
                                    } else {
                                        p(w, n)
                                    }
                                }
                            }
                            if (i == "mousedown") {
                                var u = false;
                                if (n.which) {
                                    u = (n.which == 3)
                                } else {
                                    if (n.button) {
                                        u = (n.button == 2)
                                    }
                                }
                                if (u) {
                                    return true
                                }
                                return false
                            }
                        }
                        return true
                    })
                }
                this.addHandler(this.content, "mouseup",
                function(n) {
                    l.vScrollInstance.handlemouseup(l, n);
                    d = false
                });
                if (a.jqx.browser.msie) {
                    this.addHandler(this.content, "selectstart",
                    function(n) {
                        return false
                    })
                }
            }
            var e = this.isTouchDevice();
            if (this.enableHover && !e) {
                this._mousemovefunc = function(n) {
                    if (e) {
                        return true
                    }
                    if (!l.enableHover) {
                        return true
                    }
                    var p = a.jqx.browser.msie == true && a.jqx.browser.version < 9 ? 0 : 1;
                    if (n.target == null) {
                        return true
                    }
                    if (l.disabled) {
                        return true
                    }
                    l.focused = true;
                    var r = l.vScrollInstance.isScrolling();
                    if (!r && n.target.id != ("listBoxContent" + l.element.id)) {
                        if (l.itemswrapper[0] != n.target) {
                            var t = n.target;
                            var B = a(t).offset();
                            var s = l.host.offset();
                            if (c) {
                                var o = a.jqx.mobile.getLeftPos(t);
                                var v = a.jqx.mobile.getTopPos(t);
                                B.left = o;
                                B.top = v;
                                o = a.jqx.mobile.getLeftPos(l.element);
                                v = a.jqx.mobile.getTopPos(l.element);
                                s.left = o;
                                s.top = v
                            }
                            var u = parseInt(B.top) - parseInt(s.top);
                            var w = parseInt(B.left) - parseInt(s.left);
                            var A = l._hitTest(w, u);
                            if (A != null && !A.isGroup && !A.disabled) {
                                var q = a.data(l.element, "hoveredItem");
                                if (q != null) {
                                    a(q).removeClass(l.toThemeProperty("jqx-listitem-state-hover"));
                                    a(q).removeClass(l.toThemeProperty("jqx-fill-state-hover"))
                                }
                                a.data(l.element, "hoveredItem", A.element);
                                var z = a(A.element);
                                z.addClass(l.toThemeProperty("jqx-listitem-state-hover"));
                                z.addClass(l.toThemeProperty("jqx-fill-state-hover"))
                            }
                        }
                    }
                };
                this.addHandler(this.content, "mousemove", this._mousemovefunc)
            }
        },
        _arrange: function(u) {
            if (u == undefined) {
                u = true
            }
            var t = this;
            var p = null;
            var n = null;
            var g = t.filterable ? t.filterHeight: 0;
            var j = function(h) {
                h = t.host.height();
                if (h == 0) {
                    h = 200;
                    t.host.height(h)
                }
                return h
            };
            if (t.width != null && t.width.toString().indexOf("px") != -1) {
                p = t.width
            } else {
                if (t.width != undefined && !isNaN(t.width)) {
                    p = t.width
                }
            }
            if (t.height != null && t.height.toString().indexOf("px") != -1) {
                n = t.height
            } else {
                if (t.height != undefined && !isNaN(t.height)) {
                    n = t.height
                }
            }
            if (t.width != null && t.width.toString().indexOf("%") != -1) {
                t.host.css("width", t.width);
                p = t.host.width()
            }
            if (t.height != null && t.height.toString().indexOf("%") != -1) {
                t.host.css("height", t.height);
                n = j(n)
            }
            if (p != null) {
                p = parseInt(p);
                if (parseInt(t.element.style.width) != parseInt(t.width)) {
                    t.host.width(t.width)
                }
            }
            if (!t.autoHeight) {
                if (n != null) {
                    n = parseInt(n);
                    if (parseInt(t.element.style.height) != parseInt(t.height)) {
                        t.host.height(t.height);
                        j(n)
                    }
                }
            } else {
                if (t.virtualSize) {
                    if (t.hScrollBar.css("visibility") != "hidden") {
                        t.host.height(t.virtualSize.height + parseInt(t.scrollBarSize) + 3);
                        t.height = t.virtualSize.height + parseInt(t.scrollBarSize) + 3;
                        n = t.height
                    } else {
                        t.host.height(t.virtualSize.height);
                        t.height = t.virtualSize.height;
                        n = t.virtualSize.height
                    }
                }
            }
            var c = t.scrollBarSize;
            if (isNaN(c)) {
                c = parseInt(c);
                if (isNaN(c)) {
                    c = "17px"
                } else {
                    c = c + "px"
                }
            }
            c = parseInt(c);
            var m = 4;
            var e = 2;
            var f = 0;
            if (t.vScrollBar) {
                if (t.vScrollBar[0].style.visibility != "hidden") {
                    f = c + m
                } else {
                    t.vScrollInstance.setPosition(0)
                }
            } else {
                return
            }
            if (t.hScrollBar) {
                if (t.hScrollBar[0].style.visibility != "hidden") {
                    e = c + m
                } else {
                    t.hScrollInstance.setPosition(0)
                }
            } else {
                return
            }
            if (t.autoItemsHeight) {
                t.hScrollBar[0].style.visibility = "hidden";
                e = 0
            }
            if (n == null) {
                n = 0
            }
            var q = parseInt(n) - m - c;
            if (q < 0) {
                q = 0
            }
            if (parseInt(t.hScrollBar[0].style.height) != c) {
                if (parseInt(c) < 0) {
                    c = 0
                }
                t.hScrollBar[0].style.height = parseInt(c) + "px"
            }
            if (t.hScrollBar[0].style.top != q + "px") {
                t.hScrollBar[0].style.top = q + "px";
                t.hScrollBar[0].style.left = "0px"
            }
            var b = p - c - m;
            if (b < 0) {
                b = 0
            }
            var l = b + "px";
            if (t.hScrollBar[0].style.width != l) {
                t.hScrollBar[0].style.width = l
            }
            if (f == 0) {
                if (p >= 2) {
                    t.hScrollBar[0].style.width = parseInt(p - 2) + "px"
                }
            }
            if (c != parseInt(t.vScrollBar[0].style.width)) {
                t.vScrollBar[0].style.width = parseInt(c) + "px"
            }
            if ((parseInt(n) - e) != parseInt(t.vScrollBar[0].style.height)) {
                var s = parseInt(n) - e;
                if (s < 0) {
                    s = 0
                }
                t.vScrollBar[0].style.height = s + "px"
            }
            if (p == null) {
                p = 0
            }
            var d = parseInt(p) - parseInt(c) - m + "px";
            if (d != t.vScrollBar[0].style.left) {
                if (parseInt(d) >= 0) {
                    t.vScrollBar[0].style.left = d
                }
                t.vScrollBar[0].style.top = "0px"
            }
            var k = t.vScrollInstance;
            k.disabled = t.disabled;
            if (u) {
                k._arrange()
            }
            var o = t.hScrollInstance;
            o.disabled = t.disabled;
            if (u) {
                o._arrange()
            }
            if ((t.vScrollBar[0].style.visibility != "hidden") && (t.hScrollBar[0].style.visibility != "hidden")) {
                t.bottomRight[0].style.visibility = "inherit";
                t.bottomRight[0].style.left = 1 + parseInt(t.vScrollBar[0].style.left) + "px";
                t.bottomRight[0].style.top = 1 + parseInt(t.hScrollBar[0].style.top) + "px";
                if (t.rtl) {
                    t.bottomRight.css({
                        left: 0
                    })
                }
                t.bottomRight[0].style.width = parseInt(c) + 3 + "px";
                t.bottomRight[0].style.height = parseInt(c) + 3 + "px"
            } else {
                t.bottomRight[0].style.visibility = "hidden"
            }
            if (parseInt(t.content[0].style.width) != (parseInt(p) - f)) {
                var i = parseInt(p) - f;
                if (i < 0) {
                    i = 0
                }
                t.content[0].style.width = i + "px"
            }
            if (t.rtl) {
                t.vScrollBar.css({
                    left: 0 + "px",
                    top: "0px"
                });
                t.hScrollBar.css({
                    left: t.vScrollBar.width() + 2 + "px"
                });
                if (t.vScrollBar[0].style.visibility != "hidden") {
                    t.content.css("margin-left", 4 + t.vScrollBar.width())
                } else {
                    t.content.css("margin-left", 0);
                    t.hScrollBar.css({
                        left: "0px"
                    })
                }
            }
            if (parseInt(t.content[0].style.height) != (parseInt(n) - e)) {
                var r = parseInt(n) - e;
                if (r < 0) {
                    r = 0
                }
                t.content[0].style.height = r + "px";
                t.content[0].style.top = "0px"
            }
            if (g > 0) {
                t.content[0].style.top = g + "px";
                t.content[0].style.height = parseInt(t.content[0].style.height) - g + "px"
            }
            if (t.filterable) {
                t.filterInput[0].style.height = (g - 6) + "px";
                t.filterInput[0].style.top = "3px";
                t.filterInput[0].style.left = parseInt(t.content.css("left")) + 3 + "px";
                t.filterInput[0].style.width = parseInt(t.content.css("width")) - 7 + "px";
                t.filter[0].style.display = "block"
            } else {
                t.filter[0].style.display = "none"
            }
            if (t.overlayContent) {
                t.overlayContent.width(parseInt(p) - f);
                t.overlayContent.height(parseInt(n) - e)
            }
        },
        ensureVisible: function(h, i) {
            if (isNaN(h)) {
                var l = this.getItemByValue(h);
                if (l) {
                    h = l.index
                }
            }
            var f = this.isIndexInView(h);
            if (!f) {
                if (h < 0) {
                    return
                }
                if (this.autoHeight) {
                    var g = a.data(this.vScrollBar[0], "jqxScrollBar").instance;
                    g.setPosition(0)
                } else {
                    for (indx = 0; indx < this.visibleItems.length; indx++) {
                        var l = this.visibleItems[indx];
                        if (l.visibleIndex == h && !l.isGroup) {
                            var g = a.data(this.vScrollBar[0], "jqxScrollBar").instance;
                            var k = g.value;
                            var b = !this.filterable ? 0 : this.filterHeight + 2;
                            var e = this.hScrollBar.css("visibility") === "hidden";
                            var d = e ? 0 : this.scrollBarSize + 4;
                            if (l.initialTop < k) {
                                g.setPosition(l.initialTop);
                                if (indx == 0) {
                                    g.setPosition(0)
                                }
                            } else {
                                if (l.initialTop + l.height > k + this.host.height() - b) {
                                    var c = this.host.height();
                                    if (this.filterable) {
                                        g.setPosition(this.filterHeight + 2 + l.initialTop + l.height + 2 - c + d)
                                    } else {
                                        g.setPosition(l.initialTop + l.height + 2 - c + d);
                                        if (indx === this.visibleItems.length - 1) {
                                            g.setPosition(g.max)
                                        }
                                    }
                                    if (i) {
                                        var k = g.value;
                                        var j = l.initialTop;
                                        if (this.filterable) {
                                            j = this.filterHeight + 2 + l.initialTop
                                        }
                                        if (k + c < g.max) {
                                            g.setPosition(j)
                                        }
                                    }
                                }
                            }
                            break
                        }
                    }
                }
            } else {
                if (i) {
                    for (indx = 0; indx < this.visibleItems.length; indx++) {
                        var l = this.visibleItems[indx];
                        if (l.visibleIndex == h && !l.isGroup) {
                            var k = this.vScrollInstance.value;
                            var j = l.initialTop;
                            if (this.filterable) {
                                j = this.filterHeight + 2 + l.initialTop
                            }
                            if (k + this.host.height() < this.vScrollInstance.max) {
                                this.vScrollInstance.setPosition(j)
                            }
                        }
                    }
                }
            }
            this._renderItems()
        },
        scrollTo: function(c, b) {
            if (this.vScrollBar.css("visibility") != "hidden") {
                this.vScrollInstance.setPosition(b)
            }
            if (this.hScrollBar.css("visibility") != "hidden") {
                this.hScrollInstance.setPosition(c)
            }
        },
        scrollDown: function() {
            if (this.vScrollBar.css("visibility") == "hidden") {
                return false
            }
            var b = this.vScrollInstance;
            if (b.value + b.largestep <= b.max) {
                b.setPosition(b.value + b.largestep);
                return true
            } else {
                b.setPosition(b.max);
                return true
            }
            return false
        },
        scrollUp: function() {
            if (this.vScrollBar.css("visibility") == "hidden") {
                return false
            }
            var b = this.vScrollInstance;
            if (b.value - b.largestep >= b.min) {
                b.setPosition(b.value - b.largestep);
                return true
            } else {
                if (b.value != b.min) {
                    b.setPosition(b.min);
                    return true
                }
            }
            return false
        },
        databind: function(b, d) {
            this.records = new Array();
            var f = b._source ? true: false;
            var c = new a.jqx.dataAdapter(b, {
                autoBind: false
            });
            if (f) {
                c = b;
                b = b._source
            }
            var e = function(k) {
                if (b.type != undefined) {
                    c._options.type = b.type
                }
                if (b.formatdata != undefined) {
                    c._options.formatData = b.formatdata
                }
                if (b.contenttype != undefined) {
                    c._options.contentType = b.contenttype
                }
                if (b.async != undefined) {
                    c._options.async = b.async
                }
            };
            var h = function(q, r) {
                var s = function(w) {
                    var D = null;
                    if (typeof w === "string") {
                        var z = w;
                        var A = w;
                        var C = ""
                    } else {
                        if (q.displayMember != undefined && q.displayMember != "") {
                            var A = w[q.valueMember];
                            var z = w[q.displayMember]
                        }
                    }
                    var C = "";
                    if (q.groupMember) {
                        C = w[q.groupMember]
                    } else {
                        if (w && w.group != undefined) {
                            C = w.group
                        }
                    }
                    if (q.searchMember) {
                        D = w[q.searchMember]
                    } else {
                        if (w && w.searchLabel != undefined) {
                            D = w.searchLabel
                        }
                    }
                    if (!q.valueMember && !q.displayMember) {
                        if (a.type(w) == "string") {
                            z = A = w.toString()
                        }
                    }
                    if (w && w.label != undefined) {
                        var z = w.label
                    }
                    if (w && w.value != undefined) {
                        var A = w.value
                    }
                    var B = false;
                    if (w && w.checked != undefined) {
                        B = w.checked
                    }
                    var v = "";
                    if (w && w.html != undefined) {
                        v = w.html
                    }
                    var t = true;
                    if (w && w.visible != undefined) {
                        t = w.visible
                    }
                    var u = false;
                    if (w && w.disabled != undefined) {
                        u = w.disabled
                    }
                    var y = false;
                    if (w && w.hasThreeStates != undefined) {
                        y = w.hasThreeStates
                    }
                    var x = {};
                    x.label = z;
                    x.value = A;
                    x.searchLabel = D;
                    x.html = v;
                    x.visible = t;
                    x.originalItem = w;
                    x.group = C;
                    x.groupHtml = "";
                    x.disabled = u;
                    x.checked = B;
                    x.hasThreeStates = y;
                    return x
                };
                if (r != undefined) {
                    var k = c._changedrecords[0];
                    if (k) {
                        a.each(c._changedrecords,
                        function() {
                            var t = this.index;
                            var u = this.record;
                            if (r != "remove") {
                                var v = s(u)
                            }
                            switch (r) {
                            case "update":
                                q.updateAt(v, t);
                                break;
                            case "add":
                                q.insertAt(v, t);
                                break;
                            case "remove":
                                q.removeAt(t);
                                break
                            }
                        });
                        return
                    }
                }
                q.records = c.records;
                var m = q.records.length;
                var p = new Array();
                for (var l = 0; l < m; l++) {
                    var n = q.records[l];
                    var o = s(n);
                    o.index = l;
                    p[l] = o
                }
                q.items = q.loadItems(p, true);
                q._render();
                q._raiseEvent("6")
            };
            e(this);
            var i = this;
            switch (b.datatype) {
            case "local":
            case "array":
            default:
                if (b.localdata != null || a.isArray(b)) {
                    c.unbindBindingUpdate(this.element.id);
                    if (this.autoBind || (!this.autoBind && !d)) {
                        c.dataBind()
                    }
                    h(this);
                    c.bindBindingUpdate(this.element.id,
                    function(k) {
                        h(i, k)
                    })
                }
                break;
            case "json":
            case "jsonp":
            case "xml":
            case "xhtml":
            case "script":
            case "text":
            case "csv":
            case "tab":
                if (b.localdata != null) {
                    c.unbindBindingUpdate(this.element.id);
                    if (this.autoBind || (!this.autoBind && !d)) {
                        c.dataBind()
                    }
                    h(this);
                    c.bindBindingUpdate(this.element.id,
                    function() {
                        h(i)
                    });
                    return
                }
                var j = {};
                if (c._options.data) {
                    a.extend(c._options.data, j)
                } else {
                    if (b.data) {
                        a.extend(j, b.data)
                    }
                    c._options.data = j
                }
                var g = function() {
                    h(i)
                };
                c.unbindDownloadComplete(i.element.id);
                c.bindDownloadComplete(i.element.id, g);
                if (this.autoBind || (!this.autoBind && !d)) {
                    c.dataBind()
                }
            }
        },
        loadItems: function(m, o) {
            if (m == null) {
                this.groups = new Array();
                this.items = new Array();
                this.visualItems = new Array();
                return
            }
            var t = this;
            var k = 0;
            var d = 0;
            var b = 0;
            this.groups = new Array();
            this.items = new Array();
            this.visualItems = new Array();
            var e = new Array();
            this.itemsByValue = new Array();
            a.map(m,
            function(x) {
                if (x == undefined) {
                    return null
                }
                var j = new a.jqx._jqxListBox.item();
                var y = x.group;
                var i = x.groupHtml;
                var z = x.title;
                var v = null;
                if (t.searchMember) {
                    v = x[t.searchMember]
                } else {
                    if (x && x.searchLabel != undefined) {
                        v = x.searchLabel
                    }
                }
                if (z == null || z == undefined) {
                    z = ""
                }
                if (y == null || y == undefined) {
                    y = ""
                }
                if (t.groupMember) {
                    y = x[t.groupMember]
                }
                if (i == null || i == undefined) {
                    i = ""
                }
                if (!t.groups[y]) {
                    t.groups[y] = {
                        items: new Array(),
                        index: -1,
                        caption: y,
                        captionHtml: i
                    };
                    k++;
                    var u = k + "jqxGroup";
                    t.groups[u] = t.groups[y];
                    d++;
                    t.groups.length = d
                }
                var w = t.groups[y];
                w.index++;
                w.items[w.index] = j;
                if (typeof x === "string") {
                    j.label = x;
                    j.value = x
                } else {
                    if (x.label == null && x.value == null && x.html == null && x.group == null && x.groupHtml == null) {
                        j.label = x.toString();
                        j.value = x.toString()
                    } else {
                        j.label = x.label;
                        j.value = x.value;
                        if (j.label === undefined) {
                            j.label = x.value
                        }
                        if (j.value === undefined) {
                            j.value = x.label
                        }
                    }
                }
                if (typeof x != "string") {
                    if (x.label === undefined) {
                        if (t.displayMember != "") {
                            if (x[t.displayMember] != undefined) {
                                j.label = x[t.displayMember]
                            } else {
                                j.label = ""
                            }
                        }
                    }
                    if (x.value === undefined) {
                        if (t.valueMember != "") {
                            j.value = x[t.valueMember]
                        }
                    }
                }
                j.hasThreeStates = x.hasThreeStates != undefined ? x.hasThreeStates: true;
                j.originalItem = x;
                if (o) {
                    j.originalItem = x.originalItem
                }
                j.title = z;
                if (z && j.value === undefined && j.label === undefined) {
                    j.value = j.label = z
                }
                j.html = x.html || "";
                if (x.html && x.html != "") {
                    if (z && z != "") {}
                }
                j.group = y;
                j.checked = x.checked || false;
                j.groupHtml = x.groupHtml || "";
                j.disabled = x.disabled || false;
                j.visible = x.visible != undefined ? x.visible: true;
                j.searchLabel = v;
                j.index = b;
                e[b] = j;
                b++;
                return j
            });
            var c = new Array();
            var p = 0;
            if (this.fromSelect == undefined || this.fromSelect == false) {
                for (var h = 0; h < d; h++) {
                    var k = h + 1;
                    var n = k + "jqxGroup";
                    var r = this.groups[n];
                    if (r == undefined || r == null) {
                        break
                    }
                    if (h == 0 && r.caption == "" && r.captionHtml == "" && d <= 1) {
                        for (var g = 0; g < r.items.length; g++) {
                            var q = r.items[g].value;
                            if (r.items[g].value == undefined || r.items[g].value == null) {
                                q = g
                            }
                            this.itemsByValue[a.trim(q).split(" ").join("")] = r.items[g]
                        }
                        return r.items
                    } else {
                        var l = new a.jqx._jqxListBox.item();
                        l.isGroup = true;
                        l.label = r.caption;
                        if (r.caption == "" && r.captionHtml == "") {
                            r.caption = this.emptyGroupText;
                            l.label = r.caption
                        }
                        l.html = r.captionHtml;
                        c[p] = l;
                        p++
                    }
                    for (var f = 0; f < r.items.length; f++) {
                        c[p] = r.items[f];
                        var q = r.items[f].value;
                        if (r.items[f].value == "" || r.items[f].value == null) {
                            q = p
                        }
                        t.itemsByValue[a.trim(q).split(" ").join("")] = r.items[f];
                        p++
                    }
                }
            } else {
                var p = 0;
                var s = new Array();
                a.each(e,
                function() {
                    if (!s[this.group]) {
                        if (this.group != "") {
                            var i = new a.jqx._jqxListBox.item();
                            i.isGroup = true;
                            i.label = this.group;
                            c[p] = i;
                            p++;
                            s[this.group] = true
                        }
                    }
                    c[p] = this;
                    var j = this.value;
                    if (this.value == "" || this.value == null) {
                        j = p - 1
                    }
                    t.itemsByValue[a.trim(j).split(" ").join("")] = this;
                    p++
                })
            }
            return c
        },
        _mapItem: function(c) {
            var b = new a.jqx._jqxListBox.item();
            if (this.displayMember) {
                if (c.label == undefined) {
                    c.label = c[this.displayMember]
                }
                if (c.value == undefined) {
                    c.value = c[this.valueMember]
                }
            }
            if (typeof c === "string") {
                b.label = c;
                b.value = c
            } else {
                if (typeof c === "number") {
                    b.label = c.toString();
                    b.value = c.toString()
                } else {
                    b.label = c.label !== undefined ? c.label: c.value;
                    b.value = c.value !== undefined ? c.value: c.label
                }
            }
            if (b.label == undefined && b.value == undefined && b.html == undefined) {
                b.label = b.value = c
            }
            b.html = c.html || "";
            b.group = c.group || "";
            b.checked = c.checked || false;
            b.title = c.title || "";
            b.groupHtml = c.groupHtml || "";
            b.disabled = c.disabled || false;
            b.visible = c.visible || true;
            return b
        },
        addItem: function(b) {
            return this.insertAt(b, this.items ? this.items.length: 0)
        },
        _getItemByParam: function(c) {
            if (c != null) {
                if (c.index == undefined) {
                    var b = this.getItemByValue(c);
                    if (b) {
                        c = b
                    }
                }
            }
            return c
        },
        insertItem: function(d, b) {
            var c = this._getItemByParam(d);
            return this.insertAt(c, b)
        },
        updateItem: function(c, d) {
            var b = this._getItemByParam(d);
            if (b && b.index != undefined) {
                return this.updateAt(c, b.index)
            }
            return false
        },
        updateAt: function(d, c) {
            if (d != null) {
                var b = this._mapItem(d);
                this.itemsByValue[a.trim(b.value).split(" ").join("")] = this.items[c];
                this.items[c].value = b.value;
                this.items[c].label = b.label;
                this.items[c].html = b.html;
                this.items[c].disabled = b.disabled
            }
            this._cachedItemHtml = [];
            this._renderItems();
            if (this.rendered) {
                this.rendered()
            }
        },
        insertAt: function(l, f) {
            if (l == null) {
                return false
            }
            this._cachedItemHtml = [];
            if (this.items == undefined || this.items.length == 0) {
                this.source = new Array();
                this.refresh();
                var g = this._mapItem(l);
                g.index = 0;
                this.items[this.items.length] = g;
                this._addItems(true);
                this._renderItems();
                if (this.rendered) {
                    this.rendered()
                }
                if (this.allowDrag && this._enableDragDrop) {
                    this._enableDragDrop()
                }
                var k = g.value;
                if (g.value == "" || g.value == null) {
                    k = f
                }
                this.itemsByValue[a.trim(k).split(" ").join("")] = g;
                return false
            }
            var g = this._mapItem(l);
            if (f == -1 || f == undefined || f == null || f >= this.items.length) {
                g.index = this.items.length;
                this.items[this.items.length] = g
            } else {
                var c = new Array();
                var j = 0;
                var e = false;
                var h = 0;
                for (var b = 0; b < this.items.length; b++) {
                    if (this.items[b].isGroup == false) {
                        if (h >= f && !e) {
                            c[j++] = g;
                            g.index = f;
                            h++;
                            e = true
                        }
                    }
                    c[j] = this.items[b];
                    if (!this.items[b].isGroup) {
                        c[j].index = h;
                        h++
                    }
                    j++
                }
                this.items = c
            }
            var k = g.value;
            if (g.value == "" || g.value == null) {
                k = f
            }
            this.itemsByValue[a.trim(k).split(" ").join("")] = g;
            this.visibleItems = new Array();
            this.renderedVisibleItems = new Array();
            var d = a.data(this.vScrollBar[0], "jqxScrollBar").instance;
            var i = d.value;
            d.setPosition(0);
            if ((this.allowDrag && this._enableDragDrop) || (this.virtualSize && this.virtualSize.height < 10 + this.host.height())) {
                this._addItems(true)
            } else {
                this._addItems(false)
            }
            if (this.groups.length > 1) {}
            this._renderItems();
            if (this.allowDrag && this._enableDragDrop) {
                this._enableDragDrop()
            }
            d.setPosition(i);
            if (this.rendered) {
                this.rendered()
            }
            return true
        },
        removeAt: function(j) {
            if (j < 0 || j > this.items.length - 1) {
                return false
            }
            if (j == undefined) {
                return false
            }
            var d = this.items[j].height;
            var n = this.items[j].value;
            if (n == "" || n == null) {
                n = j
            }
            this.itemsByValue[a.trim(n).split(" ").join("")] = null;
            if (this.groups.length > 1) {
                var h = new Array();
                for (var b = 0; b < this.items.length; b++) {
                    if (!this.items[b].isGroup) {
                        h.push({
                            item: this.items[b],
                            key: b
                        })
                    }
                }
                if (h[j]) {
                    this.items.splice(h[j].key, 1)
                } else {
                    return false
                }
            } else {
                this.items.splice(j, 1)
            }
            var c = new Array();
            var m = 0;
            var f = false;
            var k = 0;
            for (var b = 0; b < this.items.length; b++) {
                c[m] = this.items[b];
                if (!this.items[b].isGroup) {
                    c[m].index = k;
                    k++
                }
                m++
            }
            this.items = c;
            var e = a.data(this.vScrollBar[0], "jqxScrollBar").instance;
            var e = a.data(this.vScrollBar[0], "jqxScrollBar").instance;
            var l = e.value;
            e.setPosition(0);
            this.visibleItems = new Array();
            this.renderedVisibleItems = new Array();
            if (this.items.length > 0) {
                if (this.virtualSize) {
                    this.virtualSize.height -= d;
                    var o = this.virtualSize.itemsPerPage * 2;
                    if (this.autoHeight) {
                        o = this.items.length
                    }
                    this.virtualItemsCount = Math.min(o, this.items.length)
                }
                this._updatescrollbars()
            } else {
                this._addItems()
            }
            this._renderItems();
            if (this.allowDrag && this._enableDragDrop) {
                this._enableDragDrop()
            }
            if (this.vScrollBar.css("visibility") != "hidden") {
                e.setPosition(l)
            } else {
                e.setPosition(0)
            }
            this.itemsByValue = new Array();
            for (var g = 0; g < this.items.length; g++) {
                var n = this.items[g].value;
                if (this.items[g].value == "" || this.items[g].value == null) {
                    n = g
                }
                this.itemsByValue[a.trim(n).split(" ").join("")] = this.items[g]
            }
            if (this.rendered) {
                this.rendered()
            }
            return true
        },
        removeItem: function(e, f) {
            var d = this._getItemByParam(e);
            var b = -1;
            if (d && d.index != undefined && f !== true) {
                for (var c = 0; c < this.items.length; c++) {
                    if (this.items[c].label == d.label && this.items[c].value == d.value) {
                        b = c;
                        break
                    }
                }
                if (b != -1) {
                    return this.removeAt(b)
                }
            }
            if (b == -1) {
                return this.removeAt(d.index)
            }
        },
        getItems: function() {
            return this.items
        },
        disableItem: function(c) {
            var b = this._getItemByParam(c);
            this.disableAt(b.index)
        },
        enableItem: function(c) {
            var b = this._getItemByParam(c);
            this.enableAt(b.index)
        },
        disableAt: function(b) {
            if (!this.items) {
                return false
            }
            if (b < 0 || b > this.items.length - 1) {
                return false
            }
            this.items[b].disabled = true;
            this._renderItems();
            return true
        },
        enableAt: function(b) {
            if (!this.items) {
                return false
            }
            if (b < 0 || b > this.items.length - 1) {
                return false
            }
            this.items[b].disabled = false;
            this._renderItems();
            return true
        },
        destroy: function() {
            if (this.source && this.source.unbindBindingUpdate) {
                this.source.unbindBindingUpdate(this.element.id)
            }
            this._removeHandlers();
            this.vScrollBar.jqxScrollBar("destroy");
            this.hScrollBar.jqxScrollBar("destroy");
            this.vScrollBar.remove();
            this.hScrollBar.remove();
            this.content.remove();
            a.jqx.utilities.resize(this.host, null, true);
            var b = a.data(this.element, "jqxListBox");
            delete this.hScrollInstance;
            delete this.vScrollInstance;
            delete this.vScrollBar;
            delete this.hScrollBar;
            delete this.content;
            delete this.bottomRight;
            delete this.itemswrapper;
            delete this.visualItems;
            delete this.visibleItems;
            delete this.items;
            delete this.groups;
            delete this.renderedVisibleItems;
            delete this._mousewheelfunc;
            delete this._mousemovefunc;
            delete this._cachedItemHtml;
            delete this.itemsByValue;
            delete this._activeElement;
            delete this.source;
            delete this.events;
            if (this.input) {
                this.input.remove();
                delete this.input
            }
            if (b) {
                delete b.instance
            }
            this.host.removeData();
            this.host.removeClass();
            this.host.remove();
            this.element = null;
            delete this.element;
            this.host = null;
            delete this.set;
            delete this.get;
            delete this.call;
            delete this.host
        },
        _raiseEvent: function(f, c) {
            if (this._stopEvents == true) {
                return true
            }
            if (c == undefined) {
                c = {
                    owner: null
                }
            }
            var d = this.events[f];
            args = c;
            args.owner = this;
            this._updateInputSelection();
            var e = new a.Event(d);
            e.owner = this;
            e.args = args;
            if (this.host != null) {
                var b = this.host.trigger(e)
            }
            return b
        }
    })
})(jqxBaseFramework); (function(a) {
    a.jqx.parseSourceTag = function(m) {
        var l = new Array();
        var o = a(m).find("option");
        var b = a(m).find("optgroup");
        var k = false;
        if (o.length === 0) {
            o = a(m).find("li");
            if (o.length > 0) {
                k = true
            }
        }
        var d = null;
        var j = 0;
        var d = -1;
        var h = this;
        var c = new Array();
        a.each(o,
        function(p) {
            var q = b.find(this).length > 0;
            var s = null;
            if (this.text != null && (this.label == null || this.label == "")) {
                this.label = this.text
            }
            if (k === true) {
                this.label = a(this).text();
                this.selected = a(this).attr("data-selected");
                this.checked = this.selected;
                this.value = a(this).attr("data-value") || p;
                this.disabled = a(this).attr("disabled")
            }
            var r = {
                style: this.style.cssText,
                selected: this.selected,
                html: this.innerHTML,
                classes: this.className,
                disabled: this.disabled,
                value: this.value,
                label: this.label,
                title: this.title,
                originalItem: this
            };
            var i = a.jqx.browser.msie && a.jqx.browser.version < 8;
            if (i && !k) {
                if (r.value == "" && this.text != null && this.text.length > 0) {
                    r.value = this.text
                }
            }
            if (q) {
                s = b.find(this).parent()[0].label;
                r.group = s;
                if (!c[s]) {
                    c[s] = new Array();
                    c.length++
                }
                c[s].push(r)
            }
            if (this.selected) {
                d = p
            }
            r.checked = this.selected;
            if (r.label !== undefined) {
                l.push(r)
            }
        });
        if (c.length > 0) {
            var n = new Array();
            for (var f in c) {
                if (f === "indexOf") {
                    continue
                }
                var g = null;
                for (var e = 0; e < b.length; e++) {
                    if (f === b[e].label || b[e].text) {
                        g = b[e];
                        break
                    }
                }
                a.each(c[f],
                function(i, p) {
                    if (this.label !== undefined) {
                        n.push(this)
                    }
                })
            }
        }
        if (n && n.length > 0) {
            return {
                items: n,
                index: d
            }
        } else {
            return {
                items: l,
                index: d
            }
        }
    };
    a.jqx._jqxListBox.item = function() {
        var b = {
            group: "",
            groupHtml: "",
            selected: false,
            isGroup: false,
            highlighted: false,
            value: null,
            label: "",
            html: null,
            visible: true,
            disabled: false,
            element: null,
            width: null,
            height: null,
            initialTop: null,
            top: null,
            left: null,
            title: "",
            index: -1,
            checkBoxElement: null,
            originalItem: null,
            checked: false,
            visibleIndex: -1
        };
        return b
    }
})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxDropDownList","",{});a.extend(a.jqx._jqxDropDownList.prototype,{defineInstance:function(){var b={disabled:false,width:null,height:null,items:new Array(),selectedIndex:-1,source:null,scrollBarSize:15,arrowSize:19,enableHover:true,enableSelection:true,visualItems:new Array(),groups:new Array(),equalItemsWidth:true,itemHeight:-1,visibleItems:new Array(),emptyGroupText:"Group",checkboxes:false,openDelay:250,closeDelay:300,animationType:"default",autoOpen:false,dropDownWidth:"auto",dropDownHeight:"200px",autoDropDownHeight:false,keyboardSelection:true,enableBrowserBoundsDetection:false,dropDownHorizontalAlignment:"left",displayMember:"",valueMember:"",groupMember:"",searchMember:"",searchMode:"startswithignorecase",incrementalSearch:true,incrementalSearchDelay:700,renderer:null,placeHolder:"Please Choose:",promptText:"Please Choose:",emptyString:"",rtl:false,selectionRenderer:null,listBox:null,popupZIndex:9999999999999,renderMode:"default",touchMode:"auto",_checkForHiddenParent:true,autoBind:true,focusable:true,filterable:false,filterHeight:27,filterPlaceHolder:"Looking for",filterDelay:100,aria:{"aria-disabled":{name:"disabled",type:"boolean"}},events:["open","close","select","unselect","change","checkChange","bindingComplete"]};a.extend(true,this,b);return b},createInstance:function(b){this.render()},render:function(){var q=this;if(!q.width){q.width=200}if(!q.height){q.height=25}var o=q.element.nodeName.toLowerCase();if(o=="select"||o=="ul"||o=="ol"){q.field=q.element;if(q.field.className){q._className=q.field.className}var k={title:q.field.title};if(q.field.id.length){k.id=q.field.id.replace(/[^\w]/g,"_")+"_jqxDropDownList"}else{k.id=a.jqx.utilities.createId()+"_jqxDropDownList"}var c=a("<div></div>",k);if(!q.width){q.width=a(q.field).width()}if(!q.height){q.height=a(q.field).outerHeight()}a(q.field).hide().after(c);var i=q.host.data();q.host=c;q.host.data(i);q.element=c[0];q.element.id=q.field.id;q.field.id=k.id;if(q._className){q.host.addClass(q._className);a(q.field).removeClass(q._className)}if(q.field.tabIndex){var f=q.field.tabIndex;q.field.tabIndex=-1;q.element.tabIndex=f}var r=a.jqx.parseSourceTag(q.field);q.source=r.items;if(q.selectedIndex==-1){q.selectedIndex=r.index}}q.element.innerHTML="";q.isanimating=false;q.id=q.element.id||a.jqx.utilities.createId();q.host.attr("role","combobox");a.jqx.aria(q,"aria-autocomplete","both");a.jqx.aria(q,"aria-readonly",false);var g="<div style='background-color: transparent; -webkit-appearance: none; outline: none; width:100%; height: 100%; padding: 0px; margin: 0px; border: 0px; position: relative;'><div id='dropdownlistWrapper' style='overflow: hidden; outline: none; background-color: transparent; border: none; float: left; width:100%; height: 100%; position: relative;'><div id='dropdownlistContent' unselectable='on' style='outline: none; background-color: transparent; border: none; float: left; position: relative;'></div><div id='dropdownlistArrow' unselectable='on' style='background-color: transparent; border: none; float: right; position: relative;'><div unselectable='on'></div></div></div></div>";if(a.jqx._jqxListBox==null||a.jqx._jqxListBox==undefined){throw new Error("jqxDropDownList: Missing reference to jqxlistbox.js.")}if(q.host.attr("tabindex")){q.host.attr("tabindex",q.host.attr("tabindex"));q.host.removeAttr("tabindex")}else{q.host.attr("tabindex",0)}var l=q;q.touch=a.jqx.mobile.isTouchDevice();q.comboStructure=g;q.element.innerHTML=g;q.dropdownlistWrapper=a(q.element.firstChild.firstChild);q.dropdownlistArrow=a(q.dropdownlistWrapper[0].firstChild.nextSibling);q.arrow=a(q.dropdownlistArrow[0].firstChild);q.dropdownlistContent=a(q.dropdownlistWrapper[0].firstChild);q.dropdownlistContent.addClass(q.toThemeProperty("jqx-dropdownlist-content jqx-disableselect"));if(q.rtl){q.dropdownlistContent.addClass(q.toThemeProperty("jqx-rtl jqx-dropdownlist-content-rtl"))}q.addHandler(q.dropdownlistWrapper,"selectstart",function(){return false});q.dropdownlistWrapper[0].id="dropdownlistWrapper"+q.element.id;q.dropdownlistArrow[0].id="dropdownlistArrow"+q.element.id;q.dropdownlistContent[0].id="dropdownlistContent"+q.element.id;q._addInput();if(q.promptText!="Please Choose:"){q.placeHolder=q.promptText}var n=q.toThemeProperty("jqx-widget")+" "+q.toThemeProperty("jqx-dropdownlist-state-normal")+" "+q.toThemeProperty("jqx-rc-all")+" "+q.toThemeProperty("jqx-fill-state-normal");q.element.className+=" "+n;q._firstDiv=a(q.element.firstChild);try{var p="listBox"+q.id;var h=a(a.find("#"+p));if(h.length>0){h.remove()}a.jqx.aria(q,"aria-owns",p);a.jqx.aria(q,"aria-haspopup",true);var b=a("<div style='overflow: hidden; background-color: transparent; border: none; position: absolute;' id='listBox"+q.id+"'><div id='innerListBox"+q.id+"'></div></div>");b.hide();b.appendTo(document.body);q.container=b;q.listBoxContainer=a(a.find("#innerListBox"+q.id));var d=q.width;if(q.dropDownWidth!="auto"){d=q.dropDownWidth}if(d==null){d=q.host.width();if(d==0){d=q.dropDownWidth}}if(q.dropDownHeight==null){q.dropDownHeight=200}var l=q;q.container.width(parseInt(d)+25);q.container.height(parseInt(q.dropDownHeight)+25);q.addHandler(q.listBoxContainer,"bindingComplete",function(e){if(!q.listBox){q.listBox=a.data(q.listBoxContainer[0],"jqxListBox").instance}q._raiseEvent("6")});q.listBoxContainer.jqxListBox({filterHeight:q.filterHeight,filterPlaceHolder:q.filterPlaceHolder,filterDelay:q.filterDelay,filterable:q.filterable,allowDrop:false,allowDrag:false,autoBind:q.autoBind,_checkForHiddenParent:false,focusable:q.focusable,touchMode:q.touchMode,checkboxes:q.checkboxes,rtl:q.rtl,emptyString:q.emptyString,itemHeight:q.itemHeight,width:d,searchMode:q.searchMode,incrementalSearch:q.incrementalSearch,incrementalSearchDelay:q.incrementalSearchDelay,groupMember:q.groupMember,searchMember:q.searchMember,displayMember:q.displayMember,valueMember:q.valueMember,height:q.dropDownHeight,autoHeight:q.autoDropDownHeight,scrollBarSize:q.scrollBarSize,selectedIndex:q.selectedIndex,source:q.source,theme:q.theme,rendered:function(){if(q.selectedIndex!=q.listBoxContainer.jqxListBox("selectedIndex")){q.listBox=a.data(q.listBoxContainer[0],"jqxListBox").instance;q.listBoxContainer.jqxListBox({selectedIndex:q.selectedIndex});q.renderSelection("mouse")}else{q.renderSelection("mouse")}},renderer:q.renderer});q.listBoxContainer.css({position:"absolute",zIndex:q.popupZIndex,top:0,left:0});q.listBox=a.data(q.listBoxContainer[0],"jqxListBox").instance;q.listBox.enableSelection=q.enableSelection;q.listBox.enableHover=q.enableHover;q.listBox.equalItemsWidth=q.equalItemsWidth;q.listBox.selectIndex(q.selectedIndex);q.listBox._arrange();q.listBoxContainer.addClass(q.toThemeProperty("jqx-popup"));if(a.jqx.browser.msie){q.listBoxContainer.addClass(q.toThemeProperty("jqx-noshadow"))}q.addHandler(q.listBoxContainer,"unselect",function(e){q._raiseEvent("3",{index:e.args.index,type:e.args.type,item:e.args.item})});q.addHandler(q.listBoxContainer,"change",function(e){if(e.args){if(e.args.type!="keyboard"){q._raiseEvent("4",{index:e.args.index,type:e.args.type,item:e.args.item})}else{if(e.args.type=="keyboard"){if(!q.isOpened()){q._raiseEvent("4",{index:q.selectedIndex,type:"keyboard",item:q.getItem(q.selectedIndex)})}}}}});if(q.animationType=="none"){q.container.css("display","none")}else{q.container.hide()}}catch(j){}var q=q;q.propertyChangeMap.disabled=function(e,t,s,u){if(u){e.host.addClass(q.toThemeProperty("jqx-dropdownlist-state-disabled"));e.host.addClass(q.toThemeProperty("jqx-fill-state-disabled"));e.dropdownlistContent.addClass(q.toThemeProperty("jqx-dropdownlist-content-disabled"))}else{e.host.removeClass(q.toThemeProperty("jqx-dropdownlist-state-disabled"));e.host.removeClass(q.toThemeProperty("jqx-fill-state-disabled"));e.dropdownlistContent.removeClass(q.toThemeProperty("jqx-dropdownlist-content-disabled"))}a.jqx.aria(e,"aria-disabled",e.disabled)};if(q.disabled){q.host.addClass(q.toThemeProperty("jqx-dropdownlist-state-disabled"));q.host.addClass(q.toThemeProperty("jqx-fill-state-disabled"));q.dropdownlistContent.addClass(q.toThemeProperty("jqx-dropdownlist-content-disabled"))}q.arrow.addClass(q.toThemeProperty("jqx-icon-arrow-down"));q.arrow.addClass(q.toThemeProperty("jqx-icon"));if(q.renderMode==="simple"){q.arrow.remove();q.host.removeClass(q.toThemeProperty("jqx-fill-state-normal"));q.host.removeClass(q.toThemeProperty("jqx-rc-all"))}q._updateHandlers();q._setSize();q._arrange();if(q.listBox){q.renderSelection()}if(a.jqx.browser.msie&&a.jqx.browser.version<8){if(q.host.parents(".jqx-window").length>0){var m=q.host.parents(".jqx-window").css("z-index");b.css("z-index",m+10);q.listBoxContainer.css("z-index",m+10)}}},resize:function(c,b){this.width=c;this.height=b;this._setSize();this._arrange()},val:function(c){if(!this.dropdownlistContent){return""}var d=function(f){for(var e in f){if(f.hasOwnProperty(e)){return false}}if(typeof c=="number"){return false}if(typeof c=="date"){return false}if(typeof c=="boolean"){return false}if(typeof c=="string"){return false}return true};if(this.input&&(d(c)||arguments.length==0)){return this.input.val()}var b=this.getItemByValue(c);if(b!=null){this.selectItem(b)}if(this.input){return this.input.val()}},focus:function(){try{var d=this;var c=function(){d.host.focus();if(d._firstDiv){d._firstDiv.focus()}};c();setTimeout(function(){c()},10)}catch(b){}},_addInput:function(){var b=this.host.attr("name");this.input=a("<input type='hidden'/>");this.host.append(this.input);if(b){this.input.attr("name",b)}},getItems:function(){if(!this.listBox){return new Array()}return this.listBox.items},getVisibleItems:function(){return this.listBox.getVisibleItems()},_setSize:function(){if(this.width!=null&&this.width.toString().indexOf("px")!=-1){this.host.width(this.width)}else{if(this.width!=undefined&&!isNaN(this.width)){this.host.width(this.width)}}if(this.height!=null&&this.height.toString().indexOf("px")!=-1){this.host.height(this.height)}else{if(this.height!=undefined&&!isNaN(this.height)){this.host.height(this.height)}}var e=false;if(this.width!=null&&this.width.toString().indexOf("%")!=-1){e=true;this.host.width(this.width)}if(this.height!=null&&this.height.toString().indexOf("%")!=-1){e=true;this.host.height(this.height)}var c=this;var d=function(){c._arrange();if(c.dropDownWidth=="auto"){var f=c.host.width();c.listBoxContainer.jqxListBox({width:f});c.container.width(parseInt(f)+25)}};if(e){var b=this.host.width();if(this.dropDownWidth!="auto"){b=this.dropDownWidth}this.listBoxContainer.jqxListBox({width:b});this.container.width(parseInt(b)+25)}a.jqx.utilities.resize(this.host,function(){d()},false,this._checkForHiddenParent)},isOpened:function(){var c=this;var b=a.data(document.body,"openedJQXListBox"+this.id);if(b!=null&&b==c.listBoxContainer){return true}return false},_updateHandlers:function(){var c=this;var d=false;this.removeHandlers();if(!this.touch){this.addHandler(this.host,"mouseenter",function(){if(!c.disabled&&c.enableHover&&c.renderMode!=="simple"){d=true;c.host.addClass(c.toThemeProperty("jqx-dropdownlist-state-hover"));c.arrow.addClass(c.toThemeProperty("jqx-icon-arrow-down-hover"));c.host.addClass(c.toThemeProperty("jqx-fill-state-hover"))}});this.addHandler(this.host,"mouseleave",function(){if(!c.disabled&&c.enableHover&&c.renderMode!=="simple"){c.host.removeClass(c.toThemeProperty("jqx-dropdownlist-state-hover"));c.host.removeClass(c.toThemeProperty("jqx-fill-state-hover"));c.arrow.removeClass(c.toThemeProperty("jqx-icon-arrow-down-hover"));d=false}})}if(this.host.parents()){this.addHandler(this.host.parents(),"scroll.dropdownlist"+this.element.id,function(e){var f=c.isOpened();if(f){c.close()}})}var b="mousedown";if(this.touch){b=a.jqx.mobile.getTouchEventName("touchstart")}this.addHandler(this.dropdownlistWrapper,b,function(f){if(!c.disabled){var e=c.container.css("display")=="block";if(!c.isanimating){if(e){c.hideListBox();return false}else{c.showListBox();if(!c.focusable){if(f.preventDefault){f.preventDefault()}}else{c.focus()}}}}});if(c.autoOpen){this.addHandler(this.host,"mouseenter",function(){var e=c.isOpened();if(!e&&c.autoOpen){c.open();c.host.focus()}});a(document).on("mousemove."+c.id,function(h){var g=c.isOpened();if(g&&c.autoOpen){var l=c.host.coord();var k=l.top;var j=l.left;var i=c.container.coord();var e=i.left;var f=i.top;canClose=true;if(h.pageY>=k&&h.pageY<=k+c.host.height()){if(h.pageX>=j&&h.pageX<j+c.host.width()){canClose=false}}if(h.pageY>=f&&h.pageY<=f+c.container.height()){if(h.pageX>=e&&h.pageX<e+c.container.width()){canClose=false}}if(canClose){c.close()}}})}if(this.touch){this.addHandler(a(document),a.jqx.mobile.getTouchEventName("touchstart")+"."+this.id,c.closeOpenedListBox,{me:this,listbox:this.listBox,id:this.id})}else{this.addHandler(a(document),"mousedown."+this.id,c.closeOpenedListBox,{me:this,listbox:this.listBox,id:this.id})}this.addHandler(this.host,"keydown",function(f){var e=c.container.css("display")=="block";if(c.host.css("display")=="none"){return true}if(f.keyCode=="13"||f.keyCode=="9"){if(!c.isanimating){if(e){c.renderSelection();if(f.keyCode=="13"&&c.focusable){c._firstDiv.focus()}c.hideListBox();if(!c.keyboardSelection){c._raiseEvent("2",{index:c.selectedIndex,type:"keyboard",item:c.getItem(c.selectedIndex)})}if(f.keyCode=="13"){c._raiseEvent("4",{index:c.selectedIndex,type:"keyboard",item:c.getItem(c.selectedIndex)})}}if(e&&f.keyCode!="9"){return false}return true}}if(f.keyCode==115){if(!c.isanimating){if(!c.isOpened()){c.showListBox()}else{if(c.isOpened()){c.hideListBox()}}}return false}if(f.altKey){if(c.host.css("display")=="block"){if(f.keyCode==38){if(c.isOpened()){c.hideListBox();return true}}else{if(f.keyCode==40){if(!c.isOpened()){c.showListBox();return true}}}}}if(f.keyCode=="27"){if(!c.ishiding){if(c.isOpened()){c.hideListBox();if(c.tempSelectedIndex!=undefined){c.selectIndex(c.tempSelectedIndex)}}return true}}if(!c.disabled){c._kbnavigated=c.listBox._handleKeyDown(f);return c._kbnavigated}});this.addHandler(this.listBoxContainer,"checkChange",function(e){c.renderSelection();c._updateInputSelection();c._raiseEvent(5,{label:e.args.label,value:e.args.value,checked:e.args.checked,item:e.args.item})});this.addHandler(this.listBoxContainer,"select",function(e){if(!c.disabled){if(!e.args){return}if(e.args.type=="keyboard"&&!c.isOpened()){c.renderSelection()}if(e.args.type!="keyboard"||c.keyboardSelection){c.renderSelection();c._raiseEvent("2",{index:e.args.index,type:e.args.type,item:e.args.item,originalEvent:e.args.originalEvent});if(e.args.type=="mouse"){if(!c.checkboxes){c.hideListBox();if(c._firstDiv&&c.focusable){c._firstDiv.focus()}}}}}});if(this.listBox){if(this.listBox.content){this.addHandler(this.listBox.content,"click",function(e){if(!c.disabled){if(c.listBox.itemswrapper&&e.target===c.listBox.itemswrapper[0]){return true}c.renderSelection("mouse");if(!c.touch){if(!c.ishiding){if(!c.checkboxes){c.hideListBox();if(c._firstDiv&&c.focusable){c._firstDiv.focus()}}}}if(!c.keyboardSelection){if(c._kbnavigated===false){if(c.tempSelectedIndex!=c.selectedIndex){c._raiseEvent("4",{index:c.selectedIndex,type:"mouse",item:c.getItem(c.selectedIndex)})}c._kbnavigated=true}if(c._oldSelectedInd==undefined){c._oldSelectedIndx=c.selectedIndex}if(c.selectedIndex!=c._oldSelectedIndx){c._raiseEvent("2",{index:c.selectedIndex,type:"keyboard",item:c.getItem(c.selectedIndex)});c._oldSelectedIndx=c.selectedIndex}}}})}}this.addHandler(this.host,"focus",function(e){if(c.renderMode!=="simple"){c.host.addClass(c.toThemeProperty("jqx-dropdownlist-state-focus"));c.host.addClass(c.toThemeProperty("jqx-fill-state-focus"))}});this.addHandler(this.host,"blur",function(){if(c.renderMode!=="simple"){c.host.removeClass(c.toThemeProperty("jqx-dropdownlist-state-focus"));c.host.removeClass(c.toThemeProperty("jqx-fill-state-focus"))}});this.addHandler(this._firstDiv,"focus",function(e){if(c.renderMode!=="simple"){c.host.addClass(c.toThemeProperty("jqx-dropdownlist-state-focus"));c.host.addClass(c.toThemeProperty("jqx-fill-state-focus"))}});this.addHandler(this._firstDiv,"blur",function(){if(c.renderMode!=="simple"){c.host.removeClass(c.toThemeProperty("jqx-dropdownlist-state-focus"));c.host.removeClass(c.toThemeProperty("jqx-fill-state-focus"))}})},removeHandlers:function(){var c=this;var b="mousedown";if(this.touch){b=a.jqx.mobile.getTouchEventName("touchstart")}this.removeHandler(this.dropdownlistWrapper,b);if(this.listBox){if(this.listBox.content){this.removeHandler(this.listBox.content,"click")}}this.removeHandler(this.host,"loadContent");this.removeHandler(this.listBoxContainer,"checkChange");this.removeHandler(this.host,"keydown");this.removeHandler(this.host,"focus");this.removeHandler(this.host,"blur");this.removeHandler(this._firstDiv,"focus");this.removeHandler(this._firstDiv,"blur");this.removeHandler(this.host,"mouseenter");this.removeHandler(this.host,"mouseleave");this.removeHandler(a(document),"mousemove."+c.id)},getItem:function(b){var c=this.listBox.getItem(b);return c},getItemByValue:function(c){var b=this.listBox.getItemByValue(c);return b},selectItem:function(b){if(this.listBox!=undefined){this.listBox.selectItem(b);this.selectedIndex=this.listBox.selectedIndex;this.renderSelection("mouse")}},unselectItem:function(b){if(this.listBox!=undefined){this.listBox.unselectItem(b);this.renderSelection("mouse")}},checkItem:function(b){if(this.listBox!=undefined){this.listBox.checkItem(b)}},uncheckItem:function(b){if(this.listBox!=undefined){this.listBox.uncheckItem(b)}},indeterminateItem:function(b){if(this.listBox!=undefined){this.listBox.indeterminateItem(b)}},renderSelection:function(){if(this.listBox==null){return}if(this.height&&this.height.toString().indexOf("%")!=-1){this._arrange()}var r=this.listBox.visibleItems[this.listBox.selectedIndex];if(this.filterable){if(this.listBox.selectedIndex==-1){for(var e in this.listBox.selectedValues){var l=this.listBox.selectedValues[e];var b=this.listBox.getItemByValue(l);if(b){r=b}}}}var u=this;if(this.checkboxes){var v=this.getCheckedItems();if(v!=null&&v.length>0){r=v[0]}else{r=null}}if(r==null){var j=a('<span unselectable="on" style="color: inherit; border: none; background-color: transparent;"></span>');j.appendTo(a(document.body));j.addClass(this.toThemeProperty("jqx-widget"));j.addClass(this.toThemeProperty("jqx-listitem-state-normal"));j.addClass(this.toThemeProperty("jqx-item"));a.jqx.utilities.html(j,this.placeHolder);var s=this.dropdownlistContent.css("padding-top");var x=this.dropdownlistContent.css("padding-bottom");j.css("padding-top",s);j.css("padding-bottom",x);var q=j.outerHeight();j.remove();j.removeClass();a.jqx.utilities.html(this.dropdownlistContent,j);var h=this.host.height();if(this.height!=null&&this.height!=undefined){if(this.height.toString().indexOf("%")===-1){h=parseInt(this.height)}}var f=parseInt((parseInt(h)-parseInt(q))/2);if(f>0){this.dropdownlistContent.css("margin-top",f+"px");this.dropdownlistContent.css("margin-bottom",f+"px")}if(this.selectionRenderer){a.jqx.utilities.html(this.dropdownlistContent,this.selectionRenderer(j,-1,"",""));this.dropdownlistContent.css("margin-top","0px");this.dropdownlistContent.css("margin-bottom","0px");this._updateInputSelection()}else{this._updateInputSelection()}this.selectedIndex=this.listBox.selectedIndex;if(this.width==="auto"){this._arrange()}if(this.focusable&&this.isOpened()){this.focus()}return}this.selectedIndex=this.listBox.selectedIndex;var j=a(document.createElement("span"));j[0].setAttribute("unselectable","on");try{j[0].style.color="inherit"}catch(t){}j[0].style.borderWidth="0px";j[0].style.backgroundColor="transparent";j.appendTo(a(document.body));j.addClass(this.toThemeProperty("jqx-widget jqx-listitem-state-normal jqx-item"));var p=false;try{if(r.html!=undefined&&r.html!=null&&r.html.toString().length>0){a.jqx.utilities.html(j,r.html)}else{if(r.label!=undefined&&r.label!=null&&r.label.toString().length>0){a.jqx.utilities.html(j,r.label)}else{if(r.label===null||r.label===""){p=true;a.jqx.utilities.html(j,"")}else{if(r.value!=undefined&&r.value!=null&&r.value.toString().length>0){a.jqx.utilities.html(j,r.value)}else{if(r.title!=undefined&&r.title!=null&&r.title.toString().length>0){a.jqx.utilities.html(j,r.title)}else{if(r.label==""||r.label==null){p=true;a.jqx.utilities.html(j,"")}}}}}}}catch(n){var m=n}var s=this.dropdownlistContent[0].style.paddingTop;var x=this.dropdownlistContent[0].style.paddingBottom;if(s===""){s="0px"}if(x===""){x="0px"}j[0].style.paddingTop=s;j[0].style.paddingBottom=x;var q=j.outerHeight();if(q===0){q=16}if((r.label==""||r.label==null)&&p){a.jqx.utilities.html(j,"")}var c=this.width&&this.width.toString().indexOf("%")<=0;j.remove();j.removeClass();if(this.selectionRenderer){a.jqx.utilities.html(this.dropdownlistContent,this.selectionRenderer(j,r.index,r.label,r.value));if(this.focusable&&this.isOpened()){this.focus()}}else{if(this.checkboxes){var g=this.getCheckedItems();var k="";for(var o=0;o<g.length;o++){if(o==g.length-1){k+=g[o].label}else{k+=g[o].label+","}}j.text(k);if(c){j.css("max-width",this.host.width()-30)}j.css("overflow","hidden");j.css("display","block");if(!this.rtl){if(c){j.css("width",this.host.width()-30)}}j.css("text-overflow","ellipsis");j.css("padding-bottom",1+parseInt(x));this.dropdownlistContent.html(j);if(this.focusable&&this.isOpened()){this.focus()}}else{var d=this.host.width()-this.arrowSize-3;if(this.width&&this.width!=="auto"){if(c){if(!this.rtl){j.css("max-width",d+"px")}}j[0].style.overflow="hidden";j[0].style.display="block";j[0].style.paddingTop=(1+parseInt(x))+"px";if(!this.rtl){if(c){j[0].style.width=d+"px"}}j[0].style.textOverflow="ellipsis"}this.dropdownlistContent[0].innerHTML=j[0].innerHTML;if(this.focusable&&this.isOpened()){this.focus()}}}var h=this.host.height();if(this.height!=null&&this.height!=undefined){if(this.height.toString().indexOf("%")===-1){h=parseInt(this.height)}}var f=parseInt((parseInt(h)-parseInt(q))/2);if(f>0){this.dropdownlistContent[0].style.marginTop=f+"px";this.dropdownlistContent[0].style.marginBottom=f+"px"}if(this.selectionRenderer){this.dropdownlistContent[0].style.marginTop="0px";this.dropdownlistContent[0].style.marginBottom="0px"}if(this.dropdownlistContent&&this.input){this._updateInputSelection()}if(this.listBox&&this.listBox._activeElement){a.jqx.aria(this,"aria-activedescendant",this.listBox._activeElement.id)}if(this.width==="auto"){this._arrange()}},_updateInputSelection:function(){if(this.input){var c=new Array();if(this.selectedIndex==-1){this.input.val("")}else{var f=this.getSelectedItem();if(f!=null){this.input.val(f.value);c.push(f.value)}else{this.input.val(this.dropdownlistContent.text())}}if(this.checkboxes){var b=this.getCheckedItems();var g="";if(b!=null){for(var d=0;d<b.length;d++){var e=b[d].value;if(e==undefined){continue}if(d==b.length-1){g+=e}else{g+=e+","}c.push(e)}}this.input.val(g)}}if(this.field&&this.input){if(this.field.nodeName.toLowerCase()=="select"){a.each(this.field,function(h,i){a(this).removeAttr("selected");this.selected=c.indexOf(this.value)>=0;if(this.selected){a(this).attr("selected",true)}})}else{a.each(this.items,function(h,i){a(this.originalItem.originalItem).removeAttr("data-selected");this.selected=c.indexOf(this.value)>=0;if(this.selected){a(this.originalItem.originalItem).attr("data-selected",true)}})}}},setContent:function(b){a.jqx.utilities.html(this.dropdownlistContent,b);this._updateInputSelection()},dataBind:function(){this.listBoxContainer.jqxListBox({source:this.source});this.renderSelection("mouse");if(this.source==null){this.clearSelection()}},clear:function(){this.listBoxContainer.jqxListBox({source:null});this.clearSelection()},clearSelection:function(b){this.selectedIndex=-1;this._updateInputSelection();this.listBox.clearSelection();this.renderSelection();if(!this.selectionRenderer){a.jqx.utilities.html(this.dropdownlistContent,this.placeHolder)}},unselectIndex:function(b,c){if(isNaN(b)){return}this.listBox.unselectIndex(b,c);this.renderSelection()},selectIndex:function(b,d,e,c){this.listBox.selectIndex(b,d,e,c,"api")},getSelectedIndex:function(){return this.selectedIndex},getSelectedItem:function(){return this.listBox.getVisibleItem(this.selectedIndex)},getCheckedItems:function(){return this.listBox.getCheckedItems()},checkIndex:function(b){this.listBox.checkIndex(b)},uncheckIndex:function(b){this.listBox.uncheckIndex(b)},indeterminateIndex:function(b){this.listBox.indeterminateIndex(b)},checkAll:function(){this.listBox.checkAll();this.renderSelection("mouse")},uncheckAll:function(){this.listBox.uncheckAll();this.renderSelection("mouse")},addItem:function(b){return this.listBox.addItem(b)},insertAt:function(c,b){if(c==null){return false}return this.listBox.insertAt(c,b)},removeAt:function(c){var b=this.listBox.removeAt(c);this.renderSelection("mouse");return b},removeItem:function(c){var b=this.listBox.removeItem(c);this.renderSelection("mouse");return b},updateItem:function(c,d){var b=this.listBox.updateItem(c,d);this.renderSelection("mouse");return b},updateAt:function(d,c){var b=this.listBox.updateAt(d,c);this.renderSelection("mouse");return b},ensureVisible:function(b){return this.listBox.ensureVisible(b)},disableAt:function(b){return this.listBox.disableAt(b)},enableAt:function(b){return this.listBox.enableAt(b)},disableItem:function(b){return this.listBox.disableItem(b)},enableItem:function(b){return this.listBox.enableItem(b)},_findPos:function(c){while(c&&(c.type=="hidden"||c.nodeType!=1||a.expr.filters.hidden(c))){c=c.nextSibling}var b=a(c).coord(true);return[b.left,b.top]},testOffset:function(h,f,c){var g=h.outerWidth();var j=h.outerHeight();var i=a(window).width()+a(window).scrollLeft();var e=a(window).height()+a(window).scrollTop();if(f.left+g>i){if(g>this.host.width()){var d=this.host.coord().left;var b=g-this.host.width();f.left=d-b+2}}if(f.left<0){f.left=parseInt(this.host.coord().left)+"px"}f.top-=Math.min(f.top,(f.top+j>e&&e>j)?Math.abs(j+c+22):0);return f},open:function(){this.showListBox()},close:function(){this.hideListBox()},_getBodyOffset:function(){var c=0;var b=0;if(a("body").css("border-top-width")!="0px"){c=parseInt(a("body").css("border-top-width"));if(isNaN(c)){c=0}}if(a("body").css("border-left-width")!="0px"){b=parseInt(a("body").css("border-left-width"));if(isNaN(b)){b=0}}return{left:b,top:c}},showListBox:function(){a.jqx.aria(this,"aria-expanded",true);if(this.dropDownWidth=="auto"&&this.width!=null&&this.width.indexOf&&(this.width.indexOf("%")!=-1||this.width.indexOf("auto")!=-1)){if(this.listBox.host.width()!=this.host.width()){var c=this.host.width();this.listBoxContainer.jqxListBox({width:c});this.container.width(parseInt(c)+25)}}var p=this;var d=this.listBoxContainer;var j=this.listBox;var m=a(window).scrollTop();var h=a(window).scrollLeft();var k=parseInt(this._findPos(this.host[0])[1])+parseInt(this.host.outerHeight())-1+"px";var f,g=parseInt(Math.round(this.host.coord(true).left));f=g+"px";var o=a.jqx.mobile.isSafariMobileBrowser()||a.jqx.mobile.isWindowsPhone();if(this.listBox==null){return}this.ishiding=false;if(!this.keyboardSelection){this.listBox.selectIndex(this.selectedIndex);this.listBox.ensureVisible(this.selectedIndex)}this.tempSelectedIndex=this.selectedIndex;if(this.autoDropDownHeight){this.container.height(this.listBoxContainer.height()+25)}if((o!=null&&o)){f=a.jqx.mobile.getLeftPos(this.element);k=a.jqx.mobile.getTopPos(this.element)+parseInt(this.host.outerHeight());if(a("body").css("border-top-width")!="0px"){k=parseInt(k)-this._getBodyOffset().top+"px"}if(a("body").css("border-left-width")!="0px"){f=parseInt(f)-this._getBodyOffset().left+"px"}}d.stop();if(this.renderMode!=="simple"){this.host.addClass(this.toThemeProperty("jqx-dropdownlist-state-selected"));this.host.addClass(this.toThemeProperty("jqx-fill-state-pressed"));this.arrow.addClass(this.toThemeProperty("jqx-icon-arrow-down-selected"))}this.container.css("left",f);this.container.css("top",k);j._arrange();var e=true;var q=false;if(this.dropDownHorizontalAlignment=="right"||this.rtl){var l=this.container.outerWidth();var b=Math.abs(l-this.host.width());if(l>this.host.width()){this.container.css("left",25+parseInt(Math.round(g))-b+"px")}else{this.container.css("left",25+parseInt(Math.round(g))+b+"px")}}if(this.enableBrowserBoundsDetection){var i=this.testOffset(d,{left:parseInt(this.container.css("left")),top:parseInt(k)},parseInt(this.host.outerHeight()));if(parseInt(this.container.css("top"))!=i.top){q=true;d.css("top",23);d.addClass(this.toThemeProperty("jqx-popup-up"))}else{d.css("top",0)}this.container.css("top",i.top);if(parseInt(this.container.css("left"))!=i.left){this.container.css("left",i.left)}}if(this.animationType=="none"){this.container.css("display","block");a.data(document.body,"openedJQXListBoxParent",p);a.data(document.body,"openedJQXListBox"+this.id,d);d.css("margin-top",0);d.css("opacity",1);j._renderItems();p._raiseEvent("0",j)}else{this.container.css("display","block");p.isanimating=true;if(this.animationType=="fade"){d.css("margin-top",0);d.css("opacity",0);d.animate({opacity:1},this.openDelay,function(){a.data(document.body,"openedJQXListBoxParent",p);a.data(document.body,"openedJQXListBox"+p.id,d);p.ishiding=false;p.isanimating=false;j._renderItems();p._raiseEvent("0",j)})}else{d.css("opacity",1);var n=d.outerHeight();if(q){d.css("margin-top",n)}else{d.css("margin-top",-n)}d.animate({"margin-top":0},this.openDelay,function(){a.data(document.body,"openedJQXListBoxParent",p);a.data(document.body,"openedJQXListBox"+p.id,d);p.ishiding=false;p.isanimating=false;j._renderItems();p._raiseEvent("0",j)})}}if(!q){this.host.addClass(this.toThemeProperty("jqx-rc-b-expanded"));d.addClass(this.toThemeProperty("jqx-rc-t-expanded"))}else{this.host.addClass(this.toThemeProperty("jqx-rc-t-expanded"));d.addClass(this.toThemeProperty("jqx-rc-b-expanded"))}if(this.renderMode!=="simple"){d.addClass(this.toThemeProperty("jqx-fill-state-focus"));this.host.addClass(this.toThemeProperty("jqx-dropdownlist-state-focus"));this.host.addClass(this.toThemeProperty("jqx-fill-state-focus"))}},hideListBox:function(){a.jqx.aria(this,"aria-expanded",false);var f=this.listBoxContainer;var g=this.listBox;var c=this.container;var d=this;a.data(document.body,"openedJQXListBox"+this.id,null);if(this.animationType=="none"){this.container.css("display","none")}else{if(!d.ishiding){f.stop();var b=f.outerHeight();f.css("margin-top",0);d.isanimating=true;var e=-b;if(parseInt(this.container.coord().top)<parseInt(this.host.coord().top)){e=b}if(this.animationType=="fade"){f.css({opacity:1});f.animate({opacity:0},this.closeDelay,function(){c.css("display","none");d.isanimating=false;d.ishiding=false})}else{f.animate({"margin-top":e},this.closeDelay,function(){c.css("display","none");d.isanimating=false;d.ishiding=false})}}}this.ishiding=true;this.host.removeClass(this.toThemeProperty("jqx-dropdownlist-state-selected"));this.host.removeClass(this.toThemeProperty("jqx-fill-state-pressed"));this.arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-down-selected"));this.host.removeClass(this.toThemeProperty("jqx-rc-b-expanded"));f.removeClass(this.toThemeProperty("jqx-rc-t-expanded"));this.host.removeClass(this.toThemeProperty("jqx-rc-t-expanded"));f.removeClass(this.toThemeProperty("jqx-rc-b-expanded"));f.removeClass(this.toThemeProperty("jqx-fill-state-focus"));this.host.removeClass(this.toThemeProperty("jqx-dropdownlist-state-focus"));this.host.removeClass(this.toThemeProperty("jqx-fill-state-focus"));this._raiseEvent("1",g)},closeOpenedListBox:function(e){var d=e.data.me;var b=a(e.target);var c=e.data.listbox;if(c==null){return true}if(a(e.target).ischildof(e.data.me.host)){return true}if(!d.isOpened()){return true}var f=d;var g=false;a.each(b.parents(),function(){if(this.className!="undefined"){if(this.className.indexOf){if(this.className.indexOf("jqx-listbox")!=-1){g=true;return false}if(this.className.indexOf("jqx-dropdownlist")!=-1){if(d.element.id==this.id){g=true}return false}}}});if(c!=null&&!g&&d.isOpened()){d.hideListBox()}return true},clearFilter:function(){this.listBox.clearFilter()},loadFromSelect:function(b){this.listBox.loadFromSelect(b)},refresh:function(b){if(b!==true){this._setSize();this._arrange();if(this.listBox){this.renderSelection()}}},_arrange:function(){var h=this;var d=parseInt(h.host.width());var j=parseInt(h.host.height());var f=h.arrowSize;var g=h.arrowSize;var i=3;var b=d-g-2*i;if(b>0&&h.width!=="auto"){h.dropdownlistContent[0].style.width=b+"px"}else{if(b<=0){h.dropdownlistContent[0].style.width="0px"}}if(h.width==="auto"){h.dropdownlistContent.css("width","auto");d=h.dropdownlistContent.width()+g+2*i;h.host.width(d)}h.dropdownlistContent[0].style.height=j+"px";h.dropdownlistContent[0].style.left="0px";h.dropdownlistContent[0].style.top="0px";h.dropdownlistArrow[0].style.width=g+"px";if(h.width&&h.width.toString().indexOf("%")>=0){var e=(g*100)/d;var c=(b*100)/d;h.dropdownlistArrow[0].style.width=e+"%";h.dropdownlistContent[0].style.width=c+"%"}h.dropdownlistArrow[0].style.height=j+"px";if(h.rtl){h.dropdownlistArrow.css("float","left");h.dropdownlistContent.css("float","right")}},destroy:function(){a.jqx.utilities.resize(this.host,null,true);this.removeHandler(this.listBoxContainer,"select");this.removeHandler(this.listBoxContainer,"unselect");this.removeHandler(this.listBoxContainer,"change");this.removeHandler(this.dropdownlistWrapper,"selectstart");this.removeHandler(this.dropdownlistWrapper,"mousedown");this.removeHandler(this.host,"keydown");this.removeHandler(this.listBoxContainer,"select");this.removeHandler(this.listBox.content,"click");this.removeHandler(this.listBoxContainer,"bindingComplete");if(this.host.parents()){this.removeHandler(this.host.parents(),"scroll.dropdownlist"+this.element.id)}this.removeHandlers();this.listBoxContainer.jqxListBox("destroy");this.listBoxContainer.remove();this.host.removeClass();this.removeHandler(a(document),"mousedown."+this.id,this.closeOpenedListBox);if(this.touch){this.removeHandler(a(document),a.jqx.mobile.getTouchEventName("touchstart")+"."+this.id)}this.dropdownlistArrow.remove();delete this.dropdownlistArrow;delete this.dropdownlistWrapper;delete this.listBoxContainer;delete this.input;delete this.arrow;delete this.dropdownlistContent;delete this.listBox;delete this._firstDiv;this.container.remove();delete this.container;var b=a.data(this.element,"jqxDropDownList");if(b){delete b.instance}this.host.removeData();this.host.remove();delete this.comboStructure;delete this.host;delete this.set;delete this.get;delete this.call;delete this.element},_raiseEvent:function(f,c){if(c==undefined){c={owner:null}}var d=this.events[f];args=c;args.owner=this;var e=new a.Event(d);e.owner=this;if(f==2||f==3||f==4||f==5){e.args=c}var b=this.host.trigger(e);return b},propertyChangedHandler:function(b,c,f,e){if(b.isInitialized==undefined||b.isInitialized==false){return}if(c=="filterable"){b.listBoxContainer.jqxListBox({filterable:e})}if(c=="filterHeight"){b.listBoxContainer.jqxListBox({filterHeight:e})}if(c=="filterPlaceHolder"){b.listBoxContainer.jqxListBox({filterPlaceHolder:e})}if(c=="filterDelay"){b.listBoxContainer.jqxListBox({filterDelay:e})}if(c=="enableSelection"){b.listBoxContainer.jqxListBox({enableSelection:e})}if(c=="enableHover"){b.listBoxContainer.jqxListBox({enableHover:e})}if(c=="autoOpen"){b._updateHandlers()}if(c=="emptyString"){b.listBox.emptyString=b.emptyString}if(c=="itemHeight"){b.listBoxContainer.jqxListBox({itemHeight:e})}if(c=="renderer"){b.listBoxContainer.jqxListBox({renderer:e})}if(c=="rtl"){if(e){b.dropdownlistArrow.css("float","left");b.dropdownlistContent.css("float","right")}else{b.dropdownlistArrow.css("float","right");b.dropdownlistContent.css("float","left")}b.listBoxContainer.jqxListBox({rtl:b.rtl})}if(c=="source"){b.listBoxContainer.jqxListBox({source:b.source});b.listBox.selectedIndex=-1;b.listBox.selectIndex(this.selectedIndex);b.renderSelection();if(e==null){b.clear()}}if(c=="displayMember"||c=="valueMember"){b.listBoxContainer.jqxListBox({displayMember:b.displayMember,valueMember:b.valueMember});b.renderSelection()}if(c=="placeHolder"){b.renderSelection()}if(c=="theme"&&e!=null){b.listBoxContainer.jqxListBox({theme:e});b.listBoxContainer.addClass(b.toThemeProperty("jqx-popup"));a.jqx.utilities.setTheme(f,e,b.host)}if(c=="autoDropDownHeight"){b.listBoxContainer.jqxListBox({autoHeight:b.autoDropDownHeight});if(b.autoDropDownHeight){b.container.height(b.listBoxContainer.height()+25)}else{b.listBoxContainer.jqxListBox({height:b.dropDownHeight});b.container.height(parseInt(b.dropDownHeight)+25)}b.listBox._arrange();b.listBox._updatescrollbars()}if(c=="searchMode"){b.listBoxContainer.jqxListBox({searchMode:b.searchMode})}if(c=="incrementalSearch"){b.listBoxContainer.jqxListBox({incrementalSearch:b.incrementalSearch})}if(c=="incrementalSearchDelay"){b.listBoxContainer.jqxListBox({incrementalSearchDelay:b.incrementalSearchDelay})}if(c=="dropDownHeight"){if(!b.autoDropDownHeight){b.listBoxContainer.jqxListBox({height:b.dropDownHeight});b.container.height(parseInt(b.dropDownHeight)+25)}}if(c=="dropDownWidth"||c=="scrollBarSize"){var d=b.width;if(b.dropDownWidth!="auto"){d=b.dropDownWidth}b.listBoxContainer.jqxListBox({width:d,scrollBarSize:b.scrollBarSize});b.container.width(parseInt(d)+25)}if(c=="width"||c=="height"){if(e!=f){this.refresh();if(c=="width"){if(b.dropDownWidth=="auto"){var d=b.host.width();b.listBoxContainer.jqxListBox({width:d});b.container.width(parseInt(d)+25)}}}}if(c=="checkboxes"){b.listBoxContainer.jqxListBox({checkboxes:b.checkboxes})}if(c=="selectedIndex"){if(b.listBox!=null){b.listBox.selectIndex(parseInt(e));b.renderSelection()}}}})})(jqxBaseFramework);
(function(a) {
    a.jqx.jqxWidget("jqxDropDownButton", "", {});
    a.extend(a.jqx._jqxDropDownButton.prototype, {
        defineInstance: function() {
            var b = {
                disabled: false,
                width: null,
                height: null,
                arrowSize: 19,
                enableHover: true,
                closeLock:false,//锁死窗口不关闭
                openDelay: 250,
                closeDelay: 300,
                animationType: "default",
                enableBrowserBoundsDetection: false,
                dropDownHorizontalAlignment: "left",
                popupZIndex: 20000,
                autoOpen: false,
                rtl: false,
                initContent: null,
                dropDownWidth: null,
                dropDownHeight: null,
                focusable: true,
                touchMode: false,
                aria: {
                    "aria-disabled": {
                        name: "disabled",
                        type: "boolean"
                    }
                },
                events: ["open", "close", "opening", "closing"]
            };
            a.extend(true, this, b);
            return b
        },
        createInstance: function(j) {
            var g = this;
            if (!g.width) {
                g.width = 200
            }
            if (!g.height) {
                g.height = 25
            }
            g.isanimating = false;
            g.setupInstance();
            var c = a("<div style='background-color: transparent; -webkit-appearance: none; outline: none; width:100%; height: 100%; padding: 0px; margin: 0px; border: 0px; position: relative;'><div id='dropDownButtonWrapper' style='outline: none; background-color: transparent; border: none; float: left; width:100%; height: 100%; position: relative;'><div id='dropDownButtonContent' unselectable='on' style='outline: none; background-color: transparent; border: none; float: left; position: relative;'/><div id='dropDownButtonArrow' unselectable='on'  style='background-color: transparent; border: none; float: right; position: relative;'><div unselectable='on'></div></div></div></div>");
            if (g.host.attr("tabindex")) {
                c.attr("tabindex", g.host.attr("tabindex"));
                g.host.removeAttr("tabindex")
            } else {
                c.attr("tabindex", 0)
            }
            if (!g.focusable) {
                c.removeAttr("tabIndex")
            }
            a.jqx.aria(this);
            g.popupContent = g.host.children();
            g.host.attr("role", "button");
            if (g.popupContent.length == 0) {
                g.popupContent = a("<div>" + g.host.text() + "</div>");
                g.popupContent.css("display", "block");
                g.element.innerHTML = ""
            } else {
                g.popupContent.detach()
            }
            var k = this;
            g.addHandler(g.host, "loadContent",
            function(e) {
                k._arrange()
            });
            try {
                var f = "dropDownButtonPopup" + g.element.id;
                var d = a(a.find("#" + f));
                if (d.length > 0) {
                    d.remove()
                }
                a.jqx.aria(this, "aria-haspopup", true);
                a.jqx.aria(this, "aria-owns", f);
                var b = a("<div class='dropDownButton' style='overflow: hidden; left: 0px; top: 0px; position: absolute;' id='dropDownButtonPopup" + g.element.id + "'></div>");
                b.addClass(g.toThemeProperty("jqx-widget-content"));
                b.addClass(g.toThemeProperty("jqx-dropdownbutton-popup"));
                b.addClass(g.toThemeProperty("jqx-popup"));
                b.addClass(g.toThemeProperty("jqx-rc-all"));
                b.css("z-index", g.popupZIndex);
                if (a.jqx.browser.msie) {
                    b.addClass(g.toThemeProperty("jqx-noshadow"))
                }
                g.popupContent.appendTo(b);
                b.appendTo(document.body);
                g.container = b;
                g.container.css("visibility", "hidden")
            } catch(h) {}
            g.touch = a.jqx.mobile.isTouchDevice();
            g.dropDownButtonStructure = c;
            g.host.append(c);
            g.dropDownButtonWrapper = g.host.find("#dropDownButtonWrapper");
            g.firstDiv = g.dropDownButtonWrapper.parent();
            g.dropDownButtonArrow = g.host.find("#dropDownButtonArrow");
            g.arrow = a(g.dropDownButtonArrow.children()[0]);
            g.dropDownButtonContent = g.host.find("#dropDownButtonContent");
            g.dropDownButtonContent.addClass(g.toThemeProperty("jqx-dropdownlist-content"));
            g.dropDownButtonWrapper.addClass(g.toThemeProperty("jqx-disableselect"));
            if (g.rtl) {
                g.dropDownButtonContent.addClass(g.toThemeProperty("jqx-rtl"))
            }
            var m = this;
            if (g.host.parents()) {
                g.addHandler(g.host.parents(), "scroll.dropdownbutton" + g.element.id,
                function(e) {
                    var n = m.isOpened();
                    if (n) {
                        m.close()
                    }
                })
            }
            g.addHandler(g.dropDownButtonWrapper, "selectstart",
            function() {
                return false
            });
            g.dropDownButtonWrapper[0].id = "dropDownButtonWrapper" + g.element.id;
            g.dropDownButtonArrow[0].id = "dropDownButtonArrow" + g.element.id;
            g.dropDownButtonContent[0].id = "dropDownButtonContent" + g.element.id;
            var m = this;
            g.propertyChangeMap.disabled = function(e, o, n, p) {
                if (p) {
                    e.host.addClass(m.toThemeProperty("jqx-dropdownlist-state-disabled"));
                    e.host.addClass(m.toThemeProperty("jqx-fill-state-disabled"));
                    e.dropDownButtonContent.addClass(m.toThemeProperty("jqx-dropdownlist-content-disabled"))
                } else {
                    e.host.removeClass(m.toThemeProperty("jqx-dropdownlist-state-disabled"));
                    e.host.removeClass(m.toThemeProperty("jqx-fill-state-disabled"));
                    e.dropDownButtonContent.removeClass(m.toThemeProperty("jqx-dropdownlist-content-disabled"))
                }
                a.jqx.aria(e, "aria-disabled", e.disabled)
            };
            if (g.disabled) {
                g.host.addClass(g.toThemeProperty("jqx-dropdownlist-state-disabled"));
                g.host.addClass(g.toThemeProperty("jqx-fill-state-disabled"));
                g.dropDownButtonContent.addClass(g.toThemeProperty("jqx-dropdownlist-content-disabled"))
            }
            var i = g.toThemeProperty("jqx-rc-all") + " " + g.toThemeProperty("jqx-fill-state-normal") + " " + g.toThemeProperty("jqx-widget") + " " + g.toThemeProperty("jqx-widget-content") + " " + g.toThemeProperty("jqx-dropdownlist-state-normal");
            g.host.addClass(i);
            g.arrow.addClass(g.toThemeProperty("jqx-icon-arrow-down"));
            g.arrow.addClass(g.toThemeProperty("jqx-icon"));
            g._setSize();
            g.render();
            if (a.jqx.browser.msie && a.jqx.browser.version < 8) {
                g.container.css("display", "none");
                if (g.host.parents(".jqx-window").length > 0) {
                    var l = g.host.parents(".jqx-window").css("z-index");
                    b.css("z-index", l + 10);
                    g.container.css("z-index", l + 10)
                }
            }
        },
        setupInstance: function() {
            var c = this;
            var b = {
            	setCloseLock:function(d){
            		c.closeLock=d;
            	},
            	setContent: function(d) {
                    c.dropDownButtonContent.children().remove();
                    c.dropDownButtonContent[0].innerHTML = "";
                    c.dropDownButtonContent.append(d)
                },
                val: function(d) {
                    if (arguments.length == 0 || typeof(d) == "object") {
                        return c.dropDownButtonContent.text()
                    } else {
                        c.dropDownButtonContent.html(d)
                    }
                },
                getContent: function() {
                    if (c.dropDownButtonContent.children().length > 0) {
                        return c.dropDownButtonContent.children()
                    }
                    return c.dropDownButtonContent.text()
                },
                _setSize: function() {
                    if (c.width != null && c.width.toString().indexOf("px") != -1) {
                        c.host[0].style.width = c.width
                    } else {
                        if (c.width != undefined && !isNaN(c.width)) {
                            c.host[0].style.width = parseInt(c.width) + "px"
                        }
                    }
                    if (c.height != null && c.height.toString().indexOf("px") != -1) {
                        c.host[0].style.height = c.height
                    } else {
                        if (c.height != undefined && !isNaN(c.height)) {
                            c.host[0].style.height = parseInt(c.height) + "px"
                        }
                    }
                    var e = false;
                    if (c.width != null && c.width.toString().indexOf("%") != -1) {
                        e = true;
                        c.host.width(c.width)
                    }
                    if (c.height != null && c.height.toString().indexOf("%") != -1) {
                        e = true;
                        c.host.height(c.height)
                    }
                    var d = this;
                    if (e) {
                        c.refresh(false)
                    }
                    a.jqx.utilities.resize(c.host,
                    function() {
                        d._arrange()
                    })
                },
                isOpened: function() {
                    var e = this;
                    var d = a.data(document.body, "openedJQXButton" + e.element.id);
                    if (d != null && d == e.popupContent) {
                        return true
                    }
                    return false
                },
                focus: function() {
                    try {
                        c.host.focus()
                    } catch(d) {}
                },
                render: function() {
                    c.removeHandlers();
                    var d = this;
                    var e = false;
                    if (!c.touch) {
                        c.addHandler(c.host, "mouseenter",
                        function() {
                            if (!d.disabled && d.enableHover) {
                                e = true;
                                d.host.addClass(d.toThemeProperty("jqx-dropdownlist-state-hover"));
                                d.arrow.addClass(d.toThemeProperty("jqx-icon-arrow-down-hover"));
                                d.host.addClass(d.toThemeProperty("jqx-fill-state-hover"))
                            }
                        });
                        c.addHandler(c.host, "mouseleave",
                        function() {
                            if (!d.disabled && d.enableHover) {
                                d.host.removeClass(d.toThemeProperty("jqx-dropdownlist-state-hover"));
                                d.host.removeClass(d.toThemeProperty("jqx-fill-state-hover"));
                                d.arrow.removeClass(d.toThemeProperty("jqx-icon-arrow-down-hover"));
                                e = false
                            }
                        })
                    }
                    if (d.autoOpen) {
                        c.addHandler(c.host, "mouseenter",
                        function() {
                            var f = d.isOpened();
                            if (!f && d.autoOpen) {
                                d.open();
                                d.host.focus()
                            }
                        });
                        c.addHandler(a(document), "mousemove." + d.element.id,
                        function(i) {
                            var h = d.isOpened();
                            if (h && d.autoOpen) {
                                var m = d.host.coord();
                                var l = m.top;
                                var k = m.left;
                                var j = d.container.coord();
                                var f = j.left;
                                var g = j.top;
                                canClose = true;
                                if (i.pageY >= l && i.pageY <= l + d.host.height()) {
                                    if (i.pageX >= k && i.pageX < k + d.host.width()) {
                                        canClose = false
                                    }
                                }
                                if (i.pageY >= g && i.pageY <= g + d.container.height()) {
                                    if (i.pageX >= f && i.pageX < f + d.container.width()) {
                                        canClose = false
                                    }
                                }
                                if (canClose) {
                                    d.close()
                                }
                            }
                        })
                    }
                    c.addHandler(c.dropDownButtonWrapper, "mousedown",
                    function(g) {
                        if (!d.disabled) {
                            var f = d.container.css("visibility") == "visible";
                            if (!d.isanimating) {
                                if (f) {
                                    d.close();
                                    return false
                                } else {
                                    d.open();
                                    if (!d.focusable) {
                                        if (g.preventDefault) {
                                            g.preventDefault()
                                        }
                                    }
                                }
                            }
                        }
                    });
                    if (c.touch) {
                        c.addHandler(a(document), a.jqx.mobile.getTouchEventName("touchstart") + "." + c.element.id, d.closeOpenedDropDown, {
                            me: this,
                            popup: c.container,
                            id: c.element.id
                        })
                    }
                    c.addHandler(a(document), "mousedown." + c.element.id, d.closeOpenedDropDown, {
                        me: this,
                        popup: c.container,
                        id: c.element.id
                    });
                    c.addHandler(c.host, "keydown",
                    function(g) {
                        var f = d.container.css("visibility") == "visible";
                        if (d.host.css("display") == "none") {
                            return true
                        }
                        if (g.keyCode == "13") {
                            if (!d.isanimating) {
                                if (f) {
                                    d.close()
                                }
                            }
                        }
                        if (g.keyCode == 115) {
                            if (!d.isanimating) {
                                if (!d.isOpened()) {
                                    d.open()
                                } else {
                                    if (d.isOpened()) {
                                        d.close()
                                    }
                                }
                            }
                            return false
                        }
                        if (g.altKey) {
                            if (d.host.css("display") == "block") {
                                if (g.keyCode == 38) {
                                    if (d.isOpened()) {
                                        d.close()
                                    }
                                } else {
                                    if (g.keyCode == 40) {
                                        if (!d.isOpened()) {
                                            d.open()
                                        }
                                    }
                                }
                            }
                        }
                        if (g.keyCode == "27") {
                            if (!d.ishiding) {
                                d.close();
                                if (d.tempSelectedIndex != undefined) {
                                    d.selectIndex(d.tempSelectedIndex)
                                }
                            }
                        }
                    });
                    c.addHandler(c.firstDiv, "focus",
                    function() {
                        d.host.addClass(d.toThemeProperty("jqx-dropdownlist-state-focus"));
                        d.host.addClass(d.toThemeProperty("jqx-fill-state-focus"))
                    });
                    c.addHandler(c.firstDiv, "blur",
                    function() {
                        d.host.removeClass(d.toThemeProperty("jqx-dropdownlist-state-focus"));
                        d.host.removeClass(d.toThemeProperty("jqx-fill-state-focus"))
                    })
                },
                removeHandlers: function() {
                    var d = this;
                    c.removeHandler(c.dropDownButtonWrapper, "mousedown");
                    c.removeHandler(c.host, "keydown");
                    c.removeHandler(c.firstDiv, "focus");
                    c.removeHandler(c.firstDiv, "blur");
                    c.removeHandler(c.host, "mouseenter");
                    c.removeHandler(c.host, "mouseleave");
                    if (c.autoOpen) {
                        c.removeHandler(c.host, "mouseenter");
                        c.removeHandler(c.host, "mouseleave")
                    }
                    c.removeHandler(a(document), "mousemove." + d.element.id)
                },
                _findPos: function(e) {
                    while (e && (e.type == "hidden" || e.nodeType != 1 || a.expr.filters.hidden(e))) {
                        e = e.nextSibling
                    }
                    var d = a(e).coord(true);
                    return [d.left, d.top]
                },
                testOffset: function(j, h, e) {
                    var i = j.outerWidth();
                    var l = j.outerHeight();
                    var k = a(window).width() + a(window).scrollLeft();
                    var g = a(window).height() + a(window).scrollTop();
                    if (h.left + i > k) {
                        if (i > c.host.width()) {
                            var f = c.host.coord().left;
                            var d = i - c.host.width();
                            h.left = f - d + 2
                        }
                    }
                    if (h.left < 0) {
                        h.left = parseInt(c.host.coord().left) + "px"
                    }
                    if (h.top + l > g) {
                        h.top -= Math.abs(l + e)
                    }
                    return h
                },
                _getBodyOffset: function() {
                    var e = 0;
                    var d = 0;
                    if (a("body").css("border-top-width") != "0px") {
                        e = parseInt(a("body").css("border-top-width"));
                        if (isNaN(e)) {
                            e = 0
                        }
                    }
                    if (a("body").css("border-left-width") != "0px") {
                        d = parseInt(a("body").css("border-left-width"));
                        if (isNaN(d)) {
                            d = 0
                        }
                    }
                    return {
                        left: d,
                        top: e
                    }
                },
                open: function() {
                    a.jqx.aria(this, "aria-expanded", true);
                    var l = this;
                    var r = this;
                    if ((l.dropDownWidth == null || l.dropDownWidth == "auto") && l.width != null && l.width.indexOf && l.width.indexOf("%") != -1) {
                        var e = l.host.width();
                        l.container.width(parseInt(e))
                    }
                    r._raiseEvent("2");
                    var d = l.popupContent;
                    var o = a(window).scrollTop();
                    var j = a(window).scrollLeft();
                    var n = parseInt(l._findPos(l.host[0])[1]) + parseInt(l.host.outerHeight()) - 1 + "px";
                    var g, i = parseInt(Math.round(l.host.coord(true).left));
                    g = i + "px";
                    var q = a.jqx.mobile.isSafariMobileBrowser() || a.jqx.mobile.isWindowsPhone();
                    l.ishiding = false;
                    l.tempSelectedIndex = l.selectedIndex;
                    if ((q != null && q)) {
                        g = a.jqx.mobile.getLeftPos(l.element);
                        n = a.jqx.mobile.getTopPos(l.element) + parseInt(l.host.outerHeight());
                        if (a("body").css("border-top-width") != "0px") {
                            n = parseInt(n) - l._getBodyOffset().top + "px"
                        }
                        if (a("body").css("border-left-width") != "0px") {
                            g = parseInt(g) - l._getBodyOffset().left + "px"
                        }
                    }
                    d.stop();
                    l.host.addClass(l.toThemeProperty("jqx-dropdownlist-state-selected"));
                    l.host.addClass(l.toThemeProperty("jqx-fill-state-pressed"));
                    l.arrow.addClass(l.toThemeProperty("jqx-icon-arrow-down-selected"));
                    var h = false;
                    if (a.jqx.browser.msie && a.jqx.browser.version < 8) {
                        h = true
                    }
                    if (h) {
                        l.container.css("display", "block")
                    }
                    l.container.css("left", g);
                    l.container.css("top", n);
                    var f = true;
                    var s = false;
                    var m = function() {
                        if (l.dropDownHorizontalAlignment == "right" || l.rtl) {
                            var u = l.container.width();
                            var t = Math.abs(u - l.host.width());
                            if (u > l.host.width()) {
                                l.container.css("left", parseInt(Math.round(i)) - t + "px")
                            } else {
                                l.container.css("left", parseInt(Math.round(i)) + t + "px")
                            }
                        }
                    };
                    m.call(this);
                    if (l.enableBrowserBoundsDetection) {
                        var k = l.testOffset(d, {
                            left: parseInt(l.container.css("left")),
                            top: parseInt(n)
                        },
                        parseInt(l.host.outerHeight()));
                        if (parseInt(l.container.css("top")) != k.top) {
                            s = true;
                            l.container.height(d.outerHeight());
                            d.css("top", 23);
                            if (l.interval) {
                                clearInterval(l.interval)
                            }
                            l.interval = setInterval(function() {
                                if (d.outerHeight() != r.container.height()) {
                                    var t = r.testOffset(d, {
                                        left: parseInt(r.container.css("left")),
                                        top: parseInt(n)
                                    },
                                    parseInt(r.host.outerHeight()));
                                    r.container.css("top", t.top);
                                    r.container.height(d.outerHeight())
                                }
                            },
                            50)
                        } else {
                            d.css("top", 0)
                        }
                        l.container.css("top", k.top);
                        if (parseInt(l.container.css("left")) != k.left) {
                            l.container.css("left", k.left)
                        }
                    }
                    if (l.animationType == "none") {
                        l.container.css("visibility", "visible");
                        a.data(document.body, "openedJQXButtonParent", r);
                        a.data(document.body, "openedJQXButton" + l.element.id, d);
                        d.css("margin-top", 0);
                        d.css("opacity", 1);
                        l._raiseEvent("0");
                        m.call(r)
                    } else {
                        l.container.css("visibility", "visible");
                        var p = d.outerHeight();
                        r.isanimating = true;
                        if (l.animationType == "fade") {
                            d.css("margin-top", 0);
                            d.css("opacity", 0);
                            d.animate({
                                opacity: 1
                            },
                            l.openDelay,
                            function() {
                                a.data(document.body, "openedJQXButtonParent", r);
                                a.data(document.body, "openedJQXButton" + r.element.id, d);
                                r.ishiding = false;
                                r.isanimating = false;
                                r._raiseEvent("0")
                            });
                            m.call(r)
                        } else {
                            d.css("opacity", 1);
                            if (s) {
                                d.css("margin-top", p)
                            } else {
                                d.css("margin-top", -p)
                            }
                            m.call(r);
                            d.animate({
                                "margin-top": 0
                            },
                            l.openDelay,
                            function() {
                                a.data(document.body, "openedJQXButtonParent", r);
                                a.data(document.body, "openedJQXButton" + r.element.id, d);
                                r.ishiding = false;
                                r.isanimating = false;
                                r._raiseEvent("0")
                            })
                        }
                    }
                    if (!s) {
                        l.host.addClass(l.toThemeProperty("jqx-rc-b-expanded"));
                        l.container.addClass(l.toThemeProperty("jqx-rc-t-expanded"))
                    } else {
                        l.host.addClass(l.toThemeProperty("jqx-rc-t-expanded"));
                        l.container.addClass(l.toThemeProperty("jqx-rc-b-expanded"))
                    }
                    if (l.focusable) {
                        l.firstDiv.focus();
                        setTimeout(function() {
                            r.firstDiv.focus()
                        },
                        10)
                    }
                    l.container.addClass(l.toThemeProperty("jqx-fill-state-focus"));
                    l.host.addClass(r.toThemeProperty("jqx-dropdownlist-state-focus"));
                    l.host.addClass(r.toThemeProperty("jqx-fill-state-focus"))
                },
                close: function() {
                	//锁死不关闭
                	if(this.closeLock){
                		return;
                	}
                	
                    a.jqx.aria(this, "aria-expanded", false);
                    var i = this;
                    var g = i.popupContent;
                    var f = i.container;
                    var h = this;
                    h._raiseEvent("3");
                    var e = false;
                    if (a.jqx.browser.msie && a.jqx.browser.version < 8) {
                        e = true
                    }
                    if (!i.isOpened()) {
                        return
                    }
                    a.data(document.body, "openedJQXButton" + i.element.id, null);
                    if (i.animationType == "none") {
                        i.container.css("visibility", "hidden");
                        if (e) {
                            i.container.css("display", "none")
                        }
                    } else {
                        if (!h.ishiding) {
                            h.isanimating = true;
                            g.stop();
                            var d = g.outerHeight();
                            g.css("margin-top", 0);
                            var j = -d;
                            if (parseInt(i.container.coord().top) < parseInt(i.host.coord().top)) {
                                j = d
                            }
                            if (i.animationType == "fade") {
                                g.css({
                                    opacity: 1
                                });
                                g.animate({
                                    opacity: 0
                                },
                                i.closeDelay,
                                function() {
                                    f.css("visibility", "hidden");
                                    h.isanimating = false;
                                    h.ishiding = false;
                                    if (e) {
                                        f.css("display", "none")
                                    }
                                })
                            } else {
                                g.animate({
                                    "margin-top": j
                                },
                                i.closeDelay,
                                function() {
                                    f.css("visibility", "hidden");
                                    h.isanimating = false;
                                    h.ishiding = false;
                                    if (e) {
                                        f.css("display", "none")
                                    }
                                })
                            }
                        }
                    }
                    i.ishiding = true;
                    i.host.removeClass(i.toThemeProperty("jqx-dropdownlist-state-selected"));
                    i.host.removeClass(i.toThemeProperty("jqx-fill-state-pressed"));
                    i.arrow.removeClass(i.toThemeProperty("jqx-icon-arrow-down-selected"));
                    i.host.removeClass(i.toThemeProperty("jqx-rc-b-expanded"));
                    i.container.removeClass(i.toThemeProperty("jqx-rc-t-expanded"));
                    i.host.removeClass(i.toThemeProperty("jqx-rc-t-expanded"));
                    i.container.removeClass(i.toThemeProperty("jqx-rc-b-expanded"));
                    i.container.removeClass(i.toThemeProperty("jqx-fill-state-focus"));
                    i.host.removeClass(i.toThemeProperty("jqx-dropdownlist-state-focus"));
                    i.host.removeClass(i.toThemeProperty("jqx-fill-state-focus"));
                    i._raiseEvent("1")
                },
                closeOpenedDropDown: function(g) {
                    var e = g.data.me;
                    var d = a(g.target);
                    if (a(g.target).ischildof(g.data.me.host)) {
                        return true
                    }
                    if (a(g.target).ischildof(g.data.me.popupContent)) {
                        return true
                    }
                    var h = e;
                    var f = false;
                    a.each(d.parents(),
                    function() {
                        if (this.className != "undefined") {
                            if (this.className.indexOf && this.className.indexOf("dropDownButton") != -1) {
                                f = true;
                                return false
                            }
                        }
                    });
                    if (!f) {
                        e.close()
                    }
                    return true
                },
                refresh: function() {
                    c._arrange()
                },
                _arrange: function() {
                    var i = this;
                    var h = parseInt(i.host.width());
                    var d = parseInt(i.host.height());
                    var g = i.arrowSize;
                    var f = i.arrowSize;
                    var j = 3;
                    var e = h - f - 2 * j;
                    if (e > 0) {
                        i.dropDownButtonContent[0].style.width = e + "px"
                    }
                    i.dropDownButtonContent[0].style.height = parseInt(d) + "px";
                    i.dropDownButtonContent[0].style.left = "0px";
                    i.dropDownButtonContent[0].style.top = "0px";
                    i.dropDownButtonArrow[0].style.width = parseInt(f) + "px";
                    i.dropDownButtonArrow[0].style.height = parseInt(d) + "px";
                    if (i.rtl) {
                        i.dropDownButtonArrow.css("float", "left");
                        i.dropDownButtonContent.css("float", "right");
                        i.dropDownButtonContent.css("left", -j)
                    }
                    if (i.dropDownWidth != null) {
                        if (i.dropDownWidth.toString().indexOf("%") >= 0) {
                            var h = (parseInt(i.dropDownWidth) * i.host.width()) / 100;
                            i.container.width(h)
                        } else {
                            i.container.width(i.dropDownWidth)
                        }
                    }
                    if (i.dropDownHeight != null) {
                        i.container.height(i.dropDownHeight)
                    }
                },
                destroy: function() {
                    var d = this;
                    d.removeHandler(d.dropDownButtonWrapper, "selectstart");
                    d.removeHandler(d.dropDownButtonWrapper, "mousedown");
                    d.removeHandler(d.host, "keydown");
                    d.host.removeClass();
                    d.removeHandler(a(document), "mousedown." + d.element.id, self.closeOpenedDropDown);
                    d.host.remove();
                    d.container.remove()
                },
                _raiseEvent: function(h, e) {
                    if (e == undefined) {
                        e = {
                            owner: null
                        }
                    }
                    if (h == 2 && !c.contentInitialized) {
                        if (c.initContent) {
                            c.initContent();
                            c.contentInitialized = true
                        }
                    }
                    var f = c.events[h];
                    args = e;
                    args.owner = this;
                    var g = new a.Event(f);
                    g.owner = this;
                    if (h == 2 || h == 3 || h == 4) {
                        g.args = e
                    }
                    var d = c.host.trigger(g);
                    return d
                },
                resize: function(e, d) {
                    c.width = e;
                    c.height = d;
                    c._setSize();
                    c._arrange()
                },
                propertyChangedHandler: function(d, e, g, f) {
                    if (c.isInitialized == undefined || c.isInitialized == false) {
                        return
                    }
                    if (e == "rtl") {
                        if (f) {
                            d.dropDownButtonArrow.css("float", "left");
                            d.dropDownButtonContent.css("float", "right")
                        } else {
                            d.dropDownButtonArrow.css("float", "right");
                            d.dropDownButtonContent.css("float", "left")
                        }
                    }
                    if (e == "autoOpen") {
                        d.render()
                    }
                    if (e == "theme" && f != null) {
                        a.jqx.utilities.setTheme(g, f, d.host)
                    }
                    if (e == "width" || e == "height") {
                        d._setSize();
                        d._arrange()
                    }
                }
            };
            a.extend(true, this, b)
        }
    })
})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxColorPicker","",{});a.extend(a.jqx._jqxColorPicker.prototype,{defineInstance:function(){var b={disabled:false,height:null,width:null,color:new a.jqx.color({hex:"ff0000"}),redString:"R:",greenString:"G:",blueString:"B:",showTransparent:false,colorMode:"saturation",_delayLoading:false,events:["colorchange"]};a.extend(true,this,b);return b},createInstance:function(c){this.render();var b=this;a.jqx.utilities.resize(this.host,function(){b._setSize();b.refresh()},false,!this._delayLoading)},render:function(){this.element.innerHTML="";var b=this;this._isTouchDevice=a.jqx.mobile.isTouchDevice();if(typeof this.color=="string"){this.color=new a.jqx.color({hex:this.color})}this._setSize();this.host.addClass(this.toThemeProperty("jqx-widget"));this.host.addClass(this.toThemeProperty("jqx-reset"));this.host.addClass(this.toThemeProperty("jqx-color-picker"));this.container=a("<div style='width: 100%; height: 100%; position: relative;'></div>");this.container.appendTo(this.host);this.colorMap=a("<div style='left: 0; top: 0; position: absolute;'></div>");this.colorMap.appendTo(this.container);this.colorBar=a("<div style='left: 0; top: 0; position: absolute;'></div>");this.colorBar.appendTo(this.container);this.colorPanel=a("<div style='left: 0; top: 0; position: absolute;'></div>");this.colorPanel.appendTo(this.container);this.hexPanel=a("<div style='float: left;'></div>");this.hexPanel.appendTo(this.colorPanel);this.hexPanel.append('<span style="text-align: left;" >#</span>');this.hex=a("<input maxlength='6' style='height: 18px;'/>");this.hex.addClass(this.toThemeProperty("jqx-input"));this.hex.addClass(this.toThemeProperty("jqx-widget-content"));this.hex.appendTo(this.hexPanel);this.colorPanel.append('<div style="font-size: 1px; clear: both;"></div>');this.rgb=a("<div style='margin-top: 2px;'></div>");this.rgb.appendTo(this.colorPanel);this.red=a("<input style='width: 25px; height: 18px;' maxlength='3'/>");this.red.addClass(this.toThemeProperty("jqx-input"));this.red.addClass(this.toThemeProperty("jqx-widget-content"));this.rgb.append('<span style="text-align: left;">'+this.redString+"</span>");this.red.appendTo(this.rgb);this.green=a("<input style='margin-right: 2px; height: 18px; width: 25px;' maxlength='3'/>");this.green.addClass(this.toThemeProperty("jqx-input"));this.green.addClass(this.toThemeProperty("jqx-widget-content"));this.rgb.append('<span style="text-align: left;">'+this.greenString+"</span>");this.green.appendTo(this.rgb);this.colorPanel.addClass(this.toThemeProperty("jqx-color-picker-map-overlay"));this._mapImageOverlayURL=this._getImageUrl(this.colorPanel);this.colorPanel.removeClass(this.toThemeProperty("jqx-color-picker-map-overlay"));this.blue=a("<input style='height: 18px; width: 25px;' maxlength='3'/>");this.blue.addClass(this.toThemeProperty("jqx-input"));this.blue.addClass(this.toThemeProperty("jqx-widget-content"));this.rgb.append('<span style="text-align: left;">'+this.blueString+"</span>");this.blue.appendTo(this.rgb);this.preview=a("<div style='background: red; position: absolute;'></div>");this.preview.addClass(this.toThemeProperty("jqx-widget-content"));this.preview.appendTo(this.colorPanel);this.colorBarPointer=a("<div style='top: 0; left: 0; position: absolute; width: 100%;'></div>");this.colorBarPointer.addClass(this.toThemeProperty("jqx-color-picker-bar-pointer"));this.colorMapPointer=a("<div style='top: 0; left: 0; position: absolute; width: 100%;'></div>");this.colorMapPointer.addClass(this.toThemeProperty("jqx-color-picker-pointer"));this.transparent=a("<div style='text-align: center; clear: both;'><a style='text-align: center;' href='#'>transparent</a></div>");if(this.disabled){this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled"));this.element.disabled=true}this._addHandlers()},val:function(b){if(arguments.length==0){return"#"+this.color.hex}this.setColor(b);return this.color.hex},_setPositionFromValue:function(){var d=this;var c=d.color.h;var i=100-d.color.v;var b=d.colorMap.height();var e=d.colorMap.width();var h=c*e/360;var g=i*b/100;if(this.colorMode=="saturation"){var f=100-d.color.s;f=f*b/100;d._saturation=100-d.color.s;d.colorMapPointer.css("margin-left",h-8);d.colorMapPointer.css("margin-top",g-8);d.colorBarPointer.css("margin-top",f-8);d.colorMapImageOverlay.css("opacity",(100-d.color.s)/100)}else{var c=d.color.s;var h=c*e/100;var g=i*b/100;var f=360-d.color.h;f=f*b/360;d._hue=d.color.h;d.colorMapPointer.css("margin-left",h-8);d.colorMapPointer.css("margin-top",g-8);d.colorBarPointer.css("margin-top",f-8)}},updateRGB:function(){var b=this;b.color.setRgb(b.red.val(),b.green.val(),b.blue.val());b._updateUI();b._raiseEvent("0",{color:b.color});b.color.transparent=false},_setPosition:function(f,c,h){var e=parseInt(f.pageX);var g=parseInt(c.offset().left);var b=parseInt(f.pageY);var d=parseInt(c.offset().top);if(this._isTouchDevice){var i=a.jqx.position(f);e=i.left;b=i.top}if(h[0].className.indexOf("jqx-color-picker-bar")==-1){h.css("margin-left",e-8-g)}if(b>=d&&b<=d+c.height()){h.css("margin-top",b-8-d)}},_handleKeyInput:function(c,d,b){if(c.disabled){return}if(!c._validateKey(d)){return d}b.val(c._setValueInRange(b.val(),0,255));this.updateRGB();this._setPositionFromValue()},_addHandlers:function(){var d=this;this.addHandler(this.colorMapPointer,"dragStart",function(j){j.preventDefault();return false});this.addHandler(this.colorBarPointer,"dragStart",function(j){j.preventDefault();return false});this.addHandler(this.transparent,"click",function(j){d._raiseEvent("0",{color:"transparent"});j.preventDefault();d.color.transparent=true});this.addHandler(this.host,"selectionstart",function(j){j.preventDefault();return false});this.addHandler(this.blue,"keyup blur",function(j){d._handleKeyInput(d,j,d.blue)});this.addHandler(this.green,"keyup blur",function(j){d._handleKeyInput(d,j,d.green)});this.addHandler(this.red,"keyup blur",function(j){d._handleKeyInput(d,j,d.red)});this.addHandler(this.hex,"keyup blur",function(j){if(d.disabled){return}if(!d._validateKey(j)){return j}if(d.hex.val().toString().length==6){d.hex.val(d.color.validateHex(d.hex.val()));d.color.setHex(d.hex.val());d._updateUI();d._setPositionFromValue();d._raiseEvent("0",{color:d.color})}});this.addHandler(this.colorMap,"dragstart",function(j){j.preventDefault();return false});var f=function(k){d._setPosition(k,d.colorMap,d.colorMapPointer);if(d.colorMode=="saturation"){var j=d._valuesFromMouse(k,d.colorMap,360,100);if(j.x>360){j.x=360}d.color.setHsv(j.x,d._saturation!=null?100-d._saturation:100,100-j.y)}else{var j=d._valuesFromMouse(k,d.colorMap,100,100);if(j.x>100){j.x=100}d.color.setHsv(d._hue!=null?d._hue:360,j.x,100-j.y)}d._updateUI();d._raiseEvent("0",{color:d.color});d.color.transparent=false};var c="mousedown.picker"+this.element.id;if(this._isTouchDevice){c=a.jqx.mobile.getTouchEventName("touchstart")+".picker"+this.element.id}this.addHandler(this.colorMap,c,function(j){if(d.disabled){return}d.beginDrag=true;f(j)});var b="mousemove.picker"+this.element.id;if(this._isTouchDevice){b=a.jqx.mobile.getTouchEventName("touchmove")+".picker"+this.element.id}this.addHandler(a(document),b,function(j){if(d.disabled){return}if(d.beginDrag==true){f(j);if(d._isTouchDevice){j.preventDefault()}}});if(!this._isTouchDevice){this.addHandler(this.colorBar,"dragstart",function(j){j.preventDefault();return false})}var e=function(k){d._setPosition(k,d.colorBar,d.colorBarPointer);if(d.colorMode=="saturation"){var j=d._valuesFromMouse(k,d.colorBar,100,100);d.color.s=j.y;d._saturation=j.y;d.colorMapImageOverlay.css("opacity",(d.color.s)/100);d.color.setHsv(d.color.h,100-d.color.s,d.color.v)}else{var j=d._valuesFromMouse(k,d.colorBar,100,360);d.color.h=360-j.y;d._hue=d.color.h;d.color.setHsv(d.color.h,d.color.s,d.color.v)}d._updateUI();d._raiseEvent("0",{color:d.color});d.color.transparent=false};var h="mousemove.colorBar"+this.element.id;var g="mousedown.colorBar"+this.element.id;var i="mouseup.colorBar"+this.element.id;if(this._isTouchDevice){h=a.jqx.mobile.getTouchEventName("touchmove")+".colorBar"+this.element.id;g=a.jqx.mobile.getTouchEventName("touchstart")+".colorBar"+this.element.id;i=a.jqx.mobile.getTouchEventName("touchend")+".colorBar"+this.element.id}this.addHandler(this.colorBar,g,function(j){if(d.disabled){return}d.beginDragBar=true;e(j)});this.addHandler(a(document),h,function(j){if(d.disabled){return}if(d.beginDragBar==true){e(j);if(d._isTouchDevice){j.preventDefault()}}});this.addHandler(a(document),i,function(j){if(d.disabled){return}d.beginDrag=false;d.beginDragBar=false})},_removeHandlers:function(){this.removeHandler(this.transparent,"click");this.removeHandler(this.host,"selectionstart");this.removeHandler(this.blue,"keyup blur");this.removeHandler(this.green,"keyup blur");this.removeHandler(this.red,"keyup blur");this.removeHandler(this.hex,"keyup blur");this.removeHandler(this.colorMap,"dragstart");this.removeHandler(this.colorBar,"dragstart");this.removeHandler(this.colorMapPointer,"dragStart");this.removeHandler(this.colorBarPointer,"dragStart");var g=this.element.id;var e="mousemove.colorBar"+g;var d="mousedown.colorBar"+g;var f="mouseup.colorBar"+g;var c="mousedown.picker"+g;var b="mousemove.picker"+g;if(this._isTouchDevice){e=a.jqx.mobile.getTouchEventName("touchmove")+".colorBar"+g;d=a.jqx.mobile.getTouchEventName("touchstart")+".colorBar"+g;f=a.jqx.mobile.getTouchEventName("touchend")+".colorBar"+g;c=a.jqx.mobile.getTouchEventName("touchstart")+".picker"+g;b=a.jqx.mobile.getTouchEventName("touchmove")+".picker"+g}this.removeHandler(this.colorMap,c);this.removeHandler(this.colorMap,b);this.removeHandler(this.colorBar,d);this.removeHandler(this.colorBar,e);this.removeHandler(a(document),b);this.removeHandler(a(document),e);this.removeHandler(a(document),f)},_raiseEvent:function(g,c){if(c==undefined){c={owner:null}}var d=this.events[g];var e=c?c:{};e.owner=this;var f=new a.Event(d);f.owner=this;f.args=e;var b=this.host.trigger(f);return b},setColor:function(b){if(!b){return}if(b=="transparent"){this.color.transparent=true;this.color.hex="000";this.color.r=0;this.color.g=0;this.color.b=0}else{if(b.r){this.color=new a.jqx.color({rgb:b})}else{if(b.substring(0,1)=="#"){this.color=new a.jqx.color({hex:b.substring(1)})}else{this.color=new a.jqx.color({hex:b})}}}this._updateUI();this._setPositionFromValue();this._raiseEvent("0",{color:this.color})},getColor:function(){return this.color},resize:function(c,b){this.width=c;this.height=b;this._setSize();this.refresh()},propertyChangedHandler:function(b,c,e,d){if(b.isInitialized==undefined||b.isInitialized==false){return}if(c=="colorMode"){b.refresh()}if(c=="color"){b._updateUI();b._setPositionFromValue();b._raiseEvent("0",{color:d})}if(c=="width"||c=="height"){b._setSize();b.refresh()}if(c=="showTransparent"){b.refresh()}if(c=="disabled"){this.element.disabled=d;if(d){b.host.addClass(b.toThemeProperty("jqx-fill-state-disabled"))}else{b.host.removeClass(b.toThemeProperty("jqx-fill-state-disabled"))}}},_valuesFromMouse:function(j,g,c,b){var k=0;var i=0;var f=g.offset();var p=g.height();var d=g.width();var n=j.pageX;var m=j.pageY;if(this._isTouchDevice){var l=a.jqx.position(j);n=l.left;m=l.top}if(n<f.left){k=0}else{if(n>f.left+d){k=d}else{k=n-f.left+1}}if(m<f.top){i=0}else{if(m>f.top+p){i=p}else{i=m-f.top+1}}var h=parseInt(k/d*c);var o=parseInt(i/p*b);return{x:h,y:o}},_validateKey:function(b){if(b.keyCode==9||b.keyCode==16||b.keyCode==38||b.keyCode==29||b.keyCode==40||b.keyCode==17||b.keyCode==37||(b.ctrlKey&&(b.keyCode=="c".charCodeAt()||b.keyCode=="v".charCodeAt()))||(b.ctrlKey&&(b.keyCode=="C".charCodeAt()||b.keyCode=="V".charCodeAt()))){return false}if(b.ctrlKey||b.shiftKey){return false}return true},_setValueInRange:function(d,c,b){if(d==""||isNaN(d)){return c}d=parseInt(d);if(d>b){return b}if(d<c){return c}return d},destroy:function(){a.jqx.utilities.resize(this.host,null,true);this.host.removeClass();this._removeHandlers();this.host.remove()},setPointerStyle:function(c){this.colorMapPointer.removeClass();if(c=="transparent"||c.hex==""){this.colorMapPointer.addClass(this.toThemeProperty("jqx-color-picker-pointer"))}var b=105;var d=(c.r*0.299)+(c.g*0.587)+(c.b*0.114);var e=(255-d<b)?"Black":"White";if(e=="Black"){this.colorMapPointer.addClass(this.toThemeProperty("jqx-color-picker-pointer"))}else{this.colorMapPointer.addClass(this.toThemeProperty("jqx-color-picker-pointer-alt"))}},_updateUI:function(){var c=this;c.red.val(c.color.r);c.green.val(c.color.g);c.blue.val(c.color.b);c.hex.val(c.color.hex);var b=new a.jqx.color({hex:"fff"});if(this.colorMode=="saturation"){b.setHsv(this.color.h,100,this.color.v);c.colorBar.css("background","#"+b.hex)}else{b.setHsv(this.color.h,100,100);c.colorMap.css("background-color","#"+b.hex)}c.preview.css("background","#"+this.color.hex);c.setPointerStyle(this.color)},_setSize:function(){if(this.width!=null&&this.width.toString().indexOf("px")!=-1){this.host.width(this.width)}else{if(this.width!=undefined&&!isNaN(this.width)){this.host.width(this.width)}}if(this.height!=null&&this.height.toString().indexOf("px")!=-1){this.host.height(this.height)}else{if(this.height!=undefined&&!isNaN(this.height)){this.host.height(this.height)}}if(this.host.width()<130){this.host.width(150)}if(this.host.height()<70){this.host.height(70)}if(this.width!=null&&this.width.toString().indexOf("%")!=-1){this.host.width(this.width)}if(this.height!=null&&this.height.toString().indexOf("%")!=-1){this.host.height(this.height)}},_arrange:function(){var d=this.host.height();var g=this.host.width();var b=d-44;if(this.showTransparent){b=d-64}if(b<=0){return}this.colorMap.width(85*g/100);this.colorMap.height(b);this.colorBar.height(b);this.colorBar.css("left",this.colorMap.width()+4);this.colorBar.width(8*g/100);this.colorBarPointer.width(this.colorBar.width());this.colorPanel.width(g);this.colorPanel.height(40);if(this.showTransparent){this.colorPanel.height(60)}this.colorPanel.css("top",b+4);this.colorPanel.css("text-align","left");this.hex.width(this.colorMap.width()-this.colorBar.width()-4);var c=this.red.prev().outerWidth()-this.hex.prev().outerWidth();if(c<4){c=4}this.hex.css("margin-left",c+"px");this.preview.width(this.colorBar.width()+7);this.preview.height(25);this.preview.addClass(this.toThemeProperty("jqx-rc-all"));this.preview.addClass(this.toThemeProperty("jqx-color-picker-preview"));this.preview.css("left",this.colorMap.width()-2);this.preview.css("top","5px");var e=this.hex.width();var f=e-this.blue.prev().outerWidth()-this.green.prev().outerWidth()-6;if(f>0){this.blue.width(f/3);this.green.width(f/3);this.red.width(f/3);return}},_getColorPointer:function(){var b=a("<div></div>");b.addClass(this.toThemeProperty("jqx-color-picker-pointer"));return b},_getImageUrl:function(c){var b=c.css("backgroundImage");b=b.replace('url("',"");b=b.replace('")',"");b=b.replace("url(","");b=b.replace(")","");return b},refresh:function(){if(this._delayLoading){return}this._saturation=null;this._hue=null;this.colorMap.removeClass();this.colorBar.removeClass();this.colorMap.addClass(this.toThemeProperty("jqx-disableselect"));this.colorBar.addClass(this.toThemeProperty("jqx-disableselect"));this.colorPanel.addClass(this.toThemeProperty("jqx-color-picker-panel"));this.colorBar.css("background-image","");this.colorMap.css("background-image","");if(this.colorMode=="saturation"){this.colorMap.addClass(this.toThemeProperty("jqx-color-picker-map"));this.colorBar.addClass(this.toThemeProperty("jqx-color-picker-bar"))}else{this.colorMap.addClass(this.toThemeProperty("jqx-color-picker-map-hue"));this.colorBar.addClass(this.toThemeProperty("jqx-color-picker-bar-hue"))}this._barImageURL=this._getImageUrl(this.colorBar);this._mapImageURL=this._getImageUrl(this.colorMap);this._arrange();this.colorBar.children().remove();this.colorBarImageContainer=a("<div style='overflow: hidden;'></div>");this.colorBarImageContainer.width(this.colorBar.width());this.colorBarImageContainer.height(this.colorBar.height());this.colorBarImageContainer.appendTo(this.colorBar);this.colorBarImage=a("<img/>");this.colorBarImage.appendTo(this.colorBarImageContainer);this.colorBarImage.attr("src",this._barImageURL);this.colorBar.css("background-image","none");this.colorBarImage.attr("width",this.colorBar.width());this.colorBarImage.attr("height",this.colorBar.height());this.colorBarPointer.appendTo(this.colorBar);this.colorMap.children().remove();this.colorMapImage=a("<img/>");this.colorMapImage.appendTo(this.colorMap);this.colorMapImage.attr("src",this._mapImageURL);this.colorMap.css("background-image","none");this.colorMapImage.attr("width",this.colorMap.width());this.colorMapImage.attr("height",this.colorMap.height());this.colorMapImageOverlay=a("<img style='position: absolute; left: 0; top: 0;'/>");this.colorMapImageOverlay.prependTo(this.colorMap);this.colorMapImageOverlay.attr("src",this._mapImageOverlayURL);this.colorMapImageOverlay.attr("width",this.colorMap.width());this.colorMapImageOverlay.attr("height",this.colorMap.height());this.colorMapImageOverlay.css("opacity",0);this.colorMapPointer.appendTo(this.colorMap);if(this.showTransparent){this.transparent.appendTo(this.colorPanel)}this._updateUI();this._setPositionFromValue()}});a.jqx.color=function(d){var b={r:0,g:0,b:0,h:0,s:0,v:0,hex:"",hexToRgb:function(i){i=this.validateHex(i);var h="00",f="00",e="00";if(i.length==6){h=i.substring(0,2);f=i.substring(2,4);e=i.substring(4,6)}else{if(i.length>4){h=i.substring(4,i.length);i=i.substring(0,4)}if(i.length>2){f=i.substring(2,i.length);i=i.substring(0,2)}if(i.length>0){e=i.substring(0,i.length)}}return{r:this.hexToInt(h),g:this.hexToInt(f),b:this.hexToInt(e)}},validateHex:function(e){e=new String(e).toUpperCase();e=e.replace(/[^A-F0-9]/g,"0");if(e.length>6){e=e.substring(0,6)}return e},webSafeDec:function(e){e=Math.round(e/51);e*=51;return e},hexToWebSafe:function(i){var h,f,e;if(i.length==3){h=i.substring(0,1);f=i.substring(1,1);e=i.substring(2,1)}else{h=i.substring(0,2);f=i.substring(2,4);e=i.substring(4,6)}return intToHex(this.webSafeDec(this.hexToInt(h)))+this.intToHex(this.webSafeDec(this.hexToInt(f)))+this.intToHex(this.webSafeDec(this.hexToInt(e)))},rgbToWebSafe:function(e){return{r:this.webSafeDec(e.r),g:this.webSafeDec(e.g),b:this.webSafeDec(e.b)}},rgbToHex:function(e){return this.intToHex(e.r)+this.intToHex(e.g)+this.intToHex(e.b)},intToHex:function(f){var e=(parseInt(f).toString(16));if(e.length==1){e=("0"+e)}return e.toUpperCase()},hexToInt:function(e){return(parseInt(e,16))},hslToRgb:function(v){var n=parseInt(v.h)/360;var w=parseInt(v.s)/100;var k=parseInt(v.l)/100;if(k<=0.5){var f=k*(1+w)}else{var f=k+w-(k*w)}var i=2*k-f;var t=n+(1/3);var j=n;var m=n-(1/3);var e=Math.round(this.hueToRgb(i,f,t)*255);var o=Math.round(this.hueToRgb(i,f,j)*255);var u=Math.round(this.hueToRgb(i,f,m)*255);return{r:e,g:o,b:u}},hueToRgb:function(g,f,e){if(e<0){e+=1}else{if(e>1){e-=1}}if((e*6)<1){return g+(f-g)*e*6}else{if((e*2)<1){return f}else{if((e*3)<2){return g+(f-g)*((2/3)-e)*6}else{return g}}}},rgbToHsv:function(h){var k=h.r/255;var j=h.g/255;var f=h.b/255;hsv={h:0,s:0,v:0};var i=0;var e=0;if(k>=j&&k>=f){e=k;i=(j>f)?f:j}else{if(j>=f&&j>=k){e=j;i=(k>f)?f:k}else{e=f;i=(j>k)?k:j}}hsv.v=e;hsv.s=(e)?((e-i)/e):0;if(!hsv.s){hsv.h=0}else{delta=e-i;if(k==e){hsv.h=(j-f)/delta}else{if(j==e){hsv.h=2+(f-k)/delta}else{hsv.h=4+(k-j)/delta}}hsv.h=parseInt(hsv.h*60);if(hsv.h<0){hsv.h+=360}}hsv.s=parseInt(hsv.s*100);hsv.v=parseInt(hsv.v*100);return hsv},hsvToRgb:function(l){rgb={r:0,g:0,b:0};var k=l.h;var r=l.s;var n=l.v;if(r==0){if(n==0){rgb.r=rgb.g=rgb.b=0}else{rgb.r=rgb.g=rgb.b=parseInt(n*255/100)}}else{if(k==360){k=0}k/=60;r=r/100;n=n/100;var j=parseInt(k);var m=k-j;var g=n*(1-r);var e=n*(1-(r*m));var o=n*(1-(r*(1-m)));switch(j){case 0:rgb.r=n;rgb.g=o;rgb.b=g;break;case 1:rgb.r=e;rgb.g=n;rgb.b=g;break;case 2:rgb.r=g;rgb.g=n;rgb.b=o;break;case 3:rgb.r=g;rgb.g=e;rgb.b=n;break;case 4:rgb.r=o;rgb.g=g;rgb.b=n;break;case 5:rgb.r=n;rgb.g=g;rgb.b=e;break}rgb.r=parseInt(rgb.r*255);rgb.g=parseInt(rgb.g*255);rgb.b=parseInt(rgb.b*255)}return rgb},setRgb:function(h,f,e){var j=function(g){if(g<0||g>255){return 0}if(isNaN(parseInt(g))){return 0}return g};this.r=j(h);this.g=j(f);this.b=j(e);var i=this.rgbToHsv(this);this.h=i.h;this.s=i.s;this.v=i.v;this.hex=this.rgbToHex(this)},setHsl:function(g,f,e){this.h=g;this.s=f;this.l=e;var i=this.hslToRgb(this);this.r=i.r;this.g=i.g;this.b=i.b;this.hex=this.rgbToHex(i)},setHsv:function(g,f,e){this.h=g;this.s=f;this.v=e;var i=this.hsvToRgb(this);this.r=i.r;this.g=i.g;this.b=i.b;this.hex=this.rgbToHex(i)},setHex:function(e){this.hex=e;var g=this.hexToRgb(this.hex);this.r=g.r;this.g=g.g;this.b=g.b;var f=this.rgbToHsv(g);this.h=f.h;this.s=f.s;this.v=f.v}};if(d){if(d.hex){var c=b.validateHex(d.hex);b.setHex(c)}else{if(d.r){b.setRgb(d.r,d.g,d.b)}else{if(d.h){b.setHsv(d.h,d.s,d.v)}else{if(d.rgb){b.setRgb(d.rgb.r,d.rgb.g,d.rgb.b)}}}}}return b}})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a) {
    a.jqx.jqxWidget("jqxWindow", "", {});
    a.extend(a.jqx._jqxWindow.prototype, {
        defineInstance: function() {
            var e = {
                height: "auto",
                width: 200,
                minHeight: 50,
                maxHeight: 600,
                minWidth: 50,
                maxWidth: 800,
                showCloseButton: true,
                disabled: false,
                autoOpen: true,
                keyboardCloseKey: "esc",
                title: "",
                content: "",
                draggable: true,
                resizable: true,
                animationType: "fade",
                closeAnimationDuration: 250,
                showAnimationDuration: 250,
                isModal: false,
                position: "center",
                closeButtonSize: 16,
                closeButtonAction: "hide",
                modalOpacity: 0.45,
                dragArea: null,
                okButton: null,
                cancelButton: null,
                dialogResult: {
                    OK: false,
                    Cancel: false,
                    None: true
                },
                collapsed: false,
                showCollapseButton: false,
                collapseAnimationDuration: 150,
                collapseButtonSize: 16,
                rtl: false,
                keyboardNavigation: true,
                headerHeight: null,
                _events: ["created", "closed", "moving", "moved", "open", "collapse", "expand", "open", "close", "resize"],
                initContent: null,
                enableResize: true,
                restricter: null,
                closing: null,
                _invalidArgumentExceptions: {
                    invalidHeight: "Invalid height!",
                    invalidWidth: "Invalid width!",
                    invalidMinHeight: "Invalid minHeight!",
                    invalidMaxHeight: "Invalid maxHeight!",
                    invalidMinWidth: "Invalid minWidth!",
                    invalidMaxWidth: "Invalid maxWidth",
                    invalidKeyCode: "Invalid keyCode!",
                    invalidAnimationType: "Invalid animationType!",
                    invalidCloseAnimationDuration: "Invalid closeAnimationDuration!",
                    invalidShowAnimationDuration: "Invalid showAnimationDuration!",
                    invalidPosition: "Invalid position!",
                    invalidCloseButtonSize: "Invalid closeButtonSize!",
                    invalidCollapseButtonSize: "Invalid collapseButtonSize!",
                    invalidCloseButtonAction: "Invalid cluseButtonAction!",
                    invalidModalOpacity: "Invalid modalOpacity!",
                    invalidDragArea: "Invalid dragArea!",
                    invalidDialogResult: "Invalid dialogResult!",
                    invalidIsModal: "You can have just one modal window!"
                },
                _enableResizeCollapseBackup: null,
                _enableResizeBackup: undefined,
                _heightBeforeCollapse: null,
                _minHeightBeforeCollapse: null,
                _mouseDown: false,
                _isDragging: false,
                _rightContentWrapper: null,
                _leftContentWrapper: null,
                _headerContentWrapper: null,
                _closeButton: null,
                _collapseButton: null,
                _title: null,
                _content: null,
                _mousePosition: {},
                _windowPosition: {},
                _modalBackground: null,
                _SCROLL_WIDTH: 21,
                _visible: true,
                modalBackgroundZIndex: 12990,
                modalZIndex: 18000,
                zIndex: 9001,
                _touchEvents: {
                    mousedown: a.jqx.mobile.getTouchEventName("touchstart"),
                    mouseup: a.jqx.mobile.getTouchEventName("touchend"),
                    mousemove: a.jqx.mobile.getTouchEventName("touchmove"),
                    mouseenter: "mouseenter",
                    mouseleave: "mouseleave",
                    click: a.jqx.mobile.getTouchEventName("touchstart")
                }
            };
            a.extend(true, this, e);
            return e
        },
        createInstance: function() {
            this.host.attr("role", "dialog");
            this.host.removeAttr("data-bind");
            this.host.detach();
            a(document.body).append(this.host);
            var f = this;
            var g = function() {
                var i = parseInt(a(f.restricter).css("padding-top"));
                var h = parseInt(a(f.restricter).css("padding-left"));
                var k = parseInt(a(f.restricter).css("padding-bottom"));
                var m = parseInt(a(f.restricter).css("padding-right"));
                var l = a(f.restricter).coord();
                f.dragArea = {
                    left: h + l.left,
                    top: i + l.top,
                    width: 1 + m + a(f.restricter).width(),
                    height: 1 + k + a(f.restricter).height()
                }
            };
            if (this.restricter) {
                g()
            }
            if (this.restricter) {
                this.addHandler(a(window), "resize." + this.element.id,
                function() {
                    g()
                });
                this.addHandler(a(window), "orientationchanged." + this.element.id,
                function() {
                    g()
                });
                this.addHandler(a(window), "orientationchange." + this.element.id,
                function() {
                    g()
                })
            }
            this._isTouchDevice = a.jqx.mobile.isTouchDevice();
            this._validateProperties();
            this._createStructure();
            this._refresh();
            if (!this.autoOpen) {
                this.host.css("display", "none")
            }
            if (a.jqx.browser.msie) {
                this.host.addClass(this.toThemeProperty("jqx-noshadow"))
            }
            if (!this.isModal) {
                this._fixWindowZIndex()
            }
            this._setStartupSettings();
            this._positionWindow();
            this._raiseEvent(0);
            if (this.autoOpen) {
                this._performLayout();
                var e = this;
                if (this.isModal) {
                    this._fixWindowZIndex("modal-show")
                }
                if (e.initContent) {
                    e.initContent();
                    e._contentInitialized = true
                }
                this._raiseEvent(7);
                this._raiseEvent(9)
            }
        },
        refresh: function() {
            this._performLayout()
        },
        _setStartupSettings: function() {
            if (this.disabled) {
                this.disable()
            }
            if (this.collapsed) {
                this.collapsed = false;
                this.collapse(0)
            }
            if (!this.autoOpen) {
                this.hide(null, 0.001, true);
                this._visible = false
            }
            if (this.title !== null && this.title !== "") {
                this.setTitle(this.title)
            }
            if (this.content !== null && this.content !== "") {
                this.setContent(this.content)
            }
            this.title = this._headerContentWrapper.html();
            this.content = this._content.html()
        },
        _fixWindowZIndex: function(m) {
            var e = a.data(document.body, "jqxwindows-list") || [],
            n = this.zIndex,
            h;
            if (!this.isModal) {
                if (this._indexOf(this.host, e) < 0) {
                    e.push(this.host)
                }
                a.data(document.body, "jqxwindows-list", e);
                if (e.length > 1) {
                    var f = e[e.length - 2];
                    n = parseInt(f.css("z-index"), 10) + 1
                }
            } else {
                if (e) {
                    e = this._removeFromArray(this.host, e);
                    a.data(document.body, "jqxwindows-list", e)
                }
                var g = a.data(document.body, "jqxwindows-modallist");
                if (!g) {
                    if (m == "modal-show") {
                        var k = new Array();
                        k.push(this.host);
                        a.data(document.body, "jqxwindows-modallist", k);
                        g = k
                    } else {
                        a.data(document.body, "jqxwindows-modallist", new Array());
                        g = new Array()
                    }
                } else {
                    if (m == "modal-show") {
                        g.push(this.host)
                    } else {
                        var i = g.indexOf(this.host);
                        if (i != -1) {
                            g.splice(i, 1)
                        }
                    }
                }
                n = this.modalZIndex;
                var l = this;
                a.each(g,
                function(q) {
                    if (this.data()) {
                        if (this.data().jqxWindow) {
                            var o = this.data().jqxWindow.instance;
                            o._modalBackground.css("z-index", n);
                            o.host.css("z-index", n + 1);
                            n += 2
                        }
                    }
                });
                a.data(document.body, "jqxwindow-modal", this.host);
                return
            }
            this.host.css("z-index", n);
            this._sortByStyle("z-index", e)
        },
        _validateProperties: function() {
            try {
                this._validateSize();
                this._validateAnimationProperties();
                this._validateInteractionProperties();
                this._validateModalProperties();
                if (!this.position) {
                    throw new Error(this._invalidArgumentExceptions.invalidPosition)
                }
                if (isNaN(this.closeButtonSize) || parseInt(this.closeButtonSize) < 0) {
                    throw new Error(this._invalidArgumentExceptions.invalidCloseButtonSize)
                }
                if (isNaN(this.collapseButtonSize) || parseInt(this.collapseButtonSize) < 0) {
                    throw new Error(this._invalidArgumentExceptions.invalidCollapseButtonSize)
                }
            } catch(e) {
                alert(e)
            }
        },
        _validateModalProperties: function() {
            if (this.modalOpacity < 0 || this.modalOpacity > 1) {
                throw new Error(this._invalidArgumentExceptions.invalidModalOpacity)
            }
            if (this.isModal && !this._singleModalCheck()) {
                throw new Error(this._invalidArgumentExceptions.invalidIsModal)
            }
        },
        _validateSize: function() {
            this._validateSizeLimits();
            if (this.height !== "auto" && isNaN(parseInt(this.height))) {
                throw new Error(this._invalidArgumentExceptions.invalidHeight)
            }
            if (this.width !== "auto" && isNaN(parseInt(this.width))) {
                throw new Error(this._invalidArgumentExceptions.invalidWidth)
            }
            if (this.height !== "auto" && this.height < this.minHeight) {
                this.height = this.minHeight
            }
            if (this.width < this.minWidth) {
                this.width = this.minWidth
            }
            if (this.height !== "auto" && this.height > this.maxHeight) {
                this.height = this.maxHeight
            }
            if (this.width > this.maxWidth) {
                this.width = this.maxWidth
            }
            if (this.dragArea === null) {
                return
            }
            if (this.dragArea && ((this.dragArea.height !== null && this.host.height() > this.dragArea.height) || (parseInt(this.height, 10) > this.dragArea.height)) || (this.dragArea.width !== null && this.width > this.dragArea.width) || (this.maxHeight > this.dragArea.height || this.maxWidth > this.dragArea.width)) {}
        },
        _validateSizeLimits: function() {
            if (this.maxHeight == null) {
                this.maxHeight = 9999
            }
            if (this.minWidth == null) {
                this.minWidth = 0
            }
            if (this.maxWidth == null) {
                this.maxWidth = 9999
            }
            if (this.minHeight == null) {
                this.minHeight = 0
            }
            if (isNaN(parseInt(this.minHeight))) {
                throw new Error(this._invalidArgumentExceptions.invalidMinHeight)
            }
            if (isNaN(parseInt(this.maxHeight))) {
                throw new Error(this._invalidArgumentExceptions.invalidMaxHeight)
            }
            if (isNaN(parseInt(this.minWidth))) {
                throw new Error(this._invalidArgumentExceptions.invalidMinWidth)
            }
            if (isNaN(parseInt(this.maxWidth))) {
                throw new Error(this._invalidArgumentExceptions.invalidMaxWidth)
            }
            if (this.minHeight > this.maxHeight) {
                throw new Error(this._invalidArgumentExceptions.invalidMinHeight)
            }
            if (this.minWidth > this.maxWidth) {
                throw new Error(this._invalidArgumentExceptions.invalidMinWidth)
            }
        },
        _validateAnimationProperties: function() {
            if (this.animationType !== "fade" && this.animationType !== "slide" && this.animationType !== "combined" && this.animationType !== "none") {
                throw new Error(this._invalidArgumentExceptions.invalidAnimationType)
            }
            if (isNaN(parseInt(this.closeAnimationDuration), 10) || this.closeAnimationDuration < 0) {
                throw new Error(this._invalidArgumentExceptions.invalidCloseAnimationDuration)
            }
            if (isNaN(parseInt(this.showAnimationDuration), 10) || this.showAnimationDuration < 0) {
                throw new Error(this._invalidArgumentExceptions.invalidShowAnimationDuration)
            }
        },
        _validateInteractionProperties: function() {
            if (parseInt(this.keyCode, 10) < 0 || parseInt(this.keyCode, 10) > 130 && this.keyCode !== "esc") {
                throw new Error(this._invalidArgumentExceptions.invalidKeyCode)
            }
            if (this.dragArea !== null && (typeof this.dragArea.width === "undefined" || typeof this.dragArea.height === "undefined" || typeof this.dragArea.left === "undefined" || typeof this.dragArea.top === "undefined")) {
                throw new Error(this._invalidArgumentExceptions.invalidDragArea)
            }
            if (!this.dialogResult || (!this.dialogResult.OK && !this.dialogResult.Cancel && !this.dialogResult.None)) {
                throw new Error(this._invalidArgumentExceptions.invalidDialogResult)
            }
            if (this.closeButtonAction !== "hide" && this.closeButtonAction !== "close") {
                throw new Error(this._invalidArgumentExceptions.invalidCloseButtonAction)
            }
        },
        _singleModalCheck: function() {
            var e = a.data(document.body, "jqxwindows-list") || [],
            f = e.length;
            while (f) {
                f -= 1;
                if (a(e[f].attr("id")).length > 0) {
                    if (a(e[f].attr("id")).jqxWindow("isModal")) {
                        return false
                    }
                }
            }
            return true
        },
        _createStructure: function() {
            var e = this.host.children("DIV");
            if (e.length === 1) {
                this._header = a("<div>" + this.host.attr("caption") + "</div>");
                this.host.prepend(this._header);
                this.host.attr("caption", "");
                this._content = a(e[0])
            } else {
                if (e.length === 2) {
                    this._header = a(e[0]);
                    this._content = a(e[1])
                } else {
                    throw new Error("Invalid structure!")
                }
            }
        },
        _refresh: function() {
            this._render();
            this._addStyles();
            this._performLayout();
            this._removeEventHandlers();
            this._addEventHandlers();
            this._initializeResize()
        },
        _render: function() {
            this._addHeaderWrapper();
            this._addCloseButton();
            this._addCollapseButton();
            this._removeModal();
            this._makeModal()
        },
        _addHeaderWrapper: function() {
            if (!this._headerContentWrapper) {
                this._header.wrapInner('<div style="float:left;"></div>');
                this._headerContentWrapper = this._header.children(0);
                if (this.headerHeight !== null) {
                    this._header.height(this.headerHeight)
                }
            }
        },
        _addCloseButton: function() {
            if (!this._closeButton) {
                this._closeButtonWrapper = a('<div class="' + this.toThemeProperty("jqx-window-close-button-background") + '"></div>');
                this._closeButton = a('<div style="width: 100%; height: 100%;" class="' + this.toThemeProperty("jqx-window-close-button") + " " + this.toThemeProperty("jqx-icon-close") + '"></div>');
                this._closeButtonWrapper.append(this._closeButton);
                this._header.append(this._closeButtonWrapper)
            }
        },
        _addCollapseButton: function() {
            if (!this._collapseButton) {
                this._collapseButtonWrapper = a('<div class="' + this.toThemeProperty("jqx-window-collapse-button-background") + '"></div>');
                this._collapseButton = a('<div style="width: 100%; height: 100%;" class="' + this.toThemeProperty("jqx-window-collapse-button") + " " + this.toThemeProperty("jqx-icon-arrow-up") + '"></div>');
                this._collapseButtonWrapper.append(this._collapseButton);
                this._header.append(this._collapseButtonWrapper)
            }
        },
        _removeModal: function() {
            if (!this.isModal && typeof this._modalBackground === "object" && this._modalBackground !== null && this._modalBackground.length >= 1) {
                a("." + this.toThemeProperty("jqx-window-modal")).remove();
                this._modalBackground = null
            }
        },
        focus: function() {
            try {
                this.host.focus();
                var f = this;
                setTimeout(function() {
                    f.host.focus()
                },
                10)
            } catch(e) {}
        },
        _makeModal: function() {
            if (this.isModal && (!this._modalBackground || this._modalBackground.length < 1)) {
                var g = a.data(document.body, "jqxwindows-list");
                if (g) {
                    this._removeFromArray(this.host, g);
                    a.data(document.body, "jqxwindows-list", g)
                }
                this._modalBackground = a("<div></div>");
                this._modalBackground.addClass(this.toThemeProperty("jqx-window-modal"));
                this._setModalBackgroundStyles();
                a(document.body).append(this._modalBackground);
                this.addHandler(this._modalBackground, this._getEvent("click"),
                function() {
                    return false
                });
                var f = this;
                var e = function(i, k) {
                    var h = a(i).parents().get();
                    for (j = 0; j < h.length; j++) {
                        if (a(h[j]).is(k)) {
                            return true
                        }
                    }
                    return false
                };
                this.addHandler(this._modalBackground, "mouseup",
                function(h) {
                    f._stopResizing(f);
                    h.preventDefault()
                });
                this.addHandler(this._modalBackground, "mousedown",
                function(i) {
                    var h = f._getTabbables();
                    if (h.length > 0) {
                        h[0].focus(1);
                        setTimeout(function() {
                            h[0].focus(1)
                        },
                        100)
                    }
                    i.preventDefault();
                    return false
                });
                this.addHandler(a(document), "keydown.window" + this.element.id,
                function(l) {
                    if (l.keyCode !== 9) {
                        return
                    }
                    var h = a.data(document.body, "jqxwindows-modallist");
                    if (h.length > 1) {
                        if (h[h.length - 1][0] != f.element) {
                            return
                        }
                    }
                    var k = f._getTabbables();
                    var m = null;
                    var i = null;
                    if (k.length > 0) {
                        m = k[0];
                        i = k[k.length - 1]
                    }
                    if (l.target == f.element) {
                        return
                    }
                    if (m == null) {
                        return
                    }
                    if (!e(l.target, f.host)) {
                        m.focus(1);
                        return false
                    }
                    if (l.target === i && !l.shiftKey) {
                        m.focus(1);
                        return false
                    } else {
                        if (l.target === m && l.shiftKey) {
                            i.focus(1);
                            return false
                        }
                    }
                })
            }
        },
        _addStyles: function() {
            this.host.addClass(this.toThemeProperty("jqx-rc-all"));
            this.host.addClass(this.toThemeProperty("jqx-window"));
            this.host.addClass(this.toThemeProperty("jqx-popup"));
            if (a.jqx.browser.msie) {
                this.host.addClass(this.toThemeProperty("jqx-noshadow"))
            }
            this.host.addClass(this.toThemeProperty("jqx-widget"));
            this.host.addClass(this.toThemeProperty("jqx-widget-content"));
            this._header.addClass(this.toThemeProperty("jqx-window-header"));
            this._content.addClass(this.toThemeProperty("jqx-window-content"));
            this._header.addClass(this.toThemeProperty("jqx-widget-header"));
            this._content.addClass(this.toThemeProperty("jqx-widget-content"));
            this._header.addClass(this.toThemeProperty("jqx-disableselect"));
            this._header.addClass(this.toThemeProperty("jqx-rc-t"));
            this._content.addClass(this.toThemeProperty("jqx-rc-b"));
            if (!this.host.attr("tabindex")) {
                this.element.tabIndex = 0;
                this.host.children().css("tab-index", 0)
            }
            this.host.attr("hideFocus", "true").css("outline", "none")
        },
        _performHeaderLayout: function() {
            this._handleHeaderButtons();
            this._header.css("position", "relative");
            if (this.rtl) {
                this._headerContentWrapper.css("direction", "rtl");
                this._headerContentWrapper.css("float", "right")
            } else {
                this._headerContentWrapper.css("direction", "ltr");
                this._headerContentWrapper.css("float", "left")
            }
            this._performHeaderCloseButtonLayout();
            this._performHeaderCollapseButtonLayout();
            this._centerElement(this._headerContentWrapper, this._header, "y", "margin");
            if (this.headerHeight) {
                this._centerElement(this._closeButtonWrapper, this._header, "y", "margin");
                this._centerElement(this._collapseButtonWrapper, this._header, "y", "margin")
            }
        },
        _handleHeaderButtons: function() {
            if (!this._closeButtonWrapper) {
                return
            }
            if (!this.showCloseButton) {
                this._closeButtonWrapper.css("visibility", "hidden")
            } else {
                this._closeButtonWrapper.css("visibility", "visible");
                this._closeButtonWrapper.width(this.closeButtonSize);
                this._closeButtonWrapper.height(this.closeButtonSize)
            }
            if (!this.showCollapseButton) {
                this._collapseButtonWrapper.css("visibility", "hidden")
            } else {
                this._collapseButtonWrapper.css("visibility", "visible");
                this._collapseButtonWrapper.width(this.collapseButtonSize);
                this._collapseButtonWrapper.height(this.collapseButtonSize)
            }
        },
        _performHeaderCloseButtonLayout: function() {
            if (!this._closeButtonWrapper) {
                return
            }
            var e = parseInt(this._header.css("padding-right"), 10);
            if (!isNaN(e)) {
                this._closeButtonWrapper.width(this._closeButton.width());
                if (!this.rtl) {
                    this._closeButtonWrapper.css("margin-right", e);
                    this._closeButtonWrapper.css("margin-left", "0px")
                } else {
                    this._closeButtonWrapper.css("margin-left", e);
                    this._closeButtonWrapper.css("margin-right", "0px")
                }
            }
            if (!this.rtl) {
                this._closeButtonWrapper.css({
                    position: "absolute",
                    right: "0px",
                    left: ""
                })
            } else {
                this._closeButtonWrapper.css({
                    position: "absolute",
                    left: "0px",
                    right: ""
                })
            }
        },
        _performHeaderCollapseButtonLayout: function() {
            if (!this._closeButtonWrapper) {
                return
            }
            var e = parseInt(this._header.css("padding-right"), 10);
            if (!isNaN(e)) {
                this._collapseButtonWrapper.width(this.collapseButtonSize);
                this._collapseButtonWrapper.height(this.collapseButtonSize);
                if (!this.rtl) {
                    this._collapseButtonWrapper.css("margin-right", e);
                    this._collapseButtonWrapper.css("margin-left", "0px")
                } else {
                    this._collapseButtonWrapper.css("margin-left", e);
                    this._collapseButtonWrapper.css("margin-right", "0px")
                }
            }
            if (!this.rtl) {
                this._collapseButtonWrapper.css({
                    position: "absolute",
                    right: (this.showCloseButton) ? this._closeButton.outerWidth(true) : 0,
                    left: ""
                })
            } else {
                this._collapseButtonWrapper.css({
                    position: "absolute",
                    left: (this.showCloseButton) ? this._closeButton.outerWidth(true) : 0,
                    right: ""
                })
            }
            this._centerElement(this._collapseButton, this._collapseButton.parent(), "y")
        },
        _performWidgetLayout: function() {
            var e;
            if (this.width !== "auto") {
                this.host.css("width", this.width)
            }
            if (!this.collapsed) {
                if (this.height !== "auto") {
                    this.host.height(this.height)
                } else {
                    this.host.height(this.host.height())
                }
                this.host.css("min-height", this.minHeight)
            }
            this._setChildrenLayout();
            e = this._validateMinSize();
            this.host.css({
                "max-height": this.maxHeight,
                "min-width": this.minWidth,
                "max-width": this.maxWidth
            });
            if (!e) {
                this._setChildrenLayout()
            }
        },
        _setChildrenLayout: function() {
            this._header.width(this.host.width() - (this._header.outerWidth(true) - this._header.width()));
            this._content.width(this.host.width() - (this._content.outerWidth(true) - this._content.width()));
            this._content.height(this.host.height() - this._header.outerHeight(true) - (this._content.outerHeight(true) - this._content.height()))
        },
        _validateMinSize: function() {
            var f = true;
            if (this.minHeight < this._header.height()) {
                this.minHeight = this._header.height();
                f = false
            }
            var h = this._header.children(0).outerWidth(true),
            e = this._header.children(1).outerWidth(true),
            g = h + e;
            if (this.minWidth < 100) {
                this.minWidth = Math.min(g, 100);
                f = false
            }
            return f
        },
        _centerElement: function(h, f, e, g) {
            if (typeof f.left === "number" && typeof f.top === "number" && typeof f.height === "number" && typeof f.width === "number") {
                this._centerElementInArea(h, f, e)
            } else {
                this._centerElementInParent(h, f, e, g)
            }
        },
        _centerElementInParent: function(e, m, h, f) {
            h = h.toLowerCase();
            if (f) {
                f += "-"
            } else {
                f = ""
            }
            if (h.indexOf("y") >= 0) {
                var g = e.outerHeight(true),
                k = m.height(),
                i = (Math.max(0, k - g)) / 2;
                e.css(f + "top", i + "px")
            }
            if (h.indexOf("x") >= 0) {
                var o = e.outerWidth(true);
                var n = m.width();
                var l = (Math.max(0, n - o)) / 2;
                e.css(f + "left", l + "px")
            }
        },
        _centerElementInArea: function(f, e, h) {
            h = h.toLowerCase();
            if (h.indexOf("y") >= 0) {
                var g = f.outerHeight(true);
                var k = e.height;
                var i = (k - g) / 2;
                f.css("top", i + e.top + "px")
            }
            if (h.indexOf("x") >= 0) {
                var n = f.outerWidth(true);
                var m = e.width;
                var l = (m - n) / 2;
                f.css("left", l + e.left + "px")
            }
        },
        _removeEventHandlers: function() {
            this.removeHandler(this._header, this._getEvent("mousedown"));
            this.removeHandler(this._header, this._getEvent("mousemove"));
            this.removeHandler(this._header, "focus");
            this.removeHandler(a(document), this._getEvent("mousemove") + "." + this.host.attr("id"));
            this.removeHandler(a(document), this._getEvent("mouseup") + "." + this.host.attr("id"));
            this.removeHandler(this.host, "keydown");
            this.removeHandler(this._closeButton, this._getEvent("click"));
            this.removeHandler(this._closeButton, this._getEvent("mouseenter"));
            this.removeHandler(this._closeButton, this._getEvent("mouseleave"));
            this.removeHandler(this._collapseButton, this._getEvent("click"));
            this.removeHandler(this._collapseButton, this._getEvent("mouseenter"));
            this.removeHandler(this._collapseButton, this._getEvent("mouseleave"));
            this.removeHandler(this.host, this._getEvent("mousedown"));
            this.removeHandler(a(this.okButton), this._getEvent("click"), this._setDialogResultHandler);
            this.removeHandler(a(this.cancelButton), this._getEvent("click"), this._setDialogResultHandler);
            this.removeHandler(this._header, this._getEvent("mouseenter"));
            this.removeHandler(this._header, this._getEvent("mouseleave"));
            this.removeHandler(this.host, "resizing", this._windowResizeHandler)
        },
        _removeFromArray: function(e, g) {
            var f = this._indexOf(e, g);
            if (f >= 0) {
                return g.splice(this._indexOf(e, g), 1)
            } else {
                return g
            }
        },
        _sortByStyle: function(e, l) {
            for (var h = 0; h < l.length; h++) {
                for (var f = l.length - 1; f > h; f--) {
                    var m = l[f],
                    k = l[f - 1],
                    g;
                    if (parseInt(m.css(e), 10) < parseInt(k.css(e), 10)) {
                        g = m;
                        l[f] = k;
                        l[f - 1] = g
                    }
                }
            }
        },
        _initializeResize: function() {
            if (this.resizable) {
                var e = this;
                this.initResize({
                    target: this.host,
                    alsoResize: e._content,
                    maxWidth: e.maxWidth,
                    minWidth: e.minWidth,
                    maxHeight: e.maxHeight,
                    minHeight: e.minHeight,
                    indicatorSize: 10,
                    resizeParent: e.dragArea
                })
            }
        },
        _removeResize: function() {
            this.removeResize()
        },
        _getEvent: function(e) {
            if (this._isTouchDevice) {
                return this._touchEvents[e]
            } else {
                return e
            }
        },
        _addEventHandlers: function() {
            this._addDragDropHandlers();
            this._addCloseHandlers();
            this._addCollapseHandlers();
            this._addFocusHandlers();
            this._documentResizeHandlers();
            this._closeButtonHover();
            this._collapseButtonHover();
            this._addDialogButtonsHandlers();
            this._addHeaderHoverEffect();
            this._addResizeHandlers();
            var e = this;
            this.addHandler(this._header, this._getEvent("mousemove"),
            function(f) {
                e._addHeaderCursorHandlers(e)
            })
        },
        _addResizeHandlers: function() {
            var e = this;
            this.addHandler(this.host, "resizing", this._windowResizeHandler, {
                self: this
            })
        },
        _windowResizeHandler: function(f) {
            var e = f.data.self;
            e._header.width(e.host.width() - (e._header.outerWidth(true) - e._header.width()));
            e.width = f.args.width;
            e.height = f.args.height
        },
        _addHeaderHoverEffect: function() {
            var e = this;
            this.addHandler(this._header, this._getEvent("mouseenter"),
            function() {
                a(this).addClass(e.toThemeProperty("jqx-window-header-hover"))
            });
            this.addHandler(this._header, this._getEvent("mouseleave"),
            function() {
                a(this).removeClass(e.toThemeProperty("jqx-window-header-hover"))
            })
        },
        _addDialogButtonsHandlers: function() {
            if (this.okButton) {
                this.addHandler(a(this.okButton), this._getEvent("click"), this._setDialogResultHandler, {
                    self: this,
                    result: "ok"
                })
            }
            if (this.cancelButton) {
                this.addHandler(a(this.cancelButton), this._getEvent("click"), this._setDialogResultHandler, {
                    self: this,
                    result: "cancel"
                })
            }
        },
        _documentResizeHandlers: function() {
            var e = this;
            if (this.isModal) {
                this.addHandler(a(window), "resize.window" + this.element.id,
                function() {
                    if (typeof e._modalBackground === "object" && e._modalBackground !== null) {
                        if (e.isOpen()) {
                            e._modalBackground.hide()
                        }
                        if (!e.restricter) {
                            e._modalBackground.width(e._getDocumentSize().width);
                            e._modalBackground.height(e._getDocumentSize().height)
                        } else {
                            e._modalBackground.css("left", e.dragArea.left);
                            e._modalBackground.css("top", e.dragArea.top);
                            e._modalBackground.width(e.dragArea.width);
                            e._modalBackground.height(e.dragArea.height)
                        }
                        if (e.isOpen()) {
                            e._modalBackground.show()
                        }
                    }
                })
            }
        },
        _setDialogResultHandler: function(f) {
            var e = f.data.self;
            e._setDialogResult(f.data.result);
            e.closeWindow()
        },
        _setDialogResult: function(e) {
            this.dialogResult.OK = false;
            this.dialogResult.None = false;
            this.dialogResult.Cancel = false;
            e = e.toLowerCase();
            switch (e) {
            case "ok":
                this.dialogResult.OK = true;
                break;
            case "cancel":
                this.dialogResult.Cancel = true;
                break;
            default:
                this.dialogResult.None = true
            }
        },
        _getDocumentSize: function() {
            var e = a.jqx.browser.msie && a.jqx.browser.version < 9;
            var f = e ? 4 : 0;
            var g = f;
            if (document.body.scrollHeight > document.body.clientHeight && e) {
                f = this._SCROLL_WIDTH
            }
            if (document.body.scrollWidth > document.body.clientWidth && e) {
                g = this._SCROLL_WIDTH
            }
            return {
                width: a(document).width() - f,
                height: a(document).height() - g
            }
        },
        _closeButtonHover: function() {
            var e = this;
            this.addHandler(this._closeButton, this._getEvent("mouseenter"),
            function() {
                e._closeButton.addClass(e.toThemeProperty("jqx-window-close-button-hover"))
            });
            this.addHandler(this._closeButton, this._getEvent("mouseleave"),
            function() {
                e._closeButton.removeClass(e.toThemeProperty("jqx-window-close-button-hover"))
            })
        },
        _collapseButtonHover: function() {
            var e = this;
            this.addHandler(this._collapseButton, this._getEvent("mouseenter"),
            function() {
                e._collapseButton.addClass(e.toThemeProperty("jqx-window-collapse-button-hover"))
            });
            this.addHandler(this._collapseButton, this._getEvent("mouseleave"),
            function() {
                e._collapseButton.removeClass(e.toThemeProperty("jqx-window-collapse-button-hover"))
            })
        },
        _setModalBackgroundStyles: function() {
            if (this.isModal) {
                this._modalBackground.fadeTo(0, this.modalOpacity);
                this._modalBackground.css({
                    position: "absolute",
                    top: "0px",
                    left: "0px",
                    width: this._getDocumentSize().width,
                    height: this._getDocumentSize().height,
                    "z-index": this.modalBackgroundZIndex
                });
                if (!this.autoOpen) {
                    this._modalBackground.css("display", "none")
                }
            }
        },
        _addFocusHandlers: function() {
            var e = this;
            this.addHandler(this.host, this._getEvent("mousedown"),
            function() {
                if (!e.isModal) {
                    e.bringToFront()
                }
            })
        },
        _indexOf: function(f, g) {
            for (var e = 0; e < g.length; e++) {
                if (g[e][0] === f[0]) {
                    return e
                }
            }
            return - 1
        },
        _addCloseHandlers: function() {
            var e = this;
            this.addHandler(this._closeButton, this._getEvent("click"),
            function(f) {
                return e._closeWindow(f)
            });
            if (this.keyboardCloseKey !== "none") {
                if (typeof this.keyboardCloseKey !== "number" && this.keyboardCloseKey.toLowerCase() === "esc") {
                    this.keyboardCloseKey = 27
                }
            }
            this.addHandler(this.host, "keydown",
            function(f) {
                if (f.keyCode === e.keyboardCloseKey && e.keyboardCloseKey != null && e.keyboardCloseKey != "none") {
                    e._closeWindow(f)
                } else {
                    e._handleKeys(f)
                }
            },
            {
                self: this
            });
            this.addHandler(this.host, "keyup",
            function(f) {
                if (!e.keyboardNavigation) {
                    return
                }
                if (e._moved) {
                    var i = e.host.coord();
                    var h = i.left;
                    var g = i.top;
                    e._raiseEvent(3, h, g, h, g);
                    e._moved = false
                }
            })
        },
        _handleKeys: function(f) {
            if (!this.keyboardNavigation) {
                return
            }
            if (!this._headerFocused) {
                return
            }
            if (a(document.activeElement).ischildof(this._content)) {
                return
            }
            var e = f.ctrlKey;
            var n = f.keyCode;
            var l = this.host.coord();
            var k = l.left;
            var m = l.top;
            var g = this._getDraggingArea();
            var h = this.host.width();
            var o = this.host.height();
            var p = true;
            var i = 10;
            switch (n) {
            case 37:
                if (!e) {
                    if (this.draggable) {
                        if (k - i >= 0) {
                            this.move(k - i, m)
                        }
                    }
                } else {
                    if (this.resizable) {
                        this.resize(h - i, o)
                    }
                }
                p = false;
                break;
            case 38:
                if (!e) {
                    if (this.draggable) {
                        if (m - i >= 0) {
                            this.move(k, m - i)
                        }
                    }
                } else {
                    if (this.resizable) {
                        this.resize(h, o - i)
                    }
                }
                p = false;
                break;
            case 39:
                if (!e) {
                    if (this.draggable) {
                        if (k + h + i <= g.width) {
                            this.move(k + i, m)
                        }
                    }
                } else {
                    if (this.resizable) {
                        this.resize(h + i, o)
                    }
                }
                p = false;
                break;
            case 40:
                if (!e) {
                    if (this.draggable) {
                        if (m + o + i <= g.height) {
                            this.move(k, m + i)
                        }
                    }
                } else {
                    if (this.resizable) {
                        this.resize(h, o + i)
                    }
                }
                p = false;
                break
            }
            if (!p) {
                if (f.preventDefault) {
                    f.preventDefault()
                }
                if (f.stopPropagation) {
                    f.stopPropagation()
                }
            }
            return p
        },
        _addCollapseHandlers: function() {
            var e = this;
            this.addHandler(this._collapseButton, this._getEvent("click"),
            function() {
                if (!e.collapsed) {
                    e.collapse()
                } else {
                    e.expand()
                }
            })
        },
        _closeWindow: function(e) {
            this.closeWindow();
            return false
        },
        _addHeaderCursorHandlers: function(e) {
            if (e.resizeArea && e.resizable && !e.collapsed) {
                e._header.css("cursor", e._resizeWrapper.css("cursor"));
                return
            } else {
                if (e.draggable) {
                    e._header.css("cursor", "move");
                    return
                }
            }
            e._header.css("cursor", "default");
            if (e._resizeWrapper && e._resizeWrapper.length > 0) {
                e._resizeWrapper.css("cursor", "default")
            }
        },
        _addDragDropHandlers: function() {
            if (this.draggable) {
                var e = this;
                this.addHandler(this.host, "focus",
                function() {
                    e._headerFocused = true
                });
                this.addHandler(this.host, "blur",
                function() {
                    e._headerFocused = false
                });
                this.addHandler(this._header, "focus",
                function() {
                    e._headerFocused = true;
                    return false
                });
                this.addHandler(this._header, this._getEvent("mousedown"),
                function(i) {
                    e._headerMouseDownHandler(e, i);
                    return true
                });
                this.addHandler(this._header, "dragstart",
                function(i) {
                    if (i.preventDefault) {
                        i.preventDefault()
                    }
                    return false
                });
                this.addHandler(this._header, this._getEvent("mousemove"),
                function(i) {
                    return e._headerMouseMoveHandler(e, i)
                });
                this.addHandler(a(document), this._getEvent("mousemove") + "." + this.host.attr("id"),
                function(i) {
                    return e._dragHandler(e, i)
                });
                this.addHandler(a(document), this._getEvent("mouseup") + "." + this.host.attr("id"),
                function(i) {
                    return e._dropHandler(e, i)
                });
                try {
                    if (document.referrer != "" || window.frameElement) {
                        var h = null;
                        if (window.top != null && window.top != window.self) {
                            if (window.parent && document.referrer) {
                                h = document.referrer
                            }
                        }
                        if (h && h.indexOf(document.location.host) != -1) {
                            var g = function(i) {
                                e._dropHandler(e, i)
                            };
                            if (window.top.document.addEventListener) {
                                window.top.document.addEventListener("mouseup", g, false)
                            } else {
                                if (window.top.document.attachEvent) {
                                    window.top.document.attachEvent("onmouseup", g)
                                }
                            }
                        }
                    }
                } catch(f) {}
            }
        },
        _headerMouseDownHandler: function(f, g) {
            if (!f.isModal) {
                f.bringToFront()
            }
            if (f._resizeDirection == null) {
                var h = a.jqx.mobile.getTouches(g);
                var i = h[0];
                var e = a.jqx.position(g);
                f._mousePosition.x = e.left;
                f._mousePosition.y = e.top;
                f._mouseDown = true;
                f._isDragging = false
            }
        },
        _headerMouseMoveHandler: function(f, i) {
            if (f._mouseDown && !f._isDragging) {
                var k = a.jqx.mobile.getTouches(i);
                var l = k[0];
                var h = l.pageX,
                g = l.pageY;
                var e = a.jqx.position(i);
                h = e.left;
                g = e.top;
                if ((h + 3 < f._mousePosition.x || h - 3 > f._mousePosition.x) || (g + 3 < f._mousePosition.y || g - 3 > f._mousePosition.y)) {
                    f._isDragging = true;
                    f._mousePosition = {
                        x: h,
                        y: g
                    };
                    f._windowPosition = {
                        x: f.host.coord().left,
                        y: f.host.coord().top
                    };
                    a(document.body).addClass(f.toThemeProperty("jqx-disableselect"))
                }
                if (f._isTouchDevice) {
                    i.preventDefault();
                    return true
                }
                return false
            }
            if (f._isDragging) {
                if (f._isTouchDevice) {
                    i.preventDefault();
                    return true
                }
                return false
            }
            return true
        },
        _dropHandler: function(g, k) {
            var f = true;
            if (g._isDragging && !g.isResizing && !g._resizeDirection) {
                var e = parseInt(g.host.css("left"), 10),
                l = parseInt(g.host.css("top"), 10),
                i = (g._isTouchDevice) ? 0 : k.pageX,
                h = (g._isTouchDevice) ? 0 : k.pageY;
                g.enableResize = g._enableResizeBackup;
                g._enableResizeBackup = "undefined";
                g._raiseEvent(3, e, l, i, h);
                f = false;
                if (k.preventDefault != "undefined") {
                    k.preventDefault()
                }
                if (k.originalEvent != null) {
                    k.originalEvent.mouseHandled = true
                }
                if (k.stopPropagation != "undefined") {
                    k.stopPropagation()
                }
            }
            g._isDragging = false;
            g._mouseDown = false;
            a(document.body).removeClass(g.toThemeProperty("jqx-disableselect"));
            return f
        },
        _dragHandler: function(p, h) {
            if (p._isDragging && !p.isResizing && !p._resizeDirection) {
                var o = (p._isTouchDevice) ? h.originalEvent.which: h.which;
                if (typeof p._enableResizeBackup === "undefined") {
                    p._enableResizeBackup = p.enableResize
                }
                p.enableResize = false;
                if (o === 0 && a.jqx.browser.msie && a.jqx.browser.version < 8) {
                    return p._dropHandler(p, h)
                }
                var m = a.jqx.mobile.getTouches(h);
                var l = m[0];
                var n = a.jqx.position(h);
                var k = n.left,
                i = n.top,
                g = k - p._mousePosition.x,
                f = i - p._mousePosition.y,
                e = p._windowPosition.x + g,
                q = p._windowPosition.y + f;
                p.move(e, q, h);
                h.preventDefault();
                return false
            }
            return true
        },
        _validateCoordinates: function(e, l, i, k) {
            var h = this._getDraggingArea();
            e = (e < h.left) ? h.left: e;
            l = (l < h.top) ? h.top: l;
            var f = this.host.outerWidth(true);
            var g = this.host.outerHeight(true);
            if (e + f >= h.width + h.left - 2 * k) {
                e = h.width + h.left - f - k
            }
            if (l + g >= h.height + h.top - i) {
                l = h.height + h.top - g - i
            }
            return {
                x: e,
                y: l
            }
        },
        _performLayout: function() {
            this._performHeaderLayout();
            this._performWidgetLayout()
        },
        _parseDragAreaAttributes: function() {
            if (this.dragArea !== null) {
                this.dragArea.height = parseInt(this.dragArea.height, 10);
                this.dragArea.width = parseInt(this.dragArea.width, 10);
                this.dragArea.top = parseInt(this.dragArea.top, 10);
                this.dragArea.left = parseInt(this.dragArea.left, 10)
            }
        },
        _positionWindow: function() {
            this._parseDragAreaAttributes();
            if (this.position instanceof Array && this.position.length === 2 && typeof this.position[0] === "number" && typeof this.position[1] === "number") {
                this.host.css({
                    left: this.position[0],
                    top: this.position[1]
                })
            } else {
                if (this.position instanceof Object) {
                    if (this.position.left) {
                        this.host.offset(this.position)
                    } else {
                        if (this.position.x !== undefined && this.position.y != undefined) {
                            this.host.css({
                                left: this.position.x,
                                top: this.position.y
                            })
                        } else {
                            if (this.position.center) {
                                this._centerElement(this.host, this.position.center, "xy");
                                var g = this.position.center.coord();
                                var f = parseInt(this.host.css("left"));
                                var e = parseInt(this.host.css("top"));
                                this.host.css({
                                    left: f + g.left,
                                    top: e + g.top
                                })
                            }
                        }
                    }
                } else {
                    this._positionFromLiteral()
                }
            }
        },
        _getDraggingArea: function() {
            var e = {};
            e.left = ((this.dragArea && this.dragArea.left) ? this.dragArea.left: 0);
            e.top = ((this.dragArea && this.dragArea.top) ? this.dragArea.top: 0);
            e.width = ((this.dragArea && this.dragArea.width) ? this.dragArea.width: this._getDocumentSize().width);
            e.height = ((this.dragArea && this.dragArea.height) ? this.dragArea.height: this._getDocumentSize().height);
            return e
        },
        _positionFromLiteral: function() {
            if (! (this.position instanceof Array)) {
                this.position = this.position.split(",")
            }
            var e = this.position.length,
            f = this._getDraggingArea();
            while (e) {
                e -= 1;
                this.position[e] = this.position[e].replace(/ /g, "");
                switch (this.position[e]) {
                case "top":
                    this.host.css("top", f.top);
                    break;
                case "left":
                    this.host.css("left", f.left);
                    break;
                case "bottom":
                    this.host.css("top", f.height - this.host.height() + f.top);
                    break;
                case "right":
                    this.host.css("left", f.left + f.width - this.host.width());
                    break;
                default:
                    if (!this.dragArea) {
                        f = a(window)
                    }
                    this._centerElement(this.host, f, "xy");
                    break
                }
            }
        },
        _raiseEvent: function(g) {
            var f = this._events[g],
            h = a.Event(f),
            e = {};
            if (g === 2 || g === 3) {
                e.x = arguments[1];
                e.y = arguments[2];
                e.pageX = arguments[3];
                e.pageY = arguments[4]
            }
            if (f === "closed" || f === "close") {
                e.dialogResult = this.dialogResult
            }
            h.args = e;
            return this.host.trigger(h)
        },
        destroy: function() {
            this.removeHandler(a(window), "resize.window" + this.element.id);
            this._removeEventHandlers();
            this._destroy()
        },
        _destroy: function() {
            if (this.restricter) {
                this.removeHandler(a(window), "resize." + this.element.id);
                this.removeHandler(a(window), "orientationchanged." + this.element.id);
                this.removeHandler(a(window), "orientationchange." + this.element.id)
            }
            this.host.remove();
            if (this._modalBackground !== null) {
                this._modalBackground.remove()
            }
        },
        _toClose: function(f, e) {
            return ((f && e[0] === this.element) || (e[0] !== this.element && typeof e[0] === "object"))
        },
        propertyChangedHandler: function(e, f, h, g) {
            this._validateProperties();
            switch (f) {
            case "rtl":
                this._performLayout();
                break;
            case "dragArea":
                this._positionWindow();
                break;
            case "collapseButtonSize":
                this._performLayout();
                break;
            case "closeButtonSize":
                this._performLayout();
                break;
            case "isModal":
                this._refresh();
                this._fixWindowZIndex();
                break;
            case "keyboardCloseKey":
                this._removeEventHandlers();
                this._addEventHandlers();
                break;
            case "disabled":
                if (g) {
                    this.disable()
                } else {
                    this.disabled = true;
                    this.enable()
                }
                break;
            case "showCloseButton":
            case "showCollapseButton":
                this._performLayout();
                break;
            case "height":
                this._performLayout();
                break;
            case "width":
                this._performLayout();
                break;
            case "title":
                this.setTitle(g);
                this.title = g;
                break;
            case "content":
                this.setContent(g);
                break;
            case "draggable":
                this._removeEventHandlers();
                this._addEventHandlers();
                this._removeResize();
                this._initializeResize();
                break;
            case "resizable":
                this.enableResize = g;
                if (g) {
                    this._initializeResize()
                } else {
                    this._removeResize()
                }
                break;
            case "position":
                this._positionWindow();
                break;
            case "modalOpacity":
                this._setModalBackgroundStyles();
                break;
            case "okButton":
                if (g) {
                    this._addDialogButtonsHandlers()
                } else {
                    this.removeHandler(this.okButton)
                }
                break;
            case "cancelButton":
                if (g) {
                    this._addDialogButtonsHandlers()
                } else {
                    this.removeHandler(this.cancelButton)
                }
                break;
            case "collapsed":
                if (g) {
                    if (!h) {
                        this.collapsed = false;
                        this.collapse(0)
                    }
                } else {
                    if (h) {
                        this.collapsed = true;
                        this.expand(0)
                    }
                }
            case "theme":
                a.jqx.utilities.setTheme(h, g, this.host);
                break;
            case "enableResize":
                return;
            case "maxWidth":
            case "maxHeight":
            case "minWidth":
            case "minHeight":
                e._performLayout();
                e._removeResize();
                e._initializeResize();
                return;
            default:
                return
            }
        },
        collapse: function(g) {
            if (!this.collapsed && !this.host.is(":animated")) {
                if (this.host.css("display") == "none") {
                    return
                }
                var e = this,
                h = this._header.outerHeight(true),
                i = parseInt(this._header.css("border-bottom-width"), 10),
                f = parseInt(this._header.css("margin-bottom"), 10),
                g = !isNaN(parseInt(g)) ? g: this.collapseAnimationDuration;
                if (!isNaN(i)) {
                    h -= 2 * i
                }
                if (!isNaN(f)) {
                    h += f
                }
                this._heightBeforeCollapse = this.host.height();
                this._minHeightBeforeCollapse = this.host.css("min-height");
                this.host.css("min-height", h);
                this.host.animate({
                    height: h
                },
                g,
                function() {
                    e.collapsed = true;
                    e._collapseButton.addClass(e.toThemeProperty("jqx-window-collapse-button-collapsed"));
                    e._collapseButton.addClass(e.toThemeProperty("jqx-icon-arrow-down"));
                    e._content.css("display", "none");
                    e._raiseEvent(5);
                    e._raiseEvent(9);
                    a.jqx.aria(e, "aria-expanded", false)
                })
            }
        },
        expand: function(f) {
            if (this.collapsed && !this.host.is(":animated")) {
                var e = this,
                f = !isNaN(parseInt(f)) ? f: this.collapseAnimationDuration;
                this.host.animate({
                    height: this._heightBeforeCollapse
                },
                f,
                function() {
                    e.collapsed = false;
                    e.host.css("min-height", e._minHeightBeforeCollapse);
                    e._collapseButton.removeClass(e.toThemeProperty("jqx-window-collapse-button-collapsed"));
                    e._collapseButton.removeClass(e.toThemeProperty("jqx-icon-arrow-down"));
                    e._content.css("display", "block");
                    e._raiseEvent(6);
                    e._performWidgetLayout();
                    e._raiseEvent(9);
                    a.jqx.aria(e, "aria-expanded", true)
                })
            }
        },
        closeAll: function(h) {
            var h = true;
            var g = a.data(document.body, "jqxwindows-list"),
            f = g.length,
            e = a.data(document.body, "jqxwindow-modal") || [];
            while (f) {
                f -= 1;
                if (this._toClose(h, g[f])) {
                    g[f].jqxWindow("closeWindow", "close");
                    g.splice(f, 1)
                }
            }
            if (this._toClose(h, e)) {
                e.jqxWindow("closeWindow", "close");
                a.data(document.body, "jqxwindow-modal", [])
            }
            a.data(document.body, "jqxwindows-list", g)
        },
        setTitle: function(e) {
            a.jqx.utilities.html(this._headerContentWrapper, e);
            this.title = e;
            this._performLayout()
        },
        setContent: function(f) {
            this._contentInitialized = false;
            var e = this._content,
            g = false;
            while (!g) {
                e.css("height", "auto");
                e.css("width", "auto");
                if (e.is(".jqx-window")) {
                    g = true
                } else {
                    e = e.parent()
                }
            }
            a.jqx.utilities.html(this._content, f);
            this._performLayout()
        },
        disable: function() {
            this.disabled = true;
            this._removeEventHandlers();
            this._header.addClass(this.toThemeProperty("jqx-window-header-disabled"));
            this._closeButton.addClass(this.toThemeProperty("jqx-window-close-button-disabled"));
            this._collapseButton.addClass(this.toThemeProperty("jqx-window-collapse-button-disabled"));
            this._content.addClass(this.toThemeProperty("jqx-window-content-disabled"));
            this.host.addClass(this.toThemeProperty("jqx-window-disabled"));
            this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled"));
            this._removeResize()
        },
        enable: function() {
            if (this.disabled) {
                this._addEventHandlers();
                this._header.removeClass(this.toThemeProperty("jqx-window-header-disabled"));
                this._content.removeClass(this.toThemeProperty("jqx-window-content-disabled"));
                this._closeButton.removeClass(this.toThemeProperty("jqx-window-close-button-disabled"));
                this._collapseButton.removeClass(this.toThemeProperty("jqx-window-collapse-button-disabled"));
                this.host.removeClass(this.toThemeProperty("jqx-window-disabled"));
                this.host.removeClass(this.toThemeProperty("jqx-fill-state-disabled"));
                this.disabled = false;
                this._initializeResize()
            }
        },
        isOpen: function() {
            return this._visible
        },
        closeWindow: function(f) {
            var e = this;
            f = (typeof f === "undefined") ? this.closeButtonAction: f;
            this.hide(function() {
                if (f === "close") {
                    e._destroy()
                }
            })
        },
        bringToFront: function() {
            var f = a.data(document.body, "jqxwindows-list");
            if (this.isModal) {
                f = a.data(document.body, "jqxwindows-modallist");
                this._fixWindowZIndex("modal-hide");
                this._fixWindowZIndex("modal-show");
                return
            }
            var l = f[f.length - 1],
            k = parseInt(l.css("z-index"), 10),
            g = this._indexOf(this.host, f);
            for (var e = f.length - 1; e > g; e -= 1) {
                var h = parseInt(f[e].css("z-index"), 10) - 1;
                f[e].css("z-index", h)
            }
            this.host.css("z-index", k);
            this._sortByStyle("z-index", f)
        },
        hide: function(h, g, e) {
            if (this.closing) {
                var f = this.closing();
                if (f == false) {
                    return
                }
            }
            g = g || this.closeAnimationDuration;
            switch (this.animationType) {
            case "none":
                this.host.css("display", "none");
                break;
            case "fade":
                this.host.fadeOut(g,
                function() {
                    if (h instanceof Function) {
                        h()
                    }
                });
            case "slide":
                this.host.slideUp(g,
                function() {
                    if (h instanceof Function) {
                        h()
                    }
                });
            case "combined":
                this.host.hide(g,
                function() {
                    if (h instanceof Function) {
                        h()
                    }
                })
            }
            this._visible = false;
            if (this.isModal) {
                this._modalBackground.hide();
                this._fixWindowZIndex("modal-hide")
            }
            if (e !== true) {
                this._raiseEvent(1);
                this._raiseEvent(8)
            }
        },
        open: function(f, e) {
            this.show(f, e)
        },
        close: function(g, f, e) {
            this.hide(g, f, e)
        },
        show: function(h, g) {
            this._setDialogResult("none");
            g = g || this.showAnimationDuration;
            switch (this.animationType) {
            case "none":
                this.host.css("display", "block");
                break;
            case "fade":
                this.host.fadeIn(g,
                function() {
                    if (h instanceof Function) {
                        h()
                    }
                });
                break;
            case "slide":
                this.host.slideDown(g,
                function() {
                    if (h instanceof Function) {
                        h()
                    }
                });
                break;
            case "combined":
                this.host.show(g,
                function() {
                    if (h instanceof Function) {
                        h()
                    }
                });
                break
            }
            if (this.isModal) {
                this._modalBackground.show();
                this._fixWindowZIndex("modal-show")
            }
            var f = this;
            if (!this._visible) {
                if (g > 150 && this.animationType != "none") {
                    setTimeout(function() {
                        if (!f._contentInitialized) {
                            if (f.initContent) {
                                f.initContent();
                                f._contentInitialized = true
                            }
                        }
                        f._raiseEvent(7);
                        f._raiseEvent(9)
                    },
                    g - 150)
                } else {
                    if (!f._contentInitialized) {
                        if (f.initContent) {
                            f.initContent();
                            f._contentInitialized = true
                        }
                    }
                    this._raiseEvent(7);
                    f._raiseEvent(9)
                }
            }
            this._visible = true;
            this._performLayout();
            var e = function() {
                if (!f._isTouchDevice) {
                    f._content.focus()
                }
            };
            e();
            setTimeout(function() {
                e()
            },
            100)
        },
        _getTabbables: function() {
            var f = this._content.find("*");
            var e = new Array();
            a.each(f,
            function() {
                if (d(this)) {
                    e[e.length] = this
                }
            });
            return e
        },
        move: function(q, p, e, h) {
            var g = 0,
            f = 0,
            n, k, i, q = parseInt(q, 10),
            p = parseInt(p, 10);
            if (a.jqx.browser.msie) {
                if (a(window).width() > a(document).width() && !this.dragArea) {
                    f = this._SCROLL_WIDTH
                }
                if (a(window).height() < a(document).height() && document.documentElement.clientWidth > document.documentElement.scrollWidth && !this.dragArea) {
                    g = this._SCROLL_WIDTH
                }
            }
            n = this._validateCoordinates(q, p, f, g);
            if (parseInt(this.host.css("left"), 10) !== n.x || parseInt(this.host.css("top"), 10) !== n.y) {
                if (e) {
                    var m = a.jqx.mobile.getTouches(e);
                    var l = m[0];
                    var o = a.jqx.position(e);
                    k = o.left;
                    i = o.top
                }
                if (k == undefined) {
                    k = q
                }
                if (i == undefined) {
                    i = p
                }
                if (h !== false) {
                    this._raiseEvent(2, n.x, n.y, k, i)
                }
            }
            this.element.style.left = n.x + "px";
            this.element.style.top = n.y + "px";
            this._moved = true
        }
    });
    function c(g, e) {
        var k = g.nodeName.toLowerCase();
        if ("area" === k) {
            var i = g.parentNode,
            h = i.name,
            f;
            if (!g.href || !h || i.nodeName.toLowerCase() !== "map") {
                return false
            }
            f = a("img[usemap=#" + h + "]")[0];
            return !! f && b(f)
        }
        return (/input|select|textarea|button|object/.test(k) ? !g.disabled: "a" == k ? g.href || e: e) && b(g)
    }
    function b(e) {
        return ! a(e).parents().andSelf().filter(function() {
            return a.css(this, "visibility") === "hidden" || a.expr.filters.hidden(this)
        }).length
    }
    function d(g) {
        var e = a.attr(g, "tabindex"),
        f = isNaN(e);
        return (f || e >= 0) && c(g, !f)
    }
} (jqxBaseFramework)); (function(b) {
    var a = (function(c) {
        return {
            resizeConfig: function() {
                this.resizeTarget = null;
                this.resizeIndicatorSize = 5;
                this.resizeTargetChildren = null;
                this.isResizing = false;
                this.resizeArea = false;
                this.minWidth = 1;
                this.maxWidth = 100;
                this.minHeight = 1;
                this.maxHeight = 100;
                this.resizeParent = null;
                this.enableResize = true;
                this._cursorBackup;
                this._resizeEvents = ["resizing", "resized", "resize"];
                this._resizeMouseDown = false;
                this._resizeCurrentMode = null;
                this._mouseResizePosition = {};
                this._resizeMethods = null;
                this._SCROLL_WIDTH = 21
            },
            _resizeExceptions: {
                invalidTarget: "Invalid target!",
                invalidMinHeight: "Invalid minimal height!",
                invalidMaxHeight: "Invalid maximum height!",
                invalidMinWidth: "Invalid minimum width!",
                invalidMaxWidth: "Invalid maximum width!",
                invalidIndicatorSize: "Invalid indicator size!",
                invalidSize: "Invalid size!"
            },
            removeResize: function() {
                if (this.resizeTarget) {
                    var f = c(this.resizeTarget.children(".jqx-resize"));
                    f.detach();
                    var e = f.children();
                    this._removeResizeEventListeners();
                    for (var d = 0; d < e.length; d += 1) {
                        c(e[d]).detach();
                        this.resizeTarget.append(e[d])
                    }
                    f.remove()
                }
            },
            initResize: function(d) {
                this.resizeConfig();
                this.resizeTarget = c(d.target);
                this.resizeIndicatorSize = d.indicatorSize || 10;
                this.maxWidth = d.maxWidth || 100;
                this.minWidth = d.minWidth || 1;
                this.maxHeight = d.maxHeight || 100;
                this.minHeight = d.minHeight || 1;
                this.resizeParent = d.resizeParent;
                this._parseResizeParentProperties();
                this._validateResizeProperties();
                this._validateResizeTargetDimensions();
                this._getChildren(this.resizeTarget.maxWidth, this.resizeTarget.minWidth, this.resizeTarget.maxHeight, this.resizeTarget.minHeight, d.alsoResize);
                this._refreshResize();
                this._cursorBackup = this.resizeTarget.css("cursor");
                if (this._cursorBackup === "auto") {
                    this._cursorBackup = "default"
                }
            },
            _validateResizeTargetDimensions: function() {
                this.resizeTarget.maxWidth = this.maxWidth;
                this.resizeTarget.minWidth = ((3 * this.resizeIndicatorSize > this.minWidth) ? 3 * this.resizeIndicatorSize: this.minWidth);
                this.resizeTarget.maxHeight = this.maxHeight;
                this.resizeTarget.minHeight = ((3 * this.resizeIndicatorSize > this.minHeight) ? 3 * this.resizeIndicatorSize: this.minHeight)
            },
            _parseResizeParentProperties: function() {
                if (this.resizeParent) {
                    this.resizeParent.left = parseInt(this.resizeParent.left, 10);
                    this.resizeParent.top = parseInt(this.resizeParent.top, 10);
                    this.resizeParent.width = parseInt(this.resizeParent.width, 10);
                    this.resizeParent.height = parseInt(this.resizeParent.height, 10)
                }
            },
            _getChildren: function(h, e, g, i, d) {
                this.resizeTargetChildren = c(d);
                this.resizeTargetChildren.toArray();
                var f = this.resizeTargetChildren.length;
                while (f) {
                    f -= 1;
                    this.resizeTargetChildren[f] = c(this.resizeTargetChildren[f])
                }
            },
            _refreshResize: function() {
                this._renderResize();
                this._performResizeLayout();
                this._removeResizeEventListeners();
                this._addResizeEventHandlers()
            },
            _renderResize: function() {
                this.resizeTarget.wrapInner(c("<div></div>"));
                this._resizeWrapper = this.resizeTarget.children(0);
                this._resizeWrapper.addClass("jqx-resize");
                this._resizeWrapper.addClass("jqx-rc-all");
                this._resizeWrapper.css("z-index", 8000)
            },
            _performResizeLayout: function() {
                this._resizeWrapper.height(this.resizeTarget.height());
                this._resizeWrapper.width(this.resizeTarget.width())
            },
            _removeResizeEventListeners: function() {
                var d = this.resizeTarget.attr("id");
                this.removeHandler(this._resizeWrapper, "mousemove.resize" + d);
                this.removeHandler(this._resizeWrapper, "mousedown.resize" + d);
                this.removeHandler(c(document), "mousemove.resize" + d);
                this.removeHandler(c(document), "mouseup.resize" + d)
            },
            _addResizeEventHandlers: function() {
                var g = this.resizeTarget.attr("id");
                var d = this;
                this.addHandler(this._resizeWrapper, "mousemove.resize." + g,
                function(h) {
                    d._resizeCursorChangeHandler(d, h)
                });
                this.addHandler(this._resizeWrapper, "mousedown.resize." + g,
                function(h) {
                    d._resizeMouseDownHandler(d, h)
                });
                this.addHandler(c(document), "mousemove.resize." + g,
                function(h) {
                    return d._resizeHandler(d, h)
                });
                this.addHandler(c(document), "mouseup.resize." + g,
                function(h) {
                    d._stopResizing(d, h)
                });
                try {
                    if (document.referrer != "" || window.frameElement) {
                        var f = function(h) {
                            d._stopResizing(d, h)
                        };
                        if (window.top.document.addEventListener) {
                            window.top.document.addEventListener("mouseup", f, false)
                        } else {
                            if (window.top.document.attachEvent) {
                                window.top.document.attachEvent("onmouseup", f)
                            }
                        }
                    }
                } catch(e) {}
            },
            _stopResizing: function(d, e) {
                if (d.enableResize) {
                    if (d.isResizing) {
                        d._raiseResizeEvent(1)
                    }
                    d._resizeMouseDown = false;
                    d.isResizing = false;
                    d._resizeDirection = null;
                    if (d.resizeTarget) {
                        d.resizeTarget.removeClass("jqx-disableselect")
                    }
                }
                if (d._cursorBackup == "undefined") {
                    d._cursorBackup = "default"
                }
                if (d._resizeWrapper) {
                    d._resizeWrapper.css("cursor", d._cursorBackup)
                }
            },
            _resizeHandler: function(d, e) {
                if (d.enableResize && !d.collapsed) {
                    if (d.isResizing && d._resizeDirection) {
                        if (e.which === 0 && c.jqx.browser.msie && c.jqx.browser.version < 9) {
                            d._stopResizing(e)
                        }
                        d._performResize(e.pageX, e.pageY);
                        return false
                    } else {
                        return d._resizeCaptureCursor(e.pageX, e.pageY)
                    }
                }
            },
            _resizeCaptureCursor: function(e, d) {
                if (this._resizeMouseDown && !this.isResizing && this._resizeDirection) {
                    if ((e + 3 < this._mouseResizePosition.x || e - 3 > this._mouseResizePosition.x) || (d + 3 < this._mouseResizePosition.y || d - 3 > this._mouseResizePosition.y)) {
                        this._changeCursor(e - parseInt(this.resizeTarget.css("left")), d - parseInt(this.resizeTarget.css("top")));
                        this._mouseResizePosition = {
                            x: e,
                            y: d
                        };
                        this._prepareResizeMethods(this._resizeDirection);
                        this._resizeBackupData();
                        this.isResizing = true;
                        this.resizeTarget.addClass("jqx-disableselect");
                        return false
                    }
                }
            },
            _resizeBackupData: function() {
                this.resizeTarget.lastWidth = this.resizeTarget.width();
                this.resizeTarget.lastHeight = this.resizeTarget.height();
                this.resizeTarget.x = parseInt(this.resizeTarget.css("left"), 10);
                this.resizeTarget.y = parseInt(this.resizeTarget.css("top"), 10);
                this._resizeBackupChildrenSize()
            },
            _resizeBackupChildrenSize: function() {
                var d = this.resizeTargetChildren.length,
                e;
                while (d) {
                    d -= 1;
                    e = this.resizeTargetChildren[d];
                    this.resizeTargetChildren[d].lastWidth = e.width();
                    this.resizeTargetChildren[d].lastHeight = e.height()
                }
            },
            _performResize: function(g, f) {
                var e = g - this._mouseResizePosition.x,
                d = f - this._mouseResizePosition.y;
                if (this._resizeDirection) {
                    this._resize(this.resizeTarget, e, d)
                }
            },
            _resizeCursorChangeHandler: function(d, e) {
                if (d.enableResize && !d.collapsed) {
                    if (!d.isResizing) {
                        d._changeCursor(e.pageX - parseInt(d.resizeTarget.css("left")), e.pageY - parseInt(d.resizeTarget.css("top")))
                    }
                }
            },
            _resizeMouseDownHandler: function(d, e) {
                if (d.enableResize) {
                    if (d._resizeDirection !== null) {
                        d._resizeMouseDown = true;
                        d._mouseResizePosition.x = e.pageX;
                        d._mouseResizePosition.y = e.pageY;
                        e.preventDefault()
                    }
                }
            },
            _validateResizeProperties: function() {
                try {
                    if (!this.resizeTarget || this.resizeTarget.length !== 1) {
                        throw new Error(this._resizeExceptions.invalidTarget)
                    }
                    if (this.minHeight < 0 || isNaN(parseInt(this.minHeight))) {
                        throw new Error(this._resizeExceptions.invalidMinHeight)
                    }
                    if (this.maxHeight <= 0 || isNaN(parseInt(this.maxHeight))) {
                        throw new Error(this._resizeExceptions.invalidMaxHeight)
                    }
                    if (this.minWidth < 0 || isNaN(parseInt(this.minWidth))) {
                        throw new Error(this._resizeExceptions.invalidMinWidth)
                    }
                    if (this.maxWidth < 0 || isNaN(parseInt(this.maxWidth))) {
                        throw new Error(this._resizeExceptions.invalidMaxWidth)
                    }
                    if (this.resizeIndicatorSize < 0 || isNaN(parseInt(this.resizeIndicatorSize))) {
                        throw new Error(this._resizeExceptions.invalidIndicatorSize)
                    }
                    if (this.minHeight > this.maxHeight || this.minWidth > this.maxWidth) {
                        throw new Error(this._resizeExceptions.invalidSize)
                    }
                } catch(d) {
                    alert(d)
                }
            },
            _changeCursor: function(d, e) {
                if (this.isResizing || this._resizeMouseDown) {
                    return
                }
                this.resizeArea = true;
                if (d <= this.resizeIndicatorSize && d >= 0 && e <= this.resizeIndicatorSize && e > 0) {
                    this._resizeWrapper.css("cursor", "nw-resize");
                    this._resizeDirection = "topleft"
                } else {
                    if (e <= this.resizeIndicatorSize && e > 0 && d >= this.resizeTarget.width() - this.resizeIndicatorSize) {
                        this._resizeWrapper.css("cursor", "ne-resize");
                        this._resizeDirection = "topright"
                    } else {
                        if (e >= this.resizeTarget.height() - this.resizeIndicatorSize && e < this.resizeTarget.height() && d <= this.resizeIndicatorSize && d >= 0) {
                            this._resizeWrapper.css("cursor", "sw-resize");
                            this._resizeDirection = "bottomleft"
                        } else {
                            if (e >= this.resizeTarget.height() - this.resizeIndicatorSize && e < this.resizeTarget.height() && d >= this.resizeTarget.width() - this.resizeIndicatorSize && d < this.resizeTarget.width()) {
                                this._resizeWrapper.css("cursor", "se-resize");
                                this._resizeDirection = "bottomright"
                            } else {
                                if (d <= this.resizeIndicatorSize && d >= 0) {
                                    this._resizeWrapper.css("cursor", "e-resize");
                                    this._resizeDirection = "left"
                                } else {
                                    if (e <= this.resizeIndicatorSize && e > 0) {
                                        this._resizeWrapper.css("cursor", "n-resize");
                                        this._resizeDirection = "top"
                                    } else {
                                        if (e >= this.resizeTarget.height() - this.resizeIndicatorSize && e < this.resizeTarget.height()) {
                                            this._resizeWrapper.css("cursor", "n-resize");
                                            this._resizeDirection = "bottom"
                                        } else {
                                            if (d >= this.resizeTarget.width() - this.resizeIndicatorSize && d < this.resizeTarget.width()) {
                                                this._resizeWrapper.css("cursor", "e-resize");
                                                this._resizeDirection = "right"
                                            } else {
                                                this._resizeWrapper.css("cursor", this._cursorBackup);
                                                this._resizeDirection = null;
                                                this.resizeArea = false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            _prepareResizeMethods: function(d) {
                this._resizeMethods = [];
                if (d.indexOf("left") >= 0) {
                    this._resizeMethods.push(this._resizeLeft)
                }
                if (d.indexOf("top") >= 0) {
                    this._resizeMethods.push(this._resizeTop)
                }
                if (d.indexOf("right") >= 0) {
                    this._resizeMethods.push(this._resizeRight)
                }
                if (d.indexOf("bottom") >= 0) {
                    this._resizeMethods.push(this._resizeBottom)
                }
            },
            _validateResize: function(g, d, h, f, e) {
                if (h === "horizontal" || h === "both") {
                    return this._validateWidth(g, f, e)
                } else {
                    if (h === "vertical" || h === "both") {
                        return this._validateHeight(d, f, e)
                    }
                }
                return {
                    result: false,
                    fix: 0
                }
            },
            _getParent: function() {
                if (this.resizeParent !== null && this.resizeParent !== "undefined" && this.resizeParent.height && this.resizeParent.width && this.resizeParent.top && this.resizeParent.left) {
                    return this.resizeParent
                }
                return {
                    left: 0,
                    top: 0,
                    width: c(document).width(),
                    height: c(document).height()
                }
            },
            _validateHeight: function(f, k, i) {
                var l = 0,
                e = 2,
                d = false,
                h = f,
                g = this._getParent();
                if (c(window).width() > c(document).width() && c.jqx.browser.msie && g.height === c(document).height()) {
                    l = this._SCROLL_WIDTH
                }
                if (i === "bottom" && (f + k.position().top + l + e > g.height + g.top)) {
                    return {
                        fix: g.height - k.position().top - l - e + g.top,
                        result: false
                    }
                }
                if (i === "top" && k.lastHeight - f + k.y < g.top) {
                    return {
                        fix: f + (k.lastHeight - f + k.y) - g.top,
                        result: false
                    }
                }
                if (f < k.minHeight) {
                    return {
                        fix: k.minHeight,
                        result: false
                    }
                }
                if (f > k.maxHeight) {
                    return {
                        fix: k.maxHeight,
                        result: false
                    }
                }
                return {
                    result: true,
                    fix: f
                }
            },
            _validateWidth: function(k, i, h) {
                var l = 0,
                e = 2,
                d = false,
                g = k,
                f = this._getParent();
                if (c(window).height() < c(document).height() && c.jqx.browser.msie && document.documentElement.clientWidth >= document.documentElement.scrollWidth && f.width === c(document).width()) {
                    l = this._SCROLL_WIDTH
                }
                if (h === "right" && (k + i.position().left + l + e > f.width + f.left)) {
                    return {
                        fix: f.width - i.position().left - l - e + f.left,
                        result: false
                    }
                }
                if (h === "left" && (i.lastWidth - k + i.x < f.left)) {
                    return {
                        fix: k + (i.lastWidth - k + i.x) - f.left,
                        result: false
                    }
                }
                if (k < i.minWidth) {
                    return {
                        fix: i.minWidth,
                        result: false
                    }
                }
                if (k > i.maxWidth) {
                    return {
                        fix: i.maxWidth,
                        result: false
                    }
                }
                return {
                    result: true,
                    fix: k
                }
            },
            _resize: function(h, e, d) {
                var l = this._resizeDirection;
                var k = this._resizeMethods.length;
                for (var g = 0; g < k; g++) {
                    if (this._resizeMethods[g] instanceof Function) {
                        var f = {
                            element: h,
                            x: e,
                            y: d,
                            self: this
                        };
                        this._resizeMethods[g](f)
                    }
                }
                this._performResizeLayout()
            },
            resize: function(g, d) {
                if (this.resizable) {
                    var f = g - this.host.width();
                    var e = d - this.host.height();
                    var h = "right";
                    if (e != 0) {
                        h = "bottom"
                    }
                    this._resizeDirection = h;
                    this._prepareResizeMethods(this._resizeDirection);
                    this._resizeBackupData();
                    this.isResizing = true;
                    this._resize(this.resizeTarget, f, e);
                    this.isResizing = false
                }
            },
            _setResizeChildrenSize: function(e, f) {
                var h = this.resizeTargetChildren.length;
                while (h) {
                    h--;
                    if (f === "width") {
                        var g = this.resizeTargetChildren[h].lastWidth - (this.resizeTarget.lastWidth - e);
                        if (g < this.resizeTarget.maxWidth && g > 0) {
                            this.resizeTargetChildren[h].width(g)
                        }
                    } else {
                        var d = this.resizeTargetChildren[h].lastHeight - (this.resizeTarget.lastHeight - e);
                        if (d < this.resizeTarget.maxHeight && d > 0) {
                            this.resizeTargetChildren[h].height(d)
                        }
                    }
                }
            },
            _resizeRight: function(e) {
                var f = e.element.lastWidth + e.x,
                d = e.self._validateResize(f, 0, "horizontal", e.element, "right");
                if (!d.result) {
                    f = d.fix
                }
                if (e.element.width() !== f) {
                    e.self._setResizeChildrenSize(f, "width");
                    e.element.width(f);
                    e.self._raiseResizeEvent(0)
                }
                return f
            },
            _resizeLeft: function(f) {
                var g = f.element.lastWidth - f.x,
                e = f.self._validateResize(g, 0, "horizontal", f.element, "left"),
                d = f.element.x + f.x;
                if (!e.result) {
                    d = f.element.x + (f.element.lastWidth - e.fix);
                    g = e.fix;
                    return
                }
                if (f.element.width() !== g) {
                    f.self._setResizeChildrenSize(g, "width");
                    f.element.width(g);
                    f.element.css("left", d);
                    f.self._raiseResizeEvent(0)
                }
                return g
            },
            _resizeBottom: function(f) {
                var e = f.element.lastHeight + f.y,
                d = f.self._validateResize(0, e, "vertical", f.element, "bottom");
                if (!d.result) {
                    e = d.fix
                }
                if (f.element.height() !== e) {
                    f.self._setResizeChildrenSize(e, "height");
                    f.element.height(e);
                    f.self._raiseResizeEvent(0)
                }
                return e
            },
            _resizeTop: function(f) {
                var e = f.element.lastHeight - f.y,
                d = f.self._validateResize(0, e, "vertical", f.element, "top"),
                g = f.element.y + f.y;
                if (!d.result) {
                    g = f.element.y + (f.element.lastHeight - d.fix);
                    e = d.fix;
                    return
                }
                if (f.element.height() !== e) {
                    f.self._setResizeChildrenSize(e, "height");
                    f.element.height(e);
                    f.element.css("top", g);
                    f.self._raiseResizeEvent(0)
                }
                return e
            },
            _raiseResizeEvent: function(f) {
                var e = this._resizeEvents[f],
                g = c.Event(e),
                d = {};
                d.width = parseInt(this.resizeTarget[0].style.width);
                d.height = parseInt(this.resizeTarget[0].style.height);
                g.args = d;
                if (f == 0) {
                    var e = this._resizeEvents[2],
                    h = c.Event(e);
                    h.args = d;
                    this.resizeTarget.trigger(h)
                }
                return this.resizeTarget.trigger(g)
            }
        }
    } (jqxBaseFramework));
    b.extend(b.jqx._jqxWindow.prototype, a)
} (jqxBaseFramework));
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(b){b.jqx.jqxWidget("jqxEditor","",{});b.extend(b.jqx._jqxEditor.prototype,{defineInstance:function(){var d={width:null,height:null,disabled:false,pasteMode:"html",editable:true,lineBreak:"default",toolbarPosition:"top",commands:{bold:{tooltip:"Bold",command:"bold",type:"toggleButton"},italic:{tooltip:"Italic",command:"italic",type:"toggleButton"},underline:{tooltip:"Underline",command:"underline",type:"toggleButton"},format:{placeHolder:"Format Block",tooltip:"Format Block",command:"formatblock",value:[{value:"p",label:"Paragraph"},{value:"h1",label:"Header 1"},{value:"h2",label:"Header 2"},{value:"h3",label:"Header 3"},{value:"h4",label:"Header 4"}],type:"list",width:120,dropDownWidth:190,height:25},font:{placeHolder:"Font",tooltip:"Font Name",command:"fontname",value:[{label:"Arial",value:"Arial, Helvetica, sans-serif"},{label:"Comic Sans MS",value:'"Comic Sans MS", cursive, sans-serif'},{label:"Courier New",value:'"Courier New", Courier, monospace'},{label:"Georgia",value:"Georgia,serif"},{label:"Impact",value:"Impact,Charcoal,sans-serif"},{label:"Lucida Console",value:"'Lucida Console',Monaco,monospace"},{label:"Tahoma",value:"Tahoma,Geneva,sans-serif"},{label:"Times New Roman",value:"'Times New Roman',Times,serif"},{label:"Trebuchet MS",value:'"Trebuchet MS",Helvetica,sans-serif'},{label:"Verdana",value:"Verdana,Geneva,sans-serif"}],type:"list",width:160,height:25,dropDownWidth:160},size:{placeHolder:"Size",tooltip:"Font Size",command:"fontsize",value:[{label:"1 (8pt)",value:"xx-small"},{label:"2 (10pt)",value:"x-small"},{label:"3 (12pt)",value:"small"},{label:"4 (14pt)",value:"medium"},{label:"5 (18pt)",value:"large"},{label:"6 (24pt)",value:"x-large"},{label:"7 (36pt)",value:"xx-large"}],type:"list",width:45,height:25,dropDownWidth:160},color:{tooltip:"Text Color",command:"forecolor",value:"#000",type:"colorPicker"},background:{tooltip:"Fill Color",command:"backcolor",value:"#fff",type:"colorPicker"},left:{tooltip:"Align Left",command:"justifyleft",type:"toggleButton"},center:{tooltip:"Align Center",command:"justifycenter",type:"toggleButton"},right:{tooltip:"Align Right",command:"justifyright",type:"toggleButton"},outdent:{tooltip:"Indent Less",command:"outdent",type:"button"},indent:{tooltip:"Indent More",command:"indent",type:"button"},ul:{tooltip:"Insert unordered list",command:"insertunorderedlist",type:"toggleButton"},ol:{tooltip:"Insert ordered list",command:"insertorderedlist",type:"toggleButton"},image:{tooltip:"Insert image",command:"insertimage",type:"button"},link:{tooltip:"Insert link",command:"createlink",type:"toggleButton"},html:{tooltip:"View source",command:"viewsource",type:"toggleButton"},clean:{tooltip:"Remove Formatting",command:"removeformat",type:"button"}},createCommand:null,defaultLocalization:{bold:"Bold",italic:"Italic",underline:"Underline",format:"Format Block",font:"Font Name",size:"Font Size",color:"Text Color",background:"Fill Color",left:"Align Left",center:"Align Center",right:"Align Right",outdent:"Indent Less",indent:"Indent More",ul:"Insert unordered list",ol:"Insert ordered list",image:"Insert image",link:"Insert link",html:"View source",clean:"Remove Formatting",Remove:"Remove",Ok:"Ok",Cancel:"Cancel",Change:"Change","Go to link":"Go to link","Open in a new window/tab":"Open in a new window/tab",Align:"Align",VSpace:"VSpace",HSpace:"HSpace",Width:"Width",Height:"Height",Title:"Title",URL:"URL","Insert Image":"Insert Image","Insert Link":"Insert Link","Alt Text":"Alt Text","not set":"&ltnot set&gt",Left:"Left",Right:"Right",Paragraph:"Paragraph",Header:"Header",Arial:"Arial","Comic Sans MS":"Comic Sans MS","Courier New":"Courier New",Georgia:"Georgia",Impact:"Impact","Lucida Console":"Lucida Console",Tahoma:"Tahoma","Times New Roman":"Times New Roman","Trebuchet MS":"Trebuchet MS",Verdana:"Verdana"},localization:null,tools:"bold italic underline | format font size | color background | left center right | outdent indent | ul ol | image | link | clean | html",readOnly:false,stylesheets:new Array(),rtl:false,colorPickerTemplate:'<div class="jqx-editor-color-picker"><div role="grid"><table class="jqx-editor-color-picker-table" cellspacing="0" cellpadding="0"><tbody><tr><td aria-label="RGB (0, 0, 0)"><div title="RGB (0, 0, 0)" style="background-color: rgb(0, 0, 0);"></div></td><td aria-label="RGB (68, 68, 68)"><div title="RGB (68, 68, 68)" style="background-color: rgb(68, 68, 68);"></div></td><td aria-label="RGB (102, 102, 102)"><div title="RGB (102, 102, 102)" style="background-color: rgb(102, 102, 102);"></div></td><td aria-label="RGB (153, 153, 153)"><div title="RGB (153, 153, 153)" style="background-color: rgb(153, 153, 153);"></div></td><td aria-label="RGB (204, 204, 204)"><div title="RGB (204, 204, 204)" style="background-color: rgb(204, 204, 204);"></div></td><td aria-label="RGB (238, 238, 238)"><div title="RGB (238, 238, 238)" style="background-color: rgb(238, 238, 238);"></div></td><td aria-label="RGB (243, 243, 243)"><div title="RGB (243, 243, 243)" style="background-color: rgb(243, 243, 243);"></div></td><td aria-label="RGB (255, 255, 255)"><div title="RGB (255, 255, 255)" style="background-color: rgb(255, 255, 255);"></div></td></tr></tbody></table></div><div role="grid"><table class="jqx-editor-color-picker-table" cellspacing="0" cellpadding="0"><tbody><tr><td aria-label="RGB (255, 0, 0)"><div title="RGB (255, 0, 0)" style="background-color: rgb(255, 0, 0);"></div></td><td aria-label="RGB (255, 153, 0)"><div title="RGB (255, 153, 0)" style="background-color: rgb(255, 153, 0);"></div></td><td aria-label="RGB (255, 255, 0)"><div title="RGB (255, 255, 0)" style="background-color: rgb(255, 255, 0);"></div></td><td aria-label="RGB (0, 255, 0)"><div title="RGB (0, 255, 0)" style="background-color: rgb(0, 255, 0);"></div></td><td aria-label="RGB (0, 255, 255)"><div title="RGB (0, 255, 255)" style="background-color: rgb(0, 255, 255);"></div></td><td aria-label="RGB (0, 0, 255)"><div title="RGB (0, 0, 255)" style="background-color: rgb(0, 0, 255);"></div></td><td aria-label="RGB (153, 0, 255)"><div title="RGB (153, 0, 255)" style="background-color: rgb(153, 0, 255);"></div></td><td aria-label="RGB (255, 0, 255)"><div title="RGB (255, 0, 255)" style="background-color: rgb(255, 0, 255);"></div></td></tr></tbody></table></div><div role="grid"><table class="jqx-editor-color-picker-table" cellspacing="0" cellpadding="0"><tbody><tr><td aria-label="RGB (244, 204, 204)"><div title="RGB (244, 204, 204)" style="background-color: rgb(244, 204, 204);"></div></td><td aria-label="RGB (252, 229, 205)"><div title="RGB (252, 229, 205)" style="background-color: rgb(252, 229, 205);"></div></td><td aria-label="RGB (255, 242, 204)"><div title="RGB (255, 242, 204)" style="background-color: rgb(255, 242, 204);"></div></td><td aria-label="RGB (217, 234, 211)"><div title="RGB (217, 234, 211)" style="background-color: rgb(217, 234, 211);"></div></td><td aria-label="RGB (208, 224, 227)"><div title="RGB (208, 224, 227)" style="background-color: rgb(208, 224, 227);"></div></td><td aria-label="RGB (207, 226, 243)"><div title="RGB (207, 226, 243)" style="background-color: rgb(207, 226, 243);"></div></td><td aria-label="RGB (217, 210, 233)"><div title="RGB (217, 210, 233)" style="background-color: rgb(217, 210, 233);"></div></td><td aria-label="RGB (234, 209, 220)"><div title="RGB (234, 209, 220)" style="background-color: rgb(234, 209, 220);"></div></td></tr><tr><td id="T-Kw-Jn88" aria-label="RGB (234, 153, 153)"><div title="RGB (234, 153, 153)" style="background-color: rgb(234, 153, 153);"></div></td><td aria-label="RGB (249, 203, 156)"><div title="RGB (249, 203, 156)" style="background-color: rgb(249, 203, 156);"></div></td><td aria-label="RGB (255, 229, 153)"><div title="RGB (255, 229, 153)" style="background-color: rgb(255, 229, 153);"></div></td><td aria-label="RGB (182, 215, 168)"><div title="RGB (182, 215, 168)" style="background-color: rgb(182, 215, 168);"></div></td><td aria-label="RGB (162, 196, 201)"><div title="RGB (162, 196, 201)" style="background-color: rgb(162, 196, 201);"></div></td><td aria-label="RGB (159, 197, 232)"><div title="RGB (159, 197, 232)" style="background-color: rgb(159, 197, 232);"></div></td><td aria-label="RGB (180, 167, 214)"><div title="RGB (180, 167, 214)" style="background-color: rgb(180, 167, 214);"></div></td><td aria-label="RGB (213, 166, 189)"><div title="RGB (213, 166, 189)" style="background-color: rgb(213, 166, 189);"></div></td></tr><tr><td aria-label="RGB (224, 102, 102)"><div title="RGB (224, 102, 102)" style="background-color: rgb(224, 102, 102);"></div></td><td aria-label="RGB (246, 178, 107)"><div title="RGB (246, 178, 107)" style="background-color: rgb(246, 178, 107);"></div></td><td aria-label="RGB (255, 217, 102)"><div title="RGB (255, 217, 102)" style="background-color: rgb(255, 217, 102);"></div></td><td aria-label="RGB (147, 196, 125)"><div title="RGB (147, 196, 125)" style="background-color: rgb(147, 196, 125);"></div></td><td aria-label="RGB (118, 165, 175)"><div title="RGB (118, 165, 175)" style="background-color: rgb(118, 165, 175);"></div></td><td aria-label="RGB (111, 168, 220)"><div title="RGB (111, 168, 220)" style="background-color: rgb(111, 168, 220);"></div></td><td aria-label="RGB (142, 124, 195)"><div title="RGB (142, 124, 195)" style="background-color: rgb(142, 124, 195);"></div></td><td aria-label="RGB (194, 123, 160)"><div title="RGB (194, 123, 160)" style="background-color: rgb(194, 123, 160);"></div></td></tr><tr><td id="T-Kw-Jn104" aria-label="RGB (204, 0, 0)"><div title="RGB (204, 0, 0)" style="background-color: rgb(204, 0, 0);"></div></td><td aria-label="RGB (230, 145, 56)"><div title="RGB (230, 145, 56)" style="background-color: rgb(230, 145, 56);"></div></td><td aria-label="RGB (241, 194, 50)"><div title="RGB (241, 194, 50)" style="background-color: rgb(241, 194, 50);"></div></td><td aria-label="RGB (106, 168, 79)"><div title="RGB (106, 168, 79)" style="background-color: rgb(106, 168, 79);"></div></td><td aria-label="RGB (69, 129, 142)"><div title="RGB (69, 129, 142)" style="background-color: rgb(69, 129, 142);"></div></td><td aria-label="RGB (61, 133, 198)"><div title="RGB (61, 133, 198)" style="background-color: rgb(61, 133, 198);"></div></td><td aria-label="RGB (103, 78, 167)"><div title="RGB (103, 78, 167)" style="background-color: rgb(103, 78, 167);"></div></td><td aria-label="RGB (166, 77, 121)"><div title="RGB (166, 77, 121)" style="background-color: rgb(166, 77, 121);"></div></td></tr><tr><td aria-label="RGB (153, 0, 0)"><div title="RGB (153, 0, 0)" style="background-color: rgb(153, 0, 0);"></div></td><td aria-label="RGB (180, 95, 6)"><div title="RGB (180, 95, 6)" style="background-color: rgb(180, 95, 6);"></div></td><td aria-label="RGB (191, 144, 0)"><div title="RGB (191, 144, 0)" style="background-color: rgb(191, 144, 0);"></div></td><td aria-label="RGB (56, 118, 29)"><div title="RGB (56, 118, 29)" style="background-color: rgb(56, 118, 29);"></div></td><td aria-label="RGB (19, 79, 92)"><div title="RGB (19, 79, 92)" style="background-color: rgb(19, 79, 92);"></div></td><td aria-label="RGB (11, 83, 148)"><div title="RGB (11, 83, 148)" style="background-color: rgb(11, 83, 148);"></div></td><td aria-label="RGB (53, 28, 117)"><div title="RGB (53, 28, 117)" style="background-color: rgb(53, 28, 117);"></div></td><td aria-label="RGB (116, 27, 71)"><div title="RGB (116, 27, 71)" style="background-color: rgb(116, 27, 71);"></div></td></tr><tr><td aria-label="RGB (102, 0, 0)"><div title="RGB (102, 0, 0)" style="background-color: rgb(102, 0, 0);"></div></td><td aria-label="RGB (120, 63, 4)"><div title="RGB (120, 63, 4)" style="background-color: rgb(120, 63, 4);"></div></td><td aria-label="RGB (127, 96, 0)"><div title="RGB (127, 96, 0)" style="background-color: rgb(127, 96, 0);"></div></td><td aria-label="RGB (39, 78, 19)"><div title="RGB (39, 78, 19)" style="background-color: rgb(39, 78, 19);"></div></td><td aria-label="RGB (12, 52, 61)"><div title="RGB (12, 52, 61)" style="background-color: rgb(12, 52, 61);"></div></td><td aria-label="RGB (7, 55, 99)"><div title="RGB (7, 55, 99)" style="background-color: rgb(7, 55, 99);"></div></td><td aria-label="RGB (32, 18, 77)"><div title="RGB (32, 18, 77)" style="background-color: rgb(32, 18, 77);"></div></td><td aria-label="RGB (76, 17, 48)"><div title="RGB (76, 17, 48)" style="background-color: rgb(76, 17, 48);"></div></td></tr></tbody></table></div></div>',touchMode:false,keyPressed:null,events:["change"]};b.extend(true,this,d);this.localization=this.defaultLocalization;return d},createInstance:function(f){var j=this;j.textArea=j.host;var d=j.host.attr("contenteditable");j.host.addClass(j.toThemeProperty("jqx-widget"));if(d==true||d=="true"){j.inline=true;j.widget=j.host;j.editorDocument=document;j.selection=new a(j.editorDocument);var i=b("<div class='jqx-editor-toolbar-container' unselectable='on' aria-label='Formatting options' role='toolbar'><div class='jqx-editor-toolbar'></div>");i.insertBefore(j.host);j.toolbarContainer=i;j.toolbar=i.find(".jqx-editor-toolbar");j.editor=j.host;j.contentEditableElement=j.element}else{var g=b("<div class='jqx-editor'><div class='jqx-editor-container'><div class='jqx-editor-toolbar-container' aria-label='Formatting options' role='toolbar'><div class='jqx-editor-toolbar'></div></div><div class='jqx-editor-content'><iframe  src='javascript:\"<html></html>\"' allowtransparency='true' frameborder='0'></iframe></div></div></div>");j.widget=g;j.widget[0].className=j.widget[0].className+" "+j.element.className;try{j.widget[0].style=j.element.style}catch(e){}var h=b.trim(j.host.html())+"&#8203;";if(j.lineBreak=="default"||j.lineBreak=="div"){h="<div>"+h+"</div>"}else{if(j.lineBreak=="p"){h="<p>"+h+"</p>"}}h=h.replace(/&lt;/ig,"<");h=h.replace(/&gt;/ig,">");j.host.css("display","none");j.host.after(g);g.find("iframe").after(j.host);j.container=g.find(".jqx-editor-container");j.toolbarContainer=g.find(".jqx-editor-toolbar-container");j.toolbar=g.find(".jqx-editor-toolbar");j.iframe=g.find("iframe");j.content=g.find(".jqx-editor-content");var k=function(){j.editorDocument=j.iframe[0].contentWindow.document;j.selection=new a(j.editorDocument);var o=0;j.addHandler(j.iframe,"load",function(){o++;if(o>1){j.iframe.off("load");j.content.find("iframe").remove();var q=b("<iframe  src='javascript:\"<html></html>\"' allowtransparency='true' frameborder='0'></iframe>").appendTo(j.content);j.iframe=g.find("iframe");k()}});if(!b.jqx.browser.mozilla){j.editorDocument.designMode="On"}j.editorDocument.open();var m=j.rtl?"direction:rtl;":"";var l=b.jqx.browser.msie?"::selection{color: #fff; background: #328EFD;};::-moz-selection{color: #fff; background: #328eD;};::selection:window-inactive {background: #c7c7c7; color: #000;}::-moz-selection:window-inactive {background: #c7c7c7; color: #000;}html{font-size:13px; height:100%;}body{padding-top:1px;margin-top:-1px; padding-right: 1px; overflow-x: hidden;word-wrap: break-word;-webkit-nbsp-mode: space;-webkit-line-break: after-white-space;":"";j.editorDocument.write("<!DOCTYPE html><html><head><meta charset='utf-8' /><style>html,body{padding:0; margin:0; font-size: 13px; font-family:Verdana,Geneva,sans-serif; background:#fff; min-height:100%; "+m+"}"+l+"}h1{font-size:2em;margin:.67em 0}h2{font-size: 1.5em; margin: .75em 0}h3{font-size: 1.17em; margin: .83em 0}h4{font-size:1em; margin: 1.12em 0 }h5{font-size: .83em; margin: 1.5em 0}h6{font-size: .75em; margin: 1.67em 0}p{margin: 0px;padding:0 .2em}ul,ol{padding-left:2.5em}a{color:#00a}code{font-size:1.23em}.jqx-editor-paste-element {position: absolute; left: -1000px; height: 1px; overflow: hidden; top: -1000px;}.jqx-editor-focus {border: 1px solid #aaa !important;}</style>"+b.map(j.stylesheets,function(q){return"<link rel='stylesheet' href='"+q+"'>"}).join("")+"</head><body autocorrect='off' contenteditable='true'></body></html>");j.contentEditableElement=j.editorDocument.body;if(j.host.is("textarea")){j._textArea=j.element;var n=j.host.data();n.jqxEditor.host=g;n.jqxEditor.element=g[0];j.element=g[0];g[0].id=j._textArea.id;j._textArea.id=j._textArea.id+"TextArea";b(j.element).addClass(j.toThemeProperty("jqx-widget"));j.host=b(j.element);j.host.data(n)}else{var n=j.host.data();n.jqxEditor.host=g;n.jqxEditor.element=g[0];j.element=g[0];j.host=b(j.element);j.host.data(n)}try{j.editorDocument.execCommand("useCSS",false,false);j.editorDocument.execCommand("enableInlineTableEditing",null,false)}catch(p){}try{j.editorDocument.execCommand("styleWithCSS",0,true)}catch(p){}j.editorDocument.close();j.editor=b(j.editorDocument.body);j.editor.html(h).attr("spellcheck",false).attr("autocorrect","off")};k();b.jqx.utilities.resize(j.host,function(){j.widget.css("width",j.width);j.widget.css("height",j.height);j._arrange()})}},focus:function(){var e=this;if(b.jqx.browser.mozilla){if(!e.focused){if(e.iframe){e.iframe.focus()}e.selection.selectNode(e.editor[0].firstChild,true);e.selection.getRange().collapse(true)}}e.editor.focus();var d=e.range!=null?e.range:e.getRange();e.selectRange(d)},print:function(){var d=window.open("","_blank","width=450,height=470,left=400,top=100,menubar=yes,toolbar=no,location=no,scrollbars=yes");d.document.open();d.document.write('<!doctype html><html><head><title>Print</title></head><body onload="print();">'+this.val()+"</body></html>");d.document.close()},refresh:function(d){var m=this;b.each(this.defaultLocalization,function(i,r){if(!m.localization[i]){m.localization[i]=r}});m._removeHandlers();m.toolbar.addClass(m.toThemeProperty("jqx-widget-header"));if(m.content){m.widget.css("width",m.width);m.widget.css("height",m.height);m.widget.addClass(m.toThemeProperty("jqx-editor"));m.widget.addClass(m.toThemeProperty("jqx-widget"));m.widget.addClass(m.toThemeProperty("jqx-rc-all"));m.widget.addClass(m.toThemeProperty("jqx-widget-header"));m.content.addClass(m.toThemeProperty("jqx-widget-content"));m.container.addClass(m.toThemeProperty("jqx-editor-container"))}else{m.toolbarContainer.addClass(m.toThemeProperty("jqx-widget-header"));m.toolbarContainer.addClass(m.toThemeProperty("jqx-editor-toolbar-inline"));m.toolbarContainer.addClass(m.toThemeProperty("jqx-widget"));m.toolbarContainer.addClass(m.toThemeProperty("jqx-rc-all"));m.toolbarContainer.hide();m.toolbarContainer.css("position","absolute");m.editor.addClass(m.toThemeProperty("jqx-editor-inline"));m.toolbarContainer.css("width",m.host.outerWidth()+"px")}var n=m.toolbarContainer.index();if(m.toolbarPosition=="top"&&n!=0||m.toolbarPosition=="bottom"&&n!=1){switch(m.toolbarPosition){case"bottom":m.toolbarContainer.insertAfter(m.content);break;case"top":default:m.toolbarContainer.insertBefore(m.content);break}}var h=m.tools;if(h!==false){var l=h.split(" ");var p=h.split(" | ");var q=function(i,r){b.each(r,function(y,F){var u=m.commands[this];if(!u){if(m.createCommand){u=m.createCommand(this.toString());if(!u){return true}if(!m.commands[this]){m.commands[this]=u}}else{return true}}else{if(m.createCommand){var x=m.createCommand(this.toString());u=b.extend(u,x)}}if(m.localization[this]){u.tooltip=m.localization[this]}switch(u.type){case"list":if(u.widget){u.widget.jqxDropDownList("destroy")}var A=function(R,Q,S){if(u.command=="formatblock"){return"<"+S+' unselectable="on" style="padding: 0px; margin: 0px;">'+Q+"</"+S+">"}else{if(u.command=="fontname"){return'<span unselectable="on" style="font-family: '+S+';">'+Q+"<span>"}else{if(u.command=="fontsize"){return'<span unselectable="on" style="font-size: '+S+';">'+Q+"<span>"}}}};var t=function(){var Q=m.toThemeProperty("jqx-editor-toolbar-icon")+" "+m.toThemeProperty("jqx-editor-toolbar-icon-"+u.command);var R="<div unselectable='on' style='margin-top: 0px; padding:0px;' class='"+Q+"'></div>";return R};var C=u.command=="formatblock"||u.command=="fontname"||u.command=="fontsize";var z=u.value||[];var N=new Array();var J=u.placeHolder||"Please Choose:";if(u.command=="fontname"){b.each(z,function(){var Q=m.localization[this.label];N.push({label:Q,value:this.value})})}else{if(u.command=="formatblock"){J=m.localization.format;b.each(z,function(){if(this.label.indexOf("Header")>=0){var Q=this.label.replace("Header",m.localization.Header)}else{var Q=m.localization[this.label]}N.push({label:Q,value:this.value})})}else{N=z}}var P={enableBrowserBoundsDetection:true,touchMode:m.touchMode,width:u.width||100,height:u.height||25,dropDownWidth:u.dropDownWidth||"auto",autoDropDownHeight:(u.value&&u.value.length)<12?true:false,placeHolder:J,source:N,theme:m.theme,keyboardSelection:false,focusable:false,disabled:m.disabled,rtl:m.rtl,selectionRenderer:u.command=="fontsize"?t:null,renderer:C?A:null};var D="jqx-disableselect "+m.toThemeProperty("jqx-editor-dropdownlist")+" "+m.toThemeProperty("jqx-editor-toolbar-item");var w=b("<div unselectable='on' class='"+D+"'></div>");w.appendTo(i);w.jqxDropDownList(P);if(u.init){u.init(w)}var F=null;var E=null;var K="";m.addHandler(w,"mousedown",function(R){if(b(".jqx-editor-dropdownpicker").length>0){b(".jqx-editor-dropdownpicker").jqxDropDownButton("close")}if(b(".jqx-editor-dropdownlist").length>0){var Q=b(".jqx-editor-dropdownlist");b.each(Q,function(S,T){if(T!=w[0]){b(T).jqxDropDownList("close")}})}});m.addHandler(w,"open",function(Q){if(!m.focused){m.focus()}m.updating=true;m.activeElement=w;F=w.val();K=""});m.addHandler(w,"change",function(Q){m.updating=false;m.activeElement=null;E=w.val();K=Q.args.type;if(b.jqx.browser.msie&&b.jqx.browser.version<9){m.focus()}});m.addHandler(w,"close",function(Q){m.updating=false;m.activeElement=null;if(F!=E){if(K=="mouse"||K=="keyboard"){m._refreshTools()}}});m._addCommandHandler(w,"change",u.command,null,u);break;case"colorPicker":if(u.widget){b(u.colorPicker).remove();u.widget.jqxDropDownButton("destroy")}var B=b('<div unselectable="on" style="padding-top: 4px;"></div>').attr("id","picker-"+u.command);var D="jqx-disableselect "+m.toThemeProperty("jqx-editor-dropdownpicker")+" "+m.toThemeProperty("jqx-editor-toolbar-item");var w=b("<div unselectable='on' class='"+D+"'></div>");w.appendTo(i);w.append(B);w.jqxDropDownButton({touchMode:m.touchMode,disabled:m.disabled,enableBrowserBoundsDetection:true,width:u.width||45,height:u.height||25,rtl:m.rtl,focusable:false,theme:m.theme});var I=b('<div unselectable="on" style="z-index: 55;">');var s=m.toThemeProperty("jqx-editor-toolbar-icon")+" "+m.toThemeProperty("jqx-editor-toolbar-icon-"+u.command);var O=b("<div unselectable='on' class='"+s+"'></div>");I.append(O);var L=b('<div unselectable="on" class="jqx-editor-color-bar">').attr("id","bar-"+u.command).css("background-color",u.value);I.append(L);w.jqxDropDownButton("setContent",I);B.append(b(m.colorPickerTemplate));u.colorPicker=B;if(u.init){u.init(w)}B.find("tr").attr("role","row").attr("unselectable","on");B.find("td").attr("role","gridcell").attr("unselectable","on").css("-webkit-user-select","none");B.find("div").attr("unselectable","on");m.addHandler(w,"mousedown",function(R){if(b(".jqx-editor-dropdownlist").length>0){b(".jqx-editor-dropdownlist").jqxDropDownList("close")}if(b(".jqx-editor-dropdownpicker").length>0){var Q=b(".jqx-editor-dropdownpicker");b.each(Q,function(S,T){if(T!=w[0]){b(T).jqxDropDownButton("close")}})}});m.addHandler(w,"open",function(){if(!m.focused){m.focus()}m.updating=true;m.activeElement=B});m.addHandler(w,"close",function(Q){m.updating=false;m.activeElement=null;if(F!=E){if(K=="mouse"||K=="keyboard"){m._refreshTools()}}});m.addHandler(B,"keydown",function(Q){var Y=Q.keyCode;var V=b(B).find(".jqx-editor-color-picker-selected-cell");var aa=B.find("tr");var T=aa.length;var S=V.parent().children().length;var U=V.index();var W=-999;var Z=V.parent();b.each(aa,function(ab,ac){if(this==Z[0]){W=ab;return false}});switch(Y){case 27:w.jqxDropDownButton("close");break;case 13:b(V).trigger("mousedown");break;case 38:W--;break;case 40:W++;break;case 39:U++;break;case 37:U--;break}if(W>=0&&W<=T){if(U>=0&&U<=S){var Z=B.find("tr")[W];var X=b(Z).children()[U];var R=b(X).children().css("background-color");u.val(R)}}});var M=b(B).find("td");u.val=function(Q){var R=m._rgbToHex(Q);b.each(M,function(){var S=b(this).children().css("background-color");var T=m._rgbToHex(S);if(T==R){M.removeClass("jqx-editor-color-picker-selected-cell");b(this).addClass("jqx-editor-color-picker-selected-cell");b("#bar-"+u.command).css("background",S);return false}})};u.val(u.value);m._addCommandHandler(M,"mousedown",u.command,null,u);break;case"button":case"toggleButton":default:if(u.widget){if(u.type=="button"){u.widget.jqxButton("destroy")}else{u.widget.jqxToggleButton("destroy")}}var v=u.command;var H=u.action;var s=m.toThemeProperty("jqx-editor-toolbar-icon")+" "+m.toThemeProperty("jqx-editor-toolbar-icon-"+v);var O=b("<div unselectable='on' class='"+s+"'></div>");var w=b("<div unselectable='on'></div>").addClass("jqx-disableselect").addClass(m.toThemeProperty("jqx-editor-toolbar-button"));if(!u.init){w.append(O)}else{if(v){w.append(O)}}w.appendTo(i);if(u.type=="button"){w.jqxButton({disabled:m.disabled,rtl:m.rtl,theme:m.theme})}else{if(u.type=="toggleButton"){w.jqxToggleButton({disabled:m.disabled,rtl:m.rtl,uiToggle:false,theme:m.theme})}}if(u.init){u.init(w)}u.toggled=false;u.toggle=function(){u.toggled=!u.toggled};m.addHandler(w,"mousedown",function(Q){if(Q.preventDefault){Q.preventDefault()}if(Q.stopPropagation){Q.stopPropagation()}return false});if(!b.jqx.mobile.isTouchDevice()){m._addCommandHandler(w,"click",v,H,u)}else{m._addCommandHandler(w,"mousedown",v,H,u)}break}u.widget=w;if(w){try{if(u.tooltip!=""){u.widget.attr("title",u.tooltip);u.widget.attr("data-tooltip",u.tooltip)}if(u.command){u.widget.attr("data-command",u.command)}u.widget.attr("aria-label",u.tooltip)}catch(G){}if(u.type=="button"||u.type=="toggleButton"){if(r.length>2){if(y==0){w.css("border-right-radius","0px");w.addClass(m.toThemeProperty("jqx-rc-l"))}else{if(y==r.length-1){w.css("border-left-radius","0px");w.addClass(m.toThemeProperty("jqx-rc-r"))}}w.removeClass(m.toThemeProperty("jqx-rc-all"))}if(y!=0&&y!=r.length-1&&r.length>2){w.css("border-left-radius","0px");w.css("border-right-radius","0px");w.removeClass(m.toThemeProperty("jqx-rc-all"))}else{if(r.length==2){if(y==0){w.css("border-right-radius","0px");w.addClass(m.toThemeProperty("jqx-rc-l"))}else{w.css("border-left-radius","0px");w.addClass(m.toThemeProperty("jqx-rc-r"))}w.removeClass(m.toThemeProperty("jqx-rc-all"))}else{if(r.length==1){w.css("margin-right","0px")}}}}}})};m.toolbar.css("direction",!this.rtl?"ltr":"rtl");if(p.length==0){q(m.toolbar,l)}else{for(var j=0;j<p.length;j++){var f=p[j];var l=f.split(" ");var o=m.toThemeProperty("jqx-editor-toolbar-group")+" "+m.toThemeProperty("jqx-fill-state-normal");var k=b("<div class='"+o+"'></div>");k.addClass(m.toThemeProperty("jqx-rc-all"));m.toolbar.append(k);q(k,l)}var g=m.toolbar.find(".jqx-editor-toolbar-group");var e=g.length;for(var j=0;j<e;j++){if(b(g[j]).children().length==0){b(g[j]).remove()}}}if(b.jqx.browser.msie&&b.jqx.browser.version<8){b(".jqx-editor-toolbar-group").css("float","left");b(".jqx-editor-toolbar-group").children().css("float","left");b(".jqx-editor-toolbar-group").css("zoom","1");b(".jqx-editor-toolbar-group").children().css("zoom","1")}}m._arrange();m._addHandlers()},_arrange:function(){var d=this;if(d.content){if(d.tools==""||d.tools==false){d.content.height(d.container.outerHeight()-parseInt(d.container.css("padding-top"))-parseInt(d.container.css("padding-bottom"))-6);d.content.css("margin-top","4px");d.toolbar.hide()}else{d.toolbar.show();d.content.css("margin-top","0px");d.content.height(d.container.outerHeight()-d.toolbar.outerHeight()-parseInt(d.container.css("padding-top"))-parseInt(d.container.css("padding-bottom"))-2);if(d.toolbarPosition!="top"){d.content.css("margin-top","4px");d.content.css("margin-bottom","0px")}}if(b.jqx.browser.msie&&b.jqx.browser.version<8){d.content.css("margin-top","4px");d.content.height(d.container.height()-d.toolbar.outerHeight()-2*parseInt(d.container.css("padding-bottom"))-10);d.content.width(d.container.width()-2*parseInt(d.container.css("padding-left"))-2)}if(d.editor.height()<d.content.height()){d.editor.height(d.content.height())}}},propertyChangedHandler:function(d,e,h,g){var f=d;if(f.isInitialized==undefined||f.isInitialized==false){return}if(e=="pasteMode"||e=="lineBreak"||e=="editable"){return}if(e=="disabled"){d._refreshTools()}if(e=="width"||e=="height"||e=="toolbarPosition"){d._arrange();return}d.refresh()},selectRange:function(d){var e=this;if(!d){d=e.getRange()}e.selection.selectRange(d)},getRange:function(){var d=this;return d.selection.getRange()},getSelectedElement:function(){var h,k,d,g;var i=this;try{if(i.editorDocument.getSelection){var l=i.editorDocument.getSelection();h=l.getRangeAt(l.rangeCount-1);d=h.startContainer;g=h.endContainer;k=h.commonAncestorContainer;if(d.nodeName=="#text"){k=k.parentNode}if(d.nodeName=="#text"){d=d.parentNode}if(d.nodeName.toLowerCase()=="body"){d=d.firstChild}if(g.nodeName=="#text"){g=g.parentNode}if(g.nodeName.toLowerCase()=="body"){g=g.lastChild}if(d==g){k=d}return g}else{if(i.editorDocument.selection){h=i.editorDocument.selection.createRange();if(!h.duplicate){return null}k=h.parentElement();var f=h.duplicate();var e=h.duplicate();f.collapse(true);e.moveToElementText(f.parentElement());e.setEndPoint("EndToStart",f);d=f.parentElement();f=h.duplicate();e=h.duplicate();e.collapse(false);f.moveToElementText(e.parentElement());f.setEndPoint("StartToEnd",e);g=e.parentElement();if(d.nodeName.toLowerCase()=="body"){d=d.firstChild}if(g.nodeName.toLowerCase()=="body"){g=g.lastChild}if(d==g){k=d}return g}}}catch(j){return null}return null},_addHandlers:function(){var e=this;e.addHandler(e.toolbar,"mousedown.editor"+e.element.id,function(g){if(g.preventDefault){g.preventDefault()}if(g.stopPropagation){g.stopPropagation()}return false});var f=function(){if(e._textArea){if(!e.updating){e._textArea.value=e.val()}}if(e.changed){e._raiseEvent("change");e.changed=false}e.focused=false;if(e.inline){e.host.removeClass(e.toThemeProperty("jqx-fill-state-focus"));e.host.removeClass(e.toThemeProperty("jqx-editor-inline-focus"));if(e.tools==""||e.tools==null){return}e.toolbarContainer.fadeOut("fast")}};var d=function(){e.focused=true;if(e.inline){e.host.addClass(e.toThemeProperty("jqx-fill-state-focus"));e.host.addClass(e.toThemeProperty("jqx-editor-inline-focus"));e.host.addClass(e.toThemeProperty("jqx-rc-all"));if(e.tools==""||e.tools==null){return}e.toolbarContainer.fadeIn("fast");var g=e.host.coord();if(e.toolbarPosition!="bottom"){e.toolbarContainer.offset({left:g.left,top:g.top-e.toolbarContainer.outerHeight()-5})}else{e.toolbarContainer.offset({left:g.left,top:g.top+5+e.host.height()})}}};if(b.jqx.browser.mozilla){this.addHandler(b(document),"mousedown.editor"+e.element.id,function(g){f()})}e.addHandler(e.editor,"blur.editor"+e.element.id,function(g){f()});e.addHandler(e.editor,"focus.editor"+e.element.id,function(g){d()});e.addHandler(e.editor,"beforedeactivate.editor"+e.element.id,function(g){e.range=e.getRange()});e.addHandler(e.editor,"mousedown.editor"+e.element.id,function(g){if(!g.target.href){if(e.linkPopup){e.linkPopup.remove()}}e.range=e.getRange();if(b.jqx.browser.mozilla){d();g.stopPropagation()}if(b(".jqx-editor-dropdownpicker").length>0){b(".jqx-editor-dropdownpicker").jqxDropDownButton("close")}if(b(".jqx-editor-dropdownlist").length>0){b(".jqx-editor-dropdownlist").jqxDropDownList("close")}if(e.inline){e.editor.focus()}});if(b.jqx.mobile.isTouchDevice()){e.addHandler(b(e.editorDocument),"selectionchange.editor"+e.element.id,function(){if(e.editorDocument.activeElement!=e.editor[0]){setTimeout(function(){if(e.iframe){e.iframe[0].contentWindow.focus()}},500)}});e.addHandler(b(e.editorDocument),"touchstart.editor"+e.element.id,function(){setTimeout(function(){if(e.iframe){e.iframe[0].contentWindow.focus()}},500)})}e.addHandler(e.editor,"mouseup.editor"+e.element.id,function(g){if(e._documentMode=="source"){return true}e.range=e.getRange();e._refreshTools(null,true)});e.addHandler(e.editor,"keydown.editor"+e.element.id,function(g){if(e.keyPressed){e.keyPressed(g)}if(e._documentMode=="source"){return true}if(b.jqx.browser.mozilla){if(!e.focused){d()}}if(e.disabled){if(g.preventDefault){g.preventDefault()}return false}if(e.updating){if(e.activeElement){var m=b.Event("keydown");b.extend(m,g);e.activeElement.trigger(m)}if(g.preventDefault){g.preventDefault()}return false}var n=g||window.event;var q=n.keyCode;var r=String.fromCharCode(q).toLowerCase();if(!e.editable){var l=[9,33,34,35,36,37,38,39,40,40,45];if(b.inArray(n.keyCode,l)==-1&&!(n.ctrlKey&&r=="c")&&!(n.ctrlKey&&r=="a")){g.preventDefault()}}if(e.selection.getText().length>0||e.linkPopup){var l=[8,9,13,33,34,35,36,37,38,39,40,40,45,46];if(!b.inArray(n.keyCode,l)!=-1||(n.keyCode==65&&n.ctrlKey&&!n.altKey&&!n.shiftKey)){if(e._refreshToolsTimer){clearTimeout(e._refreshToolsTimer)}e._refreshToolsTimer=setTimeout(function(){e._refreshTools(null,true,n.keyCode)},10)}}if(q==13&&e.lineBreak!="default"){var k=e.getSelectedElement();if(k){var o=k.nodeName.toLowerCase();switch(o){case"pre":case"li":case"ul":case"ol":case"h1":case"h2":case"h3":case"h4":case"h5":case"h6":return true}var p=k;while(p!=null){if(p.nodeName=="#document"){p=e.editorDocument.body;break}if(p.parentNode==e.editorDocument.body||p==e.editorDocument.body){break}p=p.parentNode}}if(p){var j=e.getRange();if(e.editorDocument.body.innerHTML=="<div></div>"&&e.lineBreak!="br"){e.selection.insertContent("&#8203;")}if(e.lineBreak=="div"){if(p==e.editorDocument.body){b(p).append("<div>&#8203;</div><span id='INSERTION_MARKER'>&nbsp;</span>")}else{b("<div>&#8203;</div><span id='INSERTION_MARKER'>&nbsp;</span>").insertAfter(p)}}else{if(e.lineBreak=="p"){if(p==e.editorDocument.body){b(p).append("<p>&#8203;</p><span id='INSERTION_MARKER'>&nbsp;</span>")}else{b("<p>&#8203;</p><span id='INSERTION_MARKER'>&nbsp;</span>").insertAfter(p)}}else{e.execute("insertHTML","<br/>&#8203;<span id='INSERTION_MARKER'>&nbsp;</span>")}}e.selectRange(j);var i=b(e.editorDocument).find("#INSERTION_MARKER");if(e.lineBreak!="br"){e.selection.selectNode(b(i).prev()[0],true)}else{e.selection.selectNode(i[0],true);if(e.getRange().setStartAfter){e.getRange().setStartAfter(i[0])}}i.remove();e.selection.collapse(false);if(p&&p.nodeName&&e.lineBreak=="br"){if(p.nodeName.toLowerCase()!="#text"){e.selection.selectNode(p,true);if(e.getRange().setStartAfter){e.getRange().setStartAfter(p)}e.selection.collapse(false)}}if(e.lineBreak!="br"){j=e.getRange();if(j.select){j.select()}}if(g.preventDefault){g.preventDefault()}return false}}if(n.ctrlKey&&(r=="k"||r=="u"||r=="b"||r=="i")){if(g.preventDefault){g.preventDefault()}var h=null;switch(r){case"k":h="link";break;case"u":h="underline";break;case"b":h="bold";break;case"i":h="italic";break}if(e.commands[h].widget){e.commands[h].widget.trigger("click")}return false}});e.addHandler(e.editor,"paste.editor"+e.element.id,function(l){if(e._documentMode=="source"){return true}if(e.readOnly){return true}e.updating=true;e.readOnly=true;var m=l;var k=function(q,p){if(p){if(!e.paragraphise){q=q.replace(/\n/g,"<br />")}else{q="<p>"+q+"</p>";q=q.replace(/\n/g,"</p><p>");q=q.replace(/<p>\s<\/p>/gi,"")}}else{q=q.replace(/<html[^>]*?>(.*)/gim,"$1");q=q.replace(/<\/html>/gi,"");q=q.replace(/<body[^>]*?>(.*)/gi,"$1");q=q.replace(/<\/body>/gi,"");q=q.replace(/<style[^>]*?>[\s\S]*?<\/style[^>]*>/gi,"");q=q.replace(/<(?:meta|link)[^>]*>\s*/gi,"");q=q.replace(/<\\?\?xml[^>]*>/gi,"");q=q.replace(/<w:[^>]*>[\s\S]*?<\/w:[^>]*>/gi,"");q=q.replace(/<o:p>\s*<\/o:p>/g,"");q=q.replace(/<o:p>[\s\S]*?<\/o:p>/g,"&nbsp;");q=q.replace(/<\/?\w+:[^>]*>/gi,"");q=q.replace(/<\!--[\s\S]*?-->/g,"");q=q.replace(/<\!\[[\s\S]*?\]>/g,"");q=q.replace(/\s*mso-[^:]+:[^;"']+;?/gi,"");q=q.replace(/<(\w[^>]*) style='([^\']*)'([^>]*)/gim,"<$1$3");q=q.replace(/<(\w[^>]*) style="([^\"]*)"([^>]*)/gim,"<$1$3");q=q.replace(/\s*margin: 0cm 0cm 0pt\s*;/gi,"");q=q.replace(/\s*margin: 0cm 0cm 0pt\s*"/gi,'"');q=q.replace(/\s*text-indent: 0cm\s*;/gi,"");q=q.replace(/\s*text-indent: 0cm\s*"/gi,'"');q=q.replace(/\s*text-align: [^\s;]+;?"/gi,'"');q=q.replace(/\s*page-break-before: [^\s;]+;?"/gi,'"');q=q.replace(/\s*font-variant: [^\s;]+;?"/gi,'"');q=q.replace(/\s*tab-stops:[^;"']*;?/gi,"");q=q.replace(/\s*tab-stops:[^"']*/gi,"");q=q.replace(/\s*face="[^"']*"/gi,"");q=q.replace(/\s*face=[^ >]*/gi,"");q=q.replace(/\s*font-family:[^;"']*;?/gi,"");q=q.replace(/\s*font-size:[^;"']*;?/gi,"");q=q.replace(/<(\w[^>]*) class=([^ |>]*)([^>]*)/gi,"<$1$3");q=q.replace(/<(\w+)[^>]*\sstyle="[^"']*display\s?:\s?none[\s \S]*?<\/\1>/ig,"");q=q.replace(/\s*style='\s*'/gi,"");q=q.replace(/\s*style="\s*"/gi,"");q=q.replace(/<span\s*[^>]*>\s*&nbsp;\s*<\/span>/gi,"&nbsp;");q=q.replace(/<span\s*[^>]*><\/span>/gi,"");q=q.replace(/<(\w[^>]*) align=([^ |>]*)([^>]*)/gi,"<$1$3");q=q.replace(/<(\w[^>]*) lang=([^ |>]*)([^>]*)/gi,"<$1$3");q=q.replace(/<span([^>]*)>([\s\S]*?)<\/span>/gi,"$2");q=q.replace(/<font\s*>([\s\S]*?)<\/font>/gi,"$1");q=q.replace(/<(u|i|strike)>&nbsp;<\/\1>/gi,"&nbsp;");q=q.replace(/<h\d>\s*<\/h\d>/gi,"");q=q.replace(/<(\w[^>]*) language=([^ |>]*)([^>]*)/gi,"<$1$3");q=q.replace(/<(\w[^>]*) onmouseover="([^\"']*)"([^>]*)/gi,"<$1$3");q=q.replace(/<(\w[^>]*) onmouseout="([^\"']*)"([^>]*)/gi,"<$1$3");q=q.replace(/<h(\d)([^>]*)>/gi,"<h$1>");q=q.replace(/<(h\d)><font[^>]*>([\s\S]*?)<\/font><\/\1>/gi,"<$1>$2</$1>");q=q.replace(/<(h\d)><em>([\s\S]*?)<\/em><\/\1>/gi,"<$1>$2</$1>");q=q.replace(/<b\b[^>]*>(.*?)<\/b[^>]*>/gi,"<strong>$1</strong>");q=q.replace(/<i\b[^>]*>(.*?)<\/i[^>]*>/gi,"<em>$1</em>");q=q.replace(/<\s+[^>]*>/gi,"");q=q.replace(/<span>([\s\S]*?)<\/span>/gi,"$1");q=q.replace(/<span>([\s\S]*?)<\/span>/gi,"$1");q=q.replace(/<div>([\s\S]*?)<\/div>/gi,"$1");q=q.replace(/<div>([\s\S]*?)<\/div>/gi,"$1");q=q.replace(/<([^\s>]+)(\s[^>]*)?>\s*<\/\1>/g,"");q=q.replace(/<([^\s>]+)(\s[^>]*)?>\s*<\/\1>/g,"");q=q.replace(/<([^\s>]+)(\s[^>]*)?>\s*<\/\1>/g,"");if(q.trim){q=q.trim()}if(!e.paragraphise){q.replace(/<p>/gi,"<br />");q.replace(/<\/p>/gi,"")}else{var o=q.substr(0,2);if("<p"!==o){q="<p>"+q+"</p>";q=q.replace(/\n/g,"</p><p>");q=q.replace(/<br[^>]*>/gi,"</p><p>")}}q=q.replace(/<br>/gi,"<br />");q=q.replace(/<br[^>]*><\/p>/gim,"</p>");q=q.replace(/<p>&nbsp;<\/p>/gi,"");q=q.replace(/<p>\s<\/p>/gi,"");q=q.replace(/<([^\s>]+)(\s[^>]*)?>\s*<\/\1>/g,"");q=q.replace(/MsoNormal/gi,"");q=q.replace(/<\/?meta[^>]*>/gi,"");q=q.replace(/<\/?xml[^>]*>/gi,"");q=q.replace(/<\?xml[^>]*\/>/gi,"");q=q.replace(/<!--(.*)-->/gi,"");q=q.replace(/<!--(.*)>/gi,"");q=q.replace(/<!(.*)-->/gi,"");q=q.replace(/<w:[^>]*>(.*)<\/w:[^>]*>/gi,"");q=q.replace(/<w:[^>]*\/>/gi,"");q=q.replace(/<\/?w:[^>]*>/gi,"");q=q.replace(/<m:[^>]*\/>/gi,"");q=q.replace(/<m:[^>]>(.*)<\/m:[^>]*>/gi,"");q=q.replace(/<o:[^>]*>(.*)<\/o:[^>]*>/gi,"");q=q.replace(/<o:[^>]*\/>/gi,"");q=q.replace(/<\/?m:[^>]*>/gi,"");q=q.replace(/style=\"([^>]*)\"/gi,"");q=q.replace(/style=\'([^>]*)\'/gi,"");q=q.replace(/class=\"(.*)\"/gi,"");q=q.replace(/class=\'(.*)\'/gi,"");q=q.replace(/<b>/gi,"<strong>");q=q.replace(/<\/b>/gi,"</strong>");q=q.replace(/<p[^>]*>/gi,"<p>");q=q.replace(/<\/p[^>]*>/gi,"</p>");q=q.replace(/<span[^>]*>/gi,"");q=q.replace(/<\/span[^>]*>/gi,"");q=q.replace(/<st1:[^>]*>/gi,"");q=q.replace(/<\/st1:[^>]*>/gi,"");q=q.replace(/<font[^>]*>/gi,"");q=q.replace(/<\/font[^>]*>/gi,"");q=q.replace("  ","");q=q.replace(/<strong><\/strong>/gi,"");q=q.replace(/<p><\/p>/gi,"");q=q.replace(/\/\*(.*)\*\//gi,"");q=q.replace(/<!--/gi,"");q=q.replace(/-->/gi,"");q=q.replace(/<style[^>]*>[^<]*<\/style[^>]*>/gi,"");q=q.trim()}return q};var n=e.getRange();if(e.pasteMode=="text"){e.selection.insertContent('<textarea cols="50" contenteditable="false" class="jqx-editor-paste-element"></textarea>')}else{e.selection.insertContent('<div class="jqx-editor-paste-element">&nbsp;</div>')}var g=b(window).scrollTop();var h=b(e.editorDocument).find(".jqx-editor-paste-element");h.css("top",g+"px");if(e.editor[0].createTextRange){l.preventDefault();var j=e.editor[0].createTextRange();j.moveToElementText(h[0]);j.execCommand("Paste")}else{var i=e.editorDocument.createRange();i.selectNodeContents(h[0]);e.selectRange(i)}if(e.pasteMode=="text"){h.select()}e.marker=h;setTimeout(function(){e.selectRange(n);var r=function(A){var y=e.editorDocument.createElement("div");var z=e.editorDocument.createDocumentFragment();y.innerHTML=A;while(y.firstChild){z.appendChild(y.firstChild)}return z};if(e.pasteMode!="text"){var x=r(e.marker.html());if(x.firstChild&&x.firstChild.className==="jqx-editor-paste-element"){var p=[];for(var u=0,s=x.childNodes.length;u<s;u++){p.push(x.childNodes[u].innerHTML)}x=r(p.join("<br />"))}var o=document.createElement("div");o.appendChild(x.cloneNode(true));var w=o.innerHTML}else{var w=e.marker.val();if(e.marker.html()!=""&&e.marker.val().indexOf("\n")==-1){var w=e.marker.html();w=w.replace(/&nbsp;/gm,"");w=w.replace(/\n\n/gm,"\n");w=w.replace(/<br[^>]*>/gi,"\n");e.marker.html(w);var w=e.marker.text()}}var q=k(w,e.pasteMode=="text");var v=e.getRange();e.selection.insertContent(q+"<span id='INSERTION_MARKER'>&nbsp;</span>");e.marker.remove();var t=b(e.editorDocument).find("#INSERTION_MARKER");e.selection.selectNode(t[0],true);if(e.getRange().setStartAfter){e.getRange().setStartAfter(t[0])}t.remove();e.selection.collapse(false);t.removeAttr("id");e._refreshTools();e.changed=true},100);e.updating=false;e.readOnly=false});e.addHandler(e.editor,"keyup.editor"+e.element.id,function(i){if(e._documentMode=="source"){return true}if(e.updating||e.disabled||!e.editable){if(i.preventDefault){i.preventDefault()}if(i.stopPropagation){i.stopPropagation()}return false}e.range=e.getRange();e.changed=true;var h=i||window.event;var g=h.keyCode;var j=[8,9,13,33,34,35,36,37,38,39,40,40,45,46];if(b.inArray(h.keyCode,j)!=-1||(h.keyCode==65&&h.ctrlKey&&!h.altKey&&!h.shiftKey)){e._refreshTools(null,true,h.keyCode)}});e.addHandler(e.editor,"click.editor"+e.element.id,function(g){if(e._documentMode=="source"){return true}if(e.editImage){b(e.editImage).removeClass("jqx-editor-focus");e.editImage=null}if(g.target.tagName.toLowerCase()=="img"){var h=g.target;e.editImage=h;b(e.editImage).addClass("jqx-editor-focus")}});e.addHandler(e.editor,"dblclick.editor"+e.element.id,function(g){if(e._documentMode=="source"){return true}if(g.target.tagName.toLowerCase()=="img"){var h=g.target;if(b(".jqx-editor-image-window").length>0){e.editImage=h;e._updateImageWindow()}}})},_updateLinkWindow:function(){var g=this;var i=b(".jqx-editor-link-window");i.jqxWindow({position:{center:g.widget}});i.jqxWindow("open");var e=i.find("input");var h=i.find(".jqx-editor-link-checkbox");var f=i.find("button:first");var d=b(i.find("button")[1]);if(g.editLink&&g.editLink.href){e[0].value=g.editLink.href||"";e[1].value=b(g.editLink).text()||g.editLink.href;h.val(b(g.editLink).attr("target")=="_blank");d.show()}else{e[0].value="";e[1].value="";if(!g.selection.isCollapsed()){var j=g.selection.getText();if(j.match(/^(?!:\/\/)([a-zA-Z0-9]+\.)?[a-zA-Z0-9][a-zA-Z0-9-]+\.[a-zA-Z]{2,6}?$/i)){e[0].value=j}else{e[1].value=j}}h.val(false);d.hide()}if(e[0].value.length>0){f.jqxButton({disabled:false})}else{f.jqxButton({disabled:true})}},_updateImageWindow:function(){var g=this;var i=g.editImage;if(!i){i=b("<img>")[0]}var h=b(".jqx-editor-image-window");h.jqxWindow({position:{center:g.widget}});h.jqxWindow("open");var e=h.find("input");var d=b(h.find("button")[1]);if(g.editImage){d.show()}else{d.hide()}e[0].value=i.src;if(e[0].value==""){e[0].value=""}e[1].value=i.alt;if(i.style.width!="auto"){e[2].value=i.style.width}else{e[2].value=""}if(i.style.height!="auto"){e[3].value=i.style.height}else{e[3].value=""}if(i.style.marginLeft&&i.style.marginLeft!="0px"){e[4].value=i.style.marginLeft}else{e[4].value=""}if(i.style.marginTop&&i.style.marginTop!="0px"){e[5].value=i.style.marginTop}else{e[5].value=""}var j=h.find(".jqx-editor-align");var f=b(i).css("float");if(f=="left"){j.jqxDropDownList({selectedIndex:1})}else{if(f=="right"){j.jqxDropDownList({selectedIndex:2})}else{j.jqxDropDownList({selectedIndex:0})}}},_removeHandlers:function(){var d=this;if(d.editor){d.removeHandler(d.editor,"blur.editor"+d.element.id);d.removeHandler(d.editor,"focus.editor"+d.element.id);d.removeHandler(d.editor,"click.editor"+d.element.id);d.removeHandler(d.editor,"mousedown.editor"+d.element.id);d.removeHandler(d.editor,"mouseup.editor"+d.element.id);d.removeHandler(d.editor,"keyup.editor"+d.element.id);d.removeHandler(d.editor,"keydown.editor"+d.element.id);d.removeHandler(d.editor,"beforedeactivate.editor"+d.element.id);d.removeHandler(d.editor,"dblclick.editor"+d.element.id)}if(d.toolbar){d.removeHandler(d.toolbar,"mousedown.editor"+d.element.id)}},getParentByTag:function(e,d){var d=d.toLowerCase(),f=e;do{if(d==""||f.nodeName.toLowerCase()==d){return f}}while(f=f.parentNode);return e},isStyleProperty:function(g,f,j,i){var f=f.toLowerCase(),h=g;do{if(h.nodeName.toLowerCase()==f&&h.style[j]==i){return !0}}while(h=h.parentNode);return !1},setStyleProperty:function(e,d){this.style[d]=!1;var f=this.getParentByTag(e,d);f&&f.tagName.toLowerCase()==d&&(this.style[d]=!0);if(d=="del"&&this.getParentByTag(e,"strike")&&this.getParentByTag(e,"strike").tagName.toLowerCase()=="strike"){this.style.del=!0}},updateStyle:function(f){var g=this;var f=g.getSelectedElement()?g.getSelectedElement():f;if(!f||!g.setStyleProperty){return}try{if(window.getComputedStyle){if(f.nodeName.toLowerCase()=="#text"){f=g.editor[0]}var d=window.getComputedStyle(f,null);var i=((d.getPropertyValue("font-weight")==401)?700:d.getPropertyValue("font-weight"));g.style={fontStyle:d.getPropertyValue("font-style"),fontSize:d.getPropertyValue("font-size"),textDecoration:d.getPropertyValue("text-decoration"),fontWeight:i,fontFamily:d.getPropertyValue("font-family"),textAlign:d.getPropertyValue("text-align"),color:g._rgbToHex(d.color),backColor:g._rgbToHex(d.backgroundColor)};g.style.fontStyle=d.getPropertyValue("font-style");g.style.vAlign=d.getPropertyValue("vertical-align");g.style.del=g.isStyleProperty(f,"span","textDecoration","line-through");g.style.u=g.isStyleProperty(f,"span","textDecoration","underline");var h=function(l){var k="transparent";var e="rgba(0, 0, 0, 0)";while(l&&(window.getComputedStyle(l).backgroundColor==k||window.getComputedStyle(l).backgroundColor==e)){l=l.parentNode}return l?window.getComputedStyle(l).backgroundColor:k};if(!g.style.backColor){g.style.backColor=g._rgbToHex(h(f))}}else{var d=f.currentStyle;g.style={fontStyle:d.fontStyle,fontSize:d.fontSize,textDecoration:d.textDecoration,fontWeight:d.fontWeight,fontFamily:d.fontFamily,textAlign:d.textAlign,color:g._rgbToHex(d.color),backColor:g._rgbToHex(d.backgroundColor)}}g.setStyleProperty(f,"h1");g.setStyleProperty(f,"h2");g.setStyleProperty(f,"h3");g.setStyleProperty(f,"h4");g.setStyleProperty(f,"h5");g.setStyleProperty(f,"h6");g.setStyleProperty(f,"del");g.setStyleProperty(f,"sub");g.setStyleProperty(f,"sup");g.setStyleProperty(f,"u");if(f.nodeName.toLowerCase()=="a"){if(g.style.textDecoration=="underline"){g.style.u=true}}if(g.style.h1||g.style.h2||g.style.h3||g.style.h4||g.style.h5||g.style.h6){g.style.heading=true}}catch(j){return null}},_refreshTools:function(e,f,n){var k=this;if(k.updating){return}var e=k.getSelectedElement()?k.getSelectedElement():e;if(!e||!k.setStyleProperty){return}k.updateStyle(e);var o=k.readOnly;k.readOnly=true;if(k.tools!==false){var j=k.tools.split(" ");var l=k.tools.split(" | ");var m=function(i){b.each(i,function(q,r){var p=k.commands[this];if(!p){return true}switch(p.type){case"list":p.widget.jqxDropDownList("clearSelection");p.widget.jqxDropDownList({disabled:k.disabled});break;case"colorPicker":p.val(p.value);p.widget.jqxDropDownButton({disabled:k.disabled});break;case"toggleButton":p.widget.jqxToggleButton("unCheck");p.widget.jqxToggleButton({disabled:k.disabled});break;case"button":default:p.widget.jqxButton({disabled:k.disabled});break}})};if(l.length==0){m(j)}else{for(var h=0;h<l.length;h++){var d=l[h];var j=d.split(" ");m(j)}}if(k.style){var g=function(i){b.each(i,function(x,E){var t=k.commands[this];if(!t){return true}if(t.refresh){t.refresh(t.widget,k.style);return true}switch(t.type){case"list":if(t.command=="fontname"){var B=-1;var D=999;for(var H=0;H<t.value.length;H++){var E=t.value[H].label.toLowerCase();var w=k.style.fontFamily.toLowerCase().indexOf(E);if(w>=0){if(w<D){B=H}D=Math.min(D,w)}}t.widget.jqxDropDownList("selectIndex",B)}else{if(t.command=="formatblock"){var E=null;if(k.style.h1){E="h1"}else{if(k.style.h2){E="h2"}else{if(k.style.h3){E="h3"}else{if(k.style.h4){E="h4"}else{if(k.style.h5){E="h5"}else{if(k.style.h6){E="h6"}}}}}}t.widget.jqxDropDownList("selectItem",E)}else{if(t.command=="fontsize"){var A="xx-small,x-small,small,medium,large,x-large,xx-large".split(",");var C=-1;try{var C=e.getAttribute("size")-1;if(C==-1){C=k.editorDocument.queryCommandValue(t.command)-1}}catch(I){}var s=A[C];t.widget.val(s)}}}break;case"colorPicker":var r=function(J){if(typeof J!="number"){return J}return"rgb("+(J&255)+", "+((J&65280)>>8)+", "+((J&16711680)>>16)+")"};var F=r(k.editorDocument.queryCommandValue(t.command));if(t.command=="backcolor"){if(k.style.backColor==null){F="#FFFFFF"}}var z=k._rgbToHex(F);if(z){t.val(z)}else{if(t.command=="forecolor"){t.val(k.style.color)}else{if(t.command=="backcolor"){t.val(k.style.backColor)}}}break;case"toggleButton":if(t.command=="viewsource"){return}if(!t.command){return}var q=false;var p=k.editorDocument.queryCommandState(t.command)&&k.editorDocument.queryCommandEnabled(t.command);if(t.command=="createlink"&&e.nodeName.toLowerCase()=="a"){var y=true;if(b(e).text().indexOf(k.selection.getText())==-1&&k.selection.getText()!=""){y=false}if(y){if(k.linkPopup){k.linkPopup.remove()}p=true;k.linkPopup=b("<div class='jqx-editor-link-popup' contentEditable='false' style='overflow: hidden; white-space: nowrap; padding: 5px; height: 17px; font-size: 12px; color: #222222; background: #F5F5F5; position: absolute; z-index: 9999;'>"+k.localization["Go to link"]+": <a target='_blank' style='color:#222222;' href='"+e.href+"'>"+e.href+"</a> - <a style='color:#222222;' href='#change'>"+k.localization.Change+"</a> - <a style='color:#222222;' href='#remove'>"+k.localization.Remove+"</a></div>").appendTo(k.editor);var u=b(e).coord();var v=u.left;if(u.left+k.linkPopup.width()>k.editor.width()){v=k.editor.width()-k.linkPopup.width()-15}k.linkPopup.offset({top:b(e).height()+u.top+5,left:v});k.addHandler(k.linkPopup,"mousedown",function(K){if(K.target&&K.target.href){var J=b(K.target).index();switch(J){case 1:k.editor.focus();k.selection.selectNode(e,true);k.commands.link.widget.trigger("click");break;case 2:try{k.editor.focus();k.selection.selectNode(e);k.execute("unlink");k.commands.underline.toggled=false;k.selection.collapse(false);k._refreshTools()}catch(L){}break;default:window.open(K.target.href,"_blank");break}}if(K.preventDefault){K.preventDefault()}if(K.stopPropagation){K.stopPropagation()}return false})}}if(t.command=="bold"){if(k.style.fontWeight&&(k.style.fontWeight>=600||k.style.fontWeight=="bold")){q=true}if(k.selection.isCollapsed()){t.toggled=p}else{t.toggled=p||q}p=t.toggled}else{if(t.command=="italic"){if(k.style.fontStyle&&k.style.fontStyle=="italic"){q=true}if(!f){p=t.toggled}else{t.toggled=p}}else{if(t.command=="underline"){if(k.style.u){q=true}if(!f){p=t.toggled}else{t.toggled=p}}else{if(t.command=="justifyleft"){if(k.style.textAlign=="left"){q=true}}else{if(t.command=="justifyright"){if(k.style.textAlign=="right"){q=true}}else{if(t.command=="justifycenter"){if(k.style.textAlign=="center"){q=true}}else{if(t.command=="justifyfull"){if(k.style.textAlign=="justify"){q=true}}else{b.each(k.style,function(J,K){if(t.command==J.toLowerCase()){q=true}})}}}}}}}var G=p;if(q&&t.command.indexOf("justify")!=-1){t.widget.jqxToggleButton("check")}else{if(G){t.widget.jqxToggleButton("check")}else{if(q&&k.range.collapsed===false){t.widget.jqxToggleButton("check")}else{if(b.jqx.browser.msie&&b.jqx.browser.version<9&&q&&!k.selection.isCollapsed()){t.widget.jqxToggleButton("check")}}}}break;case"button":default:if(t.refresh){t.refresh(t.widget,k.style)}break}})};if(l.length==0){g(j)}else{for(var h=0;h<l.length;h++){var d=l[h];var j=d.split(" ");g(j)}}}}k.readOnly=o},_rgbToHex:function(e){if(e){if(e.substr(0,1)==="#"){if(e.length==4){var h=e.substr(1,1);var f=e.substr(2,1);var d=e.substr(3,1);return"#"+h+h+f+f+d+d}return e}var i=/(.*?)rgb\((\d+),\s*(\d+),\s*(\d+)\)/i.exec(e);if(!i){return null}var h=parseInt(i[2],10).toString(16);var f=parseInt(i[3],10).toString(16);var d=parseInt(i[4],10).toString(16);return"#"+((h.length==1?"0"+h:h)+(f.length==1?"0"+f:f)+(d.length==1?"0"+d:d))}return null},_preventDefault:function(d,e){if(e!==false){if(b(".jqx-editor-dropdownpicker").length>0){b(".jqx-editor-dropdownpicker").jqxDropDownButton("close")}if(b(".jqx-editor-dropdownlist").length>0){b(".jqx-editor-dropdownlist").jqxDropDownList("close")}}if(d.preventDefault){d.preventDefault()}if(d.stopPropagation){d.stopPropagation()}d.cancelBubble=true;d.returnValue=false},_addCommandHandler:function(g,f,i,h,d){var e=this;if(!i&&d.init){i="custom"}switch(i){case"custom":switch(d.type){case"list":action=function(j){if(e._documentMode!="source"){if(j.args.type!="none"){d.value=b(this).val();e.execute("custom",d);if(!e.readOnly){e._refreshTools()}}}e._preventDefault(j,false)};break;case"colorPicker":action=function(l){if(e._documentMode!="source"){var j=b(d.colorPicker).find("td").removeClass("jqx-editor-color-picker-selected-cell");if(l.target.nodeName.toLowerCase()=="div"){var k=b(l.target).css("background-color");b(l.target).parent().addClass("jqx-editor-color-picker-selected-cell")}else{var k=b(l.target).find("div").css("background-color");b(l.target).addClass("jqx-editor-color-picker-selected-cell")}b("#bar-"+i).css("background",k);d.widget.val=function(){var n=function(p){if(typeof p!="number"){return p}return"rgb("+(p&255)+", "+((p&65280)>>8)+", "+((p&16711680)>>16)+")"};var o=n(k);var m=e._rgbToHex(o);return m};d.widget.jqxDropDownButton("close");e.execute("custom",d)}e._preventDefault(l);return false};break;case"button":case"toggleButton":default:action=function(j){if(b(".jqx-editor-dropdownpicker").length>0){b(".jqx-editor-dropdownpicker").jqxDropDownButton("close")}if(b(".jqx-editor-dropdownlist").length>0){b(".jqx-editor-dropdownlist").jqxDropDownList("close")}e._preventDefault(j);var l=b(this).attr("data-command");var k=this;if(e._documentMode!="source"){if(d.toggle){d.toggle()}e.execute("custom",d);e._refreshTools()}return false};break}break;case"formatblock":action=function(j){if(e._documentMode!="source"){if(j.args.type!="none"){e.execute(b(this).attr("data-command"),"<"+b(this).val()+">",d);if(!e.readOnly){e.commands.bold.toggled=false;e._refreshTools()}}}e._preventDefault(j,false)};break;case"fontsize":action=function(j){if(e._documentMode!="source"){if(j.args.type!="none"){var l=b(this).val();var m="xx-small,x-small,small,medium,large,x-large,xx-large".split(",");var k=b(this).jqxDropDownList("getSelectedIndex")+1;var k=1+m.indexOf(l);e.execute(b(this).attr("data-command"),k,d)}}e._preventDefault(j,false)};break;case"fontname":action=function(j){if(e._documentMode!="source"){if(j.args.type!="none"){var k=b(this).val();e.execute(b(this).attr("data-command"),k,d)}}e._preventDefault(j,false)};break;case"forecolor":case"backcolor":action=function(l){if(e._documentMode!="source"){var j=b(d.colorPicker).find("td").removeClass("jqx-editor-color-picker-selected-cell");if(l.target.nodeName.toLowerCase()=="div"){var k=b(l.target).css("background-color");b(l.target).parent().addClass("jqx-editor-color-picker-selected-cell")}else{var k=b(l.target).find("div").css("background-color");b(l.target).addClass("jqx-editor-color-picker-selected-cell")}b("#bar-"+i).css("background",k);d.widget.jqxDropDownButton("close");e.execute(i,k,d)}e._preventDefault(l);return false};break;case"viewsource":action=function(j){if(e.linkPopup){e.linkPopup.remove()}d.toggle();e.setMode(d.toggled);if(b(".jqx-editor-dropdownpicker").length>0){b(".jqx-editor-dropdownpicker").jqxDropDownButton("close")}if(b(".jqx-editor-dropdownlist").length>0){b(".jqx-editor-dropdownlist").jqxDropDownList("close")}e._preventDefault(j);return false};break;case"insertimage":action=function(j){e._insertImageAction(j,e,d)};break;case"createlink":action=function(j){e._createLinkAction(j,e,d)};break;default:action=function(j){if(b(".jqx-editor-dropdownpicker").length>0){b(".jqx-editor-dropdownpicker").jqxDropDownButton("close")}if(b(".jqx-editor-dropdownlist").length>0){b(".jqx-editor-dropdownlist").jqxDropDownList("close")}e._preventDefault(j);var m=b(this).attr("data-command");var k=this;if(e._documentMode!="source"){if(m=="underline"){if(e.getSelectedElement()){var l=e.getSelectedElement();if(l&&l.nodeName.toLowerCase()=="a"){if(d.toggled){b(l).css("text-decoration","none")}else{b(l).css("text-decoration","underline")}d.toggle();e._refreshTools();return false}}}if(d.toggle){d.toggle()}e.execute(m,b(this).val(),d);e._refreshTools()}return false};break}e.addHandler(g,f,action);return false},_createLinkAction:function(d,k,l){var k=this;if(k._documentMode=="source"){k._preventDefault(d);return}if(!k.focused){k.editor.focus()}k.range=k.getRange();var e=k.getSelectedElement();if(e.nodeName.toLowerCase()=="a"){k.editLink=e}else{k.editLink=null}if(b(".jqx-editor-link-window").length>0){if(k.editLink){k.selection.selectNode(e,true)}k._updateLinkWindow();k._preventDefault(d);return false}var m=b("<div class='jqx-editor-window jqx-editor-link-window'><div>"+k.localization["Insert Link"]+"</div><div><table style='border-collapse: separate; border-spacing: 2px;'><tr><td align='right'>"+k.localization.URL+":</td><td><input style='width: 200px; height: 23px;' value=''/></td><tr/><tr><td align='right'>"+k.localization.Title+":</td><td><input style='width: 200px; height: 23px;' value=''/></td><tr/><tr><td align='right'></td><td><div class='jqx-editor-link-checkbox'>"+k.localization["Open in a new window/tab"]+"</div></td><tr/><tr><td align='right'></td><td align='right'><button>Ok</button><button style='margin-left: 5px;'>Remove</button><button style='margin-left: 5px;'>Cancel</button></td><tr/></table></div></div>");m[0].id="linkWindow"+this.element.id;var j=m.find("input");j.addClass(k.toThemeProperty("jqx-widget"));j.addClass(k.toThemeProperty("jqx-widget-content"));j.addClass(k.toThemeProperty("jqx-input"));var i=m.find(".jqx-editor-link-checkbox").jqxCheckBox({theme:k.theme,height:23,width:180});var g=m.find("button:first").jqxButton({theme:k.theme,disabled:true});var o=b(m.find("button")[1]).jqxButton({theme:k.theme});var h=m.find("button:last").jqxButton({theme:k.theme});g.val(k.localization.Ok);h.val(k.localization.Cancel);o.val(k.localization.Remove);k.addHandler(h,!b.jqx.mobile.isTouchDevice()?"click":b.jqx.mobile.getTouchEventName("touchstart"),function(p){k.editor.focus();k.selectRange(k.range);k._refreshTools();k._preventDefault(p)});if(!k.editLink||(k.editLink&&!k.editLink.href)){o.hide()}var f=false;k.addHandler(b(j[0]),"focus",function(){if(j[1].value==""||j[1].value==j[0].value){f=true}else{f=false}});k.addHandler(b(j[1]),"keyup",function(p){if(p.keyCode){if(p.keyCode==13){g.trigger("click")}if(p.keyCode==27){h.trigger("click")}}});k.addHandler(b(j[0]),"keyup change",function(p){if(j[0].value.length>0){g.jqxButton({disabled:false})}else{g.jqxButton({disabled:true})}if(f){j[1].value=j[0].value}if(p.keyCode){if(p.keyCode==13){g.trigger("click")}if(p.keyCode==27){h.trigger("click")}}});k.addHandler(o,!b.jqx.mobile.isTouchDevice()?"click":b.jqx.mobile.getTouchEventName("touchstart"),function(p){m.jqxWindow("close");try{k.editor.focus();k.selection.selectNode(k.editLink);k.execute("unlink");k.selection.collapse(false);k.commands.underline.toggled=false;k._refreshTools()}catch(q){}k._preventDefault(p)});k.addHandler(g,!b.jqx.mobile.isTouchDevice()?"click":b.jqx.mobile.getTouchEventName("touchstart"),function(s){var q=m.find("input");var r=b("<a>"+(q[1].value||q[0].value)+"</a>");if(i.val()){r.attr("target","_blank")}r[0].href=b.trim(q[0].value);if(q[0].value.indexOf("http")==-1&&q[0].value.indexOf("mailto")==-1){r[0].href="http://"+b.trim(q[0].value)}if(!k.focused){k.editor.focus()}if(k.range){k.selectRange(k.range)}if(k.editLink){b(k.editLink).remove()}k.execute("insertHTML",""+r[0].outerHTML+"<span id='INSERTION_MARKER'>&nbsp;</span>",l);k.editor.focus();var p=b(k.editorDocument).find("#INSERTION_MARKER");k.selection.selectNode(p[0],true);if(k.getRange().setStartAfter){k.getRange().setStartAfter(p[0])}p.remove();k.selection.collapse(false);k._refreshTools();k._preventDefault(s)});k.updating=true;m.appendTo(document.body);k.addHandler(m,"open",function(){k.updating=true;setTimeout(function(){k.range=k.getRange();b(j[0]).focus()},25)});m.jqxWindow({resizable:false,width:280,okButton:g,cancelButton:h,theme:k.theme,isModal:true,position:{center:k.widget}});k.addHandler(m,"close",function(){k.updating=false});if(!k.focused){k.editor.focus();k.selectRange(k.range)}if(k.editLink){j[0].value=k.editLink.href||"";j[1].value=b(k.editLink).text();i.val(b(k.editLink).attr("target")=="_blank")}else{if(!k.selection.isCollapsed()){var n=k.selection.getText();if(n.match(/^(?!:\/\/)([a-zA-Z0-9]+\.)?[a-zA-Z0-9][a-zA-Z0-9-]+\.[a-zA-Z]{2,6}?$/i)){j[0].value=n}else{j[1].value=n}}}if(j[0].value.length>0){g.jqxButton({disabled:false})}else{g.jqxButton({disabled:true})}k._preventDefault(d);return false},_insertImageAction:function(j,i,g){if(i._documentMode=="source"){i._preventDefault(j);return}if(!i.focused){i.editor.focus()}i.range=i.getRange();if(b(".jqx-editor-image-window").length>0){i._updateImageWindow();i._preventDefault(j);return false}var h=b("<div class='jqx-editor-window jqx-editor-image-window'><div>"+i.localization["Insert Image"]+"</div><div><table style='border-collapse: separate; border-spacing: 2px;'><tr><td align='right'>"+i.localization.URL+":</td><td><input style='width: 180px; height: 23px;' value=''/></td><tr/><tr><td align='right'>"+i.localization["Alt Text"]+":</td><td><input style='width: 180px; height: 23px;' value=''/></td><tr/><tr><td align='right'>"+i.localization.Width+":</td><td><input style='width: 180px; height: 23px;' value=''/></td><tr/><tr><td align='right'>"+i.localization.Height+":</td><td><input style='width: 180px; height: 23px;' value=''/></td><tr/><tr><td align='right'>"+i.localization.HSpace+":</td><td><input style='width: 180px; height: 23px;' class='jqx-editor-hspace'/></td><tr/><tr><td align='right'>"+i.localization.VSpace+":</td><td><input style='width: 180px; height: 23px;' class='jqx-editor-vspace'/></td><tr/><tr><td align='right'>"+i.localization.Align+":</td><td><div class='jqx-editor-align'></div></td><tr/><tr><td align='right'></td><td align='right'><button>Ok</button><button style='margin-left: 5px;'>Remove</button><button style='margin-left: 5px;'>Cancel</button></td><tr/></table></div></div>");h[0].id="imageWindow"+this.element.id;var e=h.find("input");e.addClass(i.toThemeProperty("jqx-widget"));e.addClass(i.toThemeProperty("jqx-widget-content"));e.addClass(i.toThemeProperty("jqx-input"));h.find(".jqx-editor-align").jqxDropDownList({autoDropDownHeight:true,selectedIndex:0,theme:i.theme,height:23,width:180,source:[i.localization["not set"],i.localization.Left,i.localization.Right]});var f=h.find("button:first").jqxButton({theme:i.theme});var k=h.find("button:last").jqxButton({theme:i.theme});var d=b(h.find("button")[1]).jqxButton({theme:i.theme});f.val(i.localization.Ok);k.val(i.localization.Cancel);d.val(i.localization.Remove);d.hide();i.addHandler(d,!b.jqx.mobile.isTouchDevice()?"click":b.jqx.mobile.getTouchEventName("touchstart"),function(l){b(i.editImage).removeClass("jqx-editor-focus");b(i.editImage).remove();i.editImage=null;i._preventDefault(l);h.jqxWindow("close");i._raiseEvent("change")});i.addHandler(k,!b.jqx.mobile.isTouchDevice()?"click":b.jqx.mobile.getTouchEventName("touchstart"),function(l){b(i.editImage).removeClass("jqx-editor-focus");i.editImage=null;i._preventDefault(l)});i.addHandler(f,!b.jqx.mobile.isTouchDevice()?"click":b.jqx.mobile.getTouchEventName("touchstart"),function(o){b(i.editImage).removeClass("jqx-editor-focus");var m=h.find("input");var p=i.editImage?b(i.editImage):b('<img style="border: 1px solid transparent;">');var n=p.attr("src",m[0].value).attr("unselectable","on");if(m[1].value){n.attr("alt",m[1].value).attr("title",m[1].value)}if(m[2].value&&!isNaN(parseInt(m[2].value))){n.width(m[2].value)}else{n.css("width","auto")}if(m[3].value&&!isNaN(parseInt(m[3].value))){n.height(m[3].value)}else{n.css("height","auto")}if(m[4].value){if(m[4].value.toString()=="auto"){n.css("margin-left","auto");n.css("margin-right","auto")}else{if(m[4].value.toString().indexOf("%")!=-1){n.css("margin-left",parseInt(m[4].value)+"%");n.css("margin-right",parseInt(m[4].value)+"%")}else{n.css("margin-left",parseInt(m[4].value)+"px");n.css("margin-right",parseInt(m[4].value)+"px")}}}else{n.css("margin-left","0px");n.css("margin-right","0px")}if(m[5].value){if(m[5].value.toString()=="auto"){n.css("margin-top","auto");n.css("margin-bottom","auto")}else{if(m[5].value.toString().indexOf("%")!=-1){n.css("margin-top",parseInt(m[5].value)+"%");n.css("margin-bottom",parseInt(m[5].value)+"%")}else{n.css("margin-top",parseInt(m[5].value)+"px");n.css("margin-bottom",parseInt(m[5].value)+"px")}}}else{n.css("margin-top","0px");n.css("margin-bottom","0px")}var q=h.find(".jqx-editor-align").jqxDropDownList("selectedIndex");if(q==1){n.css("float","left")}else{if(q==2){n.css("float","right")}else{if(q==0){n.css("float","none")}}}n.css("resize",false);n[0].oncontrolselect=function(){return false};n[0].selectstart=function(){return false};if(!i.editImage){if(!i.focused){i.editor.focus()}if(i.range){i.selectRange(i.range)}i.execute("insertHTML",n[0].outerHTML+"<span id='INSERTION_MARKER'>&nbsp;</span>",g);i.editor.focus();var l=b(i.editorDocument).find("#INSERTION_MARKER");i.selection.selectNode(l[0],true);if(i.getRange().setStartAfter){i.getRange().setStartAfter(l[0])}l.remove();i.selection.collapse(false);i._refreshTools();i._preventDefault(o)}i.editImage=null;i._preventDefault(o)});h.appendTo(document.body);i.updating=true;i.addHandler(h,"open",function(){i.updating=true;setTimeout(function(){i.range=i.getRange();b(e[0]).focus()},25)});h.jqxWindow({resizable:false,width:280,okButton:f,cancelButton:k,theme:i.theme,isModal:true,position:{center:i.widget}});i.addHandler(h,"close",function(){i.updating=false});if(!i.focused){i.editor.focus();i.selectRange(i.range)}i._preventDefault(j);return false},editmode:function(f){var e=this;if(!f&&!e.readOnly){e._removeHandlers();e.editor.attr("contentEditable",false);var d=document.createTextNode(e.editor.html());var g=b("<pre>");g.html(d).attr({id:"sourceText",contentEditable:true}).css("height","100%");e.editor.html(g);if(e.buttons.hasOwnProperty("html")){e.buttons.html.addClass("active")}g.focus()}else{if(f&&e.readOnly){var d=e.editor.find("#sourceText").text();e.editor.html(d);if(e.buttons.hasOwnProperty("html")){e.buttons.html.removeClass("active")}e.editor.attr("contentEditable",true);e._addHandlers()}}e.readOnly=!f},setMode:function(f){var i=this;if(!i.range){i.editor.focus();i.range=i.getRange()}var h;var e=i.editor[0];if(f){i._documentMode="source";var k=new c();var j=k.HTMLtoXML(e.innerHTML);j=k.FormatHTML(j);h=document.createTextNode(j);e.innerHTML="";var d=document.createElement("pre");e.contentEditable=false;d.style.height="100%";d.style.margin="0px";d.style.outline="none";d.style.display="block";d.id="sourceText";d.contentEditable=true;d.appendChild(h);e.appendChild(d);this.readOnly=true}else{this._documentMode="html";if(document.all){e.innerHTML=e.innerText}else{if(e.textContent){e.innerHTML=e.textContent}else{h=document.createRange();h.selectNodeContents(e.firstChild);e.innerHTML=h.toString()}}e.contentEditable=true;i.readOnly=false;i._refreshTools();i.editor.focus();i.selection.selectNode(i.editor[0]);i.editor.scrollTop(0);i.selection.collapse(true)}b.each(this.commands,function(){if(this.widget){if(this.command!="viewsource"){switch(this.type){case"list":this.widget.jqxDropDownList({disabled:f});break;case"colorPicker":this.widget.jqxDropDownButton({disabled:f});break;case"button":this.widget.jqxButton({disabled:f});break;case"toggleButton":this.widget.jqxToggleButton({toggled:false,disabled:f});break}}}});i.editor.focus();if(b.jqx.browser.mozilla){var g=b("<a href='#'>anchor</a>");i.editor.prepend(g);g.focus();g.remove();i.selection.collapse(true)}if(i.commands.html.widget){i.commands.html.widget.jqxToggleButton({toggled:f=="source"||f==true});i.commands.html.toggled=f=="source"||f==true}},execute:function(i,f,e){var g=this;if(!g.readOnly){var j=g.editorDocument;if(g._documentMode=="source"){return}if(g.linkPopup){g.linkPopup.remove()}g.editor.focus();if(b.jqx.browser.mozilla){}if(b.jqx.mobile.isTouchDevice()){setTimeout(function(){},25)}var d=function(m){try{if(m.command&&m.command.toLowerCase()=="inserthtml"){var l=g.getRange();var n=m.value;if(n.toString().indexOf("<")==-1){n="<span>"+m.value+"</span>"}g.selection.insertContent(""+n+"<span id='INSERTION_MARKER'>&nbsp;</span>");g.selectRange(l);setTimeout(function(){var p=b(g.editorDocument).find("#INSERTION_MARKER");g.selection.selectNode(b(p).prev()[0],true);p.remove();g.selection.collapse(false)},10)}else{if(m.command){if(j.queryCommandEnabled(m.command)){j.execCommand(m.command,false,m.value)}else{return false}}else{if(j.queryCommandEnabled(m)){j.execCommand(m,false,m)}else{return false}}}}catch(o){}};if(i=="custom"){var h=f.action(f.widget,g.editor);if(h){d(h)}}else{try{if(e&&e.action){var h=e.action(e.widget,g.editor);d(h)}else{if(j.queryCommandEnabled(i)){j.execCommand(i,false,f)}else{if(i=="insertHTML"){g.selection.insertContent(f)}else{return false}}}}catch(k){if(i=="insertHTML"){g.selection.insertContent(f)}else{return false}}}if(b.jqx.mobile.isTouchDevice()){setTimeout(function(){if(g.iframe){g.iframe[0].contentWindow.focus()}},500)}g._raiseEvent("change",{command:i,args:f});g.changed=true;g.range=g.getRange()}},destroy:function(){var h=this;h._removeHandlers();var l=h.tools.split(" ");var g=h.tools.split(" | ");b.jqx.utilities.resize(this.host,null,true);var f=function(i){b.each(i,function(n,o){var m=h.commands[this];if(!m){return true}switch(m.type){case"list":m.widget.jqxDropDownList("destroy");break;case"colorPicker":m.colorPicker.remove();m.widget.jqxDropDownButton("destroy");break;case"toggleButton":m.widget.jqxToggleButton("destroy");break;case"custom":if(h.destroyTool){h.destroyTool(this)}break;case"button":default:m.widget.jqxToggleButton("destroy");if(m.command==="insertimage"){if(b("#imageWindow"+h.element.id).length>0){b("#imageWindow"+h.element.id).find(".jqx-editor-align").jqxDropDownList("destroy");b("#imageWindow"+h.element.id).find("button").jqxButton("destroy")}}else{if(m.command==="createlink"){if(b("#linkWindow"+h.element.id).length>0){b("#linkWindow"+h.element.id).find(".jqx-editor-align").jqxDropDownList("destroy");b("#linkWindow"+h.element.id).find("button").jqxButton("destroy");b("#linkWindow"+h.element.id).find(".jqx-editor-link-checkbox").jqxCheckBox("destroy")}}}break}})};if(g.length==0){f(l)}else{for(var e=0;e<g.length;e++){var d=g[e];var l=d.split(" ");f(l)}}var j=b(".jqx-editor-link-window");var k=b(".jqx-editor-image-window");if(j&&j.length>0){j.jqxWindow("destroy")}if(k&&k.length>0){k.jqxWindow("destroy")}if(h.inline){h.toolbar.remove()}else{h.widget.remove();h.host.remove()}h.iframe.remove();h.iframe=null;h.selection=null;h.editorDocument=null;h.contentEditableElement=null},val:function(d){if(d!=undefined&&typeof d!="object"){this.editor.html(d)}return this.editor.html()},_raiseEvent:function(h,e){if(e==undefined){e={owner:null}}if(this._documentMode=="source"){return true}var f=h;args=e;args.owner=this;var g=new b.Event(f);g.owner=this;g.args=args;if(this._textArea){var d=b(this._textArea).trigger(g)}else{var d=this.host.trigger(g)}e=g.args;return d}});var a=function(d){var e={initialize:function(f){this.document=f},getSelection:function(){return(this.document.getSelection)?this.document.getSelection():this.document.selection},getRange:function(){var f=this.getSelection();if(!f){return null}try{return f.rangeCount>0?f.getRangeAt(0):(this.document.createRange?this.document.createRange():this.document.selection.createRange())}catch(g){return this.document.body.createTextRange()}},selectRange:function(f){if(f.select){f.select()}else{var g=this.getSelection();if(g.addRange){g.removeAllRanges();g.addRange(f)}}},selectNode:function(i,j){var h=this.getRange();var g=this.getSelection();if(h.moveToElementText){h.moveToElementText(i);h.select()}else{if(g.addRange){try{j?h.selectNodeContents(i):h.selectNode(i);g.removeAllRanges();g.addRange(h)}catch(f){var k=f}}else{g.setBaseAndExtent(i,0,i,1)}}return i},isCollapsed:function(){var f=this.getRange();if(f.item){return false}return f.boundingWidth==0||this.getSelection().isCollapsed},collapse:function(f){var h=this.getRange();var g=this.getSelection();if(h.select){h.collapse(f);h.select()}else{f?g.collapseToStart():g.collapseToEnd()}},getContent:function(){var h=this.getRange();var f=b("<div>")[0];if(this.isCollapsed()){return""}if(h.cloneContents){f.appendChild(h.cloneContents())}else{if(h.item!=undefined||h.htmlText!=undefined){b(f).html(h.item?h.item(0).outerHTML:h.htmlText)}else{b(f).html(h.toString())}}var g=b(f).html();return g},getText:function(){var g=this.getRange();var f=this.getSelection();return this.isCollapsed()?"":g.text||(f.toString?f.toString():"")},getNode:function(){var g=this.getRange();if(!b.jqx.browser.msie||b.jqx.browser.version>=9){var f=null;if(g){f=g.commonAncestorContainer;if(!g.collapsed){if(g.startContainer==g.endContainer){if(g.startOffset-g.endOffset<2){if(g.startContainer.hasChildNodes()){f=g.startContainer.childNodes[g.startOffset]}}}}while(typeof(f)!="element"){f=f.parentNode}}return d.id(f)}return d.id(g.item?g.item(0):g.parentElement())},insertContent:function(i){var h=this.getRange();if(h.pasteHTML){h.pasteHTML(i);h.collapse(false);h.select()}else{if(h.insertNode){h.deleteContents();if(h.createContextualFragment){h.insertNode(h.createContextualFragment(i))}else{var j=this.document;var g=j.createDocumentFragment();var f=j.createElement("div");g.appendChild(f);f.outerHTML=i;h.insertNode(g)}}}}};e.initialize(d);return e};var c=function(){var n=/^<([-A-Za-z0-9_]+)((?:\s+\w+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,f=/^<\/([-A-Za-z0-9_]+)[^>]*>/,j=/([-A-Za-z0-9_]+)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g;var i=e("area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed");var d=e("address,applet,blockquote,button,center,dd,del,dir,div,dl,dt,fieldset,form,frameset,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,p,pre,script,table,tbody,td,tfoot,th,thead,tr,ul");var l=e("a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var");var g=e("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr");var m=e("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected");var k=e("script,style");var h=this.HTMLParser=function(p,x){var s,t,q,u=[],v=p;u.last=function(){return this[this.length-1]};while(p){t=true;if(!u.last()||!k[u.last()]){if(p.indexOf("<!--")==0){s=p.indexOf("-->");if(s>=0){if(x.comment){x.comment(p.substring(4,s))}p=p.substring(s+3);t=false}}else{if(p.indexOf("</")==0){q=p.match(f);if(q){p=p.substring(q[0].length);q[0].replace(f,r);t=false}}else{if(p.indexOf("<")==0){q=p.match(n);if(q){p=p.substring(q[0].length);q[0].replace(n,o);t=false}}}}if(t){s=p.indexOf("<");var w=s<0?p:p.substring(0,s);p=s<0?"":p.substring(s);if(x.chars){x.chars(w)}}}else{p=p.replace(new RegExp("(.*)</"+u.last()+"[^>]*>"),function(y,z){z=z.replace(/<!--(.*?)-->/g,"$1").replace(/<!\[CDATA\[(.*?)]]>/g,"$1");if(x.chars){x.chars(z)}return""});r("",u.last())}v=p}r();function o(y,B,C,z){B=B.toLowerCase();if(d[B]){while(u.last()&&l[u.last()]){r("",u.last())}}if(g[B]&&u.last()==B){r("",B)}z=i[B]||!!z;if(!z){u.push(B)}if(x.start){var A=[];C.replace(j,function(E,D){var F=arguments[2]?arguments[2]:arguments[3]?arguments[3]:arguments[4]?arguments[4]:m[D]?D:"";A.push({name:D,value:F,escaped:F.replace(/(^|[^\\])"/g,'$1\\"')})});if(x.start){x.start(B,A,z)}}}function r(y,A){if(!A){var B=0}else{for(var B=u.length-1;B>=0;B--){if(u[B].toLowerCase()==A.toLowerCase()){break}}}if(B>=0){for(var z=u.length-1;z>=B;z--){if(x.end){x.end(u[z])}}u.length=B}}};this.HTMLtoXML=function(p){var o="";p=p.replace(/\r/ig,"");p=p.replace(/\n/ig,"");h(p,{start:function(q,s,r){o+="<"+q;for(var t=0;t<s.length;t++){o+=" "+s[t].name+'="'+s[t].escaped+'"'}o+=(r?"/":"")+">"},end:function(q){o+="</"+q+">\r\n"},chars:function(q){o+=q},comment:function(q){o+="<!--"+q+"-->"}});return o};this.FormatHTML=function(D,r){var H,C,A,u,v,G;r=r||{};C=r.indent_size||4;A=r.indent_char||" ";v=r.brace_style||"collapse";u=Infinity;G=r.unformatted||["a","span","bdo","em","strong","dfn","code","samp","kbd","var","cite","abbr","acronym","q","sub","sup","tt","i","b","big","small","u","s","strike","font","ins","del","pre","address","dt","h1","h2","h3","h4","h5","h6"];function q(){this.pos=0;this.token="";this.current_mode="CONTENT";this.tags={parent:"parent1",parentcount:1,parent1:""};this.tag_type="";this.token_text=this.last_token=this.last_text=this.token_type="";this.Utils={whitespace:"\n\r\t ".split(""),single_token:"br,input,link,meta,!doctype,basefont,base,area,hr,wbr,param,img,isindex,?xml,embed,?php,?,?=".split(","),extra_liners:"head,body,/html".split(","),in_array:function(J,t){for(var I=0;I<t.length;I++){if(J===t[I]){return true}}return false}};this.get_content=function(){var t="",J=[],K=false;while(this.input.charAt(this.pos)!=="<"){if(this.pos>=this.input.length){return J.length?J.join(""):["","TK_EOF"]}t=this.input.charAt(this.pos);this.pos++;this.line_char_count++;if(this.Utils.in_array(t,this.Utils.whitespace)){if(J.length){K=true}this.line_char_count--;continue}else{if(K){if(this.line_char_count>=this.max_char){J.push("\n");for(var I=0;I<this.indent_level;I++){J.push(this.indent_string)}this.line_char_count=0}else{J.push(" ");this.line_char_count++}K=false}}J.push(t)}return J.length?J.join(""):""};this.get_contents_to=function(J){if(this.pos==this.input.length){return["","TK_EOF"]}var t="";var K="";var L=new RegExp("</"+J+"\\s*>","igm");L.lastIndex=this.pos;var I=L.exec(this.input);var M=I?I.index:this.input.length;if(this.pos<M){K=this.input.substring(this.pos,M);this.pos=M}return K};this.record_tag=function(t){if(this.tags[t+"count"]){this.tags[t+"count"]++;this.tags[t+this.tags[t+"count"]]=this.indent_level}else{this.tags[t+"count"]=1;this.tags[t+this.tags[t+"count"]]=this.indent_level}this.tags[t+this.tags[t+"count"]+"parent"]=this.tags.parent;this.tags.parent=t+this.tags[t+"count"]};this.retrieve_tag=function(t){if(this.tags[t+"count"]){var I=this.tags.parent;while(I){if(t+this.tags[t+"count"]===I){break}I=this.tags[I+"parent"]}if(I){this.indent_level=this.tags[t+this.tags[t+"count"]];this.tags.parent=this.tags[I+"parent"]}delete this.tags[t+this.tags[t+"count"]+"parent"];delete this.tags[t+this.tags[t+"count"]];if(this.tags[t+"count"]==1){delete this.tags[t+"count"]}else{this.tags[t+"count"]--}}};this.get_tag=function(){var K="",M=[],t=false,O,J;do{if(this.pos>=this.input.length){return M.length?M.join(""):["","TK_EOF"]}K=this.input.charAt(this.pos);this.pos++;this.line_char_count++;if(this.Utils.in_array(K,this.Utils.whitespace)){t=true;this.line_char_count--;continue}if(K==="'"||K==='"'){if(!M[1]||M[1]!=="!"){K+=this.get_unformatted(K);t=true}}if(K==="="){t=false}if(M.length&&M[M.length-1]!=="="&&K!==">"&&t){if(this.line_char_count>=this.max_char){this.print_newline(false,M);this.line_char_count=0}else{M.push(" ");this.line_char_count++}t=false}if(K==="<"){O=this.pos-1}M.push(K)}while(K!==">");var P=M.join("");var I;if(P.indexOf(" ")!=-1){I=P.indexOf(" ")}else{I=P.indexOf(">")}var N=P.substring(1,I).toLowerCase();if(P.charAt(P.length-2)==="/"||this.Utils.in_array(N,this.Utils.single_token)){this.tag_type="SINGLE"}else{if(N==="script"){this.record_tag(N);this.tag_type="SCRIPT"}else{if(N==="style"){this.record_tag(N);this.tag_type="STYLE"}else{if(this.Utils.in_array(N,G)){var L=this.get_unformatted("</"+N+">",P);M.push(L);if(O>0&&this.Utils.in_array(this.input.charAt(O-1),this.Utils.whitespace)){M.splice(0,0,this.input.charAt(O-1))}J=this.pos-1;if(this.Utils.in_array(this.input.charAt(J+1),this.Utils.whitespace)){M.push(this.input.charAt(J+1))}this.tag_type="SINGLE"}else{if(N.charAt(0)==="!"){if(N.indexOf("[if")!=-1){if(P.indexOf("!IE")!=-1){var L=this.get_unformatted("-->",P);M.push(L)}this.tag_type="START"}else{if(N.indexOf("[endif")!=-1){this.tag_type="END";this.unindent()}else{if(N.indexOf("[cdata[")!=-1){var L=this.get_unformatted("]]>",P);M.push(L);this.tag_type="SINGLE"}else{var L=this.get_unformatted("-->",P);M.push(L);this.tag_type="SINGLE"}}}}else{if(N.charAt(0)==="/"){this.retrieve_tag(N.substring(1));this.tag_type="END"}else{this.record_tag(N);this.tag_type="START"}if(this.Utils.in_array(N,this.Utils.extra_liners)){this.print_newline(true,this.output)}}}}}}return M.join("")};this.get_unformatted=function(I,J){if(J&&J.indexOf(I)!=-1){return""}var t="";var K="";var L=true;do{if(this.pos>=this.input.length){return K}t=this.input.charAt(this.pos);this.pos++;if(this.Utils.in_array(t,this.Utils.whitespace)){if(!L){this.line_char_count--;continue}if(t==="\n"||t==="\r"){K+="\n";this.line_char_count=0;continue}}K+=t;this.line_char_count++;L=true}while(K.indexOf(I)==-1);return K};this.get_token=function(){var t;if(this.last_token==="TK_TAG_SCRIPT"||this.last_token==="TK_TAG_STYLE"){var I=this.last_token.substr(7);t=this.get_contents_to(I);if(typeof t!=="string"){return t}return[t,"TK_"+I]}if(this.current_mode==="CONTENT"){t=this.get_content();if(typeof t!=="string"){return t}else{return[t,"TK_CONTENT"]}}if(this.current_mode==="TAG"){t=this.get_tag();if(typeof t!=="string"){return t}else{var J="TK_TAG_"+this.tag_type;return[t,J]}}};this.get_full_indent=function(t){t=this.indent_level+t||0;if(t<1){return""}return Array(t+1).join(this.indent_string)};this.printer=function(K,J,t,M,L){this.input=K||"";this.output=[];this.indent_character=J;this.indent_string="";this.indent_size=t;this.brace_style=L;this.indent_level=0;this.max_char=M;this.line_char_count=0;for(var I=0;I<this.indent_size;I++){this.indent_string+=this.indent_character}this.print_newline=function(P,N){this.line_char_count=0;if(!N||!N.length){return}if(!P){while(this.Utils.in_array(N[N.length-1],this.Utils.whitespace)){N.pop()}}N.push("\n");for(var O=0;O<this.indent_level;O++){N.push(this.indent_string)}};this.print_token=function(N){this.output.push(N)};this.indent=function(){this.indent_level++};this.unindent=function(){if(this.indent_level>0){this.indent_level--}}};return this}H=new q();H.printer(D,A,C,u,v);while(true){var w=H.get_token();H.token_text=w[0];H.token_type=w[1];if(H.token_type==="TK_EOF"){break}switch(H.token_type){case"TK_TAG_START":H.print_newline(false,H.output);H.print_token(H.token_text);H.indent();H.current_mode="CONTENT";break;case"TK_TAG_STYLE":case"TK_TAG_SCRIPT":H.print_newline(false,H.output);H.print_token(H.token_text);H.current_mode="CONTENT";break;case"TK_TAG_END":if(H.last_token==="TK_CONTENT"&&H.last_text===""){var F=H.token_text.match(/\w+/)[0];var y=H.output[H.output.length-1].match(/<\s*(\w+)/);if(y===null||y[1]!==F){H.print_newline(true,H.output)}}H.print_token(H.token_text);H.current_mode="CONTENT";break;case"TK_TAG_SINGLE":var o=H.token_text.match(/^\s*<([a-z]+)/i);if(!o||!H.Utils.in_array(o[1],G)){H.print_newline(false,H.output)}H.print_token(H.token_text);H.current_mode="CONTENT";break;case"TK_CONTENT":if(H.token_text!==""){H.print_token(H.token_text)}H.current_mode="TAG";break;case"TK_STYLE":case"TK_SCRIPT":if(H.token_text!==""){H.output.push("\n");var x=H.token_text;if(r.indent_scripts=="keep"){var z=0}else{if(r.indent_scripts=="separate"){var z=-H.indent_level}else{var z=1}}var p=H.get_full_indent(z);var s=x.match(/^\s*/)[0];var B=s.match(/[^\n\r]*$/)[0].split(H.indent_string).length-1;var E=H.get_full_indent(z-B);x=x.replace(/^\s*/,p).replace(/\r\n|\r|\n/g,"\n"+E).replace(/\s*$/,"");if(x){H.print_token(x);H.print_newline(true,H.output)}}H.current_mode="TAG";break}H.last_token=H.token_type;H.last_text=H.token_text}return H.output.join("")};function e(r){var q={},o=r.split(",");for(var p=0;p<o.length;p++){q[o[p]]=true}return q}}})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxTooltip","",{});a.extend(a.jqx._jqxTooltip.prototype,{defineInstance:function(){var b={width:"auto",height:"auto",position:"default",enableBrowserBoundsDetection:true,content:"",left:0,top:0,absolutePositionX:0,absolutePositionY:0,trigger:"hover",showDelay:100,autoHide:true,autoHideDelay:3000,closeOnClick:true,disabled:false,animationShowDelay:200,animationHideDelay:"fast",showArrow:true,name:"",opacity:0.9,rtl:false,_isOpen:false,opening:null,value:null,_eventsMap:{mousedown:a.jqx.mobile.getTouchEventName("touchstart"),mouseup:a.jqx.mobile.getTouchEventName("touchend")},events:["open","close","opening","closing"]};a.extend(true,this,b);return b},createInstance:function(d){this._isTouchDevice=a.jqx.mobile.isTouchDevice();var f=a.data(document.body,"_tooltipIDArray"+this.name);if(!f){this.ID_Array=new Array();a.data(document.body,"_tooltipIDArray"+this.name,this.ID_Array)}else{this.ID_Array=f}var e=this._generatekey();var c="jqxtooltip"+e;this.ID_Array.push({tooltipID:c,tooltipHost:this.host});var b=a('<div id="'+c+'"><div id ="'+c+'Main"><div id="'+c+'Text"></div></div><div id="'+c+'Arrow"></div></div>');if(a.jqx.browser.msie){b.addClass(this.toThemeProperty("jqx-noshadow"))}a("body").append(b);this._setTheme();var g=a("#"+c);g.css("visibility","hidden");g.css("display","none");g.css("opacity",0);g.css("z-index",99999);if(this.showArrow==false){a("#"+c+"Arrow").css("visibility","hidden");a("#"+c+"Arrow").css("display","none")}this._setSize();this._setContent();if(this.disabled==false){this._trigger();if(this.closeOnClick==true){this._clickHide()}}},open:function(){if(arguments){if(arguments.length){if(arguments.length==2){this.position="absolute";this.left=arguments[0];this.top=arguments[1];this.absolutePositionX=arguments[0];this.absolutePositionY=arguments[1]}}}if(this.disabled==false&&this._id()!="removed"){if(this.position=="mouse"||this.position=="mouseenter"){var b=this.position;this.position="default";this._raiseEvent("2");this._setPosition();this._animateShow();this.position=b}else{this._raiseEvent("2");this._setPosition();this._animateShow()}}},close:function(c){var e=this;if(typeof(c)==="object"&&a.isEmptyObject(c)){c=this.animationHideDelay}var b=new Number(a(this._id()).css("opacity")).toFixed(2);var d=function(){clearTimeout(e.autoHideTimeout);e._raiseEvent("3");a(e._id()).animate({opacity:0},c,function(){a(e._id()).css("visibility","hidden");a(e._id()).css("display","none");e._raiseEvent("1");e._isOpen=false})};if(this._isOpen==false&&b!=0){a(e._id()).stop();d();return}if(this._isOpen==true&&b==this.opacity){d()}},destroy:function(){var c=this.ID_Array.length;this._removeHandlers();a(this._id()).remove();for(var b=0;b<c;b++){if(this.ID_Array[b].tooltipHost===this.host){this.ID_Array.splice(b,1);break}}a(this.element).removeData("jqxTooltip")},refresh:function(d){if(d==true){return}if(this.rtl){a(this._id()+"Text").addClass(this.toThemeProperty("jqx-rtl"));a(this._id()+"Text").css({direction:"rtl"})}var c=this;var b=new Number(a(this._id()).css("opacity")).toFixed(2);if(this._id()!="removed"){if(this.disabled==true&&this._isOpen==true&&b==this.opacity){clearTimeout(this.autoHideTimeout);a(this._id()).stop();a(this._id()).animate({opacity:0},this.animationHideDelay,function(){a(c._id()).css("visibility","hidden");a(c._id()).css("display","none");c._isOpen=false})}this._setTheme();this._setContent();this._setSize();if(this.position!="mouse"&&this.position!="mouseenter"){this._setPosition()}this._removeHandlers();if(this.disabled==false){this._trigger();if(this.closeOnClick==true){this._clickHide()}}}},propertyChangedHandler:function(b,c,e,d){if(c=="content"){this.changeContentFlag=true}b.refresh()},_raiseEvent:function(g,e){var c=this.events[g];var f=new a.Event(c);f.owner=this;f.args=e;try{var b=this.host.trigger(f)}catch(d){}return b},_generatekey:function(){var b=function(){return(((1+Math.random())*65536)|0).toString(16).substring(1)};return(b()+b())},_id:function(){var b,c;var e=this.ID_Array.length;for(var d=0;d<e;d++){if(this.ID_Array[d].tooltipHost===this.host){b=this.ID_Array[d].tooltipID;c="#"+b;break}}if(c==undefined){c="removed"}return c},_setPosition:function(f){if((this._isOpen==false&&a(this._id()).css("opacity")==0)||this.changeContentFlag==true){if(!f&&(this.position=="mouse"||this.position=="mouseenter")){return}a(this._id()).css("display","block");this.changeContentFlag=false;this.documentTop=a(document).scrollTop();this.documentLeft=a(document).scrollLeft();this.windowWidth=a(window).width();this.windowHeight=a(window).height();this.host_width=this.host.outerWidth();this.host_height=this.host.outerHeight();this.tooltip_width=a(this._id()).width();this.tooltip_height=a(this._id()).height();this.host_offset=this.host.offset();this.tooltip_offset=a(this._id()).offset();this.default_offset=30;this.offset_horizontal=parseInt(this.left);this.offset_vertical=parseInt(this.top);var d=a(this._id()+"Arrow");var g=a(this._id()+"Main");this.arrow_size=5;this.tooltip_main_offset=g.offset();this.tooltip_arrow_offset;switch(this.position){case"top":this.tooltip_offset.left=this.host_offset.left+this.host_width/2-this.tooltip_width/2+this.offset_horizontal;this.tooltip_offset.top=this.host_offset.top-this.tooltip_height-this.arrow_size+this.offset_vertical;this._detectBrowserBounds();this.tooltip_main_offset=g.offset();d.removeClass(this.toThemeProperty("jqx-tooltip-arrow-l-r"));d.addClass(this.toThemeProperty("jqx-tooltip-arrow-t-b"));d.css({"border-width":this.arrow_size+"px "+this.arrow_size+"px  0px"});this.tooltip_arrow_offset=d.offset();this.tooltip_arrow_offset.left=this.tooltip_main_offset.left+((g.width())/2-this.arrow_size);this.tooltip_arrow_offset.top=this.tooltip_main_offset.top+g.height();d.offset({top:this.tooltip_arrow_offset.top,left:this.tooltip_arrow_offset.left});break;case"bottom":this.tooltip_offset.left=this.host_offset.left+this.host_width/2-this.tooltip_width/2+this.offset_horizontal;this.tooltip_offset.top=this.host_offset.top+this.host_height+this.arrow_size+this.offset_vertical;this._detectBrowserBounds();this.tooltip_main_offset=g.offset();d.removeClass(this.toThemeProperty("jqx-tooltip-arrow-l-r"));d.addClass(this.toThemeProperty("jqx-tooltip-arrow-t-b"));d.css({"border-width":"0 "+this.arrow_size+"px "+this.arrow_size+"px"});this.tooltip_arrow_offset=d.offset();this.tooltip_arrow_offset.left=this.tooltip_main_offset.left+((g.width())/2-this.arrow_size);this.tooltip_arrow_offset.top=this.tooltip_main_offset.top-this.arrow_size;d.offset({top:this.tooltip_arrow_offset.top,left:this.tooltip_arrow_offset.left});break;case"left":this.tooltip_offset.left=-1+this.host_offset.left-this.tooltip_width-this.arrow_size+this.offset_horizontal;this.tooltip_offset.top=this.host_offset.top+this.host_height/2-this.tooltip_height/2+this.offset_vertical;this._detectBrowserBounds();this.tooltip_main_offset=g.offset();d.removeClass(this.toThemeProperty("jqx-tooltip-arrow-t-b"));d.addClass(this.toThemeProperty("jqx-tooltip-arrow-l-r"));d.css({"border-width":this.arrow_size+"px 0px "+this.arrow_size+"px "+this.arrow_size+"px"});this.tooltip_main_offset=g.offset();this.tooltip_arrow_offset=d.offset();this.tooltip_arrow_offset.left=1+this.tooltip_main_offset.left+g.width();this.tooltip_arrow_offset.top=this.tooltip_main_offset.top+(g.height())/2-this.arrow_size;d.offset({top:this.tooltip_arrow_offset.top,left:this.tooltip_arrow_offset.left});break;case"right":this.tooltip_offset.left=this.host_offset.left+this.host_width+this.arrow_size+this.offset_horizontal;this.tooltip_offset.top=this.host_offset.top+this.host_height/2-this.tooltip_height/2+this.offset_vertical;this.tooltip_offset.top=parseInt(this.tooltip_offset.top);this._detectBrowserBounds();this.tooltip_main_offset=g.offset();d.removeClass(this.toThemeProperty("jqx-tooltip-arrow-t-b"));d.addClass(this.toThemeProperty("jqx-tooltip-arrow-l-r"));d.css({"border-width":this.arrow_size+"px "+this.arrow_size+"px "+this.arrow_size+"px 0px"});this.tooltip_arrow_offset=d.offset();this.tooltip_arrow_offset.left=(this.tooltip_main_offset.left-this.arrow_size);this.tooltip_arrow_offset.top=this.tooltip_main_offset.top+(g.height())/2-this.arrow_size;d.offset({top:this.tooltip_arrow_offset.top,left:this.tooltip_arrow_offset.left});break;case"top-left":this.tooltip_offset.left=this.host_offset.left+this.default_offset-this.tooltip_width+this.offset_horizontal;this.tooltip_offset.top=this.host_offset.top-this.tooltip_height-this.arrow_size+this.offset_vertical;this._detectBrowserBounds();this.tooltip_main_offset=g.offset();d.removeClass(this.toThemeProperty("jqx-tooltip-arrow-l-r"));d.addClass(this.toThemeProperty("jqx-tooltip-arrow-t-b"));d.css({"border-width":this.arrow_size+"px "+this.arrow_size+"px  0px"});this.tooltip_arrow_offset=d.offset();this.tooltip_arrow_offset.left=this.tooltip_main_offset.left+g.width()-6*this.arrow_size;this.tooltip_arrow_offset.top=this.tooltip_main_offset.top+g.height();d.offset({top:this.tooltip_arrow_offset.top,left:this.tooltip_arrow_offset.left});break;case"bottom-left":this.tooltip_offset.left=this.host_offset.left+this.default_offset-this.tooltip_width+this.offset_horizontal;this.tooltip_offset.top=this.host_offset.top+this.host_height+this.arrow_size+this.offset_vertical;this._detectBrowserBounds();this.tooltip_main_offset=g.offset();d.removeClass(this.toThemeProperty("jqx-tooltip-arrow-l-r"));d.addClass(this.toThemeProperty("jqx-tooltip-arrow-t-b"));d.css({"border-width":"0 "+this.arrow_size+"px "+this.arrow_size+"px"});this.tooltip_arrow_offset=d.offset();this.tooltip_arrow_offset.left=this.tooltip_main_offset.left+g.width()-6*this.arrow_size;this.tooltip_arrow_offset.top=this.tooltip_main_offset.top-this.arrow_size;d.offset({top:this.tooltip_arrow_offset.top,left:this.tooltip_arrow_offset.left});break;case"top-right":this.tooltip_offset.left=this.host_offset.left+this.host_width-this.default_offset+this.offset_horizontal;this.tooltip_offset.top=this.host_offset.top-this.tooltip_height-this.arrow_size+this.offset_vertical;this._detectBrowserBounds();this.tooltip_main_offset=g.offset();d.removeClass(this.toThemeProperty("jqx-tooltip-arrow-l-r"));d.addClass(this.toThemeProperty("jqx-tooltip-arrow-t-b"));d.css({"border-width":this.arrow_size+"px "+this.arrow_size+"px  0px"});this.tooltip_arrow_offset=d.offset();this.tooltip_arrow_offset.left=this.tooltip_main_offset.left+4*this.arrow_size;this.tooltip_arrow_offset.top=this.tooltip_main_offset.top+g.height();d.offset({top:this.tooltip_arrow_offset.top,left:this.tooltip_arrow_offset.left});break;case"bottom-right":this.tooltip_offset.left=this.host_offset.left+this.host_width-this.default_offset+this.offset_horizontal;this.tooltip_offset.top=this.host_offset.top+this.host_height+this.arrow_size+this.offset_vertical;this._detectBrowserBounds();this.tooltip_main_offset=g.offset();d.removeClass(this.toThemeProperty("jqx-tooltip-arrow-l-r"));d.addClass(this.toThemeProperty("jqx-tooltip-arrow-t-b"));d.css({"border-width":"0 "+this.arrow_size+"px "+this.arrow_size+"px"});this.tooltip_arrow_offset=d.offset();this.tooltip_arrow_offset.left=this.tooltip_main_offset.left+4*this.arrow_size;this.tooltip_arrow_offset.top=this.tooltip_main_offset.top-this.arrow_size;d.offset({top:this.tooltip_arrow_offset.top,left:this.tooltip_arrow_offset.left});break;case"absolute":a(this._id()).offset({top:this.absolutePositionY,left:this.absolutePositionX});d.css({"border-width":"0px"});break;case"mouse":var e=this;if(this._isTouchDevice==false){switch(this.trigger){case"hover":if(this.mouseHoverTimeout){clearTimeout(this.mouseHoverTimeout)}this.mouseHoverTimeout=setTimeout(function(){e.tooltip_offset.left=f.pageX+10;e.tooltip_offset.top=f.pageY+10;e._detectBrowserBounds()},this.showDelay);break;case"click":this.tooltip_offset.left=f.pageX+10;this.tooltip_offset.top=f.pageY+10;this._detectBrowserBounds();break}}else{var b=f.pageX;var i=f.pageY;if(f.originalEvent){var h=null;if(f.originalEvent.touches&&f.originalEvent.touches.length){var h=f.originalEvent.touches[0]}else{if(f.originalEvent.changedTouches&&f.originalEvent.changedTouches.length){var h=f.originalEvent.changedTouches[0]}}if(h!=undefined){b=h.pageX;i=h.pageY}}this.tooltip_offset.left=b+10;this.tooltip_offset.top=i+10;this._detectBrowserBounds()}d.css({"border-width":"0px"});break;case"mouseenter":var c={top:f.pageY,left:f.pageX};if((c.top<(this.host_offset.top+10))&&(c.top>(this.host_offset.top-10))){this.tooltip_offset.left=c.left-this.tooltip_width/2;this.tooltip_offset.top=this.host_offset.top-this.tooltip_height-this.arrow_size;this._detectBrowserBounds();this.tooltip_main_offset=g.offset();d.removeClass(this.toThemeProperty("jqx-tooltip-arrow-l-r"));d.addClass(this.toThemeProperty("jqx-tooltip-arrow-t-b"));d.css({"border-width":this.arrow_size+"px "+this.arrow_size+"px  0px"});this.tooltip_arrow_offset=d.offset();this.tooltip_arrow_offset.left=this.tooltip_main_offset.left+((g.width())/2-this.arrow_size);this.tooltip_arrow_offset.top=this.tooltip_main_offset.top+g.height();d.offset({top:this.tooltip_arrow_offset.top,left:this.tooltip_arrow_offset.left})}else{if((c.top<((this.host_offset.top+this.host_height)+10))&&(c.top>((this.host_offset.top+this.host_height)-10))){this.tooltip_offset.left=c.left-this.tooltip_width/2;this.tooltip_offset.top=this.host_offset.top+this.host_height+this.arrow_size;this._detectBrowserBounds();this.tooltip_main_offset=g.offset();d.removeClass(this.toThemeProperty("jqx-tooltip-arrow-l-r"));d.addClass(this.toThemeProperty("jqx-tooltip-arrow-t-b"));d.css({"border-width":"0 "+this.arrow_size+"px "+this.arrow_size+"px"});this.tooltip_arrow_offset=d.offset();this.tooltip_arrow_offset.left=this.tooltip_main_offset.left+((g.width())/2-this.arrow_size);this.tooltip_arrow_offset.top=this.tooltip_main_offset.top-this.arrow_size;d.offset({top:this.tooltip_arrow_offset.top,left:this.tooltip_arrow_offset.left})}else{if((c.left<(this.host_offset.left+10))&&(c.left>(this.host_offset.left-10))){this.tooltip_offset.left=this.host_offset.left-this.tooltip_width-this.arrow_size;this.tooltip_offset.top=c.top-this.tooltip_height/2;this._detectBrowserBounds();this.tooltip_main_offset=g.offset();d.removeClass(this.toThemeProperty("jqx-tooltip-arrow-t-b"));d.addClass(this.toThemeProperty("jqx-tooltip-arrow-l-r"));d.css({"border-width":this.arrow_size+"px 0px "+this.arrow_size+"px "+this.arrow_size+"px"});this.tooltip_main_offset=g.offset();this.tooltip_arrow_offset=d.offset();this.tooltip_arrow_offset.left=this.tooltip_main_offset.left+g.width();this.tooltip_arrow_offset.top=this.tooltip_main_offset.top+(g.height())/2-this.arrow_size;d.offset({top:this.tooltip_arrow_offset.top,left:this.tooltip_arrow_offset.left})}else{if((c.left<(this.host_offset.left+this.host_width+10))&&(c.left>(this.host_offset.left+this.host_width-10))){this.tooltip_offset.left=this.host_offset.left+this.host_width+this.arrow_size;this.tooltip_offset.top=c.top-this.tooltip_height/2;this._detectBrowserBounds();this.tooltip_main_offset=g.offset();d.removeClass(this.toThemeProperty("jqx-tooltip-arrow-t-b"));d.addClass(this.toThemeProperty("jqx-tooltip-arrow-l-r"));d.css({"border-width":this.arrow_size+"px "+this.arrow_size+"px "+this.arrow_size+"px 0px"});this.tooltip_main_offset=g.offset();this.tooltip_arrow_offset=d.offset();this.tooltip_arrow_offset.left=(this.tooltip_main_offset.left-this.arrow_size);this.tooltip_arrow_offset.top=this.tooltip_main_offset.top+(g.height())/2-this.arrow_size;d.offset({top:this.tooltip_arrow_offset.top,left:this.tooltip_arrow_offset.left})}}}}break;case"default":this.tooltip_offset.left=this.host_offset.left+this.host_width-this.default_offset;this.tooltip_offset.top=this.host_offset.top+this.host_height+this.arrow_size;this._detectBrowserBounds();this.tooltip_main_offset=g.offset();d.removeClass(this.toThemeProperty("jqx-tooltip-arrow-l-r"));d.addClass(this.toThemeProperty("jqx-tooltip-arrow-t-b"));d.css({"border-width":"0 "+this.arrow_size+"px "+this.arrow_size+"px"});this.tooltip_arrow_offset=d.offset();this.tooltip_arrow_offset.left=this.tooltip_main_offset.left+4*this.arrow_size;this.tooltip_arrow_offset.top=this.tooltip_main_offset.top-this.arrow_size;d.offset({top:this.tooltip_arrow_offset.top,left:this.tooltip_arrow_offset.left});break}}},_setContent:function(){a(this._id()+"Text").html(this.content)},opened:function(){return this._isOpen&&this.host.css("display")=="block"&&this.host.css("visibility")=="visible"},_animateShow:function(){this._closeAll();clearTimeout(this.autoHideTimeout);var b=new Number(a(this._id()).css("opacity")).toFixed(2);if(this._isOpen==false&&b==0){var c=this;var e=a(this._id());e.css("visibility","visible");e.css("display","block");e.stop();e.css("opacity",0);if(this.opening){var d=this.opening(this);if(d===false){return}}e.animate({opacity:this.opacity},this.animationShowDelay,function(){c._raiseEvent("0");c._isOpen=true;var f=a.data(document.body,"_openedTooltip"+c.name);c.openedTooltip=c;a.data(document.body,"_openedTooltip"+c.name,c);if(c.autoHideTimeout){clearTimeout(c.autoHideTimeout)}if(c.autoHideDelay>0&&c.autoHide===true){c.autoHideTimeout=setTimeout(function(){c._autoHide()},c.autoHideDelay)}})}},_trigger:function(){if(this._id()!="removed"){this._enterFlag;this._leaveFlag;var b=this;if(this._isTouchDevice==false){switch(this.trigger){case"hover":if(this.position=="mouse"){this.addHandler(this.host,"mousemove.tooltip",function(c){if(b._enterFlag==1){b._raiseEvent("2");b._setPosition(c);clearTimeout(b.hoverShowTimeout);b.hoverShowTimeout=setTimeout(function(){b._animateShow();b._enterFlag=0},b.showDelay)}});this.addHandler(this.host,"mouseenter.tooltip",function(){if(b._leaveFlag!=0){b._enterFlag=1}});this.addHandler(this.host,"mouseleave.tooltip",function(e){b._leaveFlag=1;clearTimeout(b.hoverShowTimeout);var f=a(b._id()).offset();var d=a(b._id()).width();var c=a(b._id()).height();if(parseInt(e.pageX)<parseInt(f.left)||parseInt(e.pageX)>parseInt(f.left)+d){b.close()}if(parseInt(e.pageY)<parseInt(f.top)||parseInt(e.pageY)>parseInt(f.top)+c){b.close()}});this.addHandler(a(this._id()),"mouseleave.tooltip",function(c){b._checkBoundariesAuto(c);if(b._clickFlag!=0&&b._autoFlag!=0){b._leaveFlag=0}else{b._leaveFlag=1;b.close()}})}else{this.addHandler(this.host,"mouseenter.tooltip",function(c){clearTimeout(b.hoverShowTimeout);b.hoverShowTimeout=setTimeout(function(){b._raiseEvent("2");b._setPosition(c);b._animateShow()},b.showDelay)});this.addHandler(this.host,"mouseleave.tooltip",function(f){b._leaveFlag=1;clearTimeout(b.hoverShowTimeout);if(b.autoHide){var d=f.pageX;var j=f.pageY;var g=a(b._id()).offset();var i=g.left;var h=g.top;var e=a(b._id()).width();var c=a(b._id()).height();if(parseInt(d)<parseInt(i)||parseInt(d)>parseInt(i)+e||parseInt(j)<parseInt(h)||parseInt(j)>parseInt(h)+c){b.close()}}});this.addHandler(a(this._id()),"mouseleave.tooltip",function(c){b._checkBoundariesAuto(c);if(b._clickFlag!=0&&b._autoFlag!=0){b._leaveFlag=0}else{b._leaveFlag=1;if(b.autoHide){b.close()}}})}break;case"click":this.addHandler(this.host,"click.tooltip",function(c){if(b.position=="mouseenter"){b.position="mouse"}b._raiseEvent("2");b._setPosition(c);b._animateShow()});break;case"none":break}}else{if(this.trigger!="none"){this.addHandler(this.host,"touchstart.tooltip",function(c){if(b.position=="mouseenter"){b.position="mouse"}b._raiseEvent("2");b._setPosition(c);b._animateShow()})}}}},_autoHide:function(){var c=this;var b=new Number(a(this._id()).css("opacity")).toFixed(2);if(this.autoHide==true&&this._isOpen==true&&b>=this.opacity){c._raiseEvent("3");a(c._id()).animate({opacity:0},c.animationHideDelay,function(){a(c._id()).css("visibility","hidden");a(c._id()).css("display","none");c._raiseEvent("1");c._isOpen=false})}},_clickHide:function(){var b=this;this.addHandler(a(this._id()),"click.tooltip",function(c){b._checkBoundariesClick(c);b.close()})},_setSize:function(){a(this._id()).css({width:this.width,height:this.height})},resize:function(){this._setSize()},_setTheme:function(){var e=this._id();var d=a(e+"Main");var c=a(e+"Text");var b=a(e+"Arrow");d.addClass(this.toThemeProperty("jqx-widget"));c.addClass(this.toThemeProperty("jqx-widget"));b.addClass(this.toThemeProperty("jqx-widget"));d.addClass(this.toThemeProperty("jqx-fill-state-normal"));c.addClass(this.toThemeProperty("jqx-fill-state-normal"));b.addClass(this.toThemeProperty("jqx-fill-state-normal"));a(e).addClass(this.toThemeProperty("jqx-tooltip"));a(e).addClass(this.toThemeProperty("jqx-popup"));d.addClass(this.toThemeProperty("jqx-tooltip-main"));c.addClass(this.toThemeProperty("jqx-tooltip-text"));b.addClass(this.toThemeProperty("jqx-tooltip-arrow"))},_initialPosition:function(){var b=this.position;this.position="default";this._setPosition();this.position=b},_detectBrowserBounds:function(){var b=this._id();if(this.enableBrowserBoundsDetection){if(this.tooltip_offset.top<this.documentTop&&this.tooltip_offset.left<0){a(b).offset({top:this.documentTop,left:this.documentLeft})}else{if(this.tooltip_offset.top<this.documentTop&&(this.tooltip_offset.left+this.tooltip_width)>this.windowWidth+this.documentLeft){a(b).offset({top:this.documentTop,left:(this.windowWidth+this.documentLeft-this.tooltip_width)})}else{if(this.tooltip_offset.top<this.documentTop){a(b).offset({top:this.documentTop,left:this.tooltip_offset.left})}else{if((this.tooltip_offset.top+this.tooltip_height)>(this.windowHeight+this.documentTop)&&this.tooltip_offset.left<0){a(b).offset({top:(this.windowHeight+this.documentTop-this.tooltip_height),left:this.documentLeft})}else{if((this.tooltip_offset.top+this.tooltip_height)>(this.windowHeight+this.documentTop)&&(this.tooltip_offset.left+this.tooltip_width)>this.windowWidth+this.documentLeft){a(b).offset({top:(this.windowHeight+this.documentTop-this.tooltip_height),left:(this.windowWidth+this.documentLeft-this.tooltip_width)})}else{if((this.tooltip_offset.top+this.tooltip_height)>(this.windowHeight+this.documentTop)){a(b).offset({top:(this.windowHeight+this.documentTop-this.tooltip_height),left:this.tooltip_offset.left})}else{if(this.tooltip_offset.left<0){a(b).offset({top:this.tooltip_offset.top,left:this.documentLeft})}else{if((this.tooltip_offset.left+this.tooltip_width)>this.windowWidth+this.documentLeft){a(b).offset({top:this.tooltip_offset.top,left:(this.windowWidth+this.documentLeft-this.tooltip_width)})}else{a(b).offset({top:this.tooltip_offset.top,left:this.tooltip_offset.left})}}}}}}}}}else{a(b).offset({top:this.tooltip_offset.top,left:this.tooltip_offset.left})}},_checkBoundaries:function(b){if(b.pageX>=this.host_offset.left&&b.pageX<=(this.host_offset.left+this.host_width)&&b.pageY>=this.host_offset.top&&b.pageY<=(this.host_offset.top+this.host_height)){return true}else{return false}},_checkBoundariesClick:function(b){if(this._checkBoundaries(b)){this._clickFlag=1}else{this._clickFlag=0}},_checkBoundariesAuto:function(b){if(this._checkBoundaries(b)){this._autoFlag=1}else{this._autoFlag=0}},_removeHandlers:function(){this.removeHandler(this.host,"mouseenter.tooltip");this.removeHandler(this.host,"mousemove.tooltip");this.removeHandler(this.host,"mouseleave.tooltip");this.removeHandler(this.host,"click.tooltip");this.removeHandler(this.host,"touchstart.tooltip");this.removeHandler(a(this._id()),"click.tooltip");this.removeHandler(a(this._id()),"mouseleave.tooltip")},_closeAll:function(){var d=this.ID_Array.length;for(var c=0;c<d;c++){var b="#"+this.ID_Array[c].tooltipID;if(b!=this._id()){a(b).css({opacity:0,visibility:"hidden",display:"none"});this._isOpen=false}}}})})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(b) {
    b.jqx.jqxWidget("jqxGrid", "", {});
    b.extend(b.jqx._jqxGrid.prototype, {
        defineInstance: function() {
            var d = {
                disabled: false,
                width: 600,
                height: 400,
                pagerheight: 28,
                groupsheaderheight: 34,
                pagesize: 10,
                pagesizeoptions: ["5", "10", "20"],
                rowsheight: 25,
                columnsheight: 25,
                filterrowheight: 31,
                groupindentwidth: 30,
                haveViewRoleColumn:false,//是否包含角色列
                rowdetails: false,
                enablerowdetailsindent: true,
                enablemousewheel: true,
                initrowdetails: null,
                layoutrowdetails: null,
                editable: false,
                editmode: "selectedcell",
                pageable: false,
                pagermode: "default",
                pagerbuttonscount: 5,
                groupable: false,
                sortable: false,
                filterable: false,
                filtermode: "default",
                autoshowfiltericon: true,
                showfiltercolumnbackground: true,
                showpinnedcolumnbackground: true,
                showsortcolumnbackground: true,
                altrows: false,
                altstart: 1,
                altstep: 1,
                showrowdetailscolumn: true,
                showtoolbar: false,
                toolbarheight: 34,
                showstatusbar: false,
                statusbarheight: 34,
                enableellipsis: true,
                groups: [],
                groupsrenderer: null,
                groupcolumnrenderer: null,
                groupsexpandedbydefault: false,
                pagerrenderer: null,
                touchmode: "auto",
                columns: [],
                selectedrowindex: -1,
                selectedrowindexes: new Array(),
                selectedcells: new Array(),
                autobind: true,
                selectedcell: null,
                tableZIndex: 799,
                headerZIndex: 299,
                updatefilterconditions: null,
                showaggregates: false,
                showfilterrow: false,
                showeverpresentrow: false,
                everpresentrowposition: "top",
                everpresentrowactions: "add reset",
                everpresentrowactionsmode: "buttons",
                everpresentrowheight: 30,
                autorowheight: false,
                autokoupdates: true,
                handlekeyboardnavigation: null,
                showsortmenuitems: true,
                showfiltermenuitems: true,
                showgroupmenuitems: true,
                enablebrowserselection: false,
                enablekeyboarddelete: true,
                clipboard: true,
                ready: null,
                updatefilterpanel: null,
                autogeneratecolumns: false,
                rowdetailstemplate: null,
                scrollfeedback: null,
                rendertoolbar: null,
                renderstatusbar: null,
                rendered: null,
                multipleselectionbegins: null,
                columngroups: null,
                cellhover: null,
                source: {
                    beforeprocessing: null,
                    beforesend: null,
                    loaderror: null,
                    localdata: null,
                    data: null,
                    datatype: "array",
                    datafields: [],
                    url: "",
                    root: "",
                    record: "",
                    id: "",
                    totalrecords: 0,
                    recordstartindex: 0,
                    recordendindex: 0,
                    loadallrecords: true,
                    sortcolumn: null,
                    sortdirection: null,
                    sort: null,
                    filter: null,
                    sortcomparer: null
                },
                dataview: null,
                updatedelay: null,
                autoheight: false,
                autowidth: false,
                showheader: true,
                showgroupsheader: true,
                closeablegroups: true,
                scrollbarsize: b.jqx.utilities.scrollBarSize,
                touchscrollbarsize: b.jqx.utilities.touchScrollBarSize,
                scrollbarautoshow: b.jqx.utilities.scrollBarAutoShow,
                virtualmode: false,
                sort: null,
                columnsmenu: true,
                columnsresize: false,
                columnsreorder: false,
                columnsmenuwidth: 15,
                autoshowcolumnsmenubutton: true,
                popupwidth: "auto",
                popupheight: "auto",
                columnmenuopening: null,
                columnmenuclosing: null,
                sorttogglestates: 2,
                rendergridrows: null,
                enableanimations: true,
                enablecolumnsvirtualization: true,
                enabletooltips: false,
                selectionmode: "singlerow",
                enablehover: true,
                loadingerrormessage: "The data is still loading. When the data binding is completed, the Grid raises the 'bindingcomplete' event. Call this function in the 'bindingcomplete' event handler.",
                verticalscrollbarstep: 25,
                verticalscrollbarlargestep: 400,
                horizontalscrollbarstep: 10,
                horizontalscrollbarlargestep: 50,
                keyboardnavigation: true,
                touchModeStyle: "auto",
                autoshowloadelement: true,
                showdefaultloadelement: true,
                showemptyrow: true,
                autosavestate: false,
                autoloadstate: false,
                _updating: false,
                _pagescache: new Array(),
                _pageviews: new Array(),
                _cellscache: new Array(),
                _rowdetailscache: new Array(),
                _rowdetailselementscache: new Array(),
                _requiresupdate: false,
                _hasOpenedMenu: false,
                scrollmode: "physical",
                deferreddatafields: null,
                localization: null,
                rtl: false,
                menuitemsarray: [],
                events: ["initialized", "rowClick", "rowSelect", "rowUnselect", "groupExpand", "groupCollapse", "sort", "columnClick", "cellClick", "pageChanged", "pageSizeChanged", "bindingComplete", "groupsChanged", "filter", "columnResized", "cellSelect", "cellUnselect", "cellBeginEdit", "cellEndEdit", "cellValueChanged", "rowExpand", "rowCollapse", "rowDoubleClick", "cellDoubleClick", "columnReordered", "pageChanging"]
            };
            b.extend(true, this, d);
            return d
        },
        createInstance: function(i) {
            this.that = this;
            var h = this;
            if(h.haveViewRoleColumn){
	            //计算最多行高
	            h.columnsMaxHeight=0;
	        	var maxLength=0;
	        	
	        	for (var m = 0; m < h.columns.length; m++) {
	        		
	        		if(h.columns[m].text.indexOf("<")>-1){
	        			continue;
	        		}
	        		
	        		if(h.columns[m].text.length>maxLength){
	        			maxLength=h.columns[m].text.length;
	        		}
	        	}
	        	//FIXME 计算列头的最高尺寸，只适用于角色列
	        	h.columnsMaxHeight+=maxLength*18;
	        	h.columnsheight=h.columnsMaxHeight;
            }
            
            
            h.pagesize = parseInt(h.pagesize);
            h.toolbarheight = parseInt(h.toolbarheight);
            h.columnsheight = parseInt(h.columnsheight);
            h.filterrowheight = parseInt(h.filterrowheight);
            h.statusbarheight = parseInt(h.statusbarheight);
            h.groupsheaderheight = parseInt(h.groupsheaderheight);
            h.savedArgs = i && i.length > 0 ? i[0] : null;
            var g = "<div class='jqx-clear jqx-border-reset jqx-overflow-hidden jqx-max-size jqx-position-relative'><div tabindex='1' class='jqx-clear jqx-max-size jqx-position-relative jqx-overflow-hidden jqx-background-reset' id='wrapper" + h.element.id + "'><div class='jqx-clear jqx-position-absolute' id='toolbar' style='visibility: hidden;'></div><div class='jqx-clear jqx-position-absolute' id='groupsheader' style='visibility: hidden;'></div><div class='jqx-clear jqx-overflow-hidden jqx-position-absolute jqx-border-reset jqx-background-reset' id='content" + h.element.id + "'></div><div class='jqx-clear jqx-position-absolute' id='verticalScrollBar" + h.element.id + "'></div><div class='jqx-clear jqx-position-absolute' id='horizontalScrollBar" + h.element.id + "'></div><div class='jqx-clear jqx-position-absolute jqx-border-reset' id='bottomRight'></div><div class='jqx-clear jqx-position-absolute' id='addrow'></div><div class='jqx-clear jqx-position-absolute' id='statusbar'></div><div class='jqx-clear jqx-position-absolute' id='pager' style='z-index: 20;'></div></div></div>";
            h.element.innerText = "";
            h.element.innerHTML = "";
            if (b.jqx.utilities.scrollBarSize != 15) {
                h.scrollbarsize = b.jqx.utilities.scrollBarSize
            }
            if (h.source) {
                if (!h.source.dataBind) {
                    if (!b.jqx.dataAdapter) {
                        throw new Error("jqxGrid: Missing reference to jqxdata.js")
                    }
                    h.source = new b.jqx.dataAdapter(h.source)
                }
                var d = h.source._source.datafields;
                if (d && d.length > 0) {
                    h.editmode = h.editmode.toLowerCase();
                    h.selectionmode = h.selectionmode.toLowerCase()
                }
            }
            h.host.attr("role", "grid");
            h.host.attr("align", "left");
            h.element.innerHTML = g;
            h.host.addClass(h.toTP("jqx-grid"));
            h.host.addClass(h.toTP("jqx-reset"));
            h.host.addClass(h.toTP("jqx-rc-all"));
            h.host.addClass(h.toTP("jqx-widget"));
            h.host.addClass(h.toTP("jqx-widget-content"));
            h.wrapper = h.host.find("#wrapper" + h.element.id);
            h.content = h.host.find("#content" + h.element.id);
            h.content.addClass(h.toTP("jqx-reset"));
            var k = h.host.find("#verticalScrollBar" + h.element.id);
            var o = h.host.find("#horizontalScrollBar" + h.element.id);
            h.bottomRight = h.host.find("#bottomRight").addClass(h.toTP("jqx-grid-bottomright")).addClass(h.toTP("jqx-scrollbar-state-normal"));
            if (!k.jqxScrollBar) {
                throw new Error("jqxGrid: Missing reference to jqxscrollbar.js");
                return
            }
            h.editors = new Array();
            h.vScrollBar = k.jqxScrollBar({
                vertical: true,
                rtl: h.rtl,
                touchMode: h.touchmode,
                step: h.verticalscrollbarstep,
                largestep: h.verticalscrollbarlargestep,
                theme: h.theme,
                _triggervaluechanged: false
            });
            h.hScrollBar = o.jqxScrollBar({
                vertical: false,
                rtl: h.rtl,
                touchMode: h.touchmode,
                step: h.horizontalscrollbarstep,
                largestep: h.horizontalscrollbarlargestep,
                theme: h.theme,
                _triggervaluechanged: false
            });
            h.addnewrow = h.host.find("#addrow");
            h.addnewrow[0].id = "addrow" + h.element.id;
            h.addnewrow.addClass(h.toTP("jqx-widget-header"));
            h.pager = h.host.find("#pager");
            h.pager[0].id = "pager" + h.element.id;
            h.toolbar = h.host.find("#toolbar");
            h.toolbar[0].id = "toolbar" + h.element.id;
            h.toolbar.addClass(h.toTP("jqx-grid-toolbar"));
            h.toolbar.addClass(h.toTP("jqx-widget-header"));
            h.statusbar = h.host.find("#statusbar");
            h.statusbar[0].id = "statusbar" + h.element.id;
            h.statusbar.addClass(h.toTP("jqx-grid-statusbar"));
            h.statusbar.addClass(h.toTP("jqx-widget-header"));
            h.pager.addClass(h.toTP("jqx-grid-pager"));
            h.pager.addClass(h.toTP("jqx-widget-header"));
            h.groupsheader = h.host.find("#groupsheader");
            h.groupsheader.addClass(h.toTP("jqx-grid-groups-header"));
            h.groupsheader.addClass(h.toTP("jqx-widget-header"));
            h.groupsheader[0].id = "groupsheader" + h.element.id;
            h.vScrollBar.css("visibility", "hidden");
            h.hScrollBar.css("visibility", "hidden");
            h.vScrollInstance = b.data(h.vScrollBar[0], "jqxScrollBar").instance;
            h.hScrollInstance = b.data(h.hScrollBar[0], "jqxScrollBar").instance;
            h.gridtable = null;
            h.isNestedGrid = h.host.parent() ? h.host.parent().css("z-index") == 9999 : false;
            h.touchdevice = h.isTouchDevice();
            if (h.localizestrings) {
                h.localizestrings();
                if (h.localization != null) {
                    h.localizestrings(h.localization, false)
                }
            }
            if (h.rowdetailstemplate) {
                if (undefined == h.rowdetailstemplate.rowdetails) {
                    h.rowdetailstemplate.rowdetails = "<div></div>"
                }
                if (undefined == h.rowdetailstemplate.rowdetailsheight) {
                    h.rowdetailstemplate.rowdetailsheight = 200
                }
                if (undefined == h.rowdetailstemplate.rowdetailshidden) {
                    h.rowdetailstemplate.rowdetailshidden = true
                }
            }
            if (h.showfilterrow && !h.filterable) {
                throw new Error('jqxGrid: "showfilterrow" requires setting the "filterable" property to true!');
                h.host.remove();
                return
            }
            if (h.autorowheight && !h.autoheight && !h.pageable) {
                throw new Error('jqxGrid: "autorowheight" requires setting the "autoheight" or "pageable" property to true!');
                h.host.remove();
                return
            }
            if (h.virtualmode && h.rendergridrows == null) {
                throw new Error('jqxGrid: "virtualmode" requires setting the "rendergridrows"!');
                h.host.remove();
                return
            }
            if (h.virtualmode && !h.pageable && h.groupable) {
                throw new Error('jqxGrid: "grouping" in "virtualmode" without paging is not supported!');
                h.host.remove();
                return
            }
            if (h._testmodules()) {
                return
            }
            h._builddataloadelement();
            h._cachedcolumns = h.columns;
            if (h.columns && h.columns.length > 299) {
                h.headerZIndex = h.columns.length + 100
            }
            if (h.rowsheight != 25) {
                h._measureElement("cell")
            }
            if (h.columnsheight != 25 || h.columngroups) {
                h._measureElement("column")
            }
            if (h.source) {
                var d = h.source.datafields;
                if (d == null && h.source._source) {
                    d = h.source._source.datafields
                }
                if (d) {
                    for (var e = 0; e < h.columns.length; e++) {
                        var f = h.columns[e];
                        if(maxLength<f.text.length){
                        	maxLength=f.text.length;
                        }
                        if (f && f.cellsformat && f.cellsformat.length > 2) {
                            for (var n = 0; n < d.length; n++) {
                                if (d[n].name == f.datafield && !d[n].format) {
                                    d[n].format = f.cellsformat;
                                    break
                                }
                            }
                        }
                    }
                }
            }
            h.databind(h.source);
            if (h.showtoolbar) {
                h.toolbar.css("visibility", "inherit")
            }
            if (h.showstatusbar) {
                h.statusbar.css("visibility", "inherit")
            }
            h._arrange();
            if (h.pageable && h._initpager) {
                h._initpager()
            }
            h.tableheight = null;
            var j = h.that;
            var l = function() {
                if (j.content) {
                    j.content[0].scrollTop = 0;
                    j.content[0].scrollLeft = 0
                }
                if (j.gridcontent) {
                    j.gridcontent[0].scrollLeft = 0;
                    j.gridcontent[0].scrollTop = 0
                }
            };
            h.addHandler(h.content, "mousedown",
            function() {
                l()
            });
            h.addHandler(h.content, "scroll",
            function(m) {
                l();
                return false
            });
            if (!h.showfilterrow) {
                if (!h.showstatusbar && !h.showtoolbar) {
                    h.host.addClass("jqx-disableselect")
                }
                h.content.addClass("jqx-disableselect")
            }
            if (h.enablebrowserselection) {
                h.content.removeClass("jqx-disableselect");
                h.host.removeClass("jqx-disableselect")
            }
            h._resizeWindow();
            if (h.disabled) {
                h.host.addClass(h.toThemeProperty("jqx-fill-state-disabled"))
            }
            h.hasTransform = b.jqx.utilities.hasTransform(h.host);
            if (h.scrollmode == "logical") {
                h.vScrollInstance.thumbStep = h.rowsheight;
                h.vScrollInstance.step = h.rowsheight
            }
            if (!b.jqx.isHidden(h.host)) {
                if (h.filterable || h.groupable || h.sortable) {
                    h._initmenu()
                }
            }
        },
        _resizeWindow: function() {
            var e = this.that;
            if ((this.width != null && this.width.toString().indexOf("%") != -1) || (this.height != null && this.height.toString().indexOf("%") != -1)) {
                this._updatesizeonwindowresize = true;
                b.jqx.utilities.resize(this.host,
                function(j) {
                    var i = b(window).width();
                    var g = b(window).height();
                    var h = e.host.width();
                    var k = e.host.height();
                    if (e.autoheight) {
                        e._lastHostWidth = g
                    }
                    if (e._lastHostWidth != h || e._lastHostHeight != k) {
                        if (e.touchdevice && e.editcell && j !== "orientationchange") {
                            return
                        }
                        e._updatesize(e._lastHostWidth != h, e._lastHostHeight != k)
                    }
                    e._lastWidth = i;
                    e._lastHeight = g;
                    e._lastHostWidth = h;
                    e._lastHostHeight = k
                });
                var d = e.host.width();
                var f = e.host.height();
                e._lastHostWidth = d;
                e._lastHostHeight = f
            }
        },
        _builddataloadelement: function() {
            if (this.dataloadelement) {
                this.dataloadelement.remove()
            }
            this.dataloadelement = b('<div style="overflow: hidden; position: absolute;"></div>');
            if (this.showdefaultloadelement) {
                var d = b('<div style="z-index: 99999; margin-left: -66px; left: 50%; top: 50%; margin-top: -24px; position: relative; width: 100px; height: 33px; padding: 5px; font-family: verdana; font-size: 12px; color: #767676; border-color: #898989; border-width: 1px; border-style: solid; background: #f6f6f6; border-collapse: collapse;"><div style="float: left;"><div style="float: left; overflow: hidden; width: 32px; height: 32px;" class="jqx-grid-load"/><span style="margin-top: 10px; float: left; display: block; margin-left: 5px;" >' + this.gridlocalization.loadtext + "</span></div></div>");
                d.addClass(this.toTP("jqx-rc-all"));
                this.dataloadelement.addClass(this.toTP("jqx-rc-all"));
                d.addClass(this.toTP("jqx-fill-state-normal"));
                this.dataloadelement.append(d)
            } else {
                this.dataloadelement.addClass(this.toTP("jqx-grid-load"))
            }
            this.dataloadelement.width(this.width);
            this.dataloadelement.height(this.height);
            this.host.prepend(this.dataloadelement)
        },
        _measureElement: function(e) {
            var d = b("<span style='visibility: hidden; white-space: nowrap;'>measure Text</span>");
            d.addClass(this.toTP("jqx-widget"));
            b(document.body).append(d);
            if (e == "cell") {
                this._cellheight = d.height()
            } else {
                this._columnheight = d.height()
            }
            d.remove()
        },
        _measureMenuElement: function() {
            var e = b("<span style='visibility: hidden; white-space: nowrap;'>measure Text</span>");
            e.addClass(this.toTP("jqx-widget"));
            e.addClass(this.toTP("jqx-menu"));
            e.addClass(this.toTP("jqx-menu-item-top"));
            e.addClass(this.toTP("jqx-fill-state-normal"));
            b(document.body).append(e);
            var d = e.outerHeight();
            e.remove();
            return d
        },
        _measureElementWidth: function(f) {
            var e = b("<span style='visibility: hidden; white-space: nowrap;'>" + f + "</span>");
            e.addClass(this.toTP("jqx-widget"));
            e.addClass(this.toTP("jqx-grid"));
            e.addClass(this.toTP("jqx-grid-column-header"));
            e.addClass(this.toTP("jqx-widget-header"));
            b(document.body).append(e);
            var d = e.outerWidth() + 20;
            e.remove();
            return d
        },
        _getBodyOffset: function() {
            var e = 0;
            var d = 0;
            if (b("body").css("border-top-width") != "0px") {
                e = parseInt(b("body").css("border-top-width"));
                if (isNaN(e)) {
                    e = 0
                }
            }
            if (b("body").css("border-left-width") != "0px") {
                d = parseInt(b("body").css("border-left-width"));
                if (isNaN(d)) {
                    d = 0
                }
            }
            return {
                left: d,
                top: e
            }
        },
        _testmodules: function() {
            var k = "";
            var h = this.that;
            var d = function() {
                if (k.length != "") {
                    k += ","
                }
            };
            if (this.columnsmenu && !this.host.jqxMenu && (this.sortable || this.groupable || this.filterable)) {
                d();
                k += " jqxmenu.js"
            }
            if (!this.host.jqxScrollBar) {
                d();
                k += " jqxscrollbar.js"
            }
            if (!this.host.jqxButton) {
                d();
                k += " jqxbuttons.js"
            }
            if (!b.jqx.dataAdapter) {
                d();
                k += " jqxdata.js"
            }
            if (this.pageable && !this.gotopage) {
                d();
                k += "jqxgrid.pager.js"
            }
            if (this.filterable && !this.applyfilters) {
                d();
                k += " jqxgrid.filter.js"
            }
            if (this.groupable && !this._initgroupsheader) {
                d();
                k += " jqxgrid.grouping.js"
            }
            if (this.columnsresize && !this.autoresizecolumns) {
                d();
                k += " jqxgrid.columnsresize.js"
            }
            if (this.columnsreorder && !this.setcolumnindex) {
                d();
                k += " jqxgrid.columnsreorder.js"
            }
            if (this.sortable && !this.sortby) {
                d();
                k += " jqxgrid.sort.js"
            }
            if (this.editable && !this.begincelledit) {
                d();
                k += " jqxgrid.edit.js"
            }
            if (this.showaggregates && !this.getcolumnaggregateddata) {
                d();
                k += " jqxgrid.aggregates.js"
            }
            if (this.keyboardnavigation && !this.selectrow) {
                d();
                k += " jqxgrid.selection.js"
            }
            if (k != "" || this.editable || this.filterable || this.pageable) {
                var f = [];
                var j = function(i) {
                    switch (i) {
                    case "checkbox":
                        if (!h.host.jqxCheckBox && !f.checkbox) {
                            f.checkbox = true;
                            d();
                            k += " jqxcheckbox.js"
                        }
                        break;
                    case "numberinput":
                        if (!h.host.jqxNumberInput && !f.numberinput) {
                            f.numberinput = true;
                            d();
                            k += " jqxnumberinput.js"
                        }
                        break;
                    case "datetimeinput":
                        if (!h.host.jqxDateTimeInput && !f.datetimeinput) {
                            d();
                            f.datetimeinput = true;
                            k += " jqxdatetimeinput.js(requires: jqxcalendar.js)"
                        } else {
                            if (!h.host.jqxCalendar && !f.calendar) {
                                d();
                                k += " jqxcalendar.js"
                            }
                        }
                        break;
                    case "combobox":
                        if (!h.host.jqxComboBox && !f.combobox) {
                            d();
                            f.combobox = true;
                            k += " jqxcombobox.js(requires: jqxlistbox.js)"
                        } else {
                            if (!h.host.jqxListBox && !f.listbox) {
                                d();
                                f.listbox = true;
                                k += " jqxlistbox.js"
                            }
                        }
                        break;
                    case "dropdownlist":
                        if (!h.host.jqxDropDownList && !f.dropdownlist) {
                            d();
                            f.dropdownlist = true;
                            k += " jqxdropdownlist.js(requires: jqxlistbox.js)"
                        } else {
                            if (!h.host.jqxListBox && !f.listbox) {
                                d();
                                f.listbox = true;
                                k += " jqxlistbox.js"
                            }
                        }
                        break
                    }
                };
                if (this.filterable || this.pageable) {
                    j("dropdownlist")
                }
                for (var e = 0; e < this.columns.length; e++) {
                    if (this.columns[e] == undefined) {
                        continue
                    }
                    var g = this.columns[e].columntype;
                    j(g);
                    if (this.filterable && this.showfilterrow) {
                        var g = this.columns[e].filtertype;
                        if (g == "checkedlist" || g == "bool") {
                            j("checkbox")
                        }
                        if (g == "date") {
                            j("datetimeinput")
                        }
                    }
                }
                if (k != "") {
                    throw new Error("jqxGrid: Missing references to the following module(s): " + k);
                    this.host.remove();
                    return true
                }
            }
            return false
        },
        focus: function() {
            try {
                this.wrapper.focus();
                var e = this.that;
                setTimeout(function() {
                    e.wrapper.focus()
                },
                25);
                this.focused = true
            } catch(d) {}
        },
        hiddenParent: function() {
            return b.jqx.isHidden(this.host)
        },
        resize: function(e, d) {
            this.width = e;
            this.height = d;
            this._updatesize(true, true)
        },
        _updatesize: function(i, h) {
            if (this._loading) {
                return
            }
            var f = this.that;
            f._newmax = null;
            var g = f.host.width();
            var e = f.host.height();
            if (!f._oldWidth) {
                f._oldWidth = g
            }
            if (!f._oldHeight) {
                f._oldHeight = e
            }
            if (f._resizeTimer) {
                clearTimeout(f._resizeTimer)
            }
            var d = 5;
            f._resizeTimer = setTimeout(function() {
                f.resizingGrid = true;
                if (b.jqx.isHidden(f.host)) {
                    return
                }
                if (f.editcell) {
                    f.endcelledit(f.editcell.row, f.editcell.column, true, true);
                    f._oldselectedcell = null
                }
                if (j != f._oldHeight || h == true) {
                    var k = f.groupable && f.groups.length > 0;
                    var p = f.vScrollBar.css("visibility");
                    if (!f.autoheight) {
                        if (f.virtualmode) {
                            f._pageviews = new Array()
                        }
                        if (!k && !f.rowdetails && !f.pageable) {
                            f._arrange();
                            f.virtualsizeinfo = f._calculatevirtualheight();
                            var j = Math.round(f.host.height()) + 2 * f.rowsheight;
                            if (parseInt(j) >= parseInt(f._oldHeight)) {
                                f.prerenderrequired = true
                            }
                            f._renderrows(f.virtualsizeinfo);
                            if (f.rtl) {
                                f._updatecolumnwidths();
                                if (f.table) {
                                    f.table.width(f.columnsheader.width())
                                }
                                f._updatecellwidths()
                            }
                        } else {
                            f._arrange();
                            f.prerenderrequired = true;
                            var j = Math.round(f.host.height()) + 2 * f.rowsheight;
                            realheight = f._gettableheight();
                            var r = Math.round(j / f.rowsheight);
                            var m = Math.max(f.dataview.totalrows, f.dataview.totalrecords);
                            if (f.pageable) {
                                m = f.pagesize;
                                if (f.pagesize > Math.max(f.dataview.totalrows, f.dataview.totalrecords) && f.autoheight) {
                                    m = Math.max(f.dataview.totalrows, f.dataview.totalrecords)
                                } else {
                                    if (!f.autoheight) {
                                        if (f.dataview.totalrows < f.pagesize) {
                                            m = Math.max(f.dataview.totalrows, f.dataview.totalrecords)
                                        }
                                    }
                                }
                            }
                            var o = m * f.rowsheight;
                            var l = f._getpagesize();
                            if (!f.pageable && f.autoheight) {
                                r = m
                            }
                            if (f.virtualsizeinfo) {
                                f.virtualsizeinfo.visiblerecords = r
                            }
                            f.rendergridcontent(true, false);
                            f._renderrows(f.virtualsizeinfo)
                        }
                        if (p != f.vScrollBar.css("visibility")) {
                            f.vScrollInstance.setPosition(0);
                            f._arrange();
                            f._updatecolumnwidths();
                            if (f.table) {
                                f.table.width(f.columnsheader.width())
                            }
                            f._updatecellwidths()
                        }
                    }
                }
                if (g != f._oldWidth || i == true) {
                    var q = false;
                    if (f.editcell && f.editcell.editor) {
                        switch (f.editcell.columntype) {
                        case "dropdownlist":
                            q = f.editcell.editor.jqxDropDownList("isOpened") || (f.editcell.editor.jqxDropDownList("isanimating") && !f.editcell.editor.jqxDropDownList("ishiding"));
                            if (q) {
                                f.editcell.editor.jqxDropDownList({
                                    openDelay: 0
                                });
                                f.editcell.editor.jqxDropDownList("open");
                                f.editcell.editor.jqxDropDownList({
                                    openDelay: 250
                                });
                                return
                            }
                            break;
                        case "combobox":
                            q = f.editcell.editor.jqxComboBox("isOpened") || (f.editcell.editor.jqxComboBox("isanimating") && !f.editcell.editor.jqxComboBox("ishiding"));
                            if (q) {
                                f.editcell.editor.jqxComboBox({
                                    openDelay: 0
                                });
                                f.editcell.editor.jqxComboBox("open");
                                f.editcell.editor.jqxComboBox({
                                    openDelay: 250
                                });
                                return
                            }
                            break;
                        case "datetimeinput":
                            if (q) {
                                q = f.editcell.editor.jqxDateTimeInput("isOpened") || (f.editcell.editor.jqxDateTimeInput("isanimating") && !f.editcell.editor.jqxDateTimeInput("ishiding"));
                                f.editcell.editor.jqxDateTimeInput({
                                    openDelay: 0
                                });
                                f.editcell.editor.jqxDateTimeInput("open");
                                f.editcell.editor.jqxDateTimeInput({
                                    openDelay: 250
                                });
                                return
                            }
                            break
                        }
                    }
                    var n = f.hScrollBar.css("visibility");
                    f._arrange();
                    f._updatecolumnwidths();
                    if (f.table) {
                        f.table.width(f.columnsheader.width())
                    }
                    f._updatecellwidths();
                    if (! (i == false && f._oldWidth > g)) {
                        if (!h || f.dataview.rows.length == 0) {
                            f._renderrows(f.virtualsizeinfo)
                        }
                    }
                    if (n != f.hScrollBar.css("visibility")) {
                        f.hScrollInstance.setPosition(0)
                    }
                }
                f._oldWidth = g;
                f._oldHeight = j;
                f.resizingGrid = false
            },
            d)
        },
        getTouches: function(d) {
            return b.jqx.mobile.getTouches(d)
        },
        _updateTouchScrolling: function() {
            var e = this.that;
            if (e.isTouchDevice()) {
                e.scrollmode = "logical";
                e.vScrollInstance.thumbStep = e.rowsheight;
                var g = b.jqx.mobile.getTouchEventName("touchstart");
                var f = b.jqx.mobile.getTouchEventName("touchend");
                var d = b.jqx.mobile.getTouchEventName("touchmove");
                e.enablehover = false;
                if (e.gridcontent) {
                    e.removeHandler(e.gridcontent, g + ".touchScroll");
                    e.removeHandler(e.gridcontent, d + ".touchScroll");
                    e.removeHandler(e.gridcontent, f + ".touchScroll");
                    e.removeHandler(e.gridcontent, "touchcancel.touchScroll");
                    b.jqx.mobile.touchScroll(e.gridcontent[0], e.vScrollInstance.max,
                    function(j, i) {
                        if (e.vScrollBar.css("visibility") == "visible") {
                            var h = e.vScrollInstance.value;
                            e.vScrollInstance.setPosition(h + i)
                        }
                        if (e.hScrollBar.css("visibility") == "visible") {
                            var h = e.hScrollInstance.value;
                            e.hScrollInstance.setPosition(h + j)
                        }
                        e.vScrollInstance.thumbCapture = true;
                        e._lastScroll = new Date()
                    },
                    this.element.id, this.hScrollBar, this.vScrollBar);
                    if (e._overlayElement) {
                        e.removeHandler(e._overlayElement, g + ".touchScroll");
                        e.removeHandler(e._overlayElement, d + ".touchScroll");
                        e.removeHandler(e._overlayElement, f + ".touchScroll");
                        e.removeHandler(e._overlayElement, "touchcancel.touchScroll");
                        b.jqx.mobile.touchScroll(e._overlayElement[0], e.vScrollInstance.max,
                        function(j, i) {
                            if (e.vScrollBar.css("visibility") == "visible") {
                                var h = e.vScrollInstance.value;
                                e.vScrollInstance.setPosition(h + i)
                            }
                            if (e.hScrollBar.css("visibility") == "visible") {
                                var h = e.hScrollInstance.value;
                                e.hScrollInstance.setPosition(h + j)
                            }
                            e.vScrollInstance.thumbCapture = true;
                            e._lastScroll = new Date()
                        },
                        this.element.id, this.hScrollBar, this.vScrollBar);
                        this.addHandler(this.host, g,
                        function() {
                            if (!e.editcell) {
                                e._overlayElement.css("visibility", "visible")
                            } else {
                                e._overlayElement.css("visibility", "hidden")
                            }
                        });
                        this.addHandler(this.host, f,
                        function() {
                            if (!e.editcell) {
                                e._overlayElement.css("visibility", "visible")
                            } else {
                                e._overlayElement.css("visibility", "hidden")
                            }
                        })
                    }
                }
            }
        },
        isTouchDevice: function() {
            if (this.touchDevice != undefined) {
                return this.touchDevice
            }
            var d = b.jqx.mobile.isTouchDevice();
            this.touchDevice = d;
            if (this.touchmode == true) {
                if (b.jqx.browser.msie && b.jqx.browser.version < 9) {
                    this.enablehover = false;
                    return false
                }
                d = true;
                b.jqx.mobile.setMobileSimulator(this.element);
                this.touchDevice = d
            } else {
                if (this.touchmode == false) {
                    d = false
                }
            }
            if (d && this.touchModeStyle != false) {
                this.touchDevice = true;
                this.host.addClass(this.toThemeProperty("jqx-touch"));
                this.host.find("jqx-widget-content").addClass(this.toThemeProperty("jqx-touch"));
                this.host.find("jqx-widget-header").addClass(this.toThemeProperty("jqx-touch"));
                this.scrollbarsize = this.touchscrollbarsize
            }
            return d
        },
        toTP: function(d) {
            return this.toThemeProperty(d)
        },
        localizestrings: function(d, e) {
            this._cellscache = new Array();
            if (b.jqx.dataFormat) {
                b.jqx.dataFormat.cleardatescache()
            }
            if (this._loading) {
                throw new Error("jqxGrid: " + this.loadingerrormessage);
                return false
            }
            if (d != null) {
                for (var f in d) {
                    if (f.toLowerCase() !== f) {
                        d[f.toLowerCase()] = d[f]
                    }
                }
                if (d.pagertotalpagestring) {
                    this.gridlocalization.pagertotalpagestring = d.pagertotalpagestring
                }
                if (d.pagergotopagestring) {
                    this.gridlocalization.pagergotopagestring = d.pagergotopagestring
                }
                if (d.pagershowrowsstring) {
                    this.gridlocalization.pagershowrowsstring = d.pagershowrowsstring
                }
                if (d.pagerrangestring) {
                    this.gridlocalization.pagerrangestring = d.pagerrangestring
                }
                if (d.pagercurrnumstring) {
                    this.gridlocalization.pagercurrnumstring = d.pagercurrnumstring
                }
                if (d.pagernextbuttonstring) {
                    this.gridlocalization.pagernextbuttonstring = d.pagernextbuttonstring
                }
                if (d.pagerpreviousbuttonstring) {
                    this.gridlocalization.pagerpreviousbuttonstring = d.pagerpreviousbuttonstring
                }
                if (d.pagerfirstbuttonstring) {
                    this.gridlocalization.pagerfirstbuttonstring = d.pagerfirstbuttonstring
                }
                if (d.pagerlastbuttonstring) {
                    this.gridlocalization.pagerlastbuttonstring = d.pagerlastbuttonstring
                }
                if (d.groupsheaderstring) {
                    this.gridlocalization.groupsheaderstring = d.groupsheaderstring
                }
                if (d.sortascendingstring) {
                    this.gridlocalization.sortascendingstring = d.sortascendingstring
                }
                if (d.sortdescendingstring) {
                    this.gridlocalization.sortdescendingstring = d.sortdescendingstring
                }
                if (d.sortremovestring) {
                    this.gridlocalization.sortremovestring = d.sortremovestring
                }
                if (d.groupbystring) {
                    this.gridlocalization.groupbystring = d.groupbystring
                }
                if (d.groupremovestring) {
                    this.gridlocalization.groupremovestring = d.groupremovestring
                }
                if (d.firstDay) {
                    this.gridlocalization.firstDay = d.firstDay
                }
                if (d.days) {
                    this.gridlocalization.days = d.days
                }
                if (d.months) {
                    this.gridlocalization.months = d.months
                }
                if (d.AM) {
                    this.gridlocalization.AM = d.AM
                }
                if (d.PM) {
                    this.gridlocalization.PM = d.PM
                }
                if (d.patterns) {
                    this.gridlocalization.patterns = d.patterns
                }
                if (d.percentsymbol) {
                    this.gridlocalization.percentsymbol = d.percentsymbol
                }
                if (d.currencysymbol) {
                    this.gridlocalization.currencysymbol = d.currencysymbol
                }
                if (d.currencysymbolposition) {
                    this.gridlocalization.currencysymbolposition = d.currencysymbolposition
                }
                if (d.decimalseparator != undefined) {
                    this.gridlocalization.decimalseparator = d.decimalseparator
                }
                if (d.thousandsseparator != undefined) {
                    this.gridlocalization.thousandsseparator = d.thousandsseparator
                }
                if (d.filterclearstring) {
                    this.gridlocalization.filterclearstring = d.filterclearstring
                }
                if (d.filterstring) {
                    this.gridlocalization.filterstring = d.filterstring
                }
                if (d.filtershowrowstring) {
                    this.gridlocalization.filtershowrowstring = d.filtershowrowstring
                }
                if (d.filtershowrowdatestring) {
                    this.gridlocalization.filtershowrowdatestring = d.filtershowrowdatestring
                }
                if (d.filterselectallstring) {
                    this.gridlocalization.filterselectallstring = d.filterselectallstring
                }
                if (d.filterchoosestring) {
                    this.gridlocalization.filterchoosestring = d.filterchoosestring
                }
                if (d.filterorconditionstring) {
                    this.gridlocalization.filterorconditionstring = d.filterorconditionstring
                }
                if (d.filterandconditionstring) {
                    this.gridlocalization.filterandconditionstring = d.filterandconditionstring
                }
                if (d.filterstringcomparisonoperators) {
                    this.gridlocalization.filterstringcomparisonoperators = d.filterstringcomparisonoperators
                }
                if (d.filternumericcomparisonoperators) {
                    this.gridlocalization.filternumericcomparisonoperators = d.filternumericcomparisonoperators
                }
                if (d.filterdatecomparisonoperators) {
                    this.gridlocalization.filterdatecomparisonoperators = d.filterdatecomparisonoperators
                }
                if (d.filterbooleancomparisonoperators) {
                    this.gridlocalization.filterbooleancomparisonoperators = d.filterbooleancomparisonoperators
                }
                if (d.emptydatastring) {
                    this.gridlocalization.emptydatastring = d.emptydatastring
                }
                if (d.filterselectstring) {
                    this.gridlocalization.filterselectstring = d.filterselectstring
                }
                if (d.todaystring) {
                    this.gridlocalization.todaystring = d.todaystring
                }
                if (d.clearstring) {
                    this.gridlocalization.clearstring = d.clearstring
                }
                if (d.validationstring) {
                    this.gridlocalization.validationstring = d.validationstring
                }
                if (d.loadtext) {
                    this.gridlocalization.loadtext = d.loadtext
                }
                if (d.addrowstring) {
                    this.gridlocalization.addrowstring = d.addrowstring
                }
                if (d.udpaterowstring) {
                    this.gridlocalization.udpaterowstring = d.udpaterowstring
                }
                if (d.deleterowstring) {
                    this.gridlocalization.deleterowstring = d.deleterowstring
                }
                if (d.resetrowstring) {
                    this.gridlocalization.resetrowstring = d.resetrowstring
                }
                if (d.everpresentrowplaceholder) {
                    this.gridlocalization.everpresentrowplaceholder = d.everpresentrowplaceholder
                }
                if (e !== false) {
                    if (this._initpager) {
                        this._initpager()
                    }
                    if (this._initgroupsheader) {
                        this._initgroupsheader()
                    }
                    if (this._initmenu) {
                        this._initmenu()
                    }
                    this._builddataloadelement();
                    b(this.dataloadelement).css("visibility", "hidden");
                    b(this.dataloadelement).css("display", "none");
                    if (this.filterable && this.showfilterrow) {
                        if (this._updatefilterrow) {
                            for (var f in this._filterrowcache) {
                                b(this._filterrowcache[f]).remove()
                            }
                            this._filterrowcache = [];
                            this._updatefilterrow()
                        }
                    }
                    if (this.showaggregates && this.refresheaggregates) {
                        this.refresheaggregates()
                    }
                    this._renderrows(this.virtualsizeinfo)
                }
            } else {
                this.gridlocalization = {
                    "/": "/",
                    ":": ":",
                    firstDay: 0,
                    days: {
                        names: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                        namesAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                        namesShort: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]
                    },
                    months: {
                        names: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""],
                        namesAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""]
                    },
                    AM: ["AM", "am", "AM"],
                    PM: ["PM", "pm", "PM"],
                    eras: [{
                        name: "A.D.",
                        start: null,
                        offset: 0
                    }],
                    twoDigitYearMax: 2029,
                    patterns: {
                        d: "M/d/yyyy",
                        D: "dddd, MMMM dd, yyyy",
                        t: "h:mm tt",
                        T: "h:mm:ss tt",
                        f: "dddd, MMMM dd, yyyy h:mm tt",
                        F: "dddd, MMMM dd, yyyy h:mm:ss tt",
                        M: "MMMM dd",
                        Y: "yyyy MMMM",
                        S: "yyyy\u0027-\u0027MM\u0027-\u0027dd\u0027T\u0027HH\u0027:\u0027mm\u0027:\u0027ss",
                        ISO: "yyyy-MM-dd hh:mm:ss",
                        ISO2: "yyyy-MM-dd HH:mm:ss",
                        d1: "dd.MM.yyyy",
                        d2: "dd-MM-yyyy",
                        d3: "dd-MMMM-yyyy",
                        d4: "dd-MM-yy",
                        d5: "H:mm",
                        d6: "HH:mm",
                        d7: "HH:mm tt",
                        d8: "dd/MMMM/yyyy",
                        d9: "MMMM-dd",
                        d10: "MM-dd",
                        d11: "MM-dd-yyyy"
                    },
                    percentsymbol: "%",
                    currencysymbol: "$",
                    currencysymbolposition: "before",
                    decimalseparator: ".",
                    thousandsseparator: ",",
                    pagertotalpagestring: "Total page:",
                    pagergotopagestring: "Go to page:",
                    pagershowrowsstring: "Show rows:",
                    pagerrangestring: " of ",
                    pagercurrnumstring: " Current num:",
                    pagerpreviousbuttonstring: "previous",
                    pagernextbuttonstring: "next",
                    pagerfirstbuttonstring: "first",
                    pagerlastbuttonstring: "last",
                    groupsheaderstring: "Drag a column and drop it here to group by that column",
                    sortascendingstring: "Sort Ascending",
                    sortdescendingstring: "Sort Descending",
                    sortremovestring: "Remove Sort",
                    groupbystring: "Group By this column",
                    groupremovestring: "Remove from groups",
                    filterclearstring: "Clear",
                    filterstring: "Filter",
                    filtershowrowstring: "Show rows where:",
                    filtershowrowdatestring: "Show rows where date:",
                    filterorconditionstring: "Or",
                    filterandconditionstring: "And",
                    filterselectallstring: "(Select All)",
                    filterchoosestring: "Please Choose:",
                    filterstringcomparisonoperators: ["empty", "not empty", "contains", "contains(match case)", "does not contain", "does not contain(match case)", "starts with", "starts with(match case)", "ends with", "ends with(match case)", "equal", "equal(match case)", "null", "not null"],
                    filternumericcomparisonoperators: ["equal", "not equal", "less than", "less than or equal", "greater than", "greater than or equal", "null", "not null"],
                    filterdatecomparisonoperators: ["equal", "not equal", "less than", "less than or equal", "greater than", "greater than or equal", "null", "not null"],
                    filterbooleancomparisonoperators: ["equal", "not equal"],
                    validationstring: "Entered value is not valid",
                    emptydatastring: "暂无数据",
                    filterselectstring: "Select Filter",
                    loadtext: "Loading...",
                    clearstring: "Clear",
                    todaystring: "Today",
                    addrowstring: "Add",
                    udpaterowstring: "Update",
                    deleterowstring: "Delete",
                    resetrowstring: "Reset",
                    everpresentrowplaceholder: "Enter "
                }
            }
        },
        _getmenudefaultheight: function() {
            var f = this;
            var e = 0;
            if (this.sortable && this._togglesort && this.showsortmenuitems) {
                e = 3
            }
            if (this.groupable && this._initgroupsheader && this.showgroupmenuitems) {
                e += 2
            }
            var d = f._measureMenuElement();
            var g = e * d + 9;
            if (f.filterable && !f.showfilterrow && f.showfiltermenuitems) {
                g += 180;
                if (b.jqx.browser.msie && b.jqx.browser.version < 8) {
                    g += 20
                }
            }
            return g
        },
        _initmenu: function() {
            var r = this.that;
            if (this.host.jqxMenu) {
                if (this.gridmenu) {
                    if (this._hasOpenedMenu) {
                        return
                    }
                    if (this.filterable) {
                        if (this._destroyfilterpanel) {
                            this._destroyfilterpanel()
                        }
                    }
                    this.removeHandler(this.gridmenu, "keydown");
                    this.removeHandler(this.gridmenu, "closed");
                    this.removeHandler(this.gridmenu, "itemclick");
                    this.gridmenu.jqxMenu("destroy");
                    this.gridmenu.removeData();
                    this.gridmenu.remove()
                }
                this.menuitemsarray = new Array();
                this.gridmenu = b('<div id="gridmenu' + this.element.id + '" style="z-index: 9999999999999;"></div>');
                this.host.append(this.gridmenu);
                var w = b("<ul></ul>");
                var i = '<div class="jqx-grid-sortasc-icon"></div>';
                var t = b("<li>" + i + this.gridlocalization.sortascendingstring + "</li>");
                var A = '<div class="jqx-grid-sortdesc-icon"></div>';
                var x = b("<li>" + A + this.gridlocalization.sortdescendingstring + "</li>");
                var n = '<div class="jqx-grid-sortremove-icon"></div>';
                var k = b("<li>" + n + this.gridlocalization.sortremovestring + "</li>");
                var j = '<div class="jqx-grid-groupby-icon"></div>';
                var q = b("<li>" + j + this.gridlocalization.groupbystring + "</li>");
                var f = b("<li>" + j + this.gridlocalization.groupremovestring + "</li>");
                var d = b('<li type="separator"></li>');
                var v = b('<li class="filter" style="height: 175px;" ignoretheme="true"><div class="filter"></div></li>');
                var m = this.gridlocalization.sortascendingstring.length;
                var s = this.gridlocalization.sortascendingstring;
                if (this.gridlocalization.sortdescendingstring.length > m) {
                    m = this.gridlocalization.sortdescendingstring.length;
                    s = this.gridlocalization.sortdescendingstring
                }
                if (this.gridlocalization.sortremovestring.length > m) {
                    m = this.gridlocalization.sortremovestring.length;
                    s = this.gridlocalization.sortremovestring
                }
                if (this.groupable && this._initgroupsheader && this.showgroupmenuitems) {
                    if (this.gridlocalization.groupbystring.length > m) {
                        m = this.gridlocalization.groupbystring.length;
                        s = this.gridlocalization.groupbystring
                    }
                    if (this.gridlocalization.groupremovestring.length > m) {
                        m = this.gridlocalization.groupremovestring.length;
                        s = this.gridlocalization.groupremovestring
                    }
                }
                var y = 200;
                s = b.trim(s).replace(/\&nbsp\;/ig, "").replace(/\&#160\;/ig, "");
                var g = b("<span>" + s + "</span>");
                g.addClass(this.toThemeProperty("jqx-menu-item"));
                this.host.append(g);
                y = g.outerWidth() + 60;
                g.remove();
                var e = 0;
                if (this.sortable && this._togglesort && this.showsortmenuitems) {
                    w.append(t);
                    this.menuitemsarray[0] = t[0];
                    w.append(x);
                    this.menuitemsarray[1] = x[0];
                    w.append(k);
                    this.menuitemsarray[2] = k[0];
                    e = 3
                }
                if (this.groupable && this._initgroupsheader && this.showgroupmenuitems) {
                    w.append(q);
                    this.menuitemsarray[3] = q[0];
                    w.append(f);
                    this.menuitemsarray[4] = f[0];
                    e += 2
                }
                var u = this._measureMenuElement();
                var l = e * u + 9;
                var p = true;
                if (this.filterable && !this.showfilterrow && this.showfiltermenuitems) {
                    if (this._initfilterpanel) {
                        this.menuitemsarray[5] = v[0];
                        this.menuitemsarray[6] = v[0];
                        w.append(d);
                        w.append(v);
                        l += 180;
                        if (b.jqx.browser.msie && b.jqx.browser.version < 8) {
                            l += 20
                        }
                        var o = b(v).find("div:first");
                        this.excelfilterpanel = b("<div></div>");
                        this.filterpanel = o;
                        this.filtermenu = b(v);
                        y += 20;
                        this._initfilterpanel(this, o, "", y);
                        this._initfilterpanel(this, this.excelfilterpanel, "", y, true);
                        p = false;
                        this.removeHandler(b(document), "click.menu" + r.element.id, r._closemenuafterclick, r);
                        this.addHandler(b(document), "click.menu" + r.element.id, r._closemenuafterclick, r)
                    } else {
                        throw new Error("jqxGrid: Missing reference to jqxgrid.filter.js.")
                    }
                }
                this.gridmenu.append(w);
                if (b.jqx.browser.msie && b.jqx.browser.version < 8 && this.filterable) {
                    b("#listBoxfilter1" + this.element.id).css("z-index", 4990);
                    b("#listBoxfilter2" + this.element.id).css("z-index", 4990);
                    b("#listBoxfilter3" + this.element.id).css("z-index", 4990);
                    b("#gridmenu" + this.element.id).css("z-index", 5000);
                    this.addHandler(b("#gridmenu" + this.element.id), "initialized",
                    function() {
                        b("#menuWrappergridmenu" + r.element.id).css("z-index", 4980)
                    })
                }
                if (this.menuitemsarray[0] == undefined) {
                    l = 65
                }
                this.addHandler(b(window), "orientationchange.jqxgrid" + this.element.id,
                function() {
                    r.gridmenu.jqxMenu("close")
                });
                this.addHandler(b(window), "orientationchanged.jqxgrid" + this.element.id,
                function() {
                    r.gridmenu.jqxMenu("close")
                });
                this.removeHandler(this.gridmenu, "keydown");
                this.addHandler(this.gridmenu, "keydown",
                function(F) {
                    if (F.keyCode == 27) {
                        r.gridmenu.jqxMenu("close")
                    } else {
                        if (F.keyCode == 13 && r.filterable) {
                            if (r._buildfilter) {
                                var E = b(b.find("#filter1" + r.element.id)).jqxDropDownList("container").css("display") == "block";
                                var D = b(b.find("#filter2" + r.element.id)).jqxDropDownList("container").css("display") == "block";
                                var B = b(b.find("#filter3" + r.element.id)).jqxDropDownList("container").css("display") == "block";
                                var G = b(b.find("#filterclearbutton" + r.element.id)).hasClass("jqx-fill-state-focus");
                                if (G) {
                                    var C = b.data(document.body, "contextmenu" + r.element.id).column;
                                    r._clearfilter(r, r.element, C);
                                    r.gridmenu.jqxMenu("close")
                                } else {
                                    if (!E && !D && !B) {
                                        var C = b.data(document.body, "contextmenu" + r.element.id).column;
                                        r.gridmenu.jqxMenu("close");
                                        r._buildfilter(r, v, C)
                                    }
                                }
                            }
                        }
                    }
                });
                if (this.popupwidth != "auto") {
                    y = this.popupwidth
                }
                this.gridmenu.jqxMenu({
                    popupZIndex: 999999,
                    width: y,
                    height: l,
                    autoCloseOnClick: p,
                    autoOpenPopup: false,
                    mode: "popup",
                    theme: this.theme,
                    animationShowDuration: 0,
                    animationHideDuration: 0,
                    animationShowDelay: 0
                });
                if (this.filterable) {
                    this.gridmenu.jqxMenu("_setItemProperty", v[0].id, "closeOnClick", false)
                }
                if (this.rtl) {
                    var z = this.that;
                    b.each(w.find("li"),
                    function() {
                        b(this).addClass(z.toTP("jqx-rtl"))
                    });
                    var h = function(B) {
                        var C = B.find("div");
                        C.css("float", "right");
                        C.css("margin-left", "4px");
                        C.css("margin-right", "-4px")
                    };
                    h(k);
                    h(x);
                    h(t);
                    h(q);
                    h(f)
                }
                this._handlemenueevents()
            } else {
                this.columnsmenu = false
            }
        },
        _arrangemenu: function() {
            if (!this.gridmenu) {
                this._initmenu()
            }
            var i = this.gridlocalization.sortascendingstring.length;
            var d = this.gridlocalization.sortascendingstring;
            if (this.gridlocalization.sortdescendingstring.length > i) {
                i = this.gridlocalization.sortdescendingstring.length;
                d = this.gridlocalization.sortdescendingstring
            }
            if (this.gridlocalization.sortremovestring.length > i) {
                i = this.gridlocalization.sortremovestring.length;
                d = this.gridlocalization.sortremovestring
            }
            if (this.groupable && this._initgroupsheader) {
                if (this.gridlocalization.groupbystring.length > i) {
                    i = this.gridlocalization.groupbystring.length;
                    d = this.gridlocalization.groupbystring
                }
                if (this.gridlocalization.groupremovestring.length > i) {
                    i = this.gridlocalization.groupremovestring.length;
                    d = this.gridlocalization.groupremovestring
                }
            }
            var e = 200;
            d = b.trim(d).replace(/\&nbsp\;/ig, "").replace(/\&#160\;/ig, "");
            var f = b("<span>" + d + "</span>");
            f.addClass(this.toThemeProperty("jqx-menu-item"));
            this.host.append(f);
            e = f.outerWidth() + 60;
            f.remove();
            var g = 0;
            if (this.sortable && this._togglesort && this.showsortmenuitems) {
                g = 3
            }
            if (this.groupable && this._initgroupsheader && this.showgroupmenuitems) {
                g += 2
            }
            var h = g * 27 + 3;
            if (this.filterable && this.showfiltermenuitems) {
                if (this._initfilterpanel) {
                    h += 180;
                    e += 20;
                    if (b.jqx.browser.msie && b.jqx.browser.version < 8) {
                        h += 20
                    }
                }
            }
            if (this.menuitemsarray[0] == undefined) {
                h = 65
            }
            if (this.popupwidth != "auto") {
                e = this.popupwidth
            }
            if (this.popupheight != "auto") {
                h = this.popupheight
            }
            this.gridmenu.jqxMenu({
                width: e,
                height: h
            })
        },
        _closemenuafterclick: function(e) {
            var i = e != null ? e.data: this;
            var g = false;
            if (e.target == undefined || (e.target != undefined && e.target.className.indexOf == undefined)) {
                i.gridmenu.jqxMenu("close");
                return
            }
            if (e.target.className.indexOf("filter") != -1 && e.target.className.indexOf("jqx-grid-cell-filter") == -1) {
                return
            }
            if (e.target.className.indexOf("jqx-grid-cell") != -1) {
                i.gridmenu.jqxMenu("close");
                return
            }
            if (i._hasOpenedMenu) {
                if (b(e.target).ischildof(i.gridmenu)) {
                    return
                }
            }
            var d = i.host.coord();
            var f = i.gridmenu.coord();
            var k = e.pageX;
            var j = e.pageY;
            b.each(b(e.target).parents(),
            function() {
                if (this.id != null && this.id.indexOf && this.id.indexOf("filter") != -1) {
                    g = true;
                    return false
                }
                if (this.className.indexOf && this.className.indexOf("filter") != -1 && this.className.indexOf("jqx-grid-cell-filter") == -1) {
                    g = true;
                    return false
                }
                if (this.className.indexOf && this.className.indexOf("jqx-grid-cell") != -1) {
                    i.gridmenu.jqxMenu("close");
                    return false
                }
                if (this.className.indexOf && this.className.indexOf("jqx-grid-column") != -1) {
                    i.gridmenu.jqxMenu("close");
                    return false
                }
            });
            if (g) {
                return
            }
            try {
                if (i.filtermode === "default") {
                    var n = b(b.find("#filter1" + i.element.id)).jqxDropDownList("listBox").vScrollInstance._mouseup;
                    var l = new Date();
                    if (l - n < 100) {
                        return
                    }
                    var m = b(b.find("#filter3" + i.element.id)).jqxDropDownList("listBox").vScrollInstance._mouseup;
                    if (l - m < 100) {
                        return
                    }
                    if ((b(b.find("#filter3" + i.element.id)).jqxDropDownList("container")).css("display") == "block") {
                        return
                    }
                    if ((b(b.find("#filter1" + i.element.id)).jqxDropDownList("container")).css("display") == "block") {
                        return
                    }
                    if ((b(b.find("#filter2" + i.element.id)).jqxDropDownList("container")).css("display") == "block") {
                        return
                    }
                    if (i._hasdatefilter) {
                        if (b(".filtertext1" + i.element.id)[0].nodeName.toLowerCase() == "div") {
                            if (b(".filtertext1" + i.element.id).jqxDateTimeInput("container").css("display") == "block") {
                                return
                            }
                            if (b(".filtertext2" + i.element.id).jqxDateTimeInput("container").css("display") == "block") {
                                return
                            }
                        }
                    }
                } else {
                    var n = b(b.find("#filter1" + i.element.id)).data().jqxListBox.instance.vScrollInstance._mouseup;
                    var l = new Date();
                    if (l - n < 100) {
                        return
                    }
                    var m = b(b.find("#filter1" + i.element.id)).data().jqxListBox.instance.hScrollInstance._mouseup;
                    if (l - m < 100) {
                        return
                    }
                }
            } catch(h) {}
            if (k >= f.left && k <= f.left + i.gridmenu.width()) {
                if (j >= f.top && j <= f.top + i.gridmenu.height()) {
                    return
                }
            }
            i.gridmenu.jqxMenu("close")
        },
        _handlemenueevents: function() {
            var d = this.that;
            this.removeHandler(this.gridmenu, "closed");
            this.addHandler(this.gridmenu, "closed",
            function(e) {
                d._closemenu()
            });
            this.removeHandler(this.gridmenu, "itemclick");
            this.addHandler(this.gridmenu, "itemclick",
            function(h) {
                var g = h.args;
                for (var e = 0; e < d.menuitemsarray.length; e++) {
                    var j = d.menuitemsarray[e];
                    if (g == j) {
                        if (b(g).attr("ignoretheme") != undefined) {
                            return
                        }
                        var k = b.data(document.body, "contextmenu" + d.element.id);
                        var f = k.column;
                        if (d.filterable) {
                            d.gridmenu.jqxMenu("close")
                        }
                        var m = f.displayfield;
                        if (m == null) {
                            m = f.datafield
                        }
                        if (k != null) {
                            switch (e) {
                            case 0:
                                d.sortby(m, "ascending", null);
                                break;
                            case 1:
                                d.sortby(m, "descending", null);
                                break;
                            case 2:
                                d.sortby(m, null, null);
                                break;
                            case 3:
                                d.addgroup(m);
                                break;
                            case 4:
                                d.removegroup(m);
                                break;
                            case 5:
                                var l = b(d.menuitemsarray[6]);
                                b(l).css("display", "block");
                                break;
                            case 7:
                                break
                            }
                        }
                        break
                    }
                }
            })
        },
        getdatainformation: function() {
            var d = this.dataview.totalrecords;
            if (this.summaryrows) {
                d += this.summaryrows.length
            }
            return {
                rowscount: d,
                sortinformation: this.getsortinformation(),
                paginginformation: this.getpaginginformation()
            }
        },
        getSource: function() {
            //var d = this.dataview.totalrecords;
            return this.source;
        },
        getsortinformation: function() {
            return {
                sortcolumn: this.sortcolumn,
                sortdirection: this.sortdirection
            }
        },
        getpaginginformation: function() {
            return {
                pagenum: this.dataview.pagenum,
                pagesize: this.pagesize,
                pagescount: Math.ceil(this.dataview.totalrecords / this.pagesize)
            }
        },
        _updaterowsproperties: function() {
            this._updatehiddenrows();
            this._updaterowheights();
            this._updaterowdetails()
        },
        _updatehiddenrows: function() {
            var e = this.that;
            this.hiddens = new Array();
            var d = this.hiddenboundrows;
            b.each(d,
            function(g) {
                if (this.index != undefined) {
                    var f = this.index;
                    var h = e.getrowvisibleindex(g);
                    e.hiddens[h] = this.hidden
                }
            })
        },
        _updaterowheights: function() {
            var e = this.that;
            this.heights = new Array();
            var d = this.heightboundrows;
            b.each(d,
            function(g) {
                if (this.index != undefined) {
                    var f = this.index;
                    var h = e.getrowvisibleindex(g);
                    e.heights[h] = this.height
                }
            })
        },
        _updaterowdetails: function() {
            var d = this.that;
            this.details = new Array();
            var e = this.detailboundrows;
            b.each(e,
            function(g) {
                if (this.index != undefined) {
                    var f = this.index;
                    var h = d.getrowvisibleindex(g);
                    d.details[h] = this.details
                }
            })
        },
        _getmenuitembyindex: function(d) {
            if (d == undefined) {
                return null
            }
            return this.menuitemsarray[d]
        },
        openmenu: function(e) {
            if (this._openingmenu) {
                return
            }
            this._openingmenu = true;
            this.closemenu();
            var h = this.getcolumn(e);
            if (!h.menu) {
                return false
            }
            if (!this.gridmenu) {
                this._initmenu()
            }
            var d = h.columnsmenu;
            b(h.element).trigger("mouseenter");
            this.menuOwner = h;
            var g = this;
            for (var f = 0; f < g.columns.records.length; f++) {
                if (g.columns.records[f].datafield != e) {
                    b(g.columns.records[f].element).trigger("mouseleave")
                }
            }
            setTimeout(function() {
                if (b(d)[0].style.display == "block") {
                    b(d).trigger("click")
                }
                g._openingmenu = false
            },
            200)
        },
        closemenu: function() {
            this._closemenu()
        },
        _closemenu: function() {
            if (this._hasOpenedMenu) {
                var f = false;
                if (this.columnmenuclosing) {
                    var i = b.data(document.body, "contextmenu" + this.element.id);
                    if (!i) {
                        i = {
                            column: {
                                displayfield: null
                            }
                        }
                    }
                    f = this.columnmenuclosing(this.gridmenu, i.column.displayfield, b(this.gridmenu).height());
                    if (f === false) {
                        return
                    }
                }
                if (this.gridmenu != null) {
                    this.gridmenu.jqxMenu("close")
                }
                var i = b.data(document.body, "contextmenu" + this.element.id);
                var e = 16;
                if (i != null && this.autoshowcolumnsmenubutton) {
                    if (this.enableanimations) {
                        b(i.columnsmenu).animate({
                            "margin-left": 0
                        },
                        "fast",
                        function() {
                            b(i.columnsmenu).css("display", "none")
                        });
                        var h = !this.rtl ? -32 : 0;
                        i.column.iconscontainer.animate({
                            "margin-left": h
                        },
                        "fast")
                    } else {
                        b(i.columnsmenu).css("display", "none");
                        var h = !this.rtl ? -32 : 0;
                        i.column.iconscontainer.css("margin-left", h)
                    }
                    b.data(document.body, "contextmenu" + this.element.id, null)
                }
                this._hasOpenedMenu = false;
                this.menuOwner = null;
                var k = this._getmenuitembyindex(5);
                if (k) {
                    var j = b(k).find("#filter1" + this.element.id);
                    var d = b(k).find("#filter2" + this.element.id);
                    var g = b(k).find("#filter3" + this.element.id);
                    if (j.length > 0 && this.filtermode === "default") {
                        j.jqxDropDownList("hideListBox");
                        if (d.length > 0) {
                            d.jqxDropDownList("hideListBox")
                        }
                        if (g.length > 0) {
                            g.jqxDropDownList("hideListBox")
                        }
                    }
                }
            }
        },
        scrolloffset: function(e, d) {
            if (e == null || d == null || e == undefined || d == undefined) {
                return
            }
            this.vScrollBar.jqxScrollBar("setPosition", e);
            this.hScrollBar.jqxScrollBar("setPosition", d)
        },
        scrollleft: function(d) {
            if (d == null || d == undefined) {
                return
            }
            if (this.hScrollBar.css("visibility") != "hidden") {
                this.hScrollBar.jqxScrollBar("setPosition", d)
            }
        },
        scrolltop: function(d) {
            if (d == null || d == undefined) {
                return
            }
            if (this.vScrollBar.css("visibility") != "hidden") {
                this.vScrollBar.jqxScrollBar("setPosition", d)
            }
        },
        beginupdate: function(e, d) {
            this._updating = true;
            this._datachanged = false;
            if (e === true) {
                this._batchupdate = true
            }
            if (d === true) {
                this._stopbindings = true
            }
        },
        endupdate: function() {
            this.resumeupdate()
        },
        resumeupdate: function() {
            this._updating = false;
            if (this._batchupdate) {
                this._batchupdate = false;
                this._datachanged = false;
                if (!this._stopbindings) {
                    this.render()
                } else {
                    this.updatebounddata()
                }
                return
            }
            if (this._stopbindings) {
                this.updatebounddata("data");
                return
            }
            if (this._datachanged == true) {
                var d = this.vScrollInstance.value;
                this.render(true, true, false);
                this._datachanged = false;
                if (d != 0 && d < this.vScrollInstance.max) {
                    this.scrolltop(d)
                }
            } else {
                this.rendergridcontent(true);
                this._renderrows(this.virtualsizeinfo)
            }
            if (this.showaggregates && this.renderaggregates) {
                this.renderaggregates()
            }
            this._updatecolumnwidths();
            this._updatecellwidths();
            this._renderrows(this.virtualsizeinfo)
        },
        updating: function() {
            return this._updating
        },
        showloadelement: function() {
            if (this.renderloadelement) {
                this.dataloadelement.html(this.renderloadelement())
            }
            this.dataloadelement.width(this.host.width());
            this.dataloadelement.height(this.host.height());
            b(this.dataloadelement).css("visibility", "visible");
            b(this.dataloadelement).css("display", "block")
        },
        hideloadelement: function() {
            b(this.dataloadelement).css("visibility", "hidden");
            b(this.dataloadelement).css("display", "none")
        },
        _updatefocusedfilter: function() {
            var d = this.that;
            if (d.focusedfilter) {
                d.focusedfilter.focus();
                setTimeout(function() {
                    d.focusedfilter.focus();
                    if (d.focusedfilter[0].nodeName.toLowerCase() == "input") {
                        var g = d.focusedfilter.val().length;
                        try {
                            if ("selectionStart" in d.focusedfilter[0]) {
                                d.focusedfilter[0].setSelectionRange(g, g)
                            } else {
                                var e = d.focusedfilter[0].createTextRange();
                                e.collapse(true);
                                e.moveEnd("character", g);
                                e.moveStart("character", g);
                                e.select()
                            }
                        } catch(f) {}
                    }
                },
                50)
            }
        },
        databind: function(g, i) {
            if (this.loadingstate === true) {
                return
            }
            if (this._stopbindings === true) {
                return
            }
            if (this.host.css("display") == "block") {
                if (this.autoshowloadelement) {
                    b(this.dataloadelement).css("visibility", "visible");
                    b(this.dataloadelement).css("display", "block");
                    this.dataloadelement.width(this.host.width());
                    this.dataloadelement.height(this.host.height());
                    this._hideemptyrow()
                } else {
                    b(this.dataloadelement).css("visibility", "hidden");
                    b(this.dataloadelement).css("display", "none")
                }
            }
            if (!this._initgroupsheader && this.groups.length > 0) {
                this.groups = new Array()
            }
            var f = this.that;
            if (g == null) {
                g = {}
            }
            if (!g.recordstartindex) {
                g.recordstartindex = 0
            }
            if (!g.recordendindex) {
                g.recordendindex = 0
            }
            if (g.loadallrecords == undefined || g.loadallrecords == null) {
                g.loadallrecords = true
            }
            if (g.sortcomparer == undefined || g.sortcomparer == null) {
                g.sortcomparer = null
            }
            if (g.filter == undefined || g.filter == null) {
                g.filter = null
            }
            if (g.sort == undefined || g.sort == null) {
                g.sort = null
            }
            if (g.data == undefined || g.data == null) {
                g.data = null
            }
            var d = null;
            if (g != null) {
                d = g._source != undefined ? g._source.url: g.url
            }
            this.dataview = this.dataview || new b.jqx.dataview();
            if (b.jqx.dataview.sort) {
                b.extend(this.dataview, new b.jqx.dataview.sort())
            }
            if (b.jqx.dataview.grouping) {
                b.extend(this.dataview, new b.jqx.dataview.grouping())
            }
            this.dataview.suspendupdate();
            this.dataview.pageable = this.pageable;
            this.dataview.groupable = this.groupable;
            this.dataview.groups = this.groups;
            this.dataview.virtualmode = this.virtualmode;
            this.dataview.grid = this;
            this.dataview._clearcaches();
            if (!this.pageable && this.virtualmode) {
                this.loadondemand = true
            }
            if (!f.initializedcall) {
                if (g._source) {
                    if (this.sortable) {
                        if (g._source.sortcolumn != undefined) {
                            this.sortcolumn = g._source.sortcolumn;
                            this.source.sortcolumn = this.sortcolumn;
                            this.dataview.sortfield = g._source.sortcolumn;
                            g._source.sortcolumn = null
                        }
                        if (g._source.sortdirection != undefined) {
                            this.dataview.sortfielddirection = g._source.sortdirection;
                            var h = g._source.sortdirection;
                            if (h == "a" || h == "asc" || h == "ascending" || h == true) {
                                var e = true
                            } else {
                                var e = false
                            }
                            if (h != null) {
                                this.sortdirection = {
                                    ascending: e,
                                    descending: !e
                                }
                            } else {
                                this.sortdirection = {
                                    ascending: false,
                                    descending: false
                                }
                            }
                        }
                    }
                }
                if (this.pageable) {
                    if (g._source) {
                        if (g._source.pagenum != undefined) {
                            this.dataview.pagenum = g._source.pagenum
                        }
                        if (g._source.pagesize != undefined) {
                            this.pagesize = g._source.pagesize;
                            this.dataview.pagesize = g._source.pagesize
                        } else {
                            this.dataview.pagesize = g._source.pagesize;
                            if (this.dataview.pagesize == undefined) {
                                this.dataview.pagesize = this.pagesize
                            }
                        }
                    }
                }
                if (this.sortable) {
                    if (g.sortcolumn) {
                        this.dataview.sortfield = g.sortcolumn
                    }
                    if (g.sortdirection) {
                        this.dataview.sortfielddirection = g.sortdirection
                    }
                }
                if (this.filterable) {
                    if (this.columns) {
                        b.each(this.columns,
                        function() {
                            if (this.filter) {
                                f.dataview.addfilter(this.datafield, this.filter)
                            }
                        })
                    }
                }
            }
            this._loading = true;
            this.dataview.update = function(l) {
                if (!f.pageable && f.virtualmode) {
                    f.loadondemand = true
                }
                f._loading = false;
                if (f.dataview.isupdating()) {
                    f.dataview.resumeupdate(false)
                }
                if (f.pageable && f.pagerrenderer) {
                    if (f._initpager) {
                        f._initpager()
                    } else {
                        throw new Error("jqxGrid: Missing reference to jqxgrid.pager.js.")
                    }
                }
                if ((f.source && f.source.sortcolumn) && f.sortby && !f.virtualmode) {
                    f.render();
                    if (!f.source._source.sort) {
                        f.sortby(f.source.sortcolumn, f.source.sortdirection, f.source.sortcomparer)
                    }
                    f.source.sortcolumn = null
                } else {
                    var k = f.vScrollInstance.value;
                    var n = f.hScrollInstance.value;
                    var o = f.source ? f.source.datatype: "array";
                    if (o != "local" || o != "array") {
                        var q = f.virtualsizeinfo == null || (f.virtualsizeinfo != null && f.virtualsizeinfo.virtualheight == 0);
                        if (i == "cells") {
                            var m = false;
                            if (f.filterable && f._initfilterpanel && f.dataview.filters.length) {
                                m = true
                            }
                            if (false == l) {
                                if (!f.vScrollInstance.isScrolling() && !f.hScrollInstance.isScrolling()) {
                                    f._cellscache = new Array();
                                    f._pagescache = new Array();
                                    f._renderrows(f.virtualsizeinfo);
                                    if (f.showfilterrow && f.filterable && f.filterrow) {
                                        f._updatelistfilters(true)
                                    }
                                    if (f.showaggregates && f._updateaggregates) {
                                        f._updateaggregates()
                                    }
                                }
                                if (f.sortcolumn) {
                                    f.sortby(f.sortcolumn, f.dataview.sortfielddirection, f.source.sortcomparer)
                                }
                                if (f.autoshowloadelement) {
                                    b(f.dataloadelement).css("visibility", "hidden");
                                    b(f.dataloadelement).css("display", "none")
                                }
                                if (f.virtualmode && !f._loading) {
                                    f.loadondemand = true;
                                    f._renderrows(f.virtualsizeinfo)
                                }
                                return
                            } else {
                                if (m) {
                                    i = "filter"
                                } else {
                                    if (f.sortcolumn != undefined) {
                                        i = "sort"
                                    }
                                }
                            }
                        }
                        if (!f.virtualmode || q || (f.virtualmode && f.pageable)) {
                            if (f.initializedcall == true && i == "pagechanged") {
                                k = 0;
                                if (f.groupable && f.groups.length > 0) {
                                    f._render(true, true, false, false, false);
                                    f._updatecolumnwidths();
                                    f._updatecellwidths();
                                    f._renderrows(f.virtualsizeinfo)
                                } else {
                                    f.rendergridcontent(true);
                                    if (f.pageable && f.updatepagerdetails) {
                                        f.updatepagerdetails();
                                        if (f.autoheight) {
                                            f._updatepageviews();
                                            if (f.autorowheight) {
                                                f._renderrows(this.virtualsizeinfo)
                                            }
                                        } else {
                                            if (f.autorowheight) {
                                                f._updatepageviews();
                                                f._renderrows(this.virtualsizeinfo)
                                            }
                                        }
                                    }
                                }
                                if (f.showaggregates && f._updateaggregates) {
                                    f._updateaggregates()
                                }
                            } else {
                                if (i == "filter") {
                                    if (f.virtualmode) {
                                        f._render(true, true, false, false, false);
                                        f._updatefocusedfilter();
                                        f._updatecolumnwidths();
                                        f._updatecellwidths();
                                        f._renderrows(f.virtualsizeinfo)
                                    } else {
                                        f._render(true, true, false, false, false)
                                    }
                                } else {
                                    if (i == "sort") {
                                        if (f.virtualmode) {
                                            f.rendergridcontent(true);
                                            if (f.showaggregates && f._updateaggregates) {
                                                f._updateaggregates()
                                            }
                                        } else {
                                            f._render(true, true, false, false, false);
                                            if (f.sortcolumn && !f.source.sort) {
                                                f.sortby(f.sortcolumn, f.dataview.sortfielddirection, f.source.sortcomparer)
                                            }
                                        }
                                        if (f.source.sort) {
                                            f._updatefocusedfilter()
                                        }
                                    } else {
                                        if (i == "data") {
                                            f._render(true, true, false, false, false)
                                        } else {
                                            if (i == "state") {
                                                f._render(true, true, false, f.menuitemsarray && f.menuitemsarray.length > 0 && !f.virtualmode)
                                            } else {
                                                f._render(true, true, true, f.menuitemsarray && f.menuitemsarray.length > 0 && !f.virtualmode)
                                            }
                                        }
                                    }
                                }
                            }
                        } else {
                            if (f.virtualmode && l == true && !f.pageable) {
                                f._render(true, true, false, false, false);
                                f._updatefocusedfilter();
                                f._updatecolumnwidths();
                                f._updatecellwidths();
                                f._renderrows(f.virtualsizeinfo)
                            } else {
                                if (f.virtualmode && !f.pageable && l == false && i != undefined) {
                                    f.rendergridcontent(true);
                                    if (f.showaggregates && f._updateaggregates) {
                                        f._updateaggregates()
                                    }
                                } else {
                                    if (f.virtualmode && f.dataview.totalrecords == 0 && f.dataview.filters.length > 0) {
                                        f._render(true, true, true, f.menuitemsarray && !f.virtualmode)
                                    } else {
                                        f._pagescache = new Array();
                                        f._renderrows(f.virtualsizeinfo)
                                    }
                                }
                            }
                        }
                        if (f.vScrollInstance.value != k && k <= f.vScrollInstance.max) {
                            f.vScrollInstance.setPosition(k)
                        }
                        if (f.hScrollInstance.value != n && n <= f.hScrollInstance.max) {
                            f.hScrollInstance.setPosition(n)
                        }
                    }
                }
                if (f.autoshowloadelement) {
                    b(f.dataloadelement).css("visibility", "hidden");
                    b(f.dataloadelement).css("display", "none")
                }
                if (f.pageable) {
                    if (f.pagerrightbutton) {
                        f.pagerrightbutton.jqxButton({
                            disabled: false
                        });
                        f.pagerleftbutton.jqxButton({
                            disabled: false
                        });
                        f.pagershowrowscombo.jqxDropDownList({
                            disabled: false
                        })
                    }
                    if (f.pagerfirstbutton) {
                        f.pagerfirstbutton.jqxButton({
                            disabled: false
                        });
                        f.pagerlastbutton.jqxButton({
                            disabled: false
                        })
                    }
                }
                f._raiseEvent(11);
                if (!f.initializedcall) {
                    var p = function() {
                        f._raiseEvent(0);
                        f.initializedcall = true;
                        f.isInitialized = true;
                        if (f.ready) {
                            f.ready()
                        }
                        if (f.renderstatusbar) {
                            f.renderstatusbar(f.statusbar)
                        }
                        if (f.rendertoolbar) {
                            f.rendertoolbar(f.toolbar)
                        }
                        if (f.autoloadstate) {
                            if (f.loadstate) {
                                f.loadstate(null, true)
                            }
                        }
                    };
                    if (!b.jqx.isHidden(f.host)) {
                        p()
                    } else {
                        if (f.readyInterval) {
                            clearInterval(f.readyInterval)
                        }
                        f.readyInterval = setInterval(function() {
                            if (!b.jqx.isHidden(f.host)) {
                                if (f.__isRendered) {
                                    clearInterval(f.readyInterval);
                                    f.readyInterval = null;
                                    p();
                                    f._initmenu()
                                }
                            }
                        },
                        200)
                    }
                    if ((f.width != null && f.width.toString().indexOf("%") != -1) || (f.height != null && f.height.toString().indexOf("%") != -1)) {}
                    if (f.host.css("visibility") == "hidden") {
                        var j = b.jqx.browser.msie && b.jqx.browser.version < 8;
                        if (f.vScrollBar.css("visibility") == "visible") {
                            f.vScrollBar.css("visibility", "inherit")
                        }
                        if (!f.autowidth) {
                            if (f.hScrollBar.css("visibility") == "visible") {
                                f.hScrollBar.css("visibility", "inherit")
                            }
                        }
                        f._intervalTimer = setInterval(function() {
                            if (f.host.css("visibility") == "visible") {
                                f._updatesize(true);
                                clearInterval(f._intervalTimer)
                            }
                        },
                        100)
                    }
                } else {
                    f._updateTouchScrolling()
                }
            };
            this.dataview.databind(g);
            if (this.dataview.isupdating()) {
                if (d != undefined) {
                    this.dataview.suspend = false
                } else {
                    this.dataview.resumeupdate(false)
                }
            }
            this._initializeRows()
        },
        scrollto: function(e, d) {
            if (undefined != e) {
                this.hScrollInstance.setPosition(e)
            }
            if (undefined != d) {
                this.vScrollInstance.setPosition(d)
            }
        },
        scrollposition: function() {
            return {
                top: this.vScrollInstance.value,
                left: this.hScrollInstance.value
            }
        },
        ensurerowvisible: function(h) {
            if (this.autoheight && !this.pageable) {
                return true
            }
            var e = this._getpagesize();
            var g = Math.floor(h / e);
            if (!this._pageviews[g] && !this.pageable) {
                this._updatepageviews()
            }
            var n = false;
            if (this.pageable && this.gotopage && !this.virtualmode) {
                var g = Math.floor(h / e);
                if (this.dataview.pagenum != g) {
                    if (this.groupable && this.groups.length > 0) {
                        return true
                    }
                    this.gotopage(g);
                    n = true
                }
            }
            var l = this.vScrollInstance.value;
            var m = this._gettableheight() - this.rowsheight;
            var d = e * (h / e - g);
            d = Math.round(d);
            if (this._pageviews[g]) {
                var k = this._pageviews[g].top;
                var j = k + d * this.rowsheight;
                if (this.rowdetails) {
                    for (var f = e * g; f < h; f++) {
                        if (this.details[f]) {
                            if (this.details[f].rowdetailshidden == false) {
                                j += this.details[f].rowdetailsheight
                            }
                        }
                    }
                }
                if (this.scrollmode == "deferred") {
                    if (this.vScrollInstance.max <= j + this.rowsheight) {
                        j = this.vScrollInstance.max
                    }
                }
                if (j < l) {
                    this.scrolltop(j);
                    n = true
                } else {
                    if (j > l + m + 2) {
                        this.scrolltop(j - m);
                        n = true
                    } else {}
                }
            } else {
                if (this.pageable) {
                    var j = d * this.rowsheight;
                    if (this.rowdetails) {
                        for (var f = e * g; f < e * g + d; f++) {
                            if (this.details[f] && this.details[f].rowdetailshidden == false) {
                                j += this.details[f].rowdetailsheight
                            }
                        }
                    }
                    if (j < l || j > l + m) {
                        this.scrollto(0, j);
                        n = true
                    }
                }
            }
            return n
        },
        ensurecellvisible: function(h, d) {
            var n = this.that;
            var i = this.hScrollBar.jqxScrollBar("value");
            var j = n.hScrollInstance.max;
            if (n.rtl) {
                if (this.hScrollBar.css("visibility") != "visible") {
                    j = 0
                }
            }
            var o = this.ensurerowvisible(h);
            var e = 0;
            if (this.columns.records) {
                var m = i;
                if (this.hScrollBar.css("visibility") == "hidden") {
                    return
                }
                var l = this.host.width();
                var k = 0;
                var f = this.vScrollBar.css("visibility") == "visible" ? 20 : 0;
                var g = false;
                b.each(this.columns.records,
                function() {
                    if (this.hidden) {
                        return true
                    }
                    if (this.datafield == d) {
                        var q = 0;
                        var p = !n.rtl ? m: j - i;
                        if (e + this.width > p + l - f) {
                            q = e + this.width - l + f;
                            if (n.rtl) {
                                q = j - q
                            }
                            n.scrollleft(q);
                            g = true
                        } else {
                            if (e <= p) {
                                q = e - this.width;
                                if (n.rtl) {
                                    q = j - q
                                }
                                n.scrollleft(q);
                                g = true
                            }
                        }
                        if (k == 0) {
                            if (n.rtl) {
                                n.scrollleft(j)
                            } else {
                                n.scrollleft(0)
                            }
                            g = true
                        } else {
                            if (k == n.columns.records.length - 1) {
                                if (n.hScrollBar.css("visibility") == "visible") {
                                    if (!n.rtl) {
                                        n.scrollleft(n.hScrollBar.jqxScrollBar("max"))
                                    } else {
                                        n.scrollleft(n.hScrollBar.jqxScrollBar("min"))
                                    }
                                    g = true
                                }
                            }
                        }
                        return false
                    }
                    k++;
                    e += this.width
                });
                if (!g) {
                    n.scrollleft(m)
                }
            }
            return o
        },
        setrowheight: function(e, d) {
            if (this._loading) {
                throw new Error("jqxGrid: " + this.loadingerrormessage);
                return false
            }
            if (e == null || d == null) {
                return false
            }
            this.heightboundrows[e] = {
                index: e,
                height: d
            };
            e = this.getrowvisibleindex(e);
            if (e < 0) {
                return false
            }
            if (this.rows.records[e]) {
                this.rows.records[e].height = d
            } else {
                row = new a(this, null);
                row.height = d;
                this.rows.replace(e, row)
            }
            this.heights[e] = d;
            this.rendergridcontent(true);
            return true
        },
        getrowheight: function(d) {
            if (d == null) {
                return null
            }
            d = this.getrowvisibleindex(d);
            if (d < 0) {
                return false
            }
            if (this.rows.records[d]) {
                return this.rows.records[d].height
            }
        },
        setrowdetails: function(f, h, d, j) {
            if (f == undefined || f == null || f < 0) {
                return
            }
            var e = f + "_";
            if (this._rowdetailscache[e]) {
                var g = this._rowdetailscache[e].element;
                b(g).remove();
                this._rowdetailscache[e] = null
            }
            var i = this.dataview.generatekey();
            this.detailboundrows[f] = {
                index: f,
                details: {
                    rowdetails: h,
                    rowdetailsheight: d,
                    rowdetailshidden: j,
                    key: i
                }
            };
            f = this.getrowvisibleindex(f);
            if (f < 0) {
                return false
            }
            return this._setrowdetails(f, h, d, j, i)
        },
        getcolumn: function(d) {
            var e = null;
            if (this.columns.records) {
                b.each(this.columns.records,
                function() {
                    if (this.datafield == d || this.displayfield == d) {
                        e = this;
                        return false
                    }
                })
            }
            return e
        },
        _getcolumnindex: function(e) {
            var d = -1;
            if (this.columns.records) {
                b.each(this.columns.records,
                function() {
                    d++;
                    if (this.datafield == e) {
                        return false
                    }
                })
            }
            return d
        },
        _getcolumnat: function(d) {
            var e = this.columns.records[d];
            return e
        },
        _getprevvisiblecolumn: function(e) {
            var d = this.that;
            while (e > 0) {
                e--;
                var f = d.getcolumnat(e);
                if (!f) {
                    return null
                }
                if (!f.hidden) {
                    return f
                }
            }
            return null
        },
        _getnextvisiblecolumn: function(e) {
            var d = this.that;
            while (e < this.columns.records.length) {
                e++;
                var f = d.getcolumnat(e);
                if (!f) {
                    return null
                }
                if (!f.hidden) {
                    return f
                }
            }
            return null
        },
        getcolumnat: function(d) {
            if (!isNaN(d)) {
                var e = this.columns.records[d];
                return e
            }
            return null
        },
        _getcolumn: function(d) {
            var e = null;
            b.each(this._columns,
            function() {
                if (this.datafield == d || this.displayfield == d) {
                    e = this;
                    return false
                }
            });
            return e
        },
        _setcolumnproperty: function(e, g, h) {
            if (e == null || g == null || h == null) {
                return null
            }
            g = g.toLowerCase();
            var f = this.getcolumn(e);
            if (f == null) {
                return
            }
            var i = f[g];
            f[g] = h;
            var d = this._getcolumn(e);
            if (d != null) {
                d[g] = h
            }
            this._cellscache = new Array();
            switch (g) {
            case "filteritems":
                if (this.filterable && this.showfilterrow) {
                    this._updatelistfilters(true, true)
                }
                break;
            case "text":
                this.prerenderrequired = true;
                this._rendercolumnheaders();
                this._updatecellwidths();
                if (this._groupsheader()) {
                    if (this._initgroupsheader) {
                        this._initgroupsheader()
                    }
                }
                this._renderrows(this.virtualsizeinfo);
                break;
            case "editable":
            case "resizable":
            case "draggable":
                if (g == "editable") {
                    if (h != i) {
                        if (this.editcell != null && this.endcelledit) {
                            this.endcelledit(this.editcell.row, this.editcell.column, true, true)
                        }
                        if (f.columntype == "checkbox") {
                            this.prerenderrequired = true;
                            this.rendergridcontent(true, false);
                            if (this.updating()) {
                                return false
                            }
                        }
                        if (this.updating()) {
                            return false
                        }
                        this._renderrows(this.virtualsizeinfo)
                    }
                }
                break;
            case "hidden":
            case "hideable":
            case "renderer":
            case "cellsrenderer":
            case "align":
            case "aggregates":
            case "cellsalign":
            case "cellsformat":
            case "pinned":
            case "contenttype":
            case "filterable":
            case "groupable":
            case "cellclass":
            case "cellclassname":
            case "classname":
            case "class":
                this.prerenderrequired = true;
                if (g == "pinned") {
                    this._initializeColumns();
                    this._preparecolumngroups()
                }
                this.rendergridcontent(true);
                if (this.updating()) {
                    return false
                }
                if (g == "hidden") {
                    this._updatecolumnwidths();
                    this._updatecellwidths()
                }
                this._renderrows(this.virtualsizeinfo);
                if (this.showaggregates && this._updateaggregates) {
                    this._updateaggregates()
                }
                break;
            case "width":
            case "minwidth":
            case "maxwidth":
                if (this.updating()) {
                    return false
                }
                f._width = null;
                f._percentagewidth = null;
                this._updatecolumnwidths();
                this._updatecellwidths();
                this._renderrows(this.virtualsizeinfo);
                break
            }
        },
        _getcolumnproperty: function(d, f) {
            if (d == null || f == null) {
                return null
            }
            f = f.toLowerCase();
            var e = this.getcolumn(d);
            return e[f]
        },
        setcolumnproperty: function(d, e, f) {
            this._setcolumnproperty(d, e, f)
        },
        getcolumnproperty: function(d, e) {
            return this._getcolumnproperty(d, e)
        },
        hidecolumn: function(d) {
            this._setcolumnproperty(d, "hidden", true)
        },
        showcolumn: function(d) {
            this._setcolumnproperty(d, "hidden", false)
        },
        iscolumnvisible: function(d) {
            return ! this._getcolumnproperty(d, "hidden")
        },
        pincolumn: function(d) {
            this._setcolumnproperty(d, "pinned", true)
        },
        unpincolumn: function(d) {
            this._setcolumnproperty(d, "pinned", false)
        },
        iscolumnpinned: function(d) {
            return this._getcolumnproperty(d, "pinned")
        },
        _setrowdetails: function(j, d, n, h, e) {
            if (n == 0) {
                n = 100
            }
            if (j == null || n == null) {
                return false
            }
            if (e != null) {
                this.details[j] = {
                    rowdetails: d,
                    rowdetailsheight: n,
                    rowdetailshidden: h,
                    detailskey: e
                }
            } else {
                var m = this.details[j] != null ? this.details[j].detailskey: null;
                var l = {
                    rowdetails: d,
                    rowdetailsheight: n,
                    rowdetailshidden: h,
                    detailskey: m
                };
                var k = this.that;
                for (var g = 0; g < this.detailboundrows.length; g++) {
                    if (this.detailboundrows[g] != undefined) {
                        var f = this.detailboundrows[g];
                        if (f.details.detailskey == m) {
                            f.details.rowdetailsheight = l.rowdetailsheight;
                            f.details.rowdetailshidden = l.rowdetailshidden;
                            f.details.rowdetails = l.rowdetails;
                            break
                        }
                    }
                }
                this.details[j] = l
            }
            this.rendergridcontent(true);
            this._updatecolumnwidths();
            this._updatecellwidths();
            this._renderrows(this.virtualsizeinfo);
            return true
        },
        getrowdetails: function(d) {
            if (d == null) {
                return false
            }
            d = this.getrowvisibleindex(d);
            return this._getrowdetails(d)
        },
        _getrowdetails: function(d) {
            if (d == null) {
                return false
            }
            if (d < 0) {
                return false
            }
            if (this.details[d]) {
                return this.details[d]
            }
            if (this.rowdetailstemplate) {
                return this.rowdetailstemplate
            }
        },
        getrecordscount: function() {
            return this.dataview.totalrecords
        },
        showrowdetails: function(d) {
            if (this._loading) {
                throw new Error("jqxGrid: " + this.loadingerrormessage);
                return false
            }
            if (d == null) {
                return false
            }
            d = this.getrowvisibleindex(d);
            if (d < 0) {
                return false
            }
            var e = this._getrowdetails(d);
            return this._setrowdetailsvisibility(d, e, false)
        },
        hiderowdetails: function(d) {
            if (this._loading) {
                throw new Error("jqxGrid: " + this.loadingerrormessage);
                return false
            }
            d = this.getrowvisibleindex(d);
            if (d < 0) {
                return false
            }
            var e = this._getrowdetails(d);
            return this._setrowdetailsvisibility(d, e, true)
        },
        _togglerowdetails: function(i) {
            var f = i.visibleindex;
            var g = this._getrowdetails(f);
            if (g != null) {
                var e = this.vScrollInstance.value;
                var h = !g.rowdetailshidden;
                var d = this._setrowdetailsvisibility(f, g, h);
                if (e !== 0 && this.vScrollBar.css("visibility") !== "hidden") {
                    if (e <= this.vScrollInstance.max) {
                        this.vScrollInstance.setPosition(e)
                    } else {
                        this.vScrollInstance.setPosition(this.vScrollInstance.max)
                    }
                }
                return d
            }
            return false
        },
        _setrowdetailsvisibility: function(e, f, h) {
            if (this.rowdetailstemplate) {
                if (!this.details) {
                    this.details = new Array()
                }
                if (!this.details[e]) {
                    this.details[e] = {
                        rowdetailshidden: this.rowdetailstemplate.rowdetailshidden,
                        rowdetailsheight: this.rowdetailstemplate.rowdetailsheight,
                        rowdetails: this.rowdetailstemplate.rowdetails
                    };
                    var g = this.dataview.generatekey();
                    this.details[e].detailskey = g;
                    this.detailboundrows[e] = {
                        index: e,
                        details: this.details[e]
                    }
                }
            }
            if (f != null) {
                this.details[e].rowdetailshidden = h
            } else {
                return false
            }
            var d = this.details[e];
            if (h) {
                this._raiseEvent(21, {
                    rowindex: e,
                    details: d.rowdetails,
                    height: d.rowdetailsheight
                })
            } else {
                this._raiseEvent(20, {
                    rowindex: e,
                    details: d.rowdetails,
                    height: d.rowdetailsheight
                })
            }
            return this._setrowdetails(e, d.rowdetails, d.rowdetailsheight, d.rowdetailshidden)
        },
        getrowvisibleindex: function(d) {
            if (d == undefined || d == null || d < 0) {
                return false
            }
            if (this.virtualmode) {
                var e = this.dataview.loadedrecords[d];
                if (e == undefined) {
                    return - 1
                }
                return e.visibleindex
            }
            return this.getrowdisplayindex(d)
        },
        hiderow: function(d) {
            if (this._loading) {
                throw new Error("jqxGrid: " + this.loadingerrormessage);
                return false
            }
            if (d == undefined || d == null || d < 0) {
                return false
            }
            if (d == null) {
                return false
            }
            this.hiddenboundrows[d] = {
                index: d,
                hidden: true
            };
            d = this.getrowvisibleindex(d);
            return this._setrowvisibility(d, true)
        },
        showrow: function(d) {
            if (this._loading) {
                throw new Error("jqxGrid: " + this.loadingerrormessage);
                return false
            }
            if (d == undefined || d == null || d < 0) {
                return false
            }
            if (d == null) {
                return false
            }
            this.hiddenboundrows[d] = {
                index: d,
                hidden: false
            };
            d = this.getrowvisibleindex(d);
            return this._setrowvisibility(d, false)
        },
        isrowhiddenat: function(d) {
            if (d == null) {
                return null
            }
            d = this.getrowvisibleindex(d);
            if (this.rows.records[d]) {
                return this.rows.records[d].hidden
            }
        },
        _setrowvisibility: function(d, f, e) {
            if (d == null) {
                return false
            }
            this.hiddens[d] = f;
            if (e == undefined || e) {
                this.rendergridcontent(true);
                return true
            }
            return false
        },
        _loadrows: function() {
            if (!this._pageviews[this.dataview.pagenum] && !this.pageable) {
                return
            }
            var p = !this.pageable ? this._pageviews[this.dataview.pagenum].top: 0;
            if (!this.pageable && this._pagescache[this.dataview.pagenum] != undefined) {
                return null
            }
            if (!this.virtualsizeinfo) {
                return
            }
            var t = this.that;
            var l = new Array();
            var q = new Array();
            var e = t.groupable && t.groups.length > 0;
            var j = this.dataview.totalrecords;
            var o = this.virtualsizeinfo.virtualheight;
            var s = 0;
            this.rows.beginupdate();
            var f = this.dataview.pagesize;
            if (this.pageable && e) {
                f = this.dataview.rows.length
            }
            for (var g = 0; g < f; g++) {
                if (g >= this.dataview.rows.length) {
                    break
                }
                var k = this.dataview.rows[g];
                var u = null;
                if (!t.rows.records[k.visibleindex]) {
                    u = new a(t, k)
                } else {
                    u = t.rows.records[k.visibleindex];
                    u.setdata(k)
                }
                u.hidden = this.hiddens[u.visibleindex];
                if (this.rowdetailstemplate) {
                    u.rowdetails = this.rowdetailstemplate.rowdetails;
                    u.rowdetailsheight = this.rowdetailstemplate.rowdetailsheight;
                    u.rowdetailshidden = this.rowdetailstemplate.rowdetailshidden
                }
                var d = this.details[u.visibleindex];
                if (d) {
                    u.rowdetails = d.rowdetails;
                    u.rowdetailsheight = d.rowdetailsheight;
                    u.rowdetailshidden = d.rowdetailshidden
                } else {
                    if (!this.rowdetailstemplate) {
                        u.rowdetails = null
                    }
                }
                if (e && this.pageable && u.parentbounddata != null) {
                    var r = l[u.parentbounddata.uniqueid];
                    if (r != null) {
                        var n = this._findgroupstate(r.uniqueid);
                        if (this._setsubgroupsvisibility) {
                            this._setsubgroupsvisibility(this, u.parentbounddata, !n, false)
                        }
                        u.hidden = this.hiddens[u.visibleindex]
                    }
                    if (r != null && r != undefined) {
                        u.parentrow = r;
                        r.subrows[r.subrows.length++] = u
                    }
                }
                if (u.hidden) {
                    continue
                }
                var h = k.visibleindex;
                if (!this.heights[h]) {
                    this.heights[h] = this.rowsheight
                }
                u.height = this.heights[h];
                if (this.rowdetails) {
                    if (u.rowdetails && !u.rowdetailshidden) {
                        u.height += u.rowdetailsheight
                    }
                }
                l[u.uniqueid] = u;
                q[s++] = u;
                u.top = p;
                p += u.height;
                var m = h;
                t.rows.replace(m, u)
            }
            if ((this.autoheight || this.pageable) && this.autorowheight) {
                if (this._pageviews && this._pageviews.length > 0) {
                    this._pageviews[0].height = p
                }
            }
            this.rows.resumeupdate();
            if (q.length > 0) {
                this._pagescache[this.dataview.pagenum] = q
            }
        },
        _updateaddnewrowui: function(g) {
            var m = this;
            var k = m.everpresentrowposition != "bottom" ? m.addnewrowtop: m.addnewrowbottom;
            var o = m.columns.records.length;
            var f = 0;
            for (var l = 0; l < o; l++) {
                var h = m.columns.records[l];
                if (h.addnewrowwidget) {
                    h.addnewrowwidget.detach()
                }
            }
            for (var l = 0; l < o; l++) {
                var h = m.columns.records[l];
                var e = h.width;
                if (e < h.minwidth) {
                    e = h.minwidth
                }
                if (e > h.maxwidth) {
                    e = h.maxwidth
                }
                var n = b(k[0].cells[l]);
                n.css("left", f);
                var i = true;
                if (n.width() == e) {
                    i = false
                }
                if (g) {
                    i = true
                }
                n.width(e);
                n[0].left = f;
                if (h.addnewrowwidget) {
                    n.html("");
                    n.append(h.addnewrowwidget)
                }
                if (! (h.hidden && h.hideable)) {
                    f += e
                } else {
                    n.css("display", "none")
                }
                if (!i) {
                    continue
                }
            }
            var p = m.everpresentrowactions.split(" ");
            m.addnewrowbutton.show();
            m.addnewrowupdatebutton.show();
            m.addnewrowresetbutton.show();
            m.addnewrowdeletebutton.show();
            if (p.indexOf("add") == -1 && p.indexOf("addBottom") == -1) {
                m.addnewrowbutton.hide()
            }
            if (p.indexOf("update") == -1) {
                m.addnewrowupdatebutton.hide()
            }
            if (p.indexOf("reset") == -1) {
                m.addnewrowresetbutton.hide()
            }
            if (p.indexOf("delete") == -1) {
                m.addnewrowdeletebutton.hide()
            }
            var d = b(k.children()[0]);
            d.width(parseInt(f) + 2);
            d.height(m.everpresentrowheight);
            d.css("max-height", m.everpresentrowheight + "px")
        },
        _removeaddnewrow: function() {
            var g = this;
            var d = g.columns.records.length;
            for (var f = 0; f < d; f++) {
                var e = g.columns.records[f];
                if (e.addnewrowwidget) {
                    if (e.destroyeverpresentrowwidget) {
                        e.destroyeverpresentrowwidget(e.addnewrowwidget)
                    } else {
                        e.addnewrowwidget.remove()
                    }
                    e.addnewrowwidget = null
                }
            }
            if (g.addnewrowbutton) {
                g.addnewrowbutton.remove()
            }
            if (g.addnewrowupdatebutton) {
                g.addnewrowupdatebutton.remove()
            }
            if (g.addnewrowdeletebutton) {
                g.addnewrowdeletebutton.remove()
            }
            if (g.addnewrowresetbutton) {
                g.addnewrowresetbutton.remove()
            }
            if (g.addnewrowpopup) {
                g.addnewrowpopup.remove();
                g.addnewrowpopup = null
            }
            if (g.addnewrowtop) {
                g.addnewrowtop.remove();
                g.addnewrowtop = null
            }
            if (g.addnewrowbottom) {
                g.addnewrowbottom.remove();
                g.addnewrowbottom = null
            }
        },
        _updateaddnewrow: function() {
            var o = this;
            var f = o.everpresentrowposition != "bottom" ? o.addnewrowtop: o.addnewrowbottom;
            var t = b('<div style="position: relative;" id="row000' + o.element.id + '"></div>');
            var i = 0;
            var z = o.columns.records.length;
            var n = o.toThemeProperty("jqx-grid-cell");
            n += " " + o.toThemeProperty("jqx-grid-cell-add-new-row");
            n += " " + o.toThemeProperty("jqx-grid-cell-filter-row");
            var m = z + 10;
            var h = new Array();
            var D = o.that;
            f[0].cells = h;
            t.height(o.everpresentrowheight);
            if (!o.showfilterrow && o.everpresentrowposition != "bottom") {
                f.css("max-height", (o.everpresentrowheight - 1) + "px")
            } else {
                if (o.showfilterrow && o.everpresentrowposition != "bottom") {
                    f.css("max-height", (o.everpresentrowheight - 3) + "px")
                }
            }
            t.css("max-height", o.everpresentrowheight + "px");
            f.append(t);
            var C = b("<div style='border-width: 1px; border-style: solid; padding: 5px; z-index: 99999; display: none; position: absolute;'><div>").appendTo(b(document.body));
            var d = b("<button style='position: relative; float: left; margin: 2px; border-radius: 0px; padding: 4px 8px;'>" + o.gridlocalization.addrowstring + "</button>");
            var q = b("<button style='position: relative; float: left; margin: 2px; border-radius: 0px; padding: 4px 8px;'>" + o.gridlocalization.udpaterowstring + "</button>");
            var k = b("<button style='position: relative; float: left; margin: 2px; border-radius: 0px; padding: 4px 8px;'>" + o.gridlocalization.deleterowstring + "</button>");
            var p = b("<button style='position: relative; float: left; margin: 2px; border-radius: 0px; padding: 4px 8px;'>" + o.gridlocalization.resetrowstring + "</button>");
            C.addClass(o.toThemeProperty("jqx-popup"));
            C.addClass(o.toThemeProperty("jqx-rc-all"));
            C.addClass(o.toThemeProperty("jqx-fill-state-normal"));
            C.addClass(o.toThemeProperty("jqx-shadow"));
            C.append(d);
            C.append(q);
            C.append(k);
            C.append(p);
            var g = o.everpresentrowactions.split(" ");
            if (g.indexOf("add") == -1 && g.indexOf("addBottom") == -1) {
                d.hide()
            }
            if (g.indexOf("update") == -1) {
                q.hide()
            }
            if (g.indexOf("reset") == -1) {
                p.hide()
            }
            if (g.indexOf("delete") == -1) {
                k.hide()
            }
            o.addnewrowpopup = C;
            o.addnewrowbutton = d;
            o.addnewrowupdatebutton = q;
            o.addnewrowdeletebutton = k;
            o.addnewrowresetbutton = p;
            d.jqxButton({
                template: "success",
                theme: o.theme
            });
            k.jqxButton({
                template: "danger",
                theme: o.theme
            });
            q.jqxButton({
                template: "primary",
                theme: o.theme
            });
            p.jqxButton({
                template: "warning",
                theme: o.theme
            });
            q.mousedown(function(E) {
                var P = {};
                var I = {};
                for (var G = 0; G < z; G++) {
                    var F = o.columns.records[G];
                    if (!F.geteverpresentrowwidgetvalue) {
                        continue
                    }
                    var L = F.geteverpresentrowwidgetvalue(F.displayfield, F.addnewrowwidget);
                    I[F.datafield] = L
                }
                var K = false;
                for (var G = 0; G < z; G++) {
                    var F = o.columns.records[G];
                    if (!F.geteverpresentrowwidgetvalue) {
                        continue
                    }
                    var L = F.geteverpresentrowwidgetvalue(F.displayfield, F.addnewrowwidget);
                    if (F.createeverpresentrowwidget && F.validateeverpresentrowwidgetvalue) {
                        var J = F.validateeverpresentrowwidgetvalue(F.displayfield, L, I);
                        var O = J;
                        var H = o.gridlocalization.validationstring;
                        if (O.message != undefined) {
                            H = O.message
                        }
                        var N = typeof O == "boolean" ? O: O.result;
                        if (!N) {
                            L = "invalid editor state";
                            F.addnewrowwidget.attr("title", H);
                            F.addnewrowwidget.addClass(o.toThemeProperty("jqx-input-invalid"))
                        } else {
                            F.addnewrowwidget.attr("title", "");
                            F.addnewrowwidget.removeClass(o.toThemeProperty("jqx-input-invalid"))
                        }
                    }
                    if (L === "invalid editor state") {
                        E.preventDefault();
                        E.stopPropagation();
                        K = true;
                        continue
                    }
                    if (K) {
                        continue
                    }
                }
                if (K) {
                    C.hide();
                    o.focus();
                    return
                }
                for (var G = 0; G < z; G++) {
                    var F = o.columns.records[G];
                    if (!F.geteverpresentrowwidgetvalue) {
                        continue
                    }
                    var L = F.geteverpresentrowwidgetvalue(F.displayfield, F.addnewrowwidget);
                    P[F.datafield] = L;
                    if (F.reseteverpresentrowwidgetvalue) {
                        F.reseteverpresentrowwidgetvalue(F.displayfield, F.addnewrowwidget)
                    }
                }
                if (o.selectedcells.length > 0 || o.selectedrowindexes.length > 0) {
                    if (o.selectionmode.indexOf("cell") >= 0) {
                        var M = o.getselectedcells()[0].rowindex
                    } else {
                        var M = o.selectedrowindexes[0]
                    }
                    rowData = o.getrowdata(M);
                    if (rowData) {
                        o.updaterow(rowData.uid, P)
                    }
                }
                C.hide();
                o.focus()
            });
            k.mousedown(function(G) {
                if (o.selectedcells.length > 0 || o.selectedrowindexes.length > 0) {
                    if (o.selectionmode.indexOf("cell") >= 0) {
                        var H = o.getselectedcells()[0].rowindex
                    } else {
                        var H = o.selectedrowindexes[0]
                    }
                    rowData = o.getrowdata(H);
                    if (rowData) {
                        o.deleterow(rowData.uid)
                    }
                }
                for (var F = 0; F < z; F++) {
                    var E = o.columns.records[F];
                    if (E.reseteverpresentrowwidgetvalue) {
                        E.reseteverpresentrowwidgetvalue(E.displayfield, E.addnewrowwidget)
                    }
                }
                C.hide();
                o.focus();
                o.updateeverpresentrow()
            });
            d.mousedown(function(F) {
                var P = {};
                var J = {};
                for (var H = 0; H < z; H++) {
                    var G = o.columns.records[H];
                    if (!G.geteverpresentrowwidgetvalue) {
                        continue
                    }
                    var M = G.geteverpresentrowwidgetvalue(G.displayfield, G.addnewrowwidget);
                    J[G.datafield] = M
                }
                var L = false;
                for (var H = 0; H < z; H++) {
                    var G = o.columns.records[H];
                    if (!G.geteverpresentrowwidgetvalue) {
                        continue
                    }
                    var M = G.geteverpresentrowwidgetvalue(G.displayfield, G.addnewrowwidget);
                    if (G.createeverpresentrowwidget && G.validateeverpresentrowwidgetvalue) {
                        var K = G.validateeverpresentrowwidgetvalue(G.displayfield, M, J);
                        var O = K;
                        var I = o.gridlocalization.validationstring;
                        if (O.message != undefined) {
                            I = O.message
                        }
                        var N = typeof O == "boolean" ? O: O.result;
                        if (!N) {
                            M = "invalid editor state";
                            G.addnewrowwidget.attr("title", I);
                            G.addnewrowwidget.addClass(o.toThemeProperty("jqx-input-invalid"))
                        } else {
                            G.addnewrowwidget.attr("title", "");
                            G.addnewrowwidget.removeClass(o.toThemeProperty("jqx-input-invalid"))
                        }
                    }
                    if (M === "invalid editor state") {
                        F.preventDefault();
                        F.stopPropagation();
                        L = true;
                        continue
                    }
                    if (L) {
                        continue
                    }
                }
                if (L) {
                    C.hide();
                    o.focus();
                    return
                }
                for (var H = 0; H < z; H++) {
                    var G = o.columns.records[H];
                    if (!G.geteverpresentrowwidgetvalue) {
                        continue
                    }
                    var M = G.geteverpresentrowwidgetvalue(G.displayfield, G.addnewrowwidget);
                    P[G.datafield] = M;
                    if (G.reseteverpresentrowwidgetvalue) {
                        G.reseteverpresentrowwidgetvalue(G.displayfield, G.addnewrowwidget)
                    }
                }
                var E = o.everpresentrowactions.indexOf("addBottom") >= 0 ? "last": "first";
                o.addrow(null, P, E);
                C.hide();
                o.focus()
            });
            p.mousedown(function(G) {
                var H = {};
                for (var F = 0; F < z; F++) {
                    var E = o.columns.records[F];
                    if (E.reseteverpresentrowwidgetvalue) {
                        E.reseteverpresentrowwidgetvalue(E.displayfield, E.addnewrowwidget)
                    }
                    if (E.addnewrowwidget) {
                        E.addnewrowwidget.attr("title", "");
                        E.addnewrowwidget.removeClass(o.toThemeProperty("jqx-input-invalid"))
                    }
                }
                C.hide();
                o.focus()
            });
            for (var w = 0; w < z; w++) {
                var x = o.columns.records[w];
                var u = x.width;
                if (u < x.minwidth) {
                    u = x.minwidth
                }
                if (u > x.maxwidth) {
                    u = x.maxwidth
                }
                var e = b('<div style="overflow: hidden; position: absolute; height: 100%;" class="' + n + '"></div>');
                t.append(e);
                e.css("left", i);
                if (o.rtl) {
                    e.css("z-index", m++);
                    e.css("border-left-width", "1px")
                } else {
                    e.css("z-index", m--)
                }
                if (u == "auto") {
                    u = 0
                }
                e[0].style.width = parseFloat(u) + "px";
                e[0].left = i;
                if (! (x.hidden && x.hideable)) {
                    i += u
                } else {
                    e.css("display", "none")
                }
                h[h.length] = e[0];
                if (x.checkboxcolumn) {
                    var B = o.toThemeProperty("jqx-grid-cell");
                    B += " " + o.toThemeProperty("jqx-grid-cell-filter-row");
                    B += " " + o.toThemeProperty("jqx-grid-cell-pinned");
                    e.removeClass().addClass(B);
                    continue
                }
                var s = true;
                if (!o.rtl) {
                    if (o.groupable) {
                        var y = (o.showrowdetailscolumn && o.rowdetails) ? 1 : 0;
                        if (o.groups.length + y > w) {
                            s = false
                        }
                    }
                    if (o.showrowdetailscolumn && o.rowdetails && w == 0) {
                        s = false
                    }
                } else {
                    if (o.groupable) {
                        var y = (o.showrowdetailscolumn && o.rowdetails) ? 1 : 0;
                        if (o.groups.length + y + w > z - 1) {
                            s = false
                        }
                    }
                    if (o.showrowdetailscolumn && o.rowdetails && w == z - 1) {
                        s = false
                    }
                }
                o.updateeverpresentrow = function() {
                    var G = null;
                    if (o.selectedcells.length > 0 || o.selectedrowindexes.length > 0) {
                        if (o.selectionmode.indexOf("cell") >= 0) {
                            var H = o.getselectedcells()[0].rowindex
                        } else {
                            var H = o.selectedrowindexes[0]
                        }
                        G = o.getrowdata(H)
                    }
                    if (!G) {
                        return
                    }
                    for (var F = 0; F < o.columns.records.length; F++) {
                        var j = o.columns.records[F];
                        if (j.seteverpresentrowwidgetvalue) {
                            var E = o.getcelltext(H, j.displayfield);
                            j.seteverpresentrowwidgetvalue(j.addnewrowwidget, E)
                        }
                    }
                };
                if (s) {
                    if (x.createeverpresentrowwidget) {
                        var v = function() {
                            d.trigger("mousedown")
                        };
                        x.addnewrowwidget = x.createeverpresentrowwidget(x.datafield, e, C, v);
                        if (x.initeverpresentrowwidget) {
                            x.initeverpresentrowwidget(x.datafield, e, C)
                        }
                    } else {
                        o._measureElement("column");
                        var r = (o.everpresentrowheight / 2 - o._columnheight / 2);
                        if (r < 0) {
                            r = 4
                        }
                        r += "px";
                        if (x.datafield === "addButtonColumn") {
                            var l = b('<div style="padding-bottom: 2px; text-align: center; margin-top: ' + r + ';"><a href="#">' + o.gridlocalization.addrowstring + "</a></div>");
                            e.append(l);
                            l.mousedown(function() {
                                d.trigger("mousedown")
                            });
                            continue
                        } else {
                            if (x.datafield === "resetButtonColumn") {
                                var l = b('<div style="padding-bottom: 2px; text-align: center; margin-top: ' + r + ';"><a href="#">' + o.gridlocalization.resetrowstring + "</a></div>");
                                e.append(l);
                                l.mousedown(function() {
                                    p.trigger("mousedown")
                                });
                                continue
                            }
                        }
                        var A = function(F, H, j) {
                            var E = b('<input style="box-sizing: border-box; padding-right: 4px; padding-left: 4px; border:none;" autocomplete="off" type="textarea"/>');
                            E[0].id = b.jqx.utilities.createId();
                            E.addClass(F.toThemeProperty("jqx-widget"));
                            E.addClass(F.toThemeProperty("jqx-input"));
                            E.addClass(F.toThemeProperty("jqx-widget-content"));
                            E.addClass(F.toThemeProperty("jqx-enableselect"));
                            E.addClass(F.toThemeProperty("jqx-grid-cell-add-new-row"));
                            E.css("text-align", j.cellsalign);
                            if (F.rtl) {
                                E.css("direction", "rtl")
                            }
                            if (F.disabled) {
                                E.attr("disabled", true)
                            }
                            E.attr("disabled", false);
                            E.attr("placeholder", F.gridlocalization.everpresentrowplaceholder + j.text);
                            E.appendTo(H);
                            E.css("width", "100%");
                            E.css("height", F.everpresentrowheight + "px");
                            E.css("line-height", F.everpresentrowheight + "px");
                            E.css("max-height", F.everpresentrowheight + "px");
                            E.css("margin", "0px");
                            E.focus(function() {
                                if (o.selectedcells.length > 0 || o.selectedrowindexes.length > 0) {
                                    if (o.selectionmode.indexOf("cell") >= 0) {
                                        var K = o.getselectedcells()[0].rowindex
                                    } else {
                                        var K = o.selectedrowindexes[0]
                                    }
                                }
                                E.addClass(F.toThemeProperty("jqx-fill-state-focus"));
                                var I = F.columns.records.indexOf(j);
                                if (F.everpresentrowactionsmode !== "columns") {
                                    C.css({
                                        display: "block",
                                        top: E.coord().top + F.everpresentrowheight - 1,
                                        left: I > 0 ? E.coord().left: E.coord().left - 1
                                    })
                                }
                                var J = C.children().width();
                                if (j.cellsalign === "right") {
                                    var J = d.width() + p.width();
                                    C.children().css("left", J - J + "px")
                                } else {
                                    C.children().css("left", "0px")
                                }
                                F.content[0].scrollLeft = 0;
                                F.content[0].scrollTop = 0;
                                setTimeout(function() {
                                    F.content[0].scrollLeft = 0;
                                    F.content[0].scrollTop = 0
                                },
                                50);
                                return false
                            });
                            j.addnewrowwidget = E;
                            if (!j.reseteverpresentrowwidgetvalue) {
                                j.reseteverpresentrowwidgetvalue = function(J, I) {
                                    I.val("");
                                    I.focus();
                                    I.blur();
                                    I.removeClass(o.toThemeProperty("jqx-input-invalid"));
                                    I.attr("title", "")
                                }
                            }
                            if (!j.seteverpresentrowwidgetvalue) {
                                j.seteverpresentrowwidgetvalue = function(J, I) {
                                    J.val(I)
                                }
                            }
                            if (!j.geteverpresentrowwidgetvalue) {
                                var G = j;
                                j.geteverpresentrowwidgetvalue = function(I, P, R) {
                                    var U = P.val();
                                    if (R !== false && G.validateeverpresentrowwidgetvalue) {
                                        var Y = {};
                                        var O = {};
                                        for (var M = 0; M < z; M++) {
                                            var K = o.columns.records[M];
                                            if (!K.geteverpresentrowwidgetvalue) {
                                                continue
                                            }
                                            var Q = K.geteverpresentrowwidgetvalue(K.displayfield, K.addnewrowwidget, false);
                                            O[K.datafield] = Q
                                        }
                                        var T = G.validateeverpresentrowwidgetvalue(G.displayfield, U, O);
                                        var X = T;
                                        var N = o.gridlocalization.validationstring;
                                        if (X.message != undefined) {
                                            N = X.message
                                        }
                                        var W = typeof X == "boolean" ? X: X.result;
                                        if (!W) {
                                            E.addClass(o.toThemeProperty("jqx-input-invalid"));
                                            E.attr("title", N);
                                            return "invalid editor state"
                                        } else {
                                            E.removeClass(o.toThemeProperty("jqx-input-invalid"));
                                            E.attr("title", "")
                                        }
                                    }
                                    var S = "string";
                                    var J = o.source.datafields || ((o.source._source) ? o.source._source.datafields: null);
                                    if (J) {
                                        var V = "";
                                        b.each(J,
                                        function() {
                                            if (this.name == G.displayfield) {
                                                if (this.type) {
                                                    V = this.type
                                                }
                                                return false
                                            }
                                        });
                                        if (V) {
                                            S = V
                                        }
                                    }
                                    if (S === "number") {
                                        var L = parseFloat(U);
                                        if (isNaN(L)) {
                                            return null
                                        }
                                    }
                                    if (S === "date") {
                                        return b.jqx.dataFormat.tryparsedate(U, o.gridlocalization)
                                    }
                                    if (S === "bool" || S === "boolean") {
                                        if (U === "true") {
                                            return true
                                        }
                                        if (U == "1") {
                                            return true
                                        }
                                        if (U === "false") {
                                            return false
                                        }
                                        if (U == "0") {
                                            return false
                                        }
                                        if (U === true) {
                                            return U
                                        }
                                        if (U === false) {
                                            return U
                                        }
                                        return false
                                    }
                                    return U
                                }
                            }
                            E.keydown(function(I) {
                                if (I.keyCode === 13) {
                                    if (o.everpresentrowactions.indexOf("add") >= 0) {
                                        d.trigger("mousedown")
                                    } else {
                                        if (o.everpresentrowactions.indexOf("update") >= 0) {
                                            q.trigger("mousedown")
                                        } else {
                                            if (o.everpresentrowactions.indexOf("delete") >= 0) {
                                                k.trigger("mousedown")
                                            }
                                        }
                                    }
                                }
                            });
                            E.blur(function() {
                                E.removeClass(F.toThemeProperty("jqx-fill-state-focus"));
                                C.css("display", "none")
                            });
                            if (j.initeverpresentrowwidget) {
                                j.initeverpresentrowwidget(j.datafield, H, C)
                            }
                        };
                        A(this, e, x)
                    }
                }
            }
            if (b.jqx.browser.msie && b.jqx.browser.version < 8) {
                t.css("z-index", m--)
            }
            t.width(parseFloat(i) + 2);
            f.addClass(n);
            f.css("border-bottom-width", "0px");
            if (o.showfilterrow) {
                f.css("border-top-width", "0px")
            } else {
                f.css("border-top-width", "1px")
            }
            f.css("box-sizing", "border-box");
            f.css("border-right-width", "0px")
        },
        _gettableheight: function() {
            if (this.tableheight != undefined) {
                return this.tableheight
            }
            var e = this.host.height();
            if (this.columnsheader) {
                var d = this.columnsheader.outerHeight();
                if (!this.showheader) {
                    d = 0
                }
            }
            e -= d;
            if (this.hScrollBar[0].style.visibility == "visible") {
                e -= this.hScrollBar.outerHeight()
            }
            if (this.pageable) {
                e -= this.pager.outerHeight()
            }
            if (this._groupsheader()) {
                e -= this.groupsheader.outerHeight()
            }
            if (this.showtoolbar) {
                e -= this.toolbarheight
            }
            if (this.showstatusbar) {
                e -= this.statusbarheight
            }
            if (this.showeverpresentrow && this.everpresentrowposition === "bottom") {
                e -= this.everpresentrowheight
            }
            if (e > 0) {
                this.tableheight = e;
                return e
            }
            return this.host.height()
        },
        _getpagesize: function() {
            if (this.pageable) {
                return this.pagesize
            }
            if (this.virtualmode) {
                var e = Math.round(this.host.height()) + 2 * this.rowsheight;
                var d = Math.round(e / this.rowsheight);
                return d
            }
            if (this.autoheight || this.autorowheight) {
                if (this.dataview.totalrows == 0) {
                    return 1
                }
                return this.dataview.totalrows
            }
            if (this.dataview.totalrows < 100 && this.dataview.totalrecords < 100 && this.dataview.totalrows > 0) {
                return this.dataview.totalrows
            }
            return 100
        },
        _calculatevirtualheight: function() {
            var n = this.that;
            var e = Math.round(this.host.height()) + 2 * this.rowsheight;
            realheight = this._gettableheight();
            var p = Math.round(e / this.rowsheight);
            this.heights = new Array();
            this.hiddens = new Array();
            this.details = new Array();
            this.expandedgroups = new Array();
            this.hiddenboundrows = new Array();
            this.heightboundrows = new Array();
            this.detailboundrows = new Array();
            var h = Math.max(this.dataview.totalrows, this.dataview.totalrecords);
            if (this.pageable) {
                h = this.pagesize;
                if (this.pagesize > Math.max(this.dataview.totalrows, this.dataview.totalrecords) && this.autoheight) {
                    h = Math.max(this.dataview.totalrows, this.dataview.totalrecords)
                } else {
                    if (!this.autoheight) {
                        if (this.dataview.totalrows < this.pagesize) {
                            h = Math.max(this.dataview.totalrows, this.dataview.totalrecords)
                        }
                    }
                }
            }
            var l = h * this.rowsheight;
            var m = 0;
            var j = 0;
            var k = 0;
            var f = this._getpagesize();
            var d = f * this.rowsheight;
            var g = 0;
            if (!this.pageable && this.autoheight) {
                p = h
            }
            if (h + f > 0) {
                while (g <= h + f) {
                    m += d;
                    if (g - f < h && g >= h) {
                        var o = g - h;
                        if (o > 0) {
                            k -= d;
                            this._pageviews[j - 1] = {
                                top: k,
                                height: d - o * this.rowsheight
                            }
                        }
                        break
                    } else {
                        this._pageviews[j++] = {
                            top: k,
                            height: d
                        }
                    }
                    k = m;
                    g += f
                }
            }
            if (this.resizingGrid != true) {
                this.vScrollBar.jqxScrollBar({
                    value: 0
                })
            }
            if (l > realheight && !this.autoheight) {
                this.vScrollBar.css("visibility", "visible");
                if (this.scrollmode == "deferred") {
                    this.vScrollBar.jqxScrollBar({
                        max: l
                    })
                } else {
                    this.vScrollBar.jqxScrollBar({
                        max: l - realheight
                    })
                }
            } else {
                this.vScrollBar.css("visibility", "hidden")
            }
            this.dataview.pagesize = f;
            this.dataview.updateview();
            return {
                visiblerecords: p,
                virtualheight: l
            }
        },
        _updatepageviews: function() {
            if (this.updating()) {
                return
            }
            this._pagescache = new Array();
            this._pageviews = new Array();
            this.tableheight = null;
            var u = this.that;
            var d = Math.round(this.host.height()) + 2 * this.rowsheight;
            var v = Math.round(d / this.rowsheight);
            var n = Math.max(this.dataview.totalrows, this.dataview.totalrecords);
            var q = n * this.rowsheight;
            var t = 0;
            var f = 0;
            var o = 0;
            var p = 0;
            var j = 0;
            var h = this._getpagesize();
            if (!this.pageable) {
                for (var m = 0; m < n; m++) {
                    var s = {
                        index: m,
                        height: this.heights[m],
                        hidden: this.hiddens[m],
                        details: this.details[m]
                    };
                    if (this.heights[m] == undefined) {
                        this.heights[m] = this.rowsheight;
                        s.height = this.rowsheight
                    }
                    if (this.hiddens[m] == undefined) {
                        this.hiddens[m] = false;
                        s.hidden = false
                    }
                    if (this.details[m] == undefined) {
                        this.details[m] = null
                    }
                    if (s.height != u.rowsheight) {
                        q -= u.rowsheight;
                        q += s.height
                    }
                    if (s.hidden) {
                        q -= s.height
                    } else {
                        f += s.height;
                        var l = 0;
                        if (this.rowdetails) {
                            if (this.rowdetailstemplate) {
                                if (!s.details) {
                                    s.details = this.rowdetailstemplate
                                }
                            }
                            if (s.details && s.details.rowdetails && !s.details.rowdetailshidden) {
                                l = s.details.rowdetailsheight;
                                f += l;
                                q += l
                            }
                        }
                        t += s.height + l
                    }
                    j++;
                    if (j >= h || m == n - 1) {
                        this._pageviews[o++] = {
                            top: p,
                            height: f
                        };
                        f = 0;
                        p = t;
                        j = 0
                    }
                }
            } else {
                if (this._updatepagedview) {
                    q = this._updatepagedview(n, q, 0)
                }
                if (this.autoheight) {
                    this._arrange()
                }
            }
            var e = this._gettableheight();
            if (q > e) {
                if (this.pageable && this.gotopage) {
                    q = this._pageviews[0].height;
                    if (q < 0) {
                        q = this._pageviews[0].height
                    }
                }
                if (this.vScrollBar.css("visibility") != "visible") {
                    this.vScrollBar.css("visibility", "visible")
                }
                if (q <= e || this.autoheight) {
                    this.vScrollBar.css("visibility", "hidden")
                }
                if (q - e > 0) {
                    if (this.scrollmode != "deferred") {
                        var r = q - e;
                        var g = this.vScrollInstance.max;
                        this.vScrollBar.jqxScrollBar({
                            max: r
                        });
                        if (r != g) {
                            this.vScrollBar.jqxScrollBar({
                                value: 0
                            })
                        }
                    } else {
                        this.vScrollBar.jqxScrollBar({
                            value: 0,
                            max: q
                        })
                    }
                } else {
                    this.vScrollBar.jqxScrollBar({
                        value: 0,
                        max: q
                    })
                }
            } else {
                if (!this._loading) {
                    this.vScrollBar.css("visibility", "hidden")
                }
                this.vScrollBar.jqxScrollBar({
                    value: 0
                })
            }
            this._arrange();
            if (this.autoheight) {
                v = Math.round(this.host.height() / this.rowsheight)
            }
            this.virtualsizeinfo = {
                visiblerecords: v,
                virtualheight: q
            }
        },
        updatebounddata: function(d) {
            if (d != "data" && d != "sort" && d != "filter" && d != "cells" && d != "pagechanged" && d != "pagesizechanged" && !this.virtualmode) {
                this.virtualsizeinfo = null;
                if (this.showfilterrow && this.filterable && this.filterrow) {
                    if (this.clearfilters) {
                        this.clearfilters(false)
                    }
                    this.filterrow.remove();
                    this._filterrowcache = new Array();
                    this.filterrow = null
                } else {
                    if (this.filterable) {
                        if (this.clearfilters) {
                            this.clearfilters(false)
                        }
                    }
                }
                if (this.groupable) {
                    this.dataview.groups = [];
                    this.groups = []
                }
                if (this.pageable) {
                    this.pagenum = 0;
                    this.dataview.pagenum = 0
                }
                if (this.sortable) {
                    this.sortcolumn = null;
                    this.sortdirection = "";
                    this.dataview.sortfielddirection = "";
                    this.dataview.clearsortdata()
                }
            }
            this.databind(this.source, d)
        },
        refreshdata: function() {
            this._refreshdataview();
            this.render()
        },
        _updatevscrollbarmax: function() {
            if (this._pageviews && this._pageviews.length > 0) {
                var f = this._pageviews[0].height;
                if (this.virtualmode || !this.pageable) {
                    f = this.virtualsizeinfo.virtualheight
                }
                var e = this._gettableheight();
                if (f > e) {
                    if (this.pageable && this.gotopage) {
                        f = this._pageviews[0].height;
                        if (f < 0) {
                            f = this._pageviews[0].height
                        }
                    }
                    if (this.vScrollBar.css("visibility") != "visible") {
                        this.vScrollBar.css("visibility", "visible")
                    }
                    if (f <= e || this.autoheight) {
                        this.vScrollBar.css("visibility", "hidden")
                    }
                    if (f - e > 0) {
                        var d = f - e;
                        this.vScrollBar.jqxScrollBar({
                            max: d
                        })
                    } else {
                        this.vScrollBar.jqxScrollBar({
                            value: 0,
                            max: f
                        })
                    }
                } else {
                    this.vScrollBar.css("visibility", "hidden");
                    this.vScrollBar.jqxScrollBar({
                        value: 0
                    })
                }
            }
        },
        _refreshdataview: function() {
            this.dataview.refresh()
        },
        refresh: function(d) {
            if (d != true) {
                if (b.jqx.isHidden(this.host)) {
                    return
                }
                if (this.virtualsizeinfo != null) {
                    this._cellscache = new Array();
                    this._renderrows(this.virtualsizeinfo);
                    this._updatesize()
                }
            }
        },
        render: function() {
            this._render(true, true, true, true)
        },
        invalidate: function() {
            if (this.virtualsizeinfo) {
                this._updatecolumnwidths();
                this._updatecellwidths();
                this._renderrows(this.virtualsizeinfo)
            }
        },
        clear: function() {
            this.databind(null);
            this.render()
        },
        _preparecolumngroups: function() {
            var o = this.columnsheight;
            if (this.columngroups) {
                this.columnshierarchy = new Array();
                if (this.columngroups.length) {
                    var n = this;
                    for (var h = 0; h < this.columngroups.length; h++) {
                        this.columngroups[h].parent = null;
                        this.columngroups[h].groups = null
                    }
                    for (var h = 0; h < this.columns.records.length; h++) {
                        this.columns.records[h].parent = null;
                        this.columns.records[h].groups = null
                    }
                    var p = function(j) {
                        for (var u = 0; u < n.columngroups.length; u++) {
                            var v = n.columngroups[u];
                            if (v.name === j) {
                                return v
                            }
                        }
                        return null
                    };
                    for (var h = 0; h < this.columngroups.length; h++) {
                        var q = this.columngroups[h];
                        if (!q.groups) {
                            q.groups = null
                        }
                        if (q.parentgroup) {
                            var s = p(q.parentgroup);
                            if (s) {
                                q.parent = s;
                                if (!s.groups) {
                                    s.groups = new Array()
                                }
                                if (s.groups.indexOf(q) === -1) {
                                    s.groups.push(q)
                                }
                            }
                        }
                    }
                    for (var h = 0; h < this.columns.records.length; h++) {
                        var q = this.columns.records[h];
                        if (q.columngroup) {
                            var s = p(q.columngroup);
                            if (s) {
                                if (!s.groups) {
                                    s.groups = new Array()
                                }
                                q.parent = s;
                                if (s.groups.indexOf(q) === -1) {
                                    s.groups.push(q)
                                }
                            }
                        }
                    }
                    var r = 0;
                    for (var h = 0; h < this.columns.records.length; h++) {
                        var q = this.columns.records[h];
                        var e = q;
                        q.level = 0;
                        while (e.parent) {
                            e = e.parent;
                            q.level++
                        }
                        var e = q;
                        var d = q.level;
                        r = Math.max(r, q.level);
                        while (e.parent) {
                            e = e.parent;
                            if (e) {
                                e.level = --d
                            }
                        }
                    }
                    var m = function(y) {
                        var x = new Array();
                        if (y.columngroup) {
                            x.push(y)
                        }
                        if (y.groups) {
                            for (var w = 0; w < y.groups.length; w++) {
                                if (y.groups[w].columngroup) {
                                    x.push(y.groups[w])
                                } else {
                                    if (y.groups[w].groups) {
                                        var v = m(y.groups[w]);
                                        for (var u = 0; u < v.length; u++) {
                                            x.push(v[u])
                                        }
                                    }
                                }
                            }
                        }
                        return x
                    };
                    for (var h = 0; h < this.columngroups.length; h++) {
                        var q = this.columngroups[h];
                        var f = m(q);
                        q.columns = f;
                        var k = new Array();
                        var t = 0;
                        for (var g = 0; g < f.length; g++) {
                            k.push(this.columns.records.indexOf(f[g]));
                            if (f[g].pinned) {
                                t++
                            }
                        }
                        if (t != 0) {
                            throw new Error("jqxGrid: Column Groups initialization Error. Please, check the initialization of the jqxGrid's columns array. The columns in a column group cannot be pinned.")
                        }
                        k.sort(function(j, i) {
                            j = parseInt(j);
                            i = parseInt(i);
                            if (j < i) {
                                return - 1
                            }
                            if (j > i) {
                                return 1
                            }
                            return 0
                        });
                        for (var l = 1; l < k.length; l++) {
                            if (k[l] != k[l - 1] + 1) {
                                throw new Error("jqxGrid: Column Groups initialization Error. Please, check the initialization of the jqxGrid's columns array. The columns in a column group are expected to be siblings in the columns array.");
                                this.host.remove()
                            }
                        }
                    }
                }
                this.columngroupslevel = 1 + r;
                o = this.columngroupslevel * this.columnsheight
            }
            return o
        },
        _render: function(k, j, l, e, f) {
            if (this.dataview == null) {
                return
            }
            if (this._loading) {
                return
            }
            if (this._batchupdate) {
                return
            }
            if (b.jqx.isHidden(this.host)) {
                var g = this;
                if (g.___hiddenTimer) {
                    clearInterval(g.___hiddenTimer);
                    g.___hiddenTimer = null
                }
                this.___hiddenTimer = setInterval(function() {
                    if (!b.jqx.isHidden(g.host)) {
                        clearInterval(g.___hiddenTimer);
                        g.render()
                    }
                },
                300);
                return
            }
            if (this.editcell != null && this.endcelledit) {
                this.endcelledit(this.editcell.row, this.editcell.column, true, false)
            }
            this.validationpopup = null;
            this._removeHandlers();
            this._addHandlers();
            this._initializeRows();
            this._requiresupdate = j != undefined ? j: true;
            this._newmax = null;
            if (l) {
                if (!this._requiresupdate) {
                    if (e != false) {
                        this._initmenu()
                    }
                }
                if (this.columns == null) {
                    this.columns = new b.jqx.collection(this.element)
                } else {
                    var i = this;
                    if (this.columns && this.columns.name === "observableArray") {
                        this.columns.notifier = function(p) {
                            var n = function() {
                                i.columns = i._columns;
                                i.render()
                            };
                            switch (p.type) {
                            case "add":
                                n();
                                break;
                            case "update":
                                if (p.name === "index") {
                                    i.beginupdate();
                                    for (var o in p.newValue) {
                                        i.setcolumnproperty(p.newValue.datafield, o, p.newValue[o])
                                    }
                                    i.endupdate()
                                } else {
                                    var m = p.path.split(".");
                                    i.setcolumnproperty(i.columns[m[0]].datafield, p.name, p.newValue)
                                }
                                break;
                            case "delete":
                                n();
                                break
                            }
                        }
                    }
                    if (this.columngroups && this.columngroups.name === "observableArray") {
                        this.columngroups.notifier = function(m) {
                            i.render()
                        }
                    }
                    this._initializeColumns()
                }
            }
            this.tableheight = null;
            this._pagescache = new Array();
            this._pageviews = new Array();
            this.visiblerows = new Array();
            this.hittestinfo = new Array();
            if (this._requiresupdate) {
                this._clearcaches();
                if (e == true) {
                    this._initmenu()
                }
            }
            this.virtualsizeinfo = null;
            this.prerenderrequired = true;
            if ((this.groupable && this.groups.length > 0 && this.rowdetails) || (this.rowdetails)) {
                if (this.gridcontent) {
                    this._rowdetailscache = new Array();
                    this._rowdetailselementscache = new Array();
                    this.detailboundrows = new Array();
                    this.details = new Array();
                    b.jqx.utilities.html(this.gridcontent, "");
                    this.gridcontent = null
                }
            }
            if (this.gridcontent) {
                if (this.editable && this._destroyeditors) {
                    this._destroyeditors()
                }
            }
            if (l) {
                if (this.filterrow) {
                    this.filterrow.detach()
                }
                b.jqx.utilities.html(this.content, "");
                this.columnsheader = this.columnsheader || b('<div style="overflow: hidden;"></div>');
                this.columnsheader.remove();
                this.columnsheader.addClass(this.toTP("jqx-widget-header"));
                this.columnsheader.addClass(this.toTP("jqx-grid-header"))
            } else {
                if (this.gridcontent) {
                    b.jqx.utilities.html(this.gridcontent, "")
                }
            }
            if (!this.showheader) {
                this.columnsheader.css("display", "none")
            } else {
                if (this.columnsheader) {
                    this.columnsheader.css("display", "block")
                }
            }
            this.gridcontent = this.gridcontent || b('<div style="width: 100%; overflow: hidden; position: absolute;"></div>');
            this.gridcontent.remove();
            var h = this.columnsheight;
            h = this._preparecolumngroups();
            if (this.showfilterrow && this.filterable) {
                this.columnsheader.height(h + this.filterrowheight);
                if (this.showeverpresentrow && this.everpresentrowposition !== "bottom") {
                    this.columnsheader.height(h + this.filterrowheight + this.everpresentrowheight)
                }
            } else {
                if (this.showeverpresentrow && this.everpresentrowposition !== "bottom") {
                    this.columnsheader.height(h + this.everpresentrowheight)
                } else {
                    this.columnsheader.height(h)
                }
            }
            this.content.append(this.columnsheader);
            this.content.append(this.gridcontent);
            this._arrange();
            if (this._initgroupsheader) {
                this._initgroupsheader()
            }
            this.selectionarea = this.selectionarea || b("<div style='z-index: 99999; visibility: hidden; position: absolute;'></div>");
            this.selectionarea.addClass(this.toThemeProperty("jqx-grid-selectionarea"));
            this.selectionarea.addClass(this.toThemeProperty("jqx-fill-state-pressed"));
            this.content.append(this.selectionarea);
            this.tableheight = null;
            this.rendergridcontent(false, l);
            if (this.groups.length > 0 && this.groupable) {
                var d = this.vScrollBar[0].style.visibility;
                this.suspendgroupevents = true;
                if (this.collapseallgroups) {
                    if (!this.groupsexpandedbydefault) {
                        this.collapseallgroups(false);
                        this._updatescrollbarsafterrowsprerender()
                    } else {
                        this.expandallgroups(false)
                    }
                }
                if (this.vScrollBar[0].style.visibility != d) {
                    this._updatecolumnwidths();
                    this._updatecellwidths()
                }
                this.suspendgroupevents = false
            }
            if (this.pageable && this.updatepagerdetails) {
                this.updatepagerdetails();
                if (this.autoheight) {
                    this._updatepageviews()
                }
                if (this.autorowheight) {
                    if (!this.autoheight) {
                        this._updatepageviews()
                    }
                    this._renderrows(this.virtualsizeinfo)
                }
            }
            if (this.showaggregates && this._updateaggregates) {
                this._updateaggregates()
            }
            this._addoverlayelement();
            if (this.scrollmode == "deferred") {
                this._addscrollelement()
            }
            if (this.showfilterrow && this.filterable && this.filterrow && (f == undefined || f == true)) {
                this._updatelistfilters(!l)
            }
            if (this.rendered) {
                this.rendered("full")
            }
            this.__isRendered = true
        },
        _addoverlayelement: function() {
            if (this.autoheight) {
                if (this._overlayElement) {
                    this._overlayElement.remove()
                }
                this._updateTouchScrolling();
                return
            }
            var d = b.jqx.utilities.getBrowser();
            if ((d.browser == "msie" && parseInt(d.version) < 9) || this.isTouchDevice()) {
                if (this._overlayElement) {
                    this._overlayElement.remove()
                }
                this._overlayElement = b("<div style='visibility: hidden; position: absolute; width: 100%; height: 100%;'></div>");
                this._overlayElement.css("background", "white");
                this._overlayElement.css("z-index", 18000);
                this._overlayElement.css("opacity", 0.001);
                if (this.isTouchDevice()) {
                    if (this.vScrollBar.css("visibility") !== "hidden" || this.hScrollBar.css("visibility") !== "hidden") {
                        var e = 0;
                        if (this.selectionmode == "checkbox") {
                            e += 30
                        }
                        if (this.groupable || this.rowdetails) {
                            this._overlayElement.css("left", 30 * (this.groups.length + (this.rowdetails ? 1 : 0)))
                        }
                        var f = this._overlayElement.css("left");
                        this._overlayElement.css("left", f + e)
                    } else {
                        if (this._overlayElement) {
                            this._overlayElement.remove()
                        }
                    }
                } else {
                    this.content.prepend(this._overlayElement)
                }
            }
            this._updateTouchScrolling()
        },
        _addscrollelement: function() {
            if (this._scrollelement) {
                this._scrollelement.remove()
            }
            if (this._scrollelementoverlay) {
                this._scrollelementoverlay.remove()
            }
            this._scrollelementoverlay = b("<div style='visibility: hidden; position: absolute; width: 100%; height: 100%;'></div>");
            this._scrollelementoverlay.css("background", "black");
            this._scrollelementoverlay.css("z-index", 18000);
            this._scrollelementoverlay.css("opacity", 0.1);
            this._scrollelement = b("<span style='visibility: hidden; top: 50%; right: 10px; position: absolute;'></span>");
            this._scrollelement.css("z-index", 18005);
            this._scrollelement.addClass(this.toThemeProperty("jqx-button"));
            this._scrollelement.addClass(this.toThemeProperty("jqx-fill-state-normal"));
            this._scrollelement.addClass(this.toThemeProperty("jqx-rc-all"));
            this._scrollelement.addClass(this.toThemeProperty("jqx-shadow"));
            this.content.prepend(this._scrollelement);
            this.content.prepend(this._scrollelementoverlay)
        },
        rendergridcontent: function(d, f) {
            if (this.updating()) {
                return false
            }
            if (d == undefined || d == null) {
                d = false
            }
            this._requiresupdate = d;
            var h = this.prerenderrequired;
            if (this.prerenderrequired) {
                this._arrange()
            }
            var g = this.that;
            var f = f;
            if (f == null || f == undefined) {
                f = true
            }
            this.tableheight = null;
            g.virtualsizeinfo = g.virtualsizeinfo || g._calculatevirtualheight();
            if (g.pageable && !g.autoheight) {
                if (g.dataview.totalrows < g.pagesize) {
                    g._requiresupdate = true
                }
            }
            if (f) {
                g._rendercolumnheaders()
            } else {
                if (this._rendersortcolumn) {
                    this._rendersortcolumn()
                }
                if (this._renderfiltercolumn) {
                    this._renderfiltercolumn()
                }
            }
            g._renderrows(g.virtualsizeinfo);
            if (this.gridcontent) {
                if (this.gridcontent[0].scrollTop != 0) {
                    this.gridcontent[0].scrollTop = 0
                }
                if (this.gridcontent[0].scrollLeft != 0) {
                    this.gridcontent[0].scrollLeft = 0
                }
            }
            if (h) {
                var e = this.tableheight;
                this._arrange();
                if (e != this.tableheight && this.autoheight) {
                    g._renderrows(g.virtualsizeinfo)
                }
            }
            if (this.rtl) {
                this._renderhorizontalscroll()
            }
            if (this.autosavestate) {
                if (this.initializedcall != null) {
                    if (this.savestate) {
                        this.savestate()
                    }
                }
            }
            return true
        },
        _updatecolumnwidths: function() {
            var l = this.host.width();
            var e = l;
            var j = "";
            if (this.columns == undefined || this.columns.records == undefined) {
                return
            }
            var n = this.that;
            var g = this.rowdetails && this.showrowdetailscolumn ? (1 + this.groups.length) * this.groupindentwidth: (this.groups.length) * this.groupindentwidth;
            b.each(this.columns.records,
            function(p, q) {
                if (! (this.hidden && this.hideable)) {
                    if (this.width.toString().indexOf("%") != -1 || this._percentagewidth != undefined) {
                        var q = 0;
                        var r = n.vScrollBar[0].style.visibility == "hidden" ? 0 : n.scrollbarsize + 5;
                        if (n.scrollbarautoshow) {
                            r = 0
                        }
                        var o = e;
                        q = parseFloat(this.width) * o / 100;
                        r += g;
                        if (this._percentagewidth != undefined) {
                            q = parseFloat(this._percentagewidth) * (o - r) / 100
                        }
                        if (q < this.minwidth && this.minwidth != "auto") {
                            q = this.minwidth
                        }
                        if (q > this.maxwidth && this.maxwidth != "auto") {
                            q = this.maxwidth
                        }
                        l -= q
                    } else {
                        if (this.width != "auto" && !this._width) {
                            l -= this.width
                        } else {
                            j += this.text
                        }
                    }
                }
            });
            var f = this._gettableheight();
            if (!this.autoheight) {
                if (this.virtualsizeinfo && this.virtualsizeinfo.virtualheight > f) {
                    if (this.groupable && this.groups.length > 0) {
                        if (this.dataview && this.dataview.loadedrootgroups && !this.groupsexpandedbydefault) {
                            var m = this.dataview.loadedrootgroups.length * this.rowsheight;
                            if (this.pageable) {
                                for (var d = 0; d < this.dataview.rows.length; d++) {
                                    if (this.dataview.rows[d].group && this.dataview.rows[d].level === 0) {
                                        m += this.rowsheight
                                    }
                                }
                            }
                            if (m > f) {
                                l -= this.scrollbarsize + 5;
                                e -= this.scrollbarsize + 5
                            } else {
                                if (this.vScrollBar.css("visibility") == "visible") {
                                    l -= this.scrollbarsize + 5;
                                    e -= this.scrollbarsize + 5
                                }
                            }
                        } else {
                            l -= this.scrollbarsize + 5;
                            e -= this.scrollbarsize + 5
                        }
                    } else {
                        if (this.vScrollBar.css("visibility") != "hidden") {
                            l -= this.scrollbarsize + 5;
                            e -= this.scrollbarsize + 5
                        }
                    }
                }
            }
            var g = this.rowdetails && this.showrowdetailscolumn ? (1 + this.groups.length) * this.groupindentwidth: (this.groups.length) * this.groupindentwidth;
            e -= g;
            if (!this.columnsheader) {
                return
            }
            var i = this.columnsheader.find("#columntable" + this.element.id);
            if (i.length == 0) {
                return
            }
            var h = 0;
            var k = this;
            b.each(this.columns.records,
            function(p, t) {
                var r = b(this.element);
                if (!this.hidden && this.element.style.display === "none") {
                    this.element.style.display = "block"
                }
                var o = false;
                var s = this.width;
                if (this.width.toString().indexOf("%") != -1 || this._percentagewidth != undefined) {
                    if (this._percentagewidth != undefined) {
                        s = parseFloat(this._percentagewidth) * e / 100
                    } else {
                        s = parseFloat(this.width) * e / 100
                    }
                    o = true
                }
                if (this.width != "auto" && !this._width && !o) {
                    if (parseInt(r[0].style.width) != this.width) {
                        r.width(this.width)
                    }
                } else {
                    if (o) {
                        if (s < this.minwidth && this.minwidth != "auto") {
                            s = this.minwidth;
                            this.width = s
                        }
                        if (s > this.maxwidth && this.maxwidth != "auto") {
                            s = this.maxwidth;
                            this.width = s
                        }
                        if (parseInt(r[0].style.width) != s) {
                            r.width(s);
                            this.width = s
                        }
                    } else {
                        var q = Math.floor(l * (this.text.length / j.length));
                        if (isNaN(q)) {
                            q = this.minwidth
                        }
                        if (q == Infinity) {
                            q = 0
                        }
                        if (q < 0) {
                            $element = b("<span>" + this.text + "</span>");
                            b(document.body).append($element);
                            q = 10 + $element.width();
                            $element.remove()
                        }
                        if (q < this.minwidth) {
                            q = this.minwidth
                        }
                        if (q > this.maxwidth) {
                            q = this.maxwidth
                        }
                        this._width = "auto";
                        this.width = q;
                        r.width(this.width)
                    }
                }
                if (parseInt(r[0].style.left) != h) {
                    r.css("left", h)
                }
                if (! (this.hidden && this.hideable)) {
                    h += this.width
                }
                this._requirewidthupdate = true
            });
            this.columnsheader.width(2 + h);
            i.width(this.columnsheader.width());
            if (h == 0) {
                this.columnsheader[0].style.visibility = "hidden"
            } else {
                this.columnsheader[0].style.visibility = "inherit"
            }
            this._resizecolumngroups();
            if (this.showfilterrow && this.filterrow) {
                this.filterrow.width(this.columnsheader.width());
                this._updatefilterrowui()
            }
            if (this.showeverpresentrow) {
                if (this.everpresentrowposition !== "bottom") {
                    this.addnewrowtop.width(this.columnsheader.width())
                } else {
                    this.addnewrowbottom.width(this.columnsheader.width())
                }
                this._updateaddnewrowui()
            }
            if (this.autowidth) {
                this._arrange()
            }
        },
        _rendercolumnheaders: function() {
            var x = this.that;
            if (!this.prerenderrequired) {
                if (this._rendersortcolumn) {
                    this._rendersortcolumn()
                }
                if (this._renderfiltercolumn) {
                    this._renderfiltercolumn()
                }
                if (this.showfilterrow && this.filterrow) {
                    this.filterrow.width(this.columnsheader.width());
                    this._updatefilterrowui()
                }
                if (this.showeverpresentrow) {
                    if (this.everpresentrowposition !== "bottom") {
                        this.addnewrowtop.width(this.columnsheader.width())
                    } else {
                        this.addnewrowbottom.width(this.columnsheader.width())
                    }
                    this._updateaddnewrowui()
                }
                return
            }
            this._columnsbydatafield = new Array();
            this.columnsheader.find("#columntable" + this.element.id).remove();
            var o = b('<div id="columntable' + this.element.id + '" style="height: 100%; position: relative;"></div>');
            o[0].cells = new Array();
            var A = 0;
            var h = 0;
            var u = "";
            var F = this.host.width();
            var s = F;
            var g = new Array();
            var z = new Array();
            var t = this.rowdetails && this.showrowdetailscolumn ? (1 + this.groups.length) * this.groupindentwidth: (this.groups.length) * this.groupindentwidth;
            b.each(this.columns.records,
            function(j, k) {
                if (! (this.hidden && this.hideable)) {
                    if (this.width != "auto" && !this._width) {
                        if (this.width < this.minwidth && this.minwidth != "auto") {
                            F -= this.minwidth
                        } else {
                            if (this.width > this.maxwidth && this.maxwidth != "auto") {
                                F -= this.maxwidth
                            } else {
                                if (this.width.toString().indexOf("%") != -1) {
                                    var k = 0;
                                    var p = x.vScrollBar[0].style.visibility == "hidden" ? 0 : x.scrollbarsize + 5;
                                    p += t;
                                    k = parseFloat(this.width) * (s - p) / 100;
                                    if (k < this.minwidth && this.minwidth != "auto") {
                                        k = this.minwidth
                                    }
                                    if (k > this.maxwidth && this.maxwidth != "auto") {
                                        k = this.maxwidth
                                    }
                                    F -= k
                                } else {
                                    if (typeof this.width == "string") {
                                        this.width = parseInt(this.width)
                                    }
                                    F -= this.width
                                }
                            }
                        }
                    } else {
                        u += this.text
                    }
                }
                if (this.pinned || this.grouped || this.checkboxcolumn) {
                    if (x._haspinned) {
                        this.pinned = true
                    }
                    g[g.length] = this
                } else {
                    z[z.length] = this
                }
            });
            if (!this.rtl) {
                for (var C = 0; C < g.length; C++) {
                    this.columns.replace(C, g[C])
                }
                for (var B = 0; B < z.length; B++) {
                    this.columns.replace(g.length + B, z[B])
                }
            } else {
                var y = 0;
                g.reverse();
                for (var C = this.columns.records.length - 1; C >= this.columns.records.length - g.length; C--) {
                    this.columns.replace(C, g[y++])
                }
                for (var B = 0; B < z.length; B++) {
                    this.columns.replace(B, z[B])
                }
            }
            var n = this.headerZIndex;
            var r = x.groupable ? x.groups.length: 0;
            if (this.rowdetails && this.showrowdetailscolumn) {
                r++
            }
            var l = x.columnsheader.height();
            if (this.showfilterrow) {
                if (!this.columngroups) {
                    l = this.columnsheight
                } else {
                    l -= this.filterrowheight
                }
            }
            if (this.showeverpresentrow && this.everpresentrowposition !== "bottom") {
                l -= this.everpresentrowheight
            }
            var v = this._gettableheight();
            if (this.virtualsizeinfo && this.virtualsizeinfo.virtualheight > v && !this.scrollbarautoshow) {
                if (this.groupable && this.groups.length > 0) {
                    if (this.dataview && this.dataview.loadedrootgroups && !this.groupsexpandedbydefault) {
                        var D = 0;
                        if (!this.pageable) {
                            var D = this.dataview.loadedrootgroups.length * this.rowsheight
                        } else {
                            if (this.pageable) {
                                for (var w = 0; w < this.dataview.rows.length; w++) {
                                    if (this.dataview.rows[w].group && this.dataview.rows[w].level === 0) {
                                        D += this.rowsheight
                                    }
                                }
                            }
                        }
                        if (D > v) {
                            F -= this.scrollbarsize + 5;
                            s -= this.scrollbarsize + 5
                        }
                    } else {
                        F -= this.scrollbarsize + 5;
                        s -= this.scrollbarsize + 5
                    }
                } else {
                    if (!this.autoheight) {
                        F -= this.scrollbarsize + 5;
                        s -= this.scrollbarsize + 5
                    }
                }
            }
            s -= t;
            var d = function(j, k) {
                var i = x.columngroupslevel * x.columnsheight;
                i = i - (k.level * x.columnsheight);
                return i
            };
            var f = document.createDocumentFragment();
            b.each(this.columns.records,
            function(V, T) {
                this.height = x.columnsheight;
                if (x.columngroups) {
                    if (x.columngroups.length) {
                        this.height = d(this.datafield, this);
                        l = this.height
                    }
                }
                var Z = x.toTP("jqx-grid-column-header") + " " + x.toTP("jqx-widget-header");
                if (x.rtl) {
                    Z += " " + x.toTP("jqx-grid-column-header-rtl")
                }
                var X = !x.rtl ? 150 + n - 1 : 150 + n + 1;
                var R = !x.rtl ? n--:n++;
                var G = b('<div role="columnheader" style="z-index: ' + R + ';position: absolute; height: 100%;" class="' + Z + '"><div style="height: 100%; width: 100%;"></div></div>');
                if (x.columngroups) {
                    G[0].style.height = l + "px";
                    G[0].style.bottom = "0px";
                    if (this.pinned) {
                        G[0].style.zIndex = X
                    }
                }
                this.uielement = G;
                if (this.classname != "" && this.classname) {
                    G.addClass(this.classname)
                }
                var O = this.width;
                var P = false;
                if (this.width === null) {
                    this.width = "auto"
                }
                if (this.width.toString().indexOf("%") != -1 || this._percentagewidth != undefined) {
                    if (this._percentagewidth != undefined) {
                        O = parseFloat(this._percentagewidth) * s / 100
                    } else {
                        O = parseFloat(this.width) * s / 100
                    }
                    P = true
                }
                if (this.width != "auto" && !this._width && !P) {
                    if (O < this.minwidth && this.minwidth != "auto") {
                        O = this.minwidth;
                        this.width = O
                    }
                    if (O > this.maxwidth && this.maxwidth != "auto") {
                        O = this.maxwidth;
                        this.width = O
                    }
                    G[0].style.width = parseInt(O) + "px"
                } else {
                    if (P) {
                        if (O < this.minwidth && this.minwidth != "auto") {
                            O = this.minwidth
                        }
                        if (O > this.maxwidth && this.maxwidth != "auto") {
                            O = this.maxwidth
                        }
                        if (this._percentagewidth == undefined || this.width.toString().indexOf("%") != -1) {
                            this._percentagewidth = this.width
                        }
                        G.width(O);
                        this.width = O
                    } else {
                        if (!this.hidden) {
                            var S = Math.floor(F * (this.text.length / u.length));
                            if (isNaN(S)) {
                                S = this.minwidth
                            }
                            if (S < 0) {
                                $element = b("<span>" + this.text + "</span>");
                                b(document.body).append($element);
                                S = 10 + $element.width();
                                $element.remove()
                            }
                            if (S < this.minwidth) {
                                S = this.minwidth
                            }
                            if (S > this.maxwidth) {
                                S = this.maxwidth
                            }
                            this._width = "auto";
                            this.width = S;
                            O = this.width;
                            G.width(this.width)
                        }
                    }
                }
                if (this.hidden && this.hideable) {
                    G.css("display", "none")
                }
                var p = b(G.children()[0]);
                var W = x.rtl ? x.toTP("jqx-grid-column-menubutton") + " " + x.toTP("jqx-grid-column-menubutton-rtl") : x.toTP("jqx-grid-column-menubutton");
                W += " " + x.toTP("jqx-icon-arrow-down");
                var J = b('<div style="height: ' + l + 'px; display: none; left: 100%; top: 0%; position: absolute;"><div class="' + W + '" style="width: 100%; height:100%;"></div></div>');
                if (!x.enableanimations) {
                    J.css("margin-left", -16)
                }
                if (x.rtl) {
                    J.css("left", "0px")
                }
                this.columnsmenu = J[0];
                o[0].cells[V] = G[0];
                J[0].style.width = parseInt(x.columnsmenuwidth) + "px";
                var I = x.columnsmenu;
                var q = false;
                var U = false;
                var Q = (x.groupable && r > 0 && A < r) || (x.rowdetails && A < r);
                if (x.rtl) {
                    Q = (x.groupable && r > 0 && A < r) || (x.rowdetails && A < r);
                    Q &= V > x.columns.records.length - 1 - r
                }
                if (Q) {
                    A++;
                    I &= false;
                    this.sortable = false;
                    this.editable = false;
                    U = true
                } else {
                    var L = this.renderer != null ? this.renderer(this.text, this.align, l) : x._rendercolumnheader(this.text, this.align, l, x,this.isRoleColumn);
                    if (L == null) {
                        L = x._rendercolumnheader(this.text, this.align, l, x,this.isRoleColumn)
                    }
                    if (this.renderer != null) {
                        L = b(L)
                    }
                    I &= true;
                    q = true
                }
                if (x.WinJS) {
                    MSApp.execUnsafeLocalFunction(function() {
                        p.append(b(L))
                    })
                } else {
                    if (this.renderer) {
                        p.append(b(L))
                    } else {
                        if (L) {
                            p[0].innerHTML = L
                        }
                    }
                }
                if (L != null) {
                    var N = b('<div class="iconscontainer" style="height: ' + l + 'px; margin-left: -32px; display: block; position: absolute; left: 100%; top: 0%; width: 32px;"><div class="filtericon ' + x.toTP("jqx-widget-header") + '" style="height: ' + l + 'px; float: right; display: none; width: 16px;"><div class="' + x.toTP("jqx-grid-column-filterbutton") + '" style="width: 100%; height:100%;"></div></div><div class="sortasc ' + x.toTP("jqx-widget-header") + '" style="height: ' + l + 'px; float: right; display: none; width: 16px;"><div class="' + x.toTP("jqx-grid-column-sortascbutton") + " " + x.toTP("jqx-icon-arrow-up") + '" style="width: 100%; height:100%;"></div></div><div class="sortdesc ' + x.toTP("jqx-widget-header") + '" style="height: ' + l + 'px; float: right; display: none; width: 16px;"><div class="' + x.toTP("jqx-grid-column-sortdescbutton") + " " + x.toTP("jqx-icon-arrow-down") + '" style="width: 100%; height:100%;"></div></div></div>');
                    J.addClass(x.toTP("jqx-widget-header"));
                    p.append(N);
                    var aa = N.children();
                    this.sortasc = aa[1];
                    this.sortdesc = aa[2];
                    this.filtericon = aa[0];
                    this.iconscontainer = N;
                    if (x.rtl) {
                        N.css("margin-left", "0px");
                        N.css("left", "0px");
                        b(this.sortasc).css("float", "left");
                        b(this.filtericon).css("float", "left");
                        b(this.sortdesc).css("float", "left")
                    }
                    if (!x.autoshowfiltericon && this.filterable) {
                        b(this.filtericon).css("display", "block")
                    }
                }
                this.element = G[0];
                if (I) {
                    x._handlecolumnsmenu(x, p, G, J, this);
                    if (!this.menu) {
                        J.hide()
                    }
                }
                f.appendChild(G[0]);
                if (x.groupable && q) {
                    G[0].id = x.dataview.generatekey();
                    if (x._handlecolumnstogroupsdragdrop) {
                        x._handlecolumnstogroupsdragdrop(this, G)
                    } else {
                        throw new Error("jqxGrid: Missing reference to jqxgrid.grouping.js.")
                    }
                }
                if (x.columnsreorder && this.draggable && x._handlecolumnsdragreorder) {
                    x._handlecolumnsdragreorder(this, G)
                }
                var Y = this;
                x.addHandler(G, "click",
                function(i) {
                    if (Y.checkboxcolumn) {
                        return true
                    }
                    if (x.sorttogglestates > 0 && x._togglesort) {
                        if (!x._loading) {
                            x._togglesort(Y)
                        }
                    }
                    i.preventDefault();
                    x._raiseEvent(7, {
                        column: Y.getcolumnproperties(),
                        datafield: Y.datafield,
                        originalEvent: i
                    })
                });
                if (Y.resizable && x.columnsresize && !U) {
                    var H = false;
                    var j = "mousemove";
                    if (x.isTouchDevice() && x.touchmode !== true) {
                        H = true;
                        j = b.jqx.mobile.getTouchEventName("touchstart")
                    }
                    x.addHandler(G, j,
                    function(ab) {
                        var i = parseInt(ab.pageX);
                        var ad = 5;
                        var ag = parseInt(G.coord().left);
                        if (x.hasTransform) {
                            ag = b.jqx.utilities.getOffset(G).left
                        }
                        if (x.resizing) {
                            return true
                        }
                        if (x._handlecolumnsresize) {
                            if (H) {
                                var ac = x.getTouches(ab);
                                var af = ac[0];
                                i = af.pageX;
                                ad = 40;
                                if (i >= ag + Y.width - ad) {
                                    x.resizablecolumn = {
                                        columnelement: G,
                                        column: Y
                                    };
                                    G.css("cursor", "col-resize")
                                } else {
                                    G.css("cursor", "");
                                    x.resizablecolumn = null
                                }
                                return true
                            }
                            var ae = Y.width;
                            if (x.rtl) {
                                ae = 0
                            }
                            if (i >= ag + ae - ad) {
                                if (i <= ag + ae + ad) {
                                    x.resizablecolumn = {
                                        columnelement: G,
                                        column: Y
                                    };
                                    G.css("cursor", "col-resize");
                                    return false
                                } else {
                                    G.css("cursor", "");
                                    x.resizablecolumn = null
                                }
                            } else {
                                G.css("cursor", "");
                                if (i < ag + ae - ad) {
                                    if (!Y._animating && !Y._menuvisible) {
                                        G.mouseenter()
                                    }
                                }
                                x.resizablecolumn = null
                            }
                        }
                    })
                }
                G.css("left", h);
                if (! (this.hidden && this.hideable)) {
                    h += O
                }
                if (Y.rendered) {
                    var M = Y.rendered(b(p[0].firstChild), Y.align, l);
                    if (M && N != null) {
                        N.hide()
                    }
                }
                if (Y.checkboxcolumn) {
                    if (N) {
                        N.hide()
                    }
                    if (!x.host.jqxCheckBox) {
                        throw new Error("jqxGrid: Missing reference to jqxcheckbox.js")
                    }
                    p.html('<div style="cursor: pointer; margin-left: 5px; top: 50%; margin-top: -8px; position: relative;"></div>');
                    var k = p.find("div:first");
                    k.jqxCheckBox({
                        _canFocus: false,
                        disabled: x.disabled,
                        disabledContainer: true,
                        theme: x.theme,
                        enableContainerClick: false,
                        width: 16,
                        height: 16,
                        animationShowDelay: 0,
                        animationHideDelay: 0
                    });
                    Y.checkboxelement = k;
                    var K = k.data().jqxCheckBox.instance;
                    x._checkboxcolumn = Y;
                    K.updated = function(ab, i, ac) {
                        x._checkboxcolumnupdating = true;
                        if (x.disabled) {
                            k.jqxCheckBox({
                                disabled: x.disabled
                            });
                            i = ac
                        }
                        if (i) {
                            x.selectallrows()
                        } else {
                            x.unselectallrows()
                        }
                        x._checkboxcolumnupdating = false
                    }
                }
            });
            if (h > 0) {
                this.columnsheader.width(2 + h)
            } else {
                this.columnsheader.width(h)
            }
            o[0].appendChild(f);
            this.columnsrow = o;
            x.columnsheader.append(o);
            if (this.showfilterrow && this._updatefilterrow) {
                if (!this.columngroups) {
                    o.height(this.columnsheight)
                } else {
                    o.height(this.columngroupslevel * this.columnsheight)
                }
                if (!this.filterrow) {
                    var E = b("<div style='position: relative !important; '></div>");
                    E[0].id = "filterrow." + this.element.id;
                    E.height(this.filterrowheight);
                    this.filterrow = E
                }
                this.filterrow.width(2 + h);
                this.columnsheader.append(this.filterrow);
                this._updatefilterrow()
            }
            if (this.showeverpresentrow && this.everpresentrowposition !== "bottom") {
                if (!this.columngroups) {
                    o.height(this.columnsheight)
                } else {
                    o.height(this.columngroupslevel * this.columnsheight)
                }
                if (!this.addnewrowtop) {
                    var m = b("<div style='position: relative !important; z-index:" + this.headerZIndex + ";'></div>");
                    m[0].id = "addnewrowtop." + this.element.id;
                    m.height(this.everpresentrowheight);
                    this.addnewrowtop = m
                }
                this.addnewrowtop.width(2 + h);
                if (this.everpresentrowposition == "topAboveFilterRow") {
                    if (this.filterrow) {
                        this.addnewrowtop.insertBefore(this.filterrow)
                    } else {
                        this.columnsheader.append(this.addnewrowtop)
                    }
                } else {
                    this.columnsheader.append(this.addnewrowtop)
                }
                this._updateaddnewrow()
            } else {
                if (this.showeverpresentrow && this.everpresentrowposition === "bottom") {
                    if (!this.addnewrowbottom) {
                        var e = b("<div style='position: relative !important; z-index:" + this.headerZIndex + ";'></div>");
                        e[0].id = "addnewrowbottom." + this.element.id;
                        e.height(this.everpresentrowheight);
                        this.addnewrowbottom = e
                    }
                    this.addnewrowbottom.width(2 + h);
                    this.addnewrow.append(this.addnewrowbottom);
                    this._updateaddnewrow()
                }
            }
            if (h == 0) {
                o[0].style.visibility = "hidden"
            } else {
                o[0].style.visibility = "inherit"
            }
            o.width(h);
            if (this._handlecolumnsdragdrop) {
                this._handlecolumnsdragdrop()
            }
            if (this._handlecolumnsreorder) {
                this._handlecolumnsreorder()
            }
            if (this._rendersortcolumn) {
                this._rendersortcolumn()
            }
            if (this._renderfiltercolumn) {
                this._renderfiltercolumn()
            }
            if (this._handlecolumnsresize) {
                this._handlecolumnsresize()
            }
            if (this.columngroups) {
                this._rendercolumngroups()
            }
            if (this._updatecheckboxselection) {
                this._updatecheckboxselection()
            }
        },
        _rendercolumngroups: function() {
            if (!this.columngroups) {
                return
            }
            var p = 0;
            for (var m = 0; m < this.columns.records.length; m++) {
                if (this.columns.records[m].pinned) {
                    p++
                }
            }
            var u = this.headerZIndex - p + this.columns.records.length;
            var v = this.that;
            var h = v.toTP("jqx-grid-column-header") + " " + v.toTP("jqx-grid-columngroup-header") + " " + v.toTP("jqx-widget-header");
            if (v.rtl) {
                h += " " + v.toTP("jqx-grid-columngroup-header-rtl")
            }
            var f = this.columnsheader.find("#columntable" + this.element.id);
            f.find("jqx-grid-columngroup-header").remove();
            for (var k = 0; k < this.columngroupslevel - 1; k++) {
                for (var m = 0; m < this.columngroups.length; m++) {
                    var r = this.columngroups[m];
                    var d = r.level;
                    if (d !== k) {
                        continue
                    }
                    var q = d * this.columnsheight;
                    var e = 99999;
                    if (r.groups) {
                        var t = function(y) {
                            var x = 0;
                            for (var w = 0; w < y.groups.length; w++) {
                                var i = y.groups[w];
                                if (!i.groups) {
                                    if (!i.hidden) {
                                        x += i.width;
                                        e = Math.min(parseFloat(i.element.style.left), e)
                                    }
                                } else {
                                    x += t(i)
                                }
                            }
                            return x
                        };
                        r.width = t(r);
                        r.left = e;
                        var s = this.columnsheight;
                        var n = u--;
                        var g = b('<div role="columnheader" style="z-index: ' + n + ';position: absolute;" class="' + h + '"></div>');
                        var l = b(this._rendercolumnheader(r.text, r.align, this.columnsheight, this,r.isRoleColumn));
                        if (r.renderer) {
                            var l = b("<div style='height: 100%; width: 100%;'></div>");
                            var o = r.renderer(r.text, r.align, s);
                            l.html(o)
                        }
                        g.append(l);
                        g[0].style.left = e + "px";
                        if (e === 0) {
                            g[0].style.borderLeftColor = "transparent"
                        }
                        g[0].style.top = q + "px";
                        g[0].style.height = s + "px";
                        g[0].style.width = -1 + r.width + "px";
                        f.append(g);
                        r.element = g;
                        if (r.rendered) {
                            r.rendered(l, r.align, s)
                        }
                    }
                }
            }
        },
        _resizecolumngroups: function() {
            if (!this.columngroups) {
                return
            }
            for (var e = 0; e < this.columngroups.length; e++) {
                var k = this.columngroups[e];
                var l = k.level;
                var j = l * this.columnsheight;
                var h = 99999;
                if (k.groups) {
                    var g = function(o) {
                        var n = 0;
                        for (var m = 0; m < o.groups.length; m++) {
                            var i = o.groups[m];
                            if (!i.groups) {
                                if (!i.hidden) {
                                    n += i.width;
                                    h = Math.min(parseFloat(i.element.style.left), h)
                                }
                            } else {
                                n += g(i)
                            }
                        }
                        return n
                    };
                    k.width = g(k);
                    k.left = h;
                    var d = this.columnsheight;
                    var f = k.element;
                    f[0].style.left = h + "px";
                    f[0].style.top = j + "px";
                    f[0].style.height = d + "px";
                    f[0].style.width = -1 + k.width + "px"
                }
            }
        },
        _handlecolumnsmenu: function(p, g, h, k, m) {
            p.dragmousedown = null;
            k[0].id = p.dataview.generatekey();
            g.append(k);
            h[0].columnsmenu = k[0];
            m.element = h[0];
            var l = this.columnsmenuwidth + 1;
            var o = function() {
                if (!m.menu) {
                    return false
                }
                if (!p.resizing) {
                    if (m._menuvisible && p._hasOpenedMenu) {
                        return false
                    }
                    m._animating = true;
                    if (p.menuitemsarray && p.menuitemsarray.length > 0) {
                        if (!p.enableanimations) {
                            k.css("display", "block");
                            var q = !p.rtl ? -48 : 16;
                            m.iconscontainer.css("margin-left", q + "px");
                            m._animating = false;
                            m._menuvisible = true
                        } else {
                            k.css("display", "block");
                            k.stop();
                            m.iconscontainer.stop();
                            if (!p.rtl) {
                                k.css("margin-left", "0px");
                                k.animate({
                                    "margin-left": -l
                                },
                                "fast",
                                function() {
                                    k.css("display", "block");
                                    m._animating = false;
                                    m._menuvisible = true
                                })
                            } else {
                                k.css("margin-left", -l);
                                k.animate({
                                    "margin-left": "0px"
                                },
                                "fast",
                                function() {
                                    k.css("display", "block");
                                    m._animating = false;
                                    m._menuvisible = true
                                })
                            }
                            var q = !p.rtl ? -(32 + l) : l;
                            m.iconscontainer.animate({
                                "margin-left": q
                            },
                            "fast")
                        }
                    }
                }
            };
            var f = "mouseenter";
            if (p.isTouchDevice()) {
                f = "touchstart"
            }
            p.addHandler(h, f,
            function(r) {
                var q = parseInt(r.pageX);
                var t = p.columnsresize && m.resizable ? 3 : 0;
                var v = parseInt(h.coord().left);
                if (p.hasTransform) {
                    v = b.jqx.utilities.getOffset(h).left
                }
                var u = m.width;
                if (p.rtl) {
                    u = 0
                }
                if (t != 0) {
                    if (q >= v + u - t) {
                        if (q <= v + u + t) {
                            return false
                        }
                    }
                }
                var s = p.vScrollInstance.isScrolling();
                if (m.menu && p.autoshowcolumnsmenubutton && !s && !p.disabled) {
                    o()
                }
            });
            if (!p.autoshowcolumnsmenubutton) {
                k.css("display", "block");
                var e = !p.rtl ? -48 : 16;
                m.iconscontainer.css("margin-left", e + "px");
                if (!p.rtl) {
                    k.css({
                        "margin-left": -l
                    })
                } else {
                    k.css({
                        "margin-left": "0px"
                    })
                }
            }
            p.addHandler(h, "mouseleave",
            function(q) {
                if (p.menuitemsarray && p.menuitemsarray.length > 0 && m.menu) {
                    var s = b.data(document.body, "contextmenu" + p.element.id);
                    if (s != undefined && k[0].id == s.columnsmenu.id) {
                        return
                    }
                    if (p.autoshowcolumnsmenubutton) {
                        if (!p.enableanimations) {
                            k.css("display", "none");
                            var r = !p.rtl ? -32 : 0;
                            m.iconscontainer.css("margin-left", r + "px");
                            m._menuvisible = false
                        } else {
                            if (!p.rtl) {
                                k.css("margin-left", -l)
                            } else {
                                k.css("margin-left", "0px")
                            }
                            k.stop();
                            m.iconscontainer.stop();
                            if (!p.rtl) {
                                k.animate({
                                    "margin-left": 0
                                },
                                "fast",
                                function() {
                                    k.css("display", "none");
                                    m._menuvisible = false
                                })
                            } else {
                                k.animate({
                                    "margin-left": -l
                                },
                                "fast",
                                function() {
                                    k.css("display", "none");
                                    m._menuvisible = false
                                })
                            }
                            var r = !p.rtl ? -32 : 0;
                            m.iconscontainer.animate({
                                "margin-left": r
                            },
                            "fast")
                        }
                    }
                }
            });
            var j = true;
            var d = "";
            var i = b(m.filtericon);
            p.addHandler(k, "mousedown",
            function(q) {
                if (!p.gridmenu) {
                    p._initmenu()
                }
                j = !b.data(p.gridmenu[0], "contextMenuOpened" + p.gridmenu[0].id);
                d = b.data(document.body, "contextmenu" + p.element.id);
                if (d != null) {
                    d = d.column.datafield
                }
            });
            p.addHandler(i, "mousedown",
            function(q) {
                if (!p.gridmenu) {
                    p._initmenu()
                }
                j = !b.data(p.gridmenu[0], "contextMenuOpened" + p.gridmenu[0].id);
                d = b.data(document.body, "contextmenu" + p.element.id);
                if (d != null) {
                    d = d.column.datafield
                }
            });
            var n = function() {
                if (!m.menu) {
                    return false
                }
                if (!p.gridmenu) {
                    p._initmenu()
                }
                if (p.disabled) {
                    return false
                }
                for (var v = 0; v < p.columns.records.length; v++) {
                    if (p.columns.records[v].datafield != m.datafield) {
                        p.columns.records[v]._menuvisible = false
                    }
                }
                var t = k.coord(true);
                var A = k.height();
                if (!j) {
                    j = true;
                    if (d == m.datafield) {
                        p._closemenu();
                        return false
                    }
                }
                var x = p.host.coord(true);
                if (p.hasTransform) {
                    x = b.jqx.utilities.getOffset(p.host);
                    t = b.jqx.utilities.getOffset(k)
                }
                if (x.left + p.host.width() > parseInt(t.left) + p.gridmenu.width()) {
                    p.gridmenu.jqxMenu("open", t.left, t.top + A)
                } else {
                    p.gridmenu.jqxMenu("open", k.width() + t.left - p.gridmenu.width(), t.top + A)
                }
                if (p.gridmenu.width() < 100) {
                    p._arrangemenu()
                }
                p._hasOpenedMenu = true;
                var y = p._getmenuitembyindex(0);
                var r = p._getmenuitembyindex(1);
                var C = p._getmenuitembyindex(2);
                var z = p._getmenuitembyindex(3);
                var q = p._getmenuitembyindex(4);
                var D = p._getmenuitembyindex(5);
                if (y != null && r != null && C != null) {
                    var u = m.sortable && p.sortable;
                    p.gridmenu.jqxMenu("disable", y.id, !u);
                    p.gridmenu.jqxMenu("disable", r.id, !u);
                    p.gridmenu.jqxMenu("disable", C.id, !u);
                    if (m.displayfield != undefined) {
                        if (p.sortcolumn == m.displayfield) {
                            var w = p.getsortinformation();
                            if (u) {
                                if (w.sortdirection.ascending) {
                                    p.gridmenu.jqxMenu("disable", y.id, true)
                                } else {
                                    p.gridmenu.jqxMenu("disable", r.id, true)
                                }
                            }
                        } else {
                            p.gridmenu.jqxMenu("disable", C.id, true)
                        }
                    }
                }
                if (z != null && q != null) {
                    if (!p.groupable || !m.groupable) {
                        p.gridmenu.jqxMenu("disable", q.id, true);
                        p.gridmenu.jqxMenu("disable", z.id, true)
                    } else {
                        if (p.groups && p.groups.indexOf(m.datafield) != -1) {
                            p.gridmenu.jqxMenu("disable", z.id, true);
                            p.gridmenu.jqxMenu("disable", q.id, false)
                        } else {
                            p.gridmenu.jqxMenu("disable", z.id, false);
                            p.gridmenu.jqxMenu("disable", q.id, true)
                        }
                    }
                }
                if (D != null) {
                    p.menuOwner = m;
                    p._updatefilterpanel(p, D, m);
                    var s = 0;
                    if (p.sortable && p._togglesort && p.showsortmenuitems) {
                        s += 3
                    }
                    if (p.groupable && p.addgroup && p.showgroupmenuitems) {
                        s += 2
                    }
                    var B = s * 27 + 3;
                    if (b.jqx.browser.msie && b.jqx.browser.version < 8) {
                        B += 20;
                        b(D).height(190)
                    }
                    if (p.filterable && p.showfiltermenuitems) {
                        if (!m.filterable) {
                            p.gridmenu.height(B);
                            b(D).css("display", "none")
                        } else {
                            p.gridmenu.height(B + 180);
                            b(D).css("display", "block")
                        }
                    }
                }
                if (p.columnmenuopening) {
                    var E = p.columnmenuopening(p.gridmenu, m.displayfield, p.gridmenu.height());
                    if (false === E) {
                        p._closemenu()
                    }
                }
                b.data(document.body, "contextmenu" + p.element.id, {
                    column: m,
                    columnsmenu: k[0]
                })
            };
            p.addHandler(i, "click",
            function(q) {
                if (!m.menu) {
                    return false
                }
                if (!p.showfilterrow) {
                    if (k[0].style.display != "block") {
                        h.trigger("mouseenter")
                    }
                    setTimeout(function() {
                        if (k[0].style.display != "block") {
                            h.trigger("mouseenter")
                        }
                        n()
                    },
                    200)
                }
                return false
            });
            p.addHandler(k, "click",
            function(q) {
                if (!m.menu) {
                    return false
                }
                n();
                return false
            });
            if (p.isTouchDevice()) {
                p.addHandler(k, b.jqx.mobile.getTouchEventName("touchstart"),
                function(q) {
                    if (!m.menu) {
                        return false
                    }
                    if (!p._hasOpenedMenu) {
                        n()
                    } else {
                        p._closemenu()
                    }
                    return false
                })
            }
        },
        _removecolumnhandlers: function(h) {
            var e = this.that;
            var f = b(h.element);
            if (f.length > 0) {
                e.removeHandler(f, "mouseenter");
                e.removeHandler(f, "mouseleave");
                var g = b(h.filtericon);
                e.removeHandler(g, "mousedown");
                e.removeHandler(g, "click");
                e.removeHandler(f, "click");
                e.removeHandler(f, "mousemove");
                if (e.columnsreorder) {
                    e.removeHandler(f, "mousedown.drag");
                    e.removeHandler(f, "mousemove.drag")
                }
                e.removeHandler(f, "dragstart");
                if (f[0].columnsmenu) {
                    var d = b(f[0].columnsmenu);
                    e.removeHandler(d, "click");
                    e.removeHandler(d, "mousedown");
                    e.removeHandler(d, b.jqx.mobile.getTouchEventName("touchstart"))
                }
            }
        },
        _rendercolumnheader: function(h, i, e, d,c) {
            var g = "4";
            if (d.columngroups) {
                g = (e / 2 - this._columnheight / 2);
                if (g < 0) {
                    g = 4
                }
                //g += "px"
            } else {
            	if(this.haveViewRoleColumn&&c){
            		g = (this.columnsMaxHeight / 6);
                    if (g < 0) {
                        g = 4
                    }
                    //g += "px"
            	}else if (this.columnsheight != 25) {
                    g = (this.columnsheight / 2 - this._columnheight / 2);
                    if (g < 0) {
                        g = 4
                    }
                   // g += "px"
                }
            }
            if (this.enableellipsis) {
            	if(this.haveViewRoleColumn&&c){
            		//FIXME this.haveViewRoleColumn
                	return '<div style="padding-bottom: 2px; overflow: hidden; text-overflow: ellipsis; text-align: ' + i + "; margin-left: 4px; margin-right: 2px; margin-bottom: " + g + "px; margin-top: " + (g/2) + 'px;"><span style="word-break:normal; width:auto; display:block; white-space:pre-wrap;word-wrap : break-word ;overflow: hidden ;">' + h + "</span></div>"
                }else{
                	return '<div style="padding-bottom: 2px; overflow: hidden; text-overflow: ellipsis; text-align: ' + i + "; margin-left: 4px; margin-right: 2px; margin-bottom: " + g + "px; margin-top: " + g + 'px;"><span style="text-overflow: ellipsis; cursor: default;">' + h + "</span></div>"
                }
            	
                
            }
            if (i == "center" || i == "middle") {
                return '<div style="padding-bottom: 2px; text-align: center; margin-top: ' + g + 'px;"><a href="#">' + h + "</a></div>"
            }
            var f = '<a style="margin-top: ' + g + "px; float: " + i + ';" href="#">' + h + "</a>";
            return f
        },
        _renderrows: function(f, h, l) {
            var r = this.that;
            if ((this.pageable || this.groupable) && (this.autoheight || this.autorowheight)) {
                if (this.table != null && this.table[0].rows != null && this.table[0].rows.length < this.dataview.rows.length) {
                    r.prerenderrequired = true
                }
            }
            if (!this.pageable && (this.autoheight || this.autorowheight) && (this.virtualmode || this.unboundmode)) {
                var p = this.source.totalrecords;
                if (!isNaN(p)) {
                    if (this.table != null && this.table[0].rows != null && this.table[0].rows.length != p) {
                        r.prerenderrequired = true
                    }
                }
            }
            if ((this.autoheight || this.autorowheight) && !r.prerenderrequired) {
                if (this.table && this.table[0].rows) {
                    if (this.table[0].rows.length < this.dataview.records.length) {
                        if (this.pageable && this.table[0].rows.length < this.dataview.pagesize) {
                            r.prerenderrequired = true
                        } else {
                            if (!this.pageable) {
                                r.prerenderrequired = true
                            }
                        }
                    }
                    if (this.table[0].rows.length < this.dataview.cachedrecords.length) {
                        if (this.pageable && this.table[0].rows.length < this.dataview.pagesize) {
                            r.prerenderrequired = true
                        } else {
                            if (!this.pageable) {
                                r.prerenderrequired = true
                            }
                        }
                    }
                }
            }
            r._prerenderrows(f);
            if (r._requiresupdate) {
                r._requiresupdate = false;
                r._updatepageviews()
            }
            var q = function() {
                if (r._loading) {
                    return
                }
                if (r.WinJS) {
                    MSApp.execUnsafeLocalFunction(function() {
                        r._rendervisualrows()
                    })
                } else {
                    r._rendervisualrows()
                }
                if (r.virtualmode && r.showaggregates && r._updateaggregates) {
                    r.refreshaggregates()
                }
            };
            var t = b.jqx.browser.msie && b.jqx.browser.version < 10;
            if (this.virtualmode) {
                var i = function() {
                    if (r.rendergridrows) {
                        var w = r._startboundindex;
                        if (w == undefined) {
                            w = 0
                        }
                        var u = w + 1 + r.dataview.pagesize;
                        if (w != null && u != null) {
                            var v = r.source._source ? true: false;
                            var x = !v ? r.source.recordstartindex: r.source._source.recordstartindex;
                            if (x != w || h == true) {
                                if (!v) {
                                    r.source.recordstartindex = w;
                                    r.source.recordendindex = u
                                } else {
                                    if (u >= r.source._source.totalrecords) {
                                        u = r.source._source.totalrecords;
                                        w = u - r.dataview.pagesize - 1;
                                        if (w < 0) {
                                            w = 0
                                        }
                                        if (r.source._source.recordendindex == u && r.source._source.recordstartindex == w) {
                                            return
                                        }
                                    }
                                    r.source._source.recordstartindex = w;
                                    r.source._source.recordendindex = u
                                }
                                r.updatebounddata("cells")
                            }
                        }
                    }
                };
                if (this.loadondemand) {
                    q();
                    i();
                    this.loadondemand = false
                }
                var j = this._browser == undefined ? this._isIE10() : this._browser;
                if (this.editable && this.editcell && !this.vScrollInstance.isScrolling() && !this.hScrollInstance.isScrolling()) {
                    q()
                } else {
                    if (this.autoheight) {
                        q()
                    } else {
                        if (j || t || (navigator && navigator.userAgent.indexOf("Safari") != -1)) {
                            if (this._scrolltimer != null) {
                                clearTimeout(this._scrolltimer)
                            }
                            this._scrolltimer = setTimeout(function() {
                                q()
                            },
                            5)
                        } else {
                            q()
                        }
                    }
                }
            } else {
                if (this.scrollmode == "deferred" && (this.hScrollInstance.isScrolling() || this.vScrollInstance.isScrolling())) {
                    if (this._scrolltimer != null) {
                        clearInterval(this._scrolltimer)
                    }
                    var s = this._getfirstvisualrow();
                    if (s != null) {
                        var m = function(z) {
                            if (s == null) {
                                return ""
                            }
                            var y = "<table>";
                            var w = r.deferreddatafields;
                            if (w == null) {
                                if (r.columns.records.length > 0) {
                                    w = new Array();
                                    w.push(r.columns.records[0].displayfield)
                                }
                            }
                            for (var v = 0; v < w.length; v++) {
                                var A = w[v];
                                var x = r._getcolumnbydatafield(A);
                                if (x) {
                                    var u = r._getcellvalue(x, s);
                                    if (x.cellsformat != "") {
                                        if (b.jqx.dataFormat) {
                                            if (b.jqx.dataFormat.isDate(u)) {
                                                u = b.jqx.dataFormat.formatdate(u, x.cellsformat, r.gridlocalization)
                                            } else {
                                                if (b.jqx.dataFormat.isNumber(u)) {
                                                    u = b.jqx.dataFormat.formatnumber(u, x.cellsformat, r.gridlocalization)
                                                }
                                            }
                                        }
                                    }
                                    y += "<tr><td>" + u + "</td></tr>"
                                }
                            }
                            y += "</table>";
                            return y
                        };
                        var k = this.scrollfeedback ? this.scrollfeedback(s.bounddata) : m(s.bounddata);
                        if (k != this._scrollelementcontent) {
                            this._scrollelement[0].innerHTML = k;
                            this._scrollelementcontent = k
                        }
                    }
                    this._scrollelement.css("visibility", "visible");
                    this._scrollelementoverlay.css("visibility", "visible");
                    this._scrollelement.css("margin-top", -this._scrollelement.height() / 2);
                    this._scrolltimer = setInterval(function() {
                        if (!r.hScrollInstance.isScrolling() && !r.vScrollInstance.isScrolling()) {
                            q();
                            r._scrollelement.css("visibility", "hidden");
                            r._scrollelementoverlay.css("visibility", "hidden");
                            clearInterval(r._scrolltimer);
                            if (s) {
                                r.ensurerowvisible(s.visibleindex)
                            }
                        }
                    },
                    100);
                    return
                }
                if (navigator && navigator.userAgent.indexOf("Chrome") == -1 && navigator.userAgent.indexOf("Safari") != -1) {
                    this._updatedelay = 1
                }
                if (this.touchDevice != undefined && this.touchDevice == true) {
                    this._updatedelay = 5
                }
                var j = this._browser == undefined ? this._isIE10() : this._browser;
                if (j || t) {
                    this._updatedelay = 5
                }
                if ((j) && this.hScrollInstance.isScrolling()) {
                    q();
                    return
                }
                if (b.jqx.browser.mozilla && this._updatedelay == 0 && (this.vScrollInstance.isScrolling() || this.hScrollInstance.isScrolling())) {
                    this._updatedelay = 0
                }
                if (this.updatedelay != null) {
                    this._updatedelay = this.updatedelay
                }
                if (this._updatedelay == 0) {
                    q()
                } else {
                    var d = this._jqxgridrendertimer;
                    if (d != null) {
                        clearTimeout(d)
                    }
                    if (this.vScrollInstance.isScrolling() || this.hScrollInstance.isScrolling()) {
                        if (this._updatedelay) {
                            d = setTimeout(function() {
                                q()
                            },
                            this._updatedelay)
                        } else {
                            d = null;
                            q()
                        }
                        this._jqxgridrendertimer = d
                    } else {
                        this._jqxgridrendertimer = d;
                        q()
                    }
                }
            }
            if (r.autorowheight && !r.autoheight) {
                if (this._pageviews.length > 0) {
                    var e = this._gettableheight();
                    var n = this._pageviews[0].height;
                    if (n > e) {
                        if (this.pageable && this.gotopage) {
                            n = this._pageviews[0].height;
                            if (n < 0) {
                                n = this._pageviews[0].height
                            }
                        }
                        if (this.vScrollBar.css("visibility") != "visible") {
                            this.vScrollBar.css("visibility", "visible")
                        }
                        if (n <= e || this.autoheight) {
                            this.vScrollBar.css("visibility", "hidden")
                        }
                        if (n - e > 0) {
                            if (this.scrollmode != "deferred") {
                                var o = n - e;
                                var g = this.vScrollInstance.max;
                                this.vScrollBar.jqxScrollBar({
                                    max: o
                                });
                                if (Math.round(o) != Math.round(g)) {
                                    this.vScrollBar.jqxScrollBar({
                                        value: 0
                                    })
                                }
                            }
                        } else {
                            this.vScrollBar.jqxScrollBar({
                                value: 0,
                                max: n
                            })
                        }
                    } else {
                        if (!this._loading) {
                            this.vScrollBar.css("visibility", "hidden")
                        }
                        this.vScrollBar.jqxScrollBar({
                            value: 0
                        })
                    }
                    this._arrange();
                    if (this.virtualsizeinfo) {
                        this.virtualsizeinfo.virtualheight = n
                    }
                }
            }
        },
        scrolling: function() {
            var e = this.vScrollInstance.isScrolling();
            var d = this.hScrollInstance.isScrolling();
            return {
                vertical: e,
                horizontal: d
            }
        },
        _renderhorizontalscroll: function() {
            var s = this.hScrollInstance;
            var t = s.value;
            if (this.hScrollBar.css("visibility") === "hidden") {
                s.value = 0;
                t = 0
            }
            var k = parseInt(t);
            if (this.table == null) {
                return
            }
            var p = this.table[0].rows.length;
            var o = this.columnsrow;
            var q = this.groupable && this.groups.length > 0 ? this.groups.length: 0;
            var l = this.columns.records.length - q;
            var f = this.columns.records;
            var n = this.dataview.rows.length == 0;
            if (this.rtl) {
                if (this.hScrollBar.css("visibility") != "hidden") {
                    k = s.max - k
                }
            }
            if (n && !this._haspinned) {
                for (var v = 0; v < p; v++) {
                    var r = this.table[0].rows[v];
                    for (var u = 0; u < q + l; u++) {
                        var d = r.cells[u];
                        if (d != undefined) {
                            var g = f[u];
                            if (g.pinned) {
                                d.style.marginLeft = k + "px";
                                if (v == 0) {
                                    var e = o[0].cells[u];
                                    e.style.marginLeft = k + "px"
                                }
                            }
                        }
                    }
                }
                this.table[0].style.marginLeft = -k + "px";
                o[0].style.marginLeft = -k + "px"
            } else {
                if (this._haspinned || this._haspinned == undefined) {
                    for (var v = 0; v < p; v++) {
                        var r = this.table[0].rows[v];
                        for (var u = 0; u < q + l; u++) {
                            var d = r.cells[u];
                            if (d != undefined) {
                                var g = f[u];
                                if (g.pinned) {
                                    if (k == 0 && d.style.marginLeft == "") {
                                        continue
                                    }
                                    var h = null;
                                    var w = null;
                                    if (this.showfilterrow && this.filterrow) {
                                        if (this.filterrow[0].cells) {
                                            w = this.filterrow[0].cells[u]
                                        }
                                    }
                                    if (this.showaggregates) {
                                        if (this.statusbar[0].cells) {
                                            h = this.statusbar[0].cells[u]
                                        }
                                    }
                                    if (!this.rtl) {
                                        d.style.marginLeft = k + "px";
                                        if (v == 0) {
                                            var e = o[0].cells[u];
                                            e.style.marginLeft = k + "px";
                                            if (h) {
                                                h.style.marginLeft = k + "px"
                                            }
                                            if (w) {
                                                w.style.marginLeft = k + "px"
                                            }
                                        }
                                    } else {
                                        d.style.marginLeft = -parseInt(t) + "px";
                                        if (v == 0) {
                                            var e = o[0].cells[u];
                                            e.style.marginLeft = -parseInt(t) + "px";
                                            if (h) {
                                                h.style.marginLeft = -parseInt(t) + "px"
                                            }
                                            if (w) {
                                                w.style.marginLeft = -parseInt(t) + "px"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    this.table[0].style.marginLeft = -k + "px";
                    o[0].style.marginLeft = -k + "px"
                } else {
                    if (this._haspinned == false) {
                        this.table[0].style.marginLeft = -k + "px";
                        o[0].style.marginLeft = -k + "px"
                    }
                }
            }
            if (this.showaggregates) {
                if (this.statusbar[0].cells) {
                    var m = 0;
                    if (this.rtl) {
                        if (this.vScrollBar.css("visibility") != "hidden") {
                            if (this.hScrollBar.css("visibility") != "hidden") {
                                m = 2 + parseInt(this.hScrollBar.css("left"))
                            }
                        }
                    }
                    this.statusbar[0].style.marginLeft = -k + m + "px"
                }
            }
            if (this.showfilterrow && this.filterrow) {
                if (this.filterrow[0].cells) {
                    this.filterrow[0].style.marginLeft = -k + "px"
                }
            }
            if (this.showeverpresentrow && this.addnewrowtop) {
                if (this.addnewrowtop[0].cells) {
                    this.addnewrowtop[0].style.marginLeft = -k + "px"
                }
            }
        },
        _updaterowdetailsvisibility: function() {
            if (this.rowdetails) {
                for (var d = 0; d < this._rowdetailselementscache.length; d++) {
                    b(this._rowdetailselementscache[d]).css("display", "none")
                }
            }
        },
        _getvisualcolumnsindexes: function(e, n, i, m, d, l) {
            if (this.rowdetails || this.rtl || this.editcell || (this.width && this.width.toString().indexOf("%") >= 0) || this.exporting) {
                return {
                    start: 0,
                    end: i + m
                }
            }
            var f = 0;
            var k = -1;
            var g = i + m;
            var o = false;
            if (this.autorowheight) {
                return {
                    start: 0,
                    end: i + m
                }
            }
            if (!d) {
                for (var h = 0; h < i + m; h++) {
                    var p = h;
                    if (!o) {
                        if (this.columns.records[h].pinned && l) {
                            o = true
                        }
                    }
                    if (!this.columns.records[h].hidden) {
                        f += this.columns.records[h].width
                    }
                    if (f >= e && k == -1) {
                        k = h
                    }
                    if (f > n + e) {
                        g = h;
                        break
                    }
                }
            }
            g++;
            if (g > i + m) {
                g = i + m
            }
            if (k == -1 || o) {
                k = 0
            }
            return {
                start: k,
                end: g
            }
        },
        _getvirtualcolumnsindexes: function(e, m, i, l, d) {
            if (this.rtl || this.editcell || this.exporting) {
                return {
                    start: 0,
                    end: i + l
                }
            }
            var f = 0;
            var k = -1;
            var g = i + l;
            if (this.autorowheight) {
                return {
                    start: 0,
                    end: i + l
                }
            }
            if (!d) {
                for (var h = 0; h < i + l; h++) {
                    var n = h;
                    if (!this.columns.records[h].hidden) {
                        f += this.columns.records[h].width
                    }
                    if (f >= e && k == -1) {
                        k = h
                    }
                    if (f > m + e) {
                        g = h;
                        break
                    }
                }
            }
            g++;
            if (g > i + l) {
                g = i + l
            }
            if (k == -1) {
                k = 0
            }
            return {
                start: k,
                end: g
            }
        },
        _getfirstvisualrow: function() {
            var e = this.vScrollInstance;
            var g = e.value;
            var f = parseInt(g);
            if (this._pagescache.length == 0) {
                this.dataview.updateview();
                this._loadrows()
            }
            if (this.vScrollBar[0].style.visibility != "visible") {
                f = 0
            }
            if (!this.pageable) {
                var d = this._findvisiblerow(f, this._pageviews);
                if (d == -1) {
                    return null
                }
                if (d != this.dataview.pagenum) {
                    this.dataview.pagenum = d;
                    this.dataview.updateview();
                    this._loadrows()
                } else {
                    if (!this._pagescache[this.dataview.pagenum]) {
                        this._loadrows()
                    }
                }
            }
            var h = this._findvisiblerow(f, this._pagescache[this.dataview.pagenum]);
            var i = this._pagescache[this.dataview.pagenum];
            if (i && i[0]) {
                return i[h]
            }
        },
        _rendervisualrows: function() {
            if (!this.virtualsizeinfo) {
                return
            }
            var Y = this.vScrollInstance;
            var p = this.hScrollInstance;
            var j = Y.value;
            var C = p.value;
            var o = parseInt(j);
            var l = parseInt(C);
            var x = this._gettableheight();
            var J = this._hostwidth != undefined ? this._hostwidth: this.host.width();
            if (this.hScrollBar[0].style.visibility == "visible") {
                x += 29
            }
            if (this.scrollmode == "deferred" && this._newmax != 0) {
                if (o > this._newmax && this._newmax != null) {
                    o = this._newmax
                }
            }
            var ak = Y.isScrolling() || p.isScrolling() || this._keydown;
            var D = this.groupable && this.groups.length > 0;
            this.visiblerows = new Array();
            this.hittestinfo = new Array();
            if (this.editcell && this.editrow == undefined) {
                this._hidecelleditor(false)
            }
            if (this.editrow != undefined) {
                this._hideeditors()
            }
            if (this.virtualmode && !this.pageable) {
                this._pagescache = new Array()
            }
            if (this._pagescache.length == 0) {
                this.dataview.updateview();
                this._loadrows()
            }
            if (this.vScrollBar[0].style.visibility == "hidden") {
                o = 0
            }
            if (!this.pageable) {
                var L = this._findvisiblerow(o, this._pageviews);
                if (L == -1) {
                    this._clearvisualrows();
                    this._renderemptyrow();
                    this._updaterowdetailsvisibility();
                    return
                }
                if (L != this.dataview.pagenum) {
                    this.dataview.pagenum = L;
                    this.dataview.updateview();
                    this._loadrows()
                } else {
                    if (!this._pagescache[this.dataview.pagenum]) {
                        this._loadrows()
                    }
                }
            }
            var am = this.groupable && this.groups.length > 0 ? this.groups.length: 0;
            if (!this.columns.records) {
                return
            }
            var r = this.columns.records.length - am;
            var ac = this._findvisiblerow(o, this._pagescache[this.dataview.pagenum]);
            var M = this._pagescache[this.dataview.pagenum];
            var S = ac;
            if (S < 0) {
                S = 0
            }
            var af = 0;
            var ab = 0;
            var Q = 0;
            var e = 0;
            var U = this.virtualsizeinfo.visiblerecords;
            var P = this.groupable ? this.groups.length: 0;
            var B = this.toTP("jqx-grid-cell") + " " + this.toTP("jqx-item");
            if (this.rtl) {
                B += " " + this.toTP("jqx-grid-cell-rtl")
            }
            if ((this.autoheight || this.autorowheight) && this.pageable) {
                if (!this.groupable || (this.groupable && this.groups.length === 0)) {
                    U = this.dataview.pagesize
                }
            }
            if (D) {
                B = " " + this.toTP("jqx-grid-group-cell")
            }
            if (this.isTouchDevice()) {
                B += " " + this.toTP("jqx-touch")
            }
            if (this.autorowheight) {
                B += " jqx-grid-cell-wrap"
            }
            var O = this.rowsheight;
            var G = S;
            var al = this._rendercell;
            var u = true;
            var q = this._getvisualcolumnsindexes(l, J, am, r, D, true);
            var d = q.start;
            var aa = q.end;
            var t = this._getvirtualcolumnsindexes(l, J, am, r, D);
            var I = t.start;
            var h = t.end;
            var ae = b.jqx.browser.msie && b.jqx.browser.version < 9;
            if ((this.autoheight || this.pageable) && this.autorowheight) {
                if (this._pageviews[0]) {
                    this._oldpageviewheight = this._pageviews[0].height
                }
            }
            if (this.autorowheight) {
                S = 0
            }
            if (S >= 0) {
                this._updaterowdetailsvisibility();
                this._startboundindex = M != null ? M[S].bounddata.boundindex: 0;
                this._startvisibleindex = M != null ? M[S].bounddata.visibleindex: 0;
                var A = this.table[0].rows;
                if (this.columns.records.length > 10 && this.enablecolumnsvirtualization) {
                    var H = function(i) {
                        if (i.parentNode && i.parentNode.nodeName != "#document-fragment") {
                            return true
                        }
                        return false
                    };
                    for (var ag = 0; ag < A.length; ag++) {
                        var k = A[ag];
                        for (var V = 0; V < I; V++) {
                            var ai = V;
                            if (this.columns.records[ai].pinned) {
                                continue
                            }
                            if (this.columns.records[ai].datafield == null) {
                                continue
                            }
                            var ah = k.cells[ai];
                            if (H(ah)) {
                                ah.parentNode.removeChild(ah)
                            }
                            var R = this.columns.records[ai].element;
                            if (H(R)) {
                                this.columnsrow[0].removeChild(R)
                            }
                            if (this.filterrow) {
                                if (H(this.filterrow[0].cells[ai]) && this.columns.records[ai].filterable) {
                                    this.filterrow[0].cells[ai].parentNode.removeChild(this.filterrow[0].cells[ai])
                                }
                            }
                        }
                        for (var V = h; V < this.columns.records.length; V++) {
                            var ai = V;
                            if (this.columns.records[ai].pinned) {
                                continue
                            }
                            if (this.columns.records[ai].datafield == null) {
                                continue
                            }
                            var ah = k.cells[ai];
                            if (H(ah)) {
                                ah.parentNode.removeChild(ah)
                            }
                            var R = this.columns.records[ai].element;
                            if (H(R)) {
                                this.columnsrow[0].removeChild(R)
                            }
                            if (this.filterrow) {
                                if (H(this.filterrow[0].cells[ai]) && this.columns.records[ai].filterable) {
                                    this.filterrow[0].cells[ai].parentNode.removeChild(this.filterrow[0].cells[ai])
                                }
                            }
                        }
                        for (var V = I; V < h; V++) {
                            var ai = V;
                            var ah = k.cells[ai];
                            if (!H(ah)) {
                                k.appendChild(ah)
                            }
                            var R = this.columns.records[ai].element;
                            if (!H(R)) {
                                this.columnsrow[0].appendChild(R)
                            }
                            if (this.filterrow && !H(this.filterrow[0].cells[ai]) && this.columns.records[ai].filterable) {
                                this.filterrow[0].firstChild.appendChild(this.filterrow[0].cells[ai])
                            }
                        }
                    }
                }
                for (var n = 0; n < U && ab < U; n++) {
                    var ad = M != undefined ? M[S + n] : null;
                    if (ad == null) {
                        S = -n;
                        if (this._pagescache[this.dataview.pagenum + 1]) {
                            M = this._pagescache[this.dataview.pagenum + 1];
                            this.dataview.pagenum++
                        } else {
                            var s = this._pageviews.length;
                            do {
                                if (this.dataview.pagenum < this._pageviews.length - 1) {
                                    this.dataview.pagenum++;
                                    M = undefined;
                                    if (this._pageviews[this.dataview.pagenum].height > 0) {
                                        this.dataview.updateview();
                                        this._loadrows();
                                        M = this._pagescache[this.dataview.pagenum]
                                    }
                                } else {
                                    M = undefined;
                                    break
                                }
                            } while ( M == undefined && this . dataview . pagenum < s )
                        }
                        if (M != undefined) {
                            ad = M[S + n]
                        }
                    }
                    if (ad != null) {
                        if (ad.hidden) {
                            continue
                        }
                        this._endboundindex = this._startboundindex + n;
                        this._endvisibleindex = this._startvisibleindex + n;
                        if (n == 0) {
                            var m = Math.abs(o - ad.top);
                            this.table[0].style.top = -m + "px";
                            e = -m
                        }
                        var k = this.table[0].rows[ab];
                        if (!k) {
                            continue
                        }
                        if (parseInt(k.style.height) != ad.height) {
                            k.style.height = parseInt(ad.height) + "px"
                        }
                        Q += ad.height;
                        var X = this.rowdetails && ad.rowdetails;
                        var w = !ad.rowdetailshidden;
                        if (X && w) {
                            k.style.height = parseInt(ad.height - ad.rowdetailsheight) + "px";
                            U++
                        }
                        var K = this._isrowselected(u, ad);
                        for (var V = d; V < aa; V++) {
                            var ai = V;
                            this._rendervisualcell(al, B, K, X, w, D, P, k, ad, ai, ab, ak)
                        }
                        if (ad.group != undefined && this._rendergroup) {
                            this._rendergroup(P, k, ad, am, r, ab, J)
                        }
                        if (this.autorowheight && (this.autoheight || this.pageable)) {
                            var O = this.rowsheight;
                            for (var V = d; V < aa; V++) {
                                if (this.editable && this.editcell && this.editcell.column == this.columns.records[V].datafield && this.editcell.row == this.getboundindex(ad)) {
                                    if (this.editcell.editor) {
                                        O = Math.max(O, this.editcell.editor.height());
                                        continue
                                    }
                                }
                                if (k.cells[V].firstChild) {
                                    O = Math.max(O, 8 + parseInt(k.cells[V].firstChild.offsetHeight))
                                }
                            }
                            k.style.height = parseInt(O) + "px";
                            this.heights[this._startboundindex + n] = O;
                            if (X && w) {
                                O += ad.rowdetailsheight
                            }
                            ad.height = O
                        }
                        this.visiblerows[this.visiblerows.length] = ad;
                        this.hittestinfo[this.hittestinfo.length] = {
                            row: ad,
                            visualrow: k,
                            details: false
                        };
                        if (X && w) {
                            ab++;
                            var k = this.table[0].rows[ab];
                            this._renderrowdetails(B, k, ad, am, r, ab);
                            this.visiblerows[this.visiblerows.length] = ad;
                            this.hittestinfo[this.hittestinfo.length] = {
                                row: ad,
                                visualrow: k,
                                details: true
                            }
                        }
                        if (!this.autorowheight) {
                            if (Q + e >= x) {
                                break
                            }
                        }
                    } else {
                        cansetheight = true;
                        this._clearvisualrow(l, D, ab, am, r);
                        if (Q + af + e <= x) {
                            af += O
                        }
                    }
                    ab++
                }
                this._horizontalvalue = l;
                if (af > 0) {
                    if (this.vScrollBar[0].style.visibility == "visible") {
                        var aj = parseInt(this.table.css("top"));
                        var F = this._pageviews[this._pageviews.length - 1];
                        var v = Y.max;
                        var E = F.top + F.height - x;
                        if (this.hScrollBar.css("visibility") == "visible") {
                            E += this.scrollbarsize + 20
                        }
                        if (v != E && !this.autorowheight) {
                            if (E >= 0) {
                                if (this.scrollmode != "deferred") {
                                    Y.max = E;
                                    Y.setPosition(Y.max)
                                } else {
                                    if (this._newmax != E) {
                                        this._newmax = E;
                                        this._rendervisualrows()
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if ((this.autoheight || this.pageable) && this.autorowheight) {
                this._pagescache = new Array();
                var W = 0;
                var g = 0;
                for (var ag = 0; ag < this.visiblerows.length; ag++) {
                    var z = this.visiblerows[ag];
                    z.top = W;
                    W += z.height;
                    g += z.height;
                    var X = this.rowdetails && z.rowdetails;
                    var w = !z.rowdetailshidden;
                    var k = this.table[0].rows[ag];
                    if (X && w) {
                        ag++
                    }
                    for (var V = d; V < aa; V++) {
                        var Z = this.columns.records[V];
                        if (!Z.hidden) {
                            if (!Z.cellsrenderer) {
                                var N = k.cells[V];
                                var f = 0;
                                if (N.firstChild) {
                                    var f = (z.height - parseInt(N.firstChild.offsetHeight) - 8) / 2;
                                    if (X && w) {
                                        var f = (z.height - z.rowdetailsheight - b(N.firstChild).height() - 8) / 2
                                    }
                                } else {
                                    var f = (z.height - parseInt(b(N).height()) - 8) / 2
                                }
                                if (f >= 0) {
                                    f = parseInt(f) + 4;
                                    if (N.firstChild) {
                                        if (N.firstChild.className.indexOf("jqx-grid-groups-row") == -1) {
                                            if (Z.columntype != "checkbox" && Z.columntype != "button") {
                                                if (this.editable && this.editcell && this.editcell.column == Z.datafield && this.editcell.row == this.getboundindex(z)) {
                                                    continue
                                                }
                                                N.firstChild.style.marginTop = f + "px"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (this._pageviews[0]) {
                    this._pageviews[0].height = g
                }
                this._arrange()
            }
            this._renderemptyrow();
            if (this.toCompile && this.toCompile.length > 0) {
                var T = this;
                b.each(T.toCompile,
                function(y, an) {
                    if (this.compiled) {
                        return true
                    }
                    var i = this.cell;
                    if (!i) {
                        return true
                    }
                    if (b.jqx.angularCompile) {
                        b.jqx.angularCompile(i, "<div>" + this.value + "</div>")
                    }
                    this.compiled = true
                })
            }
        },
        _hideemptyrow: function() {
            if (!this.showemptyrow) {
                return
            }
            if (!this.table) {
                return
            }
            if (!this.table[0].rows) {
                return
            }
            var f = this.table[0].rows[0];
            if (!f) {
                return
            }
            var g = false;
            for (var e = 0; e < f.cells.length; e++) {
                var d = b(f.cells[e]);
                if (d.css("display") != "none" && !g) {
                    if (d.width() == this.host.width() || d.text() == this.gridlocalization.emptydatastring) {
                        d[0].checkbox = null;
                        d[0].button = null;
                        g = true;
                        d[0].innerHTML = ""
                    }
                }
            }
        },
        _renderemptyrow: function() {
            if (this._loading) {
                return
            }
            if (this.dataview.records.length == 0 && this.showemptyrow) {
                var l = false;
                var e = this.toTP("jqx-grid-cell");
                if (this.table && this.table.length > 0 && this.table[0].rows && this.table[0].rows.length > 0) {
                    var k = this.table[0].rows[0];
                    this.table[0].style.top = "0px";
                    for (var f = 0; f < k.cells.length; f++) {
                        var d = b(k.cells[f]);
                        if (d.css("display") != "none" && !l) {
                            d[0].checkbox = null;
                            d[0].button = null;
                            d[0].className = e;
                            l = true;
                            d[0].innerHTML = "";
                            var g = b("<span style='white-space: nowrap; float: left; margin-left: 50%; position: relative;'></span>");
                            g.text(this.gridlocalization.emptydatastring);
                            d.append(g);
                            var j = 0;
                            if (!this.oldhscroll) {
                                j = parseInt(this.table[0].style.marginLeft);
                                if (this.rtl) {
                                    d.css("z-index", 999);
                                    d.css("overflow", "visible")
                                }
                            }
                            g.css("left", -j - (g.width() / 2));
                            g.css("top", this._gettableheight() / 2 - g.height() / 2);
                            if (b.jqx.browser.msie && b.jqx.browser.version < 8) {
                                g.css("margin-left", "0px");
                                g.css("left", this.host.width() / 2 - g.width() / 2)
                            }
                            var h = Math.abs(parseInt(this.table[0].style.top));
                            if (isNaN(h)) {
                                h = 0
                            }
                            b(k).height(this._gettableheight() + h);
                            d.css("margin-left", "0px");
                            d.width(this.host.width());
                            if (this.table.width() < this.host.width()) {
                                this.table.width(this.host.width())
                            }
                        }
                        d.addClass(this.toThemeProperty("jqx-grid-empty-cell"))
                    }
                }
            }
        },
        _clearvisualrows: function() {
            var e = this.virtualsizeinfo.visiblerecords;
            var f = this.hScrollInstance;
            var d = f.value;
            var g = parseInt(d);
            var i = this.groupable && this.groups.length > 0;
            if (!this.columns.records) {
                return
            }
            for (var h = 0; h < e; h++) {
                this._clearvisualrow(g, i, h, 0, this.columns.records.length)
            }
        },
        _iscellselected: function(j, i, g) {
            var f = false;
            var e = 0;
            if (this.virtualmode && this.pageable && this.groupable) {
                if (this.groups.length > 0) {
                    e = this.dataview.pagesize * this.dataview.pagenum
                }
            }
            if (this.groups.length > 0 && this.pageable && this.groupable) {
                var d = this.getrowboundindexbyid(i.bounddata.uid);
                for (var h in this.selectedcells) {
                    if (h == d + "_" + g) {
                        f = true
                    }
                }
                return f
            }
            if (j && i.bounddata != null) {
                if (this.selectionmode != "singlerow") {
                    if (this.dataview.filters.length > 0) {
                        if (!this.virtualmode && i.bounddata.dataindex != undefined) {
                            for (var h in this.selectedcells) {
                                if (h == e + i.bounddata.dataindex + "_" + g) {
                                    f = true
                                }
                            }
                        } else {
                            for (var h in this.selectedcells) {
                                if (h == e + i.bounddata.boundindex + "_" + g) {
                                    f = true
                                }
                            }
                        }
                    } else {
                        for (var h in this.selectedcells) {
                            if (h == e + i.bounddata.boundindex + "_" + g) {
                                f = true;
                                break
                            }
                        }
                    }
                } else {
                    if (this.dataview.filters.length > 0) {
                        if (!this.virtualmode && i.bounddata.dataindex != undefined) {
                            for (var h in this.selectedcells) {
                                if (h == e + i.bounddata.dataindex + "_" + g) {
                                    f = true;
                                    break
                                }
                            }
                        } else {
                            for (var h in this.selectedcells) {
                                if (h == e + i.bounddata.boundindex + "_" + g) {
                                    f = true;
                                    break
                                }
                            }
                        }
                    } else {
                        for (var h in this.selectedcells) {
                            if (h == e + i.bounddata.boundindex == this.selectedrowindex) {
                                f = true;
                                break
                            }
                        }
                    }
                }
            }
            return f
        },
        _isrowselected: function(h, g) {
            var f = false;
            var e = 0;
            if (this.virtualmode && this.pageable && this.groupable) {
                if (this.groups.length > 0) {
                    e = this.dataview.pagesize * this.dataview.pagenum
                }
            }
            if (this.groupable && this.groups.length > 0 && this.pageable) {
                var d = this.getrowboundindexbyid(g.bounddata.uid);
                if (d == undefined || d == -1) {
                    return false
                }
                if (this.selectedrowindexes.indexOf(d) != -1) {
                    f = true
                }
                if (!f) {
                    f = d == this.selectedrowindex && this.selectedrowindex != -1
                }
                return f
            }
            if (h && g.bounddata != null) {
                if (this.selectionmode != "singlerow") {
                    if (this.dataview.filters.length > 0) {
                        if (!this.virtualmode && g.bounddata.dataindex != undefined) {
                            if (this.selectedrowindexes.indexOf(e + g.bounddata.dataindex) != -1) {
                                f = true
                            }
                        } else {
                            if (this.selectedrowindexes.indexOf(e + g.bounddata.boundindex) != -1) {
                                f = true
                            }
                        }
                    } else {
                        if (this.selectedrowindexes.indexOf(e + g.bounddata.boundindex) != -1) {
                            f = true
                        }
                    }
                } else {
                    if (this.dataview.filters.length > 0) {
                        if (!this.virtualmode && g.bounddata.dataindex != undefined) {
                            if (this.selectedrowindexes.indexOf(e + g.bounddata.dataindex) != -1) {
                                f = true
                            }
                        } else {
                            if (this.selectedrowindexes.indexOf(e + g.bounddata.boundindex) != -1) {
                                f = true
                            }
                        }
                    } else {
                        if (e + g.bounddata.boundindex == this.selectedrowindex) {
                            f = true
                        }
                    }
                }
            }
            return f
        },
        _rendervisualcell: function(z, i, p, k, t, x, j, q, d, h, s, n) {
            var f = null;
            var g = this.columns.records[h];
            if (g.hidden) {
                var e = q.cells[h];
                e.innerHTML = "";
                return
            }
            cellvalue = this._getcellvalue(g, d);
            var e = q.cells[h];
            var w = i;
            if (this.selectionmode.indexOf("cell") != -1) {
                if (this.dataview.filters.length > 0) {
                    if (this.selectedcells[d.bounddata.dataindex + "_" + g.datafield]) {
                        p = true
                    } else {
                        p = false
                    }
                } else {
                    if (this.selectedcells[d.boundindex + "_" + g.datafield]) {
                        p = true
                    } else {
                        p = false
                    }
                }
                if (this.editcell) {
                    if (this.editcell.row === d.boundindex && this.editcell.column === g.datafield) {
                        if (g.columntype !== "checkbox") {
                            p = false
                        }
                    }
                }
                if (this.virtualmode || (this.groupable && this.groups.length > 0 && this.pageable)) {
                    p = this._iscellselected(true, d, g.datafield)
                }
            }
            if (g.cellclassname != "" && g.cellclassname) {
                if (typeof g.cellclassname == "string") {
                    w += " " + g.cellclassname
                } else {
                    var m = g.cellclassname(this.getboundindex(d), g.datafield, cellvalue, d.bounddata);
                    if (m) {
                        w += " " + m
                    }
                }
            }
            var o = this.showsortcolumnbackground && this.sortcolumn && g.displayfield == this.sortcolumn;
            if (o) {
                w += " " + this.toTP("jqx-grid-cell-sort")
            }
            if (g.filter && this.showfiltercolumnbackground) {
                w += " " + this.toTP("jqx-grid-cell-filter")
            }
            if ((g.pinned && this.showpinnedcolumnbackground) || g.grouped) {
                if (x) {
                    w += " " + this.toTP("jqx-grid-cell-pinned")
                } else {
                    w += " " + this.toTP("jqx-grid-cell-pinned")
                }
            }
            if (this.altrows && d.group == undefined) {
                var y = d.visibleindex;
                if (y >= this.altstart) {
                    if ((this.altstart + y) % (1 + this.altstep) == 0) {
                        if (!o) {
                            w += " " + this.toTP("jqx-grid-cell-alt")
                        } else {
                            w += " " + this.toTP("jqx-grid-cell-sort-alt")
                        }
                        if (g.filter && this.showfiltercolumnbackground) {
                            w += " " + this.toTP("jqx-grid-cell-filter-alt")
                        }
                        if (g.pinned && this.showpinnedcolumnbackground) {
                            w += " " + this.toTP("jqx-grid-cell-pinned-alt")
                        }
                    }
                }
            }
            if (h <= j) {
                if (x || this.rowdetails) {
                    var u = b(e);
                    var l = this.columns.records[h].width;
                    if (e.style.width != parseInt(l) + "px") {
                        u.width(l)
                    }
                }
            } else {
                if (x || this.rowdetails) {
                    if (this._hiddencolumns) {
                        var u = b(e);
                        var l = this.columns.records[h].width;
                        if (parseInt(e.style.width) != l) {
                            u.width(l)
                        }
                    }
                }
            }
            var v = true;
            if (this.rowdetails && k) {
                if (t && !x) {
                    w += " " + this.toTP("jqx-grid-details-cell")
                } else {
                    if (x) {
                        w += " " + this.toTP("jqx-grid-group-details-cell")
                    }
                }
                if (this.showrowdetailscolumn) {
                    if (!this.rtl) {
                        if (d.group == undefined && h == j) {
                            var r = this.toThemeProperty("jqx-icon-arrow-down");
                            if (t) {
                                w += " " + this.toTP("jqx-grid-group-expand");
                                w += " " + r
                            } else {
                                w += " " + this.toTP("jqx-grid-group-collapse");
                                var r = this.toThemeProperty("jqx-icon-arrow-right");
                                w += " " + r
                            }
                            v = false;
                            e.title = "";
                            e.innerHTML = "";
                            if (e.className != w) {
                                e.className = w
                            }
                            return
                        }
                    } else {
                        if (d.group == undefined && h == q.cells.length - j - 1) {
                            var r = this.toThemeProperty("jqx-icon-arrow-down");
                            if (t) {
                                w += " " + this.toTP("jqx-grid-group-expand-rtl");
                                w += " " + r
                            } else {
                                w += " " + this.toTP("jqx-grid-group-collapse-rtl");
                                var r = this.toThemeProperty("jqx-icon-arrow-left");
                                w += " " + r
                            }
                            v = false;
                            e.title = "";
                            e.innerHTML = "";
                            if (e.className != w) {
                                e.className = w
                            }
                            return
                        }
                    }
                }
            }
            if (p && v && h >= j) {
                w += " " + this.toTP("jqx-grid-cell-selected");
                w += " " + this.toTP("jqx-fill-state-pressed")
            }
            if (e.className != w) {
                e.className = w
            }
            if (d.group != undefined) {
                cellvalue = "";
                e.title = "";
                e.innerHTML = "";
                return
            }
            z(this, g, d, cellvalue, e, n)
        },
        _rendercell: function(u, f, j, s, d, q) {
            var g = s + "_" + f.visibleindex;
            if (f.columntype == "number" || f.cellsrenderer != null) {
                var g = j.uniqueid + "_" + f.visibleindex
            }
            if (f.columntype == "number") {
                s = j.visibleindex
            }
            if (u.editcell && u.editrow == undefined) {
                if (u.editmode == "selectedrow" && f.editable && u.editable) {
                    if (u.editcell.row == u.getboundindex(j)) {
                        if (u._showcelleditor) {
                            if (!u.hScrollInstance.isScrolling() && !u.vScrollInstance.isScrolling()) {
                                u._showcelleditor(u.editcell.row, f, d, u.editcell.init)
                            } else {
                                u._showcelleditor(u.editcell.row, f, d, false, false)
                            }
                            return
                        }
                    }
                } else {
                    if (u.editcell.row == u.getboundindex(j) && u.editcell.column == f.datafield) {
                        u.editcell.element = d;
                        if (u.editcell.editing) {
                            if (u._showcelleditor) {
                                if (!u.hScrollInstance.isScrolling() && !u.vScrollInstance.isScrolling()) {
                                    u._showcelleditor(u.editcell.row, f, u.editcell.element, u.editcell.init)
                                } else {
                                    u._showcelleditor(u.editcell.row, f, u.editcell.element, u.editcell.init, false)
                                }
                                return
                            }
                        }
                    }
                }
            }
            var r = u._defaultcellsrenderer(s, f);
            var n = u._cellscache[g];
            if (n) {
                if (f.columntype == "inline") {
                    u._renderinlinecell(u, d, f, j, s);
                    if (f.cellsrenderer != null) {
                        var h = f.cellsrenderer(u.getboundindex(j), f.datafield, s, r, f.getcolumnproperties(), j.bounddata);
                        if (h != undefined) {
                            d.innerHTML = h
                        }
                    }
                    return
                } else {
                    if (f.columntype == "checkbox") {
                        if (u.host.jqxCheckBox) {
                            if (s === "") {
                                s = null
                            }
                            var m = d.innerHTML.toString().length == 0;
                            if (d.checkbox && !u.groupable && !m) {
                                d.checkboxrow = u.getboundindex(j);
                                if (s == "") {
                                    s = false
                                }
                                if (s == "1") {
                                    s = true
                                }
                                if (s == "0") {
                                    s = false
                                }
                                if (s == 1) {
                                    s = true
                                }
                                if (s == 0) {
                                    s = false
                                }
                                if (s == "true") {
                                    s = true
                                }
                                if (s == "false") {
                                    s = false
                                }
                                if (s == null && !f.threestatecheckbox) {
                                    s = false
                                }
                                if (f.checkboxcolumn) {
                                    s = false;
                                    if (u.dataview.filters.length > 0 && !u.virtualmode && j.bounddata.dataindex != undefined) {
                                        if (u.selectedrowindexes.indexOf(j.bounddata.dataindex) != -1) {
                                            s = true
                                        }
                                    } else {
                                        if (u.selectedrowindexes.indexOf(j.bounddata.boundindex) != -1) {
                                            s = true
                                        }
                                    }
                                }
                                if (!u.disabled) {
                                    if (d.checkboxinstance) {
                                        d.checkboxinstance._setState(s)
                                    } else {
                                        d.checkbox.jqxCheckBox("_setState", s)
                                    }
                                }
                            } else {
                                u._rendercheckboxcell(u, d, f, j, s)
                            }
                            if (f.cellsrenderer != null) {
                                var h = f.cellsrenderer(u.getboundindex(j), f.datafield, s, r, f.getcolumnproperties(), j.bounddata);
                                if (h != undefined) {
                                    d.innerHTML = h
                                }
                            }
                            return
                        }
                    } else {
                        if (f.columntype == "button") {
                            if (u.host.jqxButton) {
                                if (s == "") {
                                    s = false
                                }
                                if (f.cellsrenderer != null) {
                                    s = f.cellsrenderer(u.getboundindex(j), f.datafield, s, r, f.getcolumnproperties(), j.bounddata)
                                }
                                if (d.innerHTML == "") {
                                    d.buttonrow = u.getboundindex(j);
                                    d.button = null;
                                    u._renderbuttoncell(u, d, f, j, s)
                                }
                                if (d.button && !u.groupable) {
                                    d.buttonrow = u.getboundindex(j);
                                    d.button.val(s)
                                } else {
                                    u._renderbuttoncell(u, d, f, j, s)
                                }
                                return
                            }
                        }
                    }
                }
                var t = n.element;
                if (f.cellsrenderer != null || (d.childNodes && d.childNodes.length == 0) || u.groupable || u.rowdetails) {
                    if (d.innerHTML != t) {
                        d.innerHTML = t
                    }
                } else {
                    if (d.innerHTML.indexOf("editor") >= 0) {
                        d.innerHTML = t
                    } else {
                        if (q) {
                            var o = t.indexOf(">");
                            var l = t.indexOf("</");
                            var p = t.substring(o + 1, l);
                            var i = d.childNodes[0];
                            if (p.indexOf(">") >= 0) {
                                d.innerHTML = t
                            } else {
                                if (i.childNodes[0]) {
                                    if (p != i.childNodes[0].nodeValue) {
                                        if (p.indexOf("&") >= 0) {
                                            d.innerHTML = t
                                        } else {
                                            i.childNodes[0].nodeValue = p
                                        }
                                    }
                                } else {
                                    var e = document.createTextNode(p);
                                    i.appendChild(e)
                                }
                            }
                        } else {
                            if (d.innerHTML != t) {
                                d.innerHTML = t
                            }
                        }
                    }
                }
                if (u.enabletooltips && f.enabletooltips) {
                    d.title = n.title
                }
                return
            }
            if (f.columntype == "checkbox") {
                u._rendercheckboxcell(u, d, f, j, s);
                u._cellscache[g] = {
                    element: "",
                    title: s
                };
                if (u.enabletooltips && f.enabletooltips) {
                    d.title = s
                }
                return
            } else {
                if (f.columntype == "button") {
                    if (f.cellsrenderer != null) {
                        s = f.cellsrenderer(u.getboundindex(j), f.datafield, s, r, f.getcolumnproperties(), j.bounddata)
                    }
                    u._renderbuttoncell(u, d, f, j, s);
                    u._cellscache[g] = {
                        element: "",
                        title: s
                    };
                    if (u.enabletooltips && f.enabletooltips) {
                        d.title = s
                    }
                    return
                } else {
                    if (f.columntype == "number") {
                        s = j.visibleindex
                    } else {
                        if (f.columntype == "inline") {
                            u._renderinlinecell(u, d, f, j, s);
                            u._cellscache[g] = {
                                element: "",
                                title: s
                            };
                            if (u.enabletooltips && f.enabletooltips) {
                                d.title = s
                            }
                            return
                        }
                    }
                }
            }
            var t = null;
            if (f.cellsrenderer != null) {
                t = f.cellsrenderer(u.getboundindex(j), f.datafield, s, r, f.getcolumnproperties(), j.bounddata);
                if (t && (t.indexOf("<jqx-") >= 0 || t.indexOf(" ng-") >= 0)) {
                    if (u.toCompile) {
                        u.toCompile.push({
                            cell: d,
                            value: t,
                            row: u.getboundindex(j)
                        })
                    }
                    return
                }
            } else {
                t = r
            }
            if (t == null) {
                t = r
            }
            var k = s;
            if (u.enabletooltips && f.enabletooltips) {
                if (f.cellsformat != "") {
                    if (b.jqx.dataFormat) {
                        if (b.jqx.dataFormat.isDate(s)) {
                            k = b.jqx.dataFormat.formatdate(k, f.cellsformat, u.gridlocalization)
                        } else {
                            if (b.jqx.dataFormat.isNumber(s)) {
                                k = b.jqx.dataFormat.formatnumber(k, f.cellsformat, u.gridlocalization)
                            }
                        }
                    }
                }
                d.title = k
            }
            if (u.WinJS) {
                b(d).html(t)
            } else {
                d.innerHTML = t
            }
            u._cellscache[g] = {
                element: d.innerHTML,
                title: k
            };
            return true
        },
        _isIE10: function() {
            if (this._browser == undefined) {
                var e = b.jqx.utilities.getBrowser();
                if (e.browser == "msie" && parseInt(e.version) > 9) {
                    this._browser = true
                } else {
                    this._browser = false;
                    if (e.browser == "msie") {
                        var d = "Browser CodeName: " + navigator.appCodeName + "";
                        d += "Browser Name: " + navigator.appName + "";
                        d += "Browser Version: " + navigator.appVersion + "";
                        d += "Platform: " + navigator.platform + "";
                        d += "User-agent header: " + navigator.userAgent + "";
                        if (d.indexOf("Zune 4.7") != -1) {
                            this._browser = true
                        }
                    }
                }
            }
            return this._browser
        },
        _renderinlinecell: function(f, d, e, i, g) {
            var h = b(d);
            d.innerHTML = '<div style="position: absolute;"></div>'
        },
        _rendercheckboxcell: function(g, e, f, k, h) {
            if (g.host.jqxCheckBox) {
                var j = b(e);
                if (h === "") {
                    if (f.threestatecheckbox) {
                        h = null
                    } else {
                        h = false
                    }
                }
                if (h == "1") {
                    h = true
                }
                if (h == "0") {
                    h = false
                }
                if (h == 1) {
                    h = true
                }
                if (h == 0) {
                    h = false
                }
                if (h == "true") {
                    h = true
                }
                if (h == "false") {
                    h = false
                }
                if (f.checkboxcolumn) {
                    h = false;
                    var d = this.getboundindex(k);
                    if (this.selectedrowindexes.indexOf(d) != -1) {
                        h = true
                    }
                }
                if (j.find(".jqx-checkbox").length == 0) {
                    e.innerHTML = '<div style="position: absolute; top: 50%; left: 50%; margin-top: -7px; margin-left: -10px;"></div>';
                    b(e.firstChild).jqxCheckBox({
                        disabled: g.disabled,
                        _canFocus: false,
                        hasInput: false,
                        hasThreeStates: f.threestatecheckbox,
                        enableContainerClick: false,
                        animationShowDelay: 0,
                        animationHideDelay: 0,
                        locked: true,
                        theme: g.theme,
                        checked: h
                    });
                    if (this.editable && f.editable) {
                        b(e.firstChild).jqxCheckBox({
                            locked: false
                        })
                    }
                    if (f.checkboxcolumn) {
                        b(e.firstChild).jqxCheckBox({
                            locked: false
                        })
                    }
                    e.checkbox = b(e.firstChild);
                    e.checkboxinstance = e.checkbox.data().jqxCheckBox.instance;
                    e.checkboxrow = this.getboundindex(k);
                    var i = b.data(e.firstChild, "jqxCheckBox").instance;
                    i.updated = function(l, s, m) {
                        if (g.disabled) {
                            s = m;
                            var p = g.table[0].rows.length;
                            var r = g._getcolumnindex(f.datafield);
                            for (var o = 0; o < p; o++) {
                                var n = g.table[0].rows[o].cells[r].firstChild;
                                if (n) {
                                    b(n).jqxCheckBox({
                                        disabled: g.disabled
                                    })
                                }
                            }
                        }
                        if (f.editable && !g.disabled) {
                            var p = g.table[0].rows.length;
                            var r = g._getcolumnindex(f.datafield);
                            if (g.editrow == undefined) {
                                if (f.cellbeginedit) {
                                    var u = f.cellbeginedit(e.checkboxrow, f.datafield, f.columntype, !s);
                                    if (u == false) {
                                        g.setcellvalue(e.checkboxrow, f.datafield, !s, true);
                                        return
                                    }
                                }
                                if (f.cellvaluechanging) {
                                    var t = f.cellvaluechanging(e.checkboxrow, f.datafield, f.columntype, m, s);
                                    if (t != undefined) {
                                        s = t
                                    }
                                }
                                if (g.editmode !== "selectedrow") {
                                    for (var o = 0; o < p; o++) {
                                        var n = g.table[0].rows[o].cells[r].firstChild;
                                        if (n) {
                                            b(n).jqxCheckBox("destroy")
                                        }
                                    }
                                }
                                if (g.editcell && g.editcell.validated == false) {
                                    g.setcellvalue(e.checkboxrow, f.datafield, !s, true)
                                } else {
                                    if (g.editmode !== "selectedrow" || g.editcell == null) {
                                        var q = g.getrowdata(e.checkboxrow);
                                        g._raiseEvent(17, {
                                            rowindex: e.checkboxrow,
                                            row: q,
                                            datafield: f.datafield,
                                            value: m,
                                            columntype: f.columntype
                                        });
                                        g.setcellvalue(e.checkboxrow, f.datafield, s, true);
                                        g._raiseEvent(18, {
                                            rowindex: e.checkboxrow,
                                            row: q,
                                            datafield: f.datafield,
                                            oldvalue: m,
                                            value: s,
                                            columntype: f.columntype
                                        })
                                    } else {
                                        g.setcellvalue(e.checkboxrow, f.datafield, s, false, false)
                                    }
                                }
                                if (f.cellendedit) {
                                    f.cellendedit(e.checkboxrow, f.datafield, f.columntype, s)
                                }
                            }
                        } else {
                            if (f.checkboxcolumn) {
                                if (g.editcell) {
                                    g.endcelledit(g.editcell.row, g.editcell.column, false, true)
                                }
                                if (!g.disabled) {
                                    if (s) {
                                        g.selectrow(e.checkboxrow)
                                    } else {
                                        g.unselectrow(e.checkboxrow)
                                    }
                                    if (g.autosavestate) {
                                        if (g.savestate) {
                                            g.savestate()
                                        }
                                    }
                                }
                            }
                        }
                    }
                } else {
                    e.checkboxrow = this.getboundindex(k);
                    b(e.firstChild).jqxCheckBox("_setState", h, this.editable && f.editable)
                }
            }
        },
        _renderbuttoncell: function(h, e, g, k, i) {
            if (h.host.jqxButton) {
                var j = b(e);
                if (i == "") {
                    i = false
                }
                if (j.find(".jqx-button").length == 0) {
                    e.innerHTML = '<input type="button" style="opacity: 0.99; position: absolute; top: 0%; left: 0%; padding: 0px; margin-top: 2px; margin-left: 2px;"/>';
                    b(e.firstChild).val(i);
                    b(e.firstChild).attr("hideFocus", "true");
                    b(e.firstChild).jqxButton({
                        disabled: h.disabled,
                        theme: h.theme,
                        height: h.rowsheight - 4,
                        width: g.width - 4
                    });
                    e.button = b(e.firstChild);
                    e.buttonrow = h.getboundindex(k);
                    var d = this.isTouchDevice();
                    if (d) {
                        var f = b.jqx.mobile.getTouchEventName("touchend");
                        h.addHandler(b(e.firstChild), f,
                        function(l) {
                            if (g.buttonclick) {
                                g.buttonclick(e.buttonrow, l)
                            }
                        })
                    } else {
                        h.addHandler(b(e.firstChild), "click",
                        function(l) {
                            if (g.buttonclick) {
                                g.buttonclick(e.buttonrow, l)
                            }
                        })
                    }
                } else {
                    e.buttonrow = h.getboundindex(k);
                    b(e.firstChild).val(i)
                }
            }
        },
        _clearvisualrow: function(g, f, o, i, n) {
            var m = this.toTP("jqx-grid-cell");
            if (f) {
                m = " " + this.toTP("jqx-grid-group-cell")
            }
            m += " " + this.toTP("jqx-grid-cleared-cell");
            var p = this.table[0].rows;
            for (var k = 0; k < i + n; k++) {
                if (p[o]) {
                    var e = p[o].cells[k];
                    if (e.className != m) {
                        e.className = m
                    }
                    var d = this.columns.records[k];
                    if (this._horizontalvalue != g && !d.pinned) {
                        if (this.oldhscroll == true) {
                            var h = -g;
                            e.style.marginLeft = -g + "px"
                        }
                    }
                    var l = d.width;
                    if (l < d.minwidth) {
                        l = d.minwidth
                    }
                    if (l > d.maxwidth) {
                        l = d.maxwidth
                    }
                    if (parseInt(e.style.width) != l) {
                        if (l != "auto") {
                            b(e)[0].style.width = l + "px"
                        } else {
                            b(e)[0].style.width = l
                        }
                    }
                    if (e.title != "") {
                        e.title = ""
                    }
                    if (e.innerHTML != "") {
                        e.innerHTML = ""
                    }
                }
            }
            if (p[o]) {
                if (parseInt(p[o].style.height) != this.rowsheight) {
                    p[o].style.height = parseInt(this.rowsheight) + "px"
                }
            }
        },
        _findgroupstate: function(e) {
            var d = this._findgroup(e);
            if (d == null) {
                return false
            }
            return d.expanded
        },
        _findgroup: function(e) {
            var d = null;
            if (this.expandedgroups[e]) {
                return this.expandedgroups[e]
            }
            return d
        },
        _clearcaches: function() {
            this._columnsbydatafield = new Array();
            this._pagescache = new Array();
            this._pageviews = new Array();
            this._cellscache = new Array();
            this.heights = new Array();
            this.hiddens = new Array();
            this.hiddenboundrows = new Array();
            this.heightboundrows = new Array();
            this.detailboundrows = new Array();
            this.details = new Array();
            this.expandedgroups = new Array();
            this._rowdetailscache = new Array();
            this._rowdetailselementscache = new Array();
            if (b.jqx.dataFormat) {
                b.jqx.dataFormat.cleardatescache()
            }
            this.tableheight = null
        },
        _getColumnText: function(d) {
            if (this._columnsbydatafield == undefined) {
                this._columnsbydatafield = new Array()
            }
            if (this._columnsbydatafield[d]) {
                return this._columnsbydatafield[d]
            }
            var f = d;
            var e = null;
            b.each(this.columns.records,
            function() {
                if (this.datafield == d || this.displayfield == d) {
                    f = this.text;
                    e = this;
                    return false
                }
            });
            this._columnsbydatafield[d] = {
                label: f,
                column: e
            };
            return this._columnsbydatafield[d]
        },
        _getcolumnbydatafield: function(d) {
            if (this.__columnsbydatafield == undefined) {
                this.__columnsbydatafield = new Array()
            }
            if (this.__columnsbydatafield[d]) {
                return this.__columnsbydatafield[d]
            }
            var f = d;
            var e = null;
            b.each(this.columns.records,
            function() {
                if (this.datafield == d || this.displayfield == d) {
                    f = this.text;
                    e = this;
                    return false
                }
            });
            this.__columnsbydatafield[d] = e;
            return this.__columnsbydatafield[d]
        },
        isscrollingvertically: function() {
            var d = (this.vScrollBar.jqxScrollBar("isScrolling"));
            return d
        },
        _renderrowdetails: function(q, y, d, x, n, A) {
            if (y == undefined) {
                return
            }
            var E = b(y);
            var g = 0;
            var t = this.rowdetails && this.showrowdetailscolumn ? (1 + this.groups.length) * this.groupindentwidth: (this.groups.length) * this.groupindentwidth;
            if (this.groupable && this.groups.length > 0) {
                for (var r = 0; r <= n; r++) {
                    var e = b(y.cells[r]);
                    e[0].innerHTML = "";
                    e[0].className = "jqx-grid-details-cell"
                }
            }
            var e = b(y.cells[g]);
            if (e[0].style.display == "none") {
                var o = y.cells[g];
                var B = 2;
                var l = g;
                while (o != undefined && o.style.display == "none" && B < 10) {
                    o = y.cells[l + B - 1];
                    B++
                }
                e = b(o)
            }
            if (this.rtl) {
                for (var v = x; v < n; v++) {
                    y.cells[v].innerHTML = "";
                    y.cells[v].className = "jqx-grid-details-cell"
                }
            }
            e.css("width", "100%");
            E.height(d.rowdetailsheight);
            e[0].className = q;
            var p = this.getboundindex(d);
            var j = p + "_";
            if (this._rowdetailscache[j]) {
                var u = this._rowdetailscache[j];
                var C = u.html;
                if (this.initrowdetails) {
                    if (this._rowdetailscache[j].element) {
                        var f = this._rowdetailscache[j].element;
                        var i = e.coord();
                        var z = this.gridcontent.coord();
                        var w = parseInt(i.top) - parseInt(z.top);
                        var k = parseInt(i.left) - parseInt(z.left);
                        if (this.rtl) {
                            k = 0
                        }
                        b(f).css("top", w);
                        b(f).css("left", k);
                        b(f).css("display", "block");
                        b(f).width(this.host.width() - t);
                        if (this.layoutrowdetails) {
                            this.layoutrowdetails(p, f, this.element, this.getrowdata(p))
                        }
                    }
                } else {
                    e[0].innerHTML = C
                }
                return
            }
            e[0].innerHTML = "";
            if (!this.enablerowdetailsindent) {
                t = 0
            }
            var h = '<div class="jqx-enableselect" role="rowgroup" style="border: none; overflow: hidden; width: 100%; height: 100%; margin-left: ' + t + 'px;">' + d.rowdetails + "</div>";
            if (this.rtl) {
                var h = '<div class="jqx-enableselect" role="rowgroup" style="border: none; overflow: hidden; width: 100%; height: 100%; margin-left: ' + 0 + "px; margin-right: " + t + 'px;">' + d.rowdetails + "</div>"
            }
            this._rowdetailscache[j] = {
                id: y.id,
                html: h
            };
            if (this.initrowdetails) {
                var f = b(h)[0];
                b(this.gridcontent).prepend(b(f));
                b(f).css("position", "absolute");
                b(f).width(this.host.width() - t);
                b(f).height(e.height());
                var i = e.coord();
                b(f).css("z-index", 9999);
                if (this.isTouchDevice()) {
                    b(f).css("z-index", 99999)
                }
                b(f).addClass(this.toThemeProperty("jqx-widget-content"));
                var i = e.coord();
                var z = this.gridcontent.coord();
                var w = parseInt(i.top) - parseInt(z.top);
                var k = parseInt(i.left) - parseInt(z.left);
                b(f).css("top", w);
                b(f).css("left", k);
                this.content[0].scrollTop = 0;
                this.content[0].scrollLeft = 0;
                var D = b(b(f).children()[0]);
                if (D[0].id != "") {
                    D[0].id = D[0].id + p
                }
                this.initrowdetails(p, f, this.element, this.getrowdata(p));
                this._rowdetailscache[j].element = f;
                this._rowdetailselementscache[p] = f
            } else {
                e[0].innerHTML = h
            }
        },
        _defaultcellsrenderer: function(f, d) {
            if (d.cellsformat != "") {
                if (b.jqx.dataFormat) {
                    if (b.jqx.dataFormat.isDate(f)) {
                        f = b.jqx.dataFormat.formatdate(f, d.cellsformat, this.gridlocalization)
                    } else {
                        if (b.jqx.dataFormat.isNumber(f)) {
                            f = b.jqx.dataFormat.formatnumber(f, d.cellsformat, this.gridlocalization)
                        }
                    }
                }
            }
            var e = "4px";
            if (this.rowsheight != 25) {
                e = (this.rowsheight / 2 - this._cellheight / 2);
                if (e < 0) {
                    e = 4
                }
                e += "px"
            }
            if (this.enableellipsis) {
                if (d.cellsalign == "center" || d.cellsalign == "middle") {
                    return '<div style="text-overflow: ellipsis; overflow: hidden; padding-bottom: 2px; text-align: center; margin-top: ' + e + ';">' + f + "</div>"
                }
                if (d.cellsalign == "left") {
                    return '<div style="overflow: hidden; text-overflow: ellipsis; padding-bottom: 2px; text-align: left; margin-right: 2px; margin-left: 4px; margin-top: ' + e + ';">' + f + "</div>"
                }
                if (d.cellsalign == "right") {
                    return '<div style="overflow: hidden;  text-overflow: ellipsis; padding-bottom: 2px; text-align: right; margin-right: 2px; margin-left: 4px; margin-top: ' + e + ';">' + f + "</div>"
                }
            }
            if (d.cellsalign == "center" || d.cellsalign == "middle") {
                return '<div style="text-align: center; margin-top: ' + e + ';">' + f + "</div>"
            }
            return '<span style="margin-left: 4px; margin-right: 2px; margin-top: ' + e + "; float: " + d.cellsalign + ';">' + f + "</span>"
        },
        getcelltext: function(g, e) {
            if (g == null || e == null) {
                return null
            }
            var d = this.getcellvalue(g, e);
            var f = this.getcolumn(e);
            if (f && f.cellsformat != "") {
                if (b.jqx.dataFormat) {
                    if (b.jqx.dataFormat.isDate(d)) {
                        d = b.jqx.dataFormat.formatdate(d, f.cellsformat, this.gridlocalization)
                    } else {
                        if (b.jqx.dataFormat.isNumber(d)) {
                            d = b.jqx.dataFormat.formatnumber(d, f.cellsformat, this.gridlocalization)
                        }
                    }
                }
            }
            return d
        },
        getcelltextbyid: function(g, e) {
            if (g == null || e == null) {
                return null
            }
            var d = this.getcellvaluebyid(g, e);
            var f = this.getcolumn(e);
            if (f && f.cellsformat != "") {
                if (b.jqx.dataFormat) {
                    if (b.jqx.dataFormat.isDate(d)) {
                        d = b.jqx.dataFormat.formatdate(d, f.cellsformat, this.gridlocalization)
                    } else {
                        if (b.jqx.dataFormat.isNumber(d)) {
                            d = b.jqx.dataFormat.formatnumber(d, f.cellsformat, this.gridlocalization)
                        }
                    }
                }
            }
            return d
        },
        _getcellvalue: function(d, f) {
            var e = null;
            e = f.bounddata[d.datafield];
            if (d.displayfield != null) {
                e = f.bounddata[d.displayfield]
            }
            if (e == null) {
                e = ""
            }
            return e
        },
        getcell: function(h, d) {
            if (h == null || d == null) {
                return null
            }
            var e = parseInt(h);
            var g = h;
            var f = "";
            if (!isNaN(e)) {
                g = this.getrowdata(e)
            }
            if (g != null) {
                f = g[d]
            }
            return this._getcellresult(f, h, d)
        },
        getrenderedcell: function(h, d) {
            if (h == null || d == null) {
                return null
            }
            var e = parseInt(h);
            var g = h;
            var f = "";
            if (!isNaN(e)) {
                g = this.getrenderedrowdata(e)
            }
            if (g != null) {
                f = g[d]
            }
            return this._getcellresult(f, h, d)
        },
        _getcellresult: function(k, n, e) {
            var f = this.getcolumn(e);
            if (f == null || f == undefined) {
                return null
            }
            var i = f.getcolumnproperties();
            var g = i.hidden;
            var d = i.width;
            var m = i.pinned;
            var h = i.cellsalign;
            var j = i.cellsformat;
            var l = this.getrowheight(n);
            if (l == false) {
                return null
            }
            return {
                value: k,
                row: n,
                column: e,
                datafield: e,
                width: d,
                height: l,
                hidden: g,
                pinned: m,
                align: h,
                format: j
            }
        },
        setcellvaluebyid: function(i, d, h, f, g) {
            var e = this.getrowboundindexbyid(i);
            return this.setcellvalue(e, d, h, f, g)
        },
        getcellvaluebyid: function(f, d) {
            var e = this.getrowboundindexbyid(f);
            return this.getcellvalue(e, d)
        },
        setcellvalue: function(m, D, F, N, i) {
            if (m == null || D == null) {
                return false
            }
            var h = parseInt(m);
            var r = h;
            var A = m;
            if (!isNaN(h)) {
                A = this.getrowdata(h)
            }
            var L = false;
            if (this.filterable && this._initfilterpanel && this.dataview.filters.length) {
                L = true
            }
            if (this.virtualmode) {
                this._pagescache = new Array()
            }
            if (this.sortcache) {
                this.sortcache = {}
            }
            var n = "";
            var d = "";
            if (A != null && A[D] !== F) {
                if (A[D] === null && F === "") {
                    return
                }
                var G = this._getcolumnbydatafield(D);
                var O = "string";
                var t = this.source.datafields || ((this.source._source) ? this.source._source.datafields: null);
                if (t) {
                    var B = "";
                    b.each(t,
                    function() {
                        if (this.name == G.displayfield) {
                            if (this.type) {
                                B = this.type
                            }
                            return false
                        }
                    });
                    if (B) {
                        O = B
                    }
                    d = A[G.displayfield]
                }
                n = A[D];
                if (!G.nullable || (F != null && F !== "" && G.nullable && F.label === undefined)) {
                    if (b.jqx.dataFormat.isNumber(n) || O == "number" || O == "float" || O == "int" || O == "decimal" && O != "date") {
                        if (this.gridlocalization && this.gridlocalization.decimalseparator == ",") {
                            if (F && F.indexOf && F.indexOf(",") >= 0) {
                                F = F.replace(",", ".")
                            }
                        }
                        F = new Number(F);
                        F = parseFloat(F);
                        if (isNaN(F)) {
                            F = 0
                        }
                    } else {
                        if (b.jqx.dataFormat.isDate(n) || O == "date") {
                            if (F != "") {
                                var J = F;
                                J = new Date(J);
                                if (J != "Invalid Date" && J != null) {
                                    F = J
                                } else {
                                    if (J == "Invalid Date") {
                                        J = new Date();
                                        F = J
                                    }
                                }
                            }
                        }
                    }
                    if (A[D] === F) {
                        if (!this._updating && N != false) {
                            this._renderrows(this.virtualsizeinfo)
                        }
                        return
                    }
                }
                var y = this.source && this.source._source.localdata && this.source._source.localdata.name === "observableArray";
                A[D] = F;
                if (y) {
                    var M = this.source._source.localdata;
                    if (!M._updating) {
                        M._updating = true;
                        M[m][D] = F;
                        M._updating = false
                    }
                }
                var k = this.getrenderedrowdata(h, true);
                if (!k) {
                    return
                }
                k[D] = F;
                if (F != null && F.label != null) {
                    var G = this._getcolumnbydatafield(D);
                    A[G.displayfield] = F.label;
                    k[G.displayfield] = F.label;
                    A[D] = F.value;
                    k[D] = F.value;
                    if (y && !M._updating) {
                        M._updating = true;
                        M[m][D] = F.value;
                        M[m][G.displayfield] = F.label;
                        M._updating = false
                    }
                }
                if (L) {
                    if (A.dataindex != undefined) {
                        r = A.dataindex;
                        this.dataview.cachedrecords[A.dataindex][D] = F;
                        if (F != null && F.label != undefined) {
                            this.dataview.cachedrecords[A.dataindex][D] = F.value;
                            this.dataview.cachedrecords[A.dataindex][G.displayfield] = F.label
                        }
                    }
                }
            } else {
                if (!this._updating && N != false) {
                    this._renderrows(this.virtualsizeinfo)
                }
                return false
            }
            if (this.source && this.source._knockoutdatasource && !this._updateFromAdapter && this.autokoupdates) {
                if (this.source._source._localdata) {
                    var C = h;
                    if (L) {
                        if (A.dataindex != undefined) {
                            C = A.dataindex
                        }
                    }
                    var g = this.source._source._localdata()[C];
                    this.source.suspendKO = true;
                    var E = g;
                    if (E[D] && E[D].subscribe) {
                        if (F != null && F.label != null) {
                            E[G.displayfield](F.label);
                            E[D](F.value)
                        } else {
                            E[D](F)
                        }
                    } else {
                        var t = this.source._source.datafields;
                        var z = null;
                        var v = null;
                        if (t) {
                            b.each(t,
                            function() {
                                if (this.name == D) {
                                    v = this.map;
                                    return false
                                }
                            })
                        }
                        if (v == null) {
                            if (F != null && F.label != null) {
                                E[D] = F.value;
                                E[G.displayfield] = F.label
                            } else {
                                E[D] = F
                            }
                        } else {
                            var f = v.split(this.source.mapChar);
                            if (f.length > 0) {
                                var l = E;
                                for (var K = 0; K < f.length - 1; K++) {
                                    l = l[f[K]]
                                }
                                l[f[f.length - 1]] = F
                            }
                        }
                        this.source._source._localdata.replace(g, b.extend({},
                        E))
                    }
                    this.source.suspendKO = false
                }
            }
            if (this.sortcolumn && this.dataview.sortby && !this._updating) {
                var x = this.getsortinformation();
                if (this.sortcolumn == D) {
                    this.dataview.clearsortdata();
                    this.dataview.sortby(x.sortcolumn, x.sortdirection.ascending)
                }
            } else {
                if (!this._updating) {
                    if (this.dataview.sortby) {
                        if (this.dataview.sortcache[D]) {
                            this.dataview.sortcache[D] = null
                        }
                    }
                }
            }
            this._cellscache = new Array();
            if (this.source.updaterow && (i == undefined || i == true)) {
                var H = false;
                var o = this.that;
                var q = function(p) {
                    if (false == p) {
                        o.setcellvalue(m, D, n, true, false);
                        if (n != d) {
                            o.setcellvalue(m, o.getcolumn(D).displayfield, d, true, false)
                        }
                    }
                };
                try {
                    var j = this.getrowid(h);
                    H = this.source.updaterow(j, A, q);
                    if (H == undefined) {
                        H = true
                    }
                } catch(u) {
                    H = false;
                    o.setcellvalue(m, D, n, true, false);
                    if (n != d) {
                        o.setcellvalue(m, o.getcolumn(D).displayfield, d, true, false)
                    }
                    return
                }
            }
            var I = this.vScrollInstance.value;
            if (this._updating && N != true) {
                N = false
            }
            if (N == true || N == undefined) {
                var o = this.that;
                var e = function() {
                    if (o.pageable && o.updatepagerdetails) {
                        o.updatepagerdetails();
                        if (o.autoheight || o.autorowheight) {
                            o._updatepageviews()
                        }
                    }
                };
                var s = this.groupable && this.groups.length > 0;
                if (L && !s) {
                    if (this.autoheight || this.autorowheight) {
                        this.prerenderrequired = true
                    }
                    this.dataview.refresh();
                    this.rendergridcontent(true, false);
                    e();
                    this._renderrows(this.virtualsizeinfo)
                } else {
                    if (this.sortcolumn && !s) {
                        if (this.autoheight || this.autorowheight) {
                            this.prerenderrequired = true
                        }
                        this.dataview.reloaddata();
                        this.rendergridcontent(true, false);
                        e();
                        this._renderrows(this.virtualsizeinfo)
                    } else {
                        if (this.groupable && this.groups.length > 0) {
                            if (this.autoheight || this.autorowheight) {
                                this.prerenderrequired = true
                            }
                            if (this.pageable) {
                                if (this.groups.indexOf(D) != -1) {
                                    this._pagescache = new Array();
                                    this._cellscache = new Array();
                                    this.dataview.refresh();
                                    this._render(true, true, false, false)
                                } else {
                                    this._pagescache = new Array();
                                    this._cellscache = new Array();
                                    this.dataview.updateview();
                                    this._renderrows(this.virtualsizeinfo)
                                }
                            } else {
                                this._pagescache = new Array();
                                this._cellscache = new Array();
                                this.dataview.updateview();
                                this._renderrows(this.virtualsizeinfo)
                            }
                        } else {
                            this.dataview.updateview();
                            this._renderrows(this.virtualsizeinfo)
                        }
                    }
                }
            }
            this.vScrollInstance.setPosition(I);
            if (this.showaggregates && this._updatecolumnsaggregates) {
                this._updatecolumnsaggregates()
            }
            if (this.showfilterrow && this.filterable && this.filterrow) {
                var w = this.getcolumn(D).filtertype;
                if (w == "list" || w == "checkedlist") {
                    this._updatelistfilters(true)
                }
            }
            this._raiseEvent(19, {
                rowindex: m,
                datafield: D,
                newvalue: F,
                value: F,
                oldvalue: n
            });
            return true
        },
        getcellvalue: function(h, d) {
            if (h == null || d == null) {
                return null
            }
            var e = parseInt(h);
            var g = h;
            if (!isNaN(e)) {
                g = this.getrowdata(e)
            }
            if (g != null) {
                var f = g[d];
                return f
            }
            return null
        },
        getrows: function() {
            var h = this.dataview.records.length;
            if (this.virtualmode) {
                var j = new Array();
                for (var e = 0; e < this.dataview.records.length; e++) {
                    var d = this.dataview.records[e];
                    if (d) {
                        j.push(d)
                    }
                }
                if (this.dataview.records.length === undefined) {
                    b.each(this.dataview.records,
                    function() {
                        var i = this;
                        if (i) {
                            j.push(i)
                        }
                    })
                }
                var g = 0;
                if (this.pageable) {
                    g = this.dataview.pagenum * this.dataview.pagesize
                }
                if (j.length > this.source._source.totalrecords - g) {
                    return j.slice(0, this.source._source.totalrecords - g)
                }
                return j
            }
            if (this.dataview.sortdata) {
                var j = new Array();
                for (var e = 0; e < h; e++) {
                    var f = {};
                    f = b.extend({},
                    this.dataview.sortdata[e].value);
                    j[e] = f
                }
                return j
            } else {
                return this.dataview.records
            }
        },
        getrowboundindexbyid: function(g) {
            var f = this.dataview.recordsbyid["id" + g];
            if (f) {
                if (f.boundindex) {
                    return this.getboundindex(f)
                }
            }
            var e = this.getboundrows();
            for (var d = 0; d < e.length; d++) {
                if (e[d]) {
                    if (e[d].uid == g) {
                        return d
                    }
                }
            }
            return - 1
        },
        getrowdatabyid: function(f) {
            var e = this.dataview.recordsbyid["id" + f];
            if (e) {
                return e
            } else {
                var d = this.getrowboundindexbyid(f);
                return this.getboundrows()[d]
            }
            return null
        },
        getrowdata: function(d) {
            if (d == undefined) {
                d = 0
            }
            if (this.virtualmode) {
                var e = this.dataview.records[d];
                return e
            } else {
                var e = this.getboundrows()[d];
                return e
            }
            return null
        },
        getrenderedrowdata: function(d, f) {
            if (d == undefined) {
                d = 0
            }
            if (this.virtualmode) {
                var g = this.getrowvisibleindex(d);
                var e = this.dataview.loadedrecords[g];
                return e
            }
            var g = this.getrowvisibleindex(d);
            if (g >= 0) {
                if (this.groupable && this.groups.length > 0) {
                    var e = this.dataview.loadedrecords[g]
                } else {
                    var e = this.dataview.loadedrecords[g];
                    if (this.pageable && (f == undefined || f == false)) {
                        var e = this.dataview.loadedrecords[this.dataview.pagesize * this.dataview.pagenum + d]
                    }
                }
                return e
            }
            return null
        },
        getboundrows: function() {
            return this.dataview.cachedrecords
        },
        getrowdisplayindex: function(d) {
            var f = this.getdisplayrows();
            for (var e = 0; e < f.length; e++) {
                if (!f[e]) {
                    continue
                }
                if (f[e].dataindex !== undefined) {
                    if (f[e].dataindex == d) {
                        return f[e].visibleindex
                    }
                } else {
                    if (f[e].boundindex == d) {
                        return f[e].visibleindex
                    }
                }
            }
            return - 1
        },
        getboundindex: function(e) {
            var d = e.boundindex;
            if (this.groupable && this.groups.length > 0 && this.pageable) {
                if (e.bounddata) {
                    d = this.getrowboundindexbyid(e.bounddata.uid)
                }
            }
            if (this.dataview.filters.length > 0) {
                if (e.bounddata) {
                    if (e.bounddata.dataindex !== undefined) {
                        d = e.bounddata.dataindex
                    }
                } else {
                    if (e.dataindex !== undefined) {
                        d = e.dataindex
                    }
                }
            }
            return d
        },
        getrowboundindex: function(d) {
            var e = this.getdisplayrows()[d];
            if (e) {
                if (e.dataindex !== undefined) {
                    return e.dataindex
                }
                return e.boundindex
            }
            return - 1
        },
        getdisplayrows: function() {
            return this.dataview.loadedrecords
        },
        getloadedrows: function() {
            return this.getdisplayrows()
        },
        getvisiblerowdata: function(e) {
            var d = this.getvisiblerows();
            if (d) {
                return d[e]
            }
            return null
        },
        getloadedrowdata: function(e) {
            var d = this.getloadedrows();
            if (d) {
                return d[e]
            }
            return null
        },
        getvisiblerows: function() {
            if (this.virtualmode) {
                return this.dataview.loadedrecords
            }
            if (this.pageable) {
                var f = [];
                for (var e = 0; e < this.dataview.pagesize; e++) {
                    var d = this.dataview.loadedrecords[e + (this.dataview.pagesize * this.dataview.pagenum)];
                    if (d == undefined) {
                        break
                    }
                    f.push(d)
                }
                return f
            } else {
                if (this._startboundindex != undefined && this._endboundindex != undefined) {
                    var f = [];
                    for (var e = this._startvisibleindex; e <= this._endvisibleindex; e++) {
                        var d = this.dataview.loadedrecords[e];
                        if (d == undefined) {
                            break
                        }
                        f.push(d)
                    }
                    return f
                }
            }
            return this.dataview.loadedrecords
        },
        getrowid: function(d) {
            if (d == undefined) {
                d = 0
            }
            if (this.virtualmode) {
                var g = this.getrowvisibleindex(d);
                var f = this.dataview.loadedrecords[g];
                if (f) {
                    return f.uid
                }
            } else {
                var f = null;
                var e = this.dataview.filters.length > 0;
                if (d >= 0 && d < this.dataview.bounditems.length && !e) {
                    if (this.groupable && this.groups.length > 0) {
                        var g = this.getrowvisibleindex(d);
                        var f = this.dataview.loadedrecords[g]
                    } else {
                        var g = this.getrowvisibleindex(d);
                        var f = this.dataview.loadedrecords[g]
                    }
                    if (f) {
                        return f.uid
                    }
                }
                if (this.dataview.filters.length > 0) {
                    var f = this.getboundrows()[d];
                    if (f) {
                        if (f.uid != null) {
                            return f.uid
                        }
                    }
                    return null
                }
            }
            return null
        },
        _updateGridData: function(e) {
            var d = false;
            if (this.filterable && this._initfilterpanel && this.dataview.filters.length) {
                d = true
            }
            if (d) {
                this.dataview.refresh();
                if (e == "updaterow") {
                    this._render(true, true, false, false, false);
                    this.invalidate()
                } else {
                    this.render()
                }
            } else {
                if (this.sortcolumn || (this.groupable && this.groups.length > 0)) {
                    this.dataview.reloaddata();
                    this.render()
                } else {
                    this._cellscache = new Array();
                    this._pagescache = new Array();
                    this._renderrows(this.virtualsizeinfo)
                }
            }
            if (this.showfilterrow && this.filterable && this.filterrow) {
                this._updatelistfilters(true)
            }
        },
        updaterow: function(i, k, g) {
            if (i != undefined && k != undefined) {
                var h = this.that;
                var j = false;
                h._datachanged = true;
                var e = function(q, l, u) {
                    if (q._loading) {
                        throw new Error("jqxGrid: " + q.loadingerrormessage);
                        return false
                    }
                    var s = false;
                    if (!b.isArray(l)) {
                        s = q.dataview.updaterow(l, u)
                    } else {
                        b.each(l,
                        function(v, w) {
                            s = q.dataview.updaterow(this, u[v], false)
                        });
                        q.dataview.refresh()
                    }
                    var m = q.vScrollInstance.value;
                    if (g == undefined || g == true) {
                        if (q._updating == undefined || q._updating == false) {
                            q._updateGridData("updaterow")
                        }
                    }
                    if (q.showaggregates && q._updatecolumnsaggregates) {
                        q._updatecolumnsaggregates()
                    }
                    if (q.source && q.source._knockoutdatasource && !q._updateFromAdapter && q.autokoupdates) {
                        if (q.source._source._localdata) {
                            var n = q.dataview.recordsbyid["id" + l];
                            var o = q.dataview.records.indexOf(n);
                            var p = q.source._source._localdata()[o];
                            q.source.suspendKO = true;
                            q.source._source._localdata.replace(p, b.extend({},
                            n));
                            q.source.suspendKO = false
                        }
                    }
                    var r = q.source && q.source._source.localdata && q.source._source.localdata.name === "observableArray";
                    if (r) {
                        if (!q.source._source.localdata._updating) {
                            q.source._source.localdata._updating = true;
                            var t = q.getrowboundindexbyid(l);
                            q.source._source.localdata.set(t, u);
                            q.source._source.localdata._updating = false
                        }
                    }
                    q.vScrollInstance.setPosition(m);
                    return s
                };
                if (this.source.updaterow) {
                    var d = function(l) {
                        if (l == true || l == undefined) {
                            e(h, i, k)
                        } else {
                            j = false
                        }
                    };
                    try {
                        j = this.source.updaterow(i, k, d);
                        if (j == undefined) {
                            j = true
                        }
                    } catch(f) {
                        j = false
                    }
                } else {
                    j = e(h, i, k)
                }
                return j
            }
            return false
        },
        deleterow: function(d, k) {
            if (d != undefined) {
                this._datachanged = true;
                var o = false;
                var m = this.that;
                var p = this.getrowboundindexbyid(d);
                var e = new Array();
                var j = new Array();
                if (p != undefined) {
                    if (this.selectedrowindexes.indexOf(p) >= 0) {
                        this.selectedrowindexes.splice(this.selectedrowindexes.indexOf(p), 1)
                    }
                    if (this.selectedrowindex == p) {
                        this.selectedrowindex = -1
                    }
                    if (!this.virtualmode) {
                        if (m.selectionmode.indexOf("row") >= 0) {
                            b.each(this.selectedrowindexes,
                            function() {
                                var q = m.getrowid(this);
                                e.push(q)
                            });
                            this.selectedrowindexes = new Array();
                            this.selectedrowindex = -1
                        } else {
                            if (m.selectionmode.indexOf("cell") >= 0) {
                                for (var i in m.selectedcells) {
                                    var n = m.selectedcells[i];
                                    var h = m.getrowid(n.rowindex);
                                    n.rowid = h
                                }
                            }
                        }
                    }
                }
                var f = function(w, r) {
                    if (w._loading) {
                        throw new Error("jqxGrid: " + w.loadingerrormessage);
                        return false
                    }
                    var z = false;
                    var t = w.vScrollInstance.value;
                    if (!b.isArray(r)) {
                        var z = w.dataview.deleterow(r)
                    } else {
                        b.each(r,
                        function() {
                            z = w.dataview.deleterow(this, false)
                        });
                        w.dataview.refresh()
                    }
                    if (!w.virtualmode) {
                        if (w.selectionmode.indexOf("row") >= 0) {
                            b.each(e,
                            function() {
                                var B = w.getrowboundindexbyid(this);
                                if (B != -1) {
                                    w.selectrow(B, false)
                                }
                            })
                        } else {
                            var A = new Array();
                            for (var v in w.selectedcells) {
                                var y = w.selectedcells[v];
                                var u = y.rowid;
                                var s = w.getrowboundindexbyid(u);
                                if (s != -1) {
                                    y.rowindex = s;
                                    A[s + "_" + y.datafield] = y
                                }
                            }
                            w.selectedcells = A
                        }
                    }
                    if (w._updating == undefined || w._updating == false) {
                        if (k == undefined || k == true) {
                            w._render(true, true, false, false);
                            if (w.vScrollBar.css("visibility") != "visible") {
                                w._arrange();
                                w._updatecolumnwidths();
                                w._updatecellwidths();
                                w._renderrows(w.virtualsizeinfo)
                            }
                        }
                    }
                    if (w.source && w.source._knockoutdatasource && !w._updateFromAdapter && w.autokoupdates) {
                        if (w.source._source._localdata) {
                            w.source.suspendKO = true;
                            w.source._source._localdata.pop(rowdata);
                            w.source.suspendKO = false
                        }
                    }
                    var x = w.source && w.source._source.localdata && w.source._source.localdata.name === "observableArray";
                    if (x) {
                        if (!w.source._source.localdata._updating) {
                            w.source._source.localdata._updating = true;
                            w.source._source.localdata.splice(p, 1);
                            w.source._source.localdata._updating = false
                        }
                    }
                    if (w.dataview.sortby) {
                        var q = w.getsortinformation();
                        w.dataview.clearsortdata();
                        w.dataview.sortby(q.sortcolumn, q.sortdirection ? q.sortdirection.ascending: null)
                    }
                    w.vScrollInstance.setPosition(t);
                    return z
                };
                if (this.source.deleterow) {
                    var g = function(q) {
                        if (q == true || q == undefined) {
                            f(m, d)
                        }
                    };
                    try {
                        this.source.deleterow(d, g);
                        if (o == undefined) {
                            o = true
                        }
                    } catch(l) {
                        o = false
                    }
                } else {
                    o = f(m, d)
                }
                return o
            }
            return false
        },
        addrow: function(f, o, j) {
            if (o != undefined) {
                this._datachanged = true;
                if (j == undefined) {
                    j = "last"
                }
                var n = false;
                var m = this.that;
                if (f == null) {
                    var g = this.dataview.filters && this.dataview.filters.length > 0;
                    var l = !g ? this.dataview.totalrecords: this.dataview.cachedrecords.length;
                    if (!b.isArray(o)) {
                        f = this.dataview.getid(this.dataview.source.id, o, l);
                        while (null != this.dataview.recordsbyid["id" + f]) {
                            f++
                        }
                    } else {
                        var d = new Array();
                        b.each(o,
                        function(e, p) {
                            var q = m.dataview.getid(m.dataview.source.id, o[e], l + e);
                            d.push(q)
                        });
                        f = d
                    }
                }
                var h = function(s, r, v, e) {
                    if (s._loading) {
                        throw new Error("jqxGrid: " + s.loadingerrormessage);
                        return false
                    }
                    var u = s.vScrollInstance.value;
                    var t = false;
                    if (!b.isArray(v)) {
                        if (v != undefined && v.dataindex != undefined) {
                            delete v.dataindex
                        }
                        t = s.dataview.addrow(r, v, e)
                    } else {
                        b.each(v,
                        function(w, x) {
                            if (this.dataindex != undefined) {
                                delete this.dataindex
                            }
                            var y = null;
                            if (r != null && r[w] != null) {
                                y = r[w]
                            }
                            t = s.dataview.addrow(y, this, e, false)
                        });
                        s.dataview.refresh()
                    }
                    if (s._updating == undefined || s._updating == false) {
                        s._render(true, true, false, false);
                        s.invalidate()
                    }
                    if (s.source && s.source._knockoutdatasource && !s._updateFromAdapter && s.autokoupdates) {
                        if (s.source._source._localdata) {
                            s.source.suspendKO = true;
                            s.source._source._localdata.push(v);
                            s.source.suspendKO = false
                        }
                    }
                    var p = s.source && s.source._source.localdata && s.source._source.localdata.name === "observableArray";
                    if (p) {
                        if (!s.source._source.localdata._updating) {
                            s.source._source.localdata._updating = true;
                            var q = s.getrowboundindexbyid(r);
                            s.source._source.localdata.set(q, v);
                            s.source._source.localdata._updating = false
                        }
                    }
                    if (s.scrollmode != "deferred") {
                        s.vScrollInstance.setPosition(u)
                    } else {
                        s.vScrollInstance.setPosition(0)
                    }
                    return t
                };
                if (this.source.addrow) {
                    var i = function(e, p) {
                        if (e == true || e == undefined) {
                            if (p != undefined) {
                                f = p
                            }
                            h(m, f, o, j)
                        }
                    };
                    try {
                        n = this.source.addrow(f, o, j, i);
                        if (n == undefined) {
                            n = true
                        }
                    } catch(k) {
                        n = false
                    }
                    if (n == false) {
                        return false
                    }
                } else {
                    h(this, f, o, j)
                }
                return n
            }
            return false
        },
        _findvisiblerow: function(g, h) {
            if (g == undefined) {
                g = parseInt(this.vScrollInstance.value)
            }
            var e = 0;
            if (h == undefined || h == null) {
                h = this.rows.records
            }
            var d = h.length;
            while (e <= d) {
                mid = parseInt((e + d) / 2);
                var f = h[mid];
                if (f == undefined) {
                    break
                }
                if (f.top > g && f.top + f.height > g) {
                    d = mid - 1
                } else {
                    if (f.top < g && f.top + f.height < g) {
                        e = mid + 1
                    } else {
                        return mid;
                        break
                    }
                }
            }
            return - 1
        },
        _updatecellwidths: function() {
            var f = this.virtualsizeinfo;
            if (!f) {
                return
            }
            var p = this.that;
            if (p.gridcontent == undefined) {
                return
            }
            if (p.table == undefined) {
                p.table = p.gridcontent.find("#contenttable" + p.element.id)
            }
            var k = p.groupable && p.groups.length > 0;
            var q = 0;
            var l = f.visiblerecords;
            if (p.pageable && (p.autoheight || p.autorowheight)) {
                l = p.dataview.pagesize;
                if (p.groupable) {
                    p.dataview.updateview();
                    l = p.dataview.rows.length
                }
            }
            if (!p.groupable && !p.pageable && (p.autoheight || p.autorowheight)) {
                l = p.dataview.totalrecords
            }
            if (p.rowdetails) {
                l += p.dataview.pagesize
            }
            if (!p.columns.records) {
                return
            }
            var r = p.columns.records.length;
            var t = p.table[0].rows;
            for (var n = 0; n < l; n++) {
                var d = t[n];
                if (!d) {
                    break
                }
                var s = d.cells;
                var h = 0;
                for (var m = 0; m < r; m++) {
                    var g = p.columns.records[m];
                    var e = g.width;
                    var o = s[m];
                    if (parseInt(o.style.left) != h) {
                        o.style.left = h + "px"
                    }
                    if (parseInt(o.style.width) != e) {
                        o.style.width = e + "px"
                    }
                    if (! (g.hidden && g.hideable)) {
                        h += parseFloat(e)
                    } else {
                        o.style.display = "none"
                    }
                }
                if (q == 0) {
                    p.table.width(parseFloat(h) + 2);
                    q = h
                }
            }
            if (p.showaggregates && p._updateaggregates) {
                p._updateaggregates()
            }
            if (p.showfilterrow && p.filterable && p._updatefilterrowui) {
                p._updatefilterrowui()
            }
            if (p.showeverpresentrow) {
                p._updateaddnewrowui()
            }
            p._updatescrollbarsafterrowsprerender();
            if (k) {
                p._renderrows(p.virtualsizeinfo)
            }
        },
        _updatescrollbarsafterrowsprerender: function() {
            var g = this.that;
            var f = g.hScrollBar[0].style.visibility;
            var i = 0;
            var d = g.vScrollBar[0].style.visibility;
            if (d == "visible") {
                i = g.scrollbarsize + 3
            }
            if (g.scrollbarautoshow) {
                i = 0
            }
            var e = g.element.style.width;
            if (e.toString().indexOf("%") >= 0) {
                e = g.host.width()
            } else {
                e = parseInt(e)
            }
            if (parseInt(g.table[0].style.width) - 2 > e - i) {
                if (f != "visible") {
                    if (!g.autowidth) {
                        g.hScrollBar[0].style.visibility = "visible"
                    }
                    g._arrange()
                }
                if (d == "visible") {
                    if (g.scrollmode != "deferred" && !g.virtualmode) {
                        if (g.virtualsizeinfo) {
                            var h = g.virtualsizeinfo.virtualheight - g._gettableheight();
                            if (!isNaN(h) && h > 0) {
                                if (f != "hidden") {
                                    g.vScrollBar.jqxScrollBar("max", h + g.scrollbarsize + 4)
                                } else {
                                    g.vScrollBar.jqxScrollBar("max", h)
                                }
                            }
                        }
                    } else {
                        g._updatevscrollbarmax()
                    }
                } else {
                    i = -2
                }
                g.hScrollBar.jqxScrollBar("max", i + g.table.width() - g.host.width())
            } else {
                if (f != "hidden") {
                    g.hScrollBar.css("visibility", "hidden");
                    g._arrange()
                }
            }
            g._renderhorizontalscroll()
        },
        _prerenderrows: function(o) {
            var B = this.that;
            if (B.prerenderrequired == true) {
                B.prerenderrequired = false;
                if (B.editable && B._destroyeditors) {
                    B._destroyeditors()
                }
                if (B.gridcontent == undefined) {
                    return
                }
                B.gridcontent.find("#contenttable" + B.element.id).remove();
                if (B.table != null) {
                    B.table.remove();
                    B.table = null
                }
                B.table = b('<div id="contenttable' + B.element.id + '" style="overflow: hidden; position: relative;"></div>');
                B.gridcontent.addClass(B.toTP("jqx-grid-content"));
                B.gridcontent.addClass(B.toTP("jqx-widget-content"));
                B.gridcontent.append(B.table);
                var A = B.groupable && B.groups.length > 0;
                var p = 0;
                B.table[0].rows = new Array();
                var l = B.toTP("jqx-grid-cell");
                if (A) {
                    l = " " + B.toTP("jqx-grid-group-cell")
                }
                var u = o.visiblerecords;
                if (B.pageable && (B.autoheight || B.autorowheight)) {
                    u = B.dataview.pagesize;
                    if (B.groupable) {
                        B.dataview.updateview();
                        u = B.dataview.rows.length;
                        if (u < B.dataview.pagesize) {
                            u = B.dataview.pagesize
                        }
                    }
                }
                if (!B.pageable && (B.autoheight || B.autorowheight)) {
                    u = B.dataview.totalrecords
                }
                if (B.groupable && B.groups.length > 0 && (B.autoheight || B.autorowheight) && !B.pageable) {
                    u = B.dataview.rows.length
                }
                if (B.rowdetails) {
                    if (B.autoheight || B.autorowheight) {
                        u += B.dataview.pagesize
                    } else {
                        u += u
                    }
                }
                if (!B.columns.records) {
                    return
                }
                var z = B.columns.records.length;
                if (b.jqx.browser.msie && b.jqx.browser.version > 8) {
                    B.table.css("opacity", "0.99")
                }
                if (b.jqx.browser.mozilla) {}
                if (navigator.userAgent.indexOf("Safari") != -1) {
                    B.table.css("opacity", "0.99")
                }
                var r = b.jqx.browser.msie && b.jqx.browser.version < 8;
                if (r) {
                    B.host.attr("hideFocus", "true")
                }
                var k = B.tableZIndex;
                if (u * z > k) {
                    k = u * z
                }
                var g = B.dataview.records.length == 0;
                var n = B.isTouchDevice();
                var v = "";
                B._hiddencolumns = false;
                for (var y = 0; y < u; y++) {
                    var s = '<div role="row" style="position: relative; height:' + B.rowsheight + 'px;" id="row' + y + B.element.id + '">';
                    if (r) {
                        var s = '<div role="row" style="position: relative; z-index: ' + k + "; height:" + B.rowsheight + 'px;" id="row' + y + B.element.id + '">';
                        k--
                    }
                    var f = 0;
                    for (var w = 0; w < z; w++) {
                        var x = B.columns.records[w];
                        var t = x.width;
                        if (t < x.minwidth) {
                            t = x.minwidth
                        }
                        if (t > x.maxwidth) {
                            t = x.maxwidth
                        }
                        if (B.rtl) {
                            var q = k - z + 2 * w;
                            var d = '<div role="gridcell" style="left: ' + f + "px; z-index: " + q + "; width:" + t + "px;";
                            k--
                        } else {
                            var d = '<div role="gridcell" style="left: ' + f + "px; z-index: " + k--+"; width:" + t + "px;"
                        }
                        if (! (x.hidden && x.hideable)) {
                            f += t
                        } else {
                            d += "display: none;";
                            B._hiddencolumns = true;
                            k++
                        }
                        d += '" class="' + l + '"></div>';
                        s += d
                    }
                    if (p == 0) {
                        B.table.width(parseInt(f) + 2);
                        p = f
                    }
                    s += "</div>";
                    v += s
                }
                if (B.WinJS) {
                    MSApp.execUnsafeLocalFunction(function() {
                        B.table.html(v)
                    })
                } else {
                    B.table[0].innerHTML = v
                }
                B.table[0].rows = new Array();
                var m = B.table.children();
                for (var y = 0; y < u; y++) {
                    var h = m[y];
                    B.table[0].rows.push(h);
                    h.cells = new Array();
                    var e = b(h).children();
                    for (var w = 0; w < z; w++) {
                        h.cells.push(e[w])
                    }
                }
                if (u == 0) {
                    var f = 0;
                    if (B.showemptyrow) {
                        var s = b('<div style="position: relative;" id="row0' + B.element.id + '"></div>');
                        B.table.append(s);
                        s.height(B.rowsheight);
                        B.table[0].rows[0] = s[0];
                        B.table[0].rows[0].cells = new Array()
                    }
                    for (var w = 0; w < z; w++) {
                        var x = B.columns.records[w];
                        var t = x.width;
                        if (B.showemptyrow) {
                            var d = b('<div style="position: absolute; height: 100%; left: ' + f + "px; z-index: " + k--+"; width:" + t + 'px;" class="' + l + '"></div>');
                            d.height(B.rowsheight);
                            s.append(d);
                            B.table[0].rows[0].cells[w] = d[0]
                        }
                        if (t < x.minwidth) {
                            t = x.minwidth
                        }
                        if (t > x.maxwidth) {
                            t = x.maxwidth
                        }
                        if (! (x.hidden && x.hideable)) {
                            f += t
                        }
                    }
                    B.table.width(parseInt(f) + 2);
                    p = f
                }
                B._updatescrollbarsafterrowsprerender();
                if (B.rendered) {
                    B.rendered("rows")
                }
                B.toCompile = new Array();
                B._addoverlayelement()
            }
        },
        _groupsheader: function() {
            return this.groupable && this.showgroupsheader
        },
        _arrange: function() {
            var A = null;
            var x = null;
            this.tableheight = null;
            var F = this.that;
            var n = false;
            var m = false;
            if (F.width != null && F.width.toString().indexOf("px") != -1) {
                A = F.width
            } else {
                if (F.width != undefined && !isNaN(F.width)) {
                    A = F.width
                }
            }
            if (F.width != null && F.width.toString().indexOf("%") != -1) {
                A = F.width;
                n = true
            }
            if (F.scrollbarautoshow) {
                F.vScrollBar[0].style.display = "none";
                F.hScrollBar[0].style.display = "none";
                F.vScrollBar[0].style.zIndex = F.tableZIndex + F.headerZIndex;
                F.hScrollBar[0].style.zIndex = F.tableZIndex + F.headerZIndex
            }
            if (F.autowidth) {
                var p = 0;
                for (var B = 0; B < F.columns.records.length; B++) {
                    var e = F.columns.records[B].width;
                    if (e == "auto") {
                        e = F._measureElementWidth(F.columns.records[B].text);
                        p += e
                    } else {
                        p += e
                    }
                }
                if (F.vScrollBar.css("visibility") != "hidden") {
                    p += F.scrollbarsize + 4
                }
                A = p;
                F.width = A
            }
            if (F.height != null && F.height.toString().indexOf("px") != -1) {
                x = F.height
            } else {
                if (F.height != undefined && !isNaN(F.height)) {
                    x = F.height
                }
            }
            if (F.height != null && F.height.toString().indexOf("%") != -1) {
                x = F.height;
                m = true
            }
            var k = function() {
                var i = 0;
                var w = F.showheader ? F.columnsheader != null ? F.columnsheader.height() + 2 : 0 : 0;
                i += w;
                if (F.pageable) {
                    i += F.pagerheight
                }
                if (F._groupsheader()) {
                    i += F.groupsheaderheight
                }
                if (F.showtoolbar) {
                    i += F.toolbarheight
                }
                if (F.showstatusbar) {
                    i += F.statusbarheight
                }
                if (F.showeverpresentrow && F.everpresentrowposition === "bottom") {
                    i += F.everpresentrowheight
                }
                if (F.hScrollBar[0].style.visibility == "visible") {
                    i += 20
                }
                return i
            };
            if (F.autoheight && F.virtualsizeinfo) {
                if (F.pageable && F.gotopage) {
                    var C = 0;
                    x = C + (F._pageviews[0] ? F._pageviews[0].height: 0);
                    x += k();
                    if (F.showemptyrow && F.dataview.totalrecords == 0) {
                        x += F.rowsheight
                    }
                } else {
                    var C = F.host.height() - F._gettableheight();
                    if (F._pageviews.length > 0) {
                        x = C + F._pageviews[F._pageviews.length - 1].height + F._pageviews[F._pageviews.length - 1].top;
                        F.vScrollBar[0].style.visibility = "hidden"
                    } else {
                        x = k();
                        if (F.showemptyrow) {
                            x += F.rowsheight
                        }
                    }
                }
            } else {
                if (F.autoheight) {
                    x = F.dataview.totalrecords * F.rowsheight;
                    if (F._loading) {
                        x = 250;
                        F.dataloadelement.height(x)
                    }
                    x += k();
                    if (x > 10000) {
                        x = 10000
                    }
                }
            }
            if (A != null) {
                A = parseInt(A);
                if (!n) {
                    if (F.element.style.width != parseInt(F.width) + "px") {
                        F.element.style.width = parseInt(F.width) + "px"
                    }
                } else {
                    F.element.style.width = F.width
                }
                if (n) {
                    A = F.host.width();
                    if (A <= 2) {
                        A = 600;
                        F.host.width(A)
                    }
                    if (!F._oldWidth) {
                        F._oldWidth = A
                    }
                }
            } else {
                F.host.width(250)
            }
            if (x != null) {
                if (!m) {
                    x = parseInt(x)
                }
                if (!m) {
                    if (F.element.style.height != parseInt(x) + "px") {
                        F.element.style.height = parseInt(x) + "px"
                    }
                } else {
                    F.element.style.height = F.height
                }
                if (m && !F.autoheight) {
                    x = F.host.height();
                    if (x == 0) {
                        x = 400;
                        F.host.height(x)
                    }
                    if (!F._oldHeight) {
                        F._oldHeight = x
                    }
                }
            } else {
                F.host.height(250)
            }
            if (F.autoheight) {
                F.tableheight = null;
                F._gettableheight()
            }
            var v = 0;
            if (F.showtoolbar) {
                F.toolbar.width(A);
                F.toolbar.height(F.toolbarheight - 1);
                F.toolbar.css("top", 0);
                v += F.toolbarheight;
                x -= parseInt(F.toolbarheight)
            } else {
                F.toolbar[0].style.height = "0px"
            }
            if (F.showstatusbar) {
                if (F.showaggregates) {
                    F.statusbar.width(!F.table ? A: Math.max(A, F.table.width()))
                } else {
                    F.statusbar.width(A)
                }
                F.statusbar.height( - 1 + F.statusbarheight)
            } else {
                F.statusbar[0].style.height = "0px"
            }
            if (F.showeverpresentrow && F.everpresentrowposition === "bottom") {
                F.addnewrow.width(A);
                F.addnewrow.height(F.everpresentrowheight)
            } else {
                F.addnewrow[0].style.height = "0px"
            }
            if (F._groupsheader()) {
                F.groupsheader.width(A);
                F.groupsheader.height(F.groupsheaderheight);
                F.groupsheader.css("top", v);
                var y = F.groupsheader.height() + 1;
                v += y;
                if (x > y) {
                    x -= parseInt(y)
                }
            } else {
                if (F.groupsheader[0].style.width != A + "px") {
                    F.groupsheader[0].style.width = parseInt(A) + "px"
                }
                F.groupsheader[0].style.height = "0px";
                if (F.groupsheader[0].style.top != v + "px") {
                    F.groupsheader.css("top", v)
                }
                var y = F.showgroupsheader && F.groupable ? F.groupsheaderheight: 0;
                var f = v + y + "px";
                if (F.content[0].style.top != f) {
                    F.content.css("top", v + F.groupsheaderheight)
                }
            }
            var d = F.scrollbarsize;
            if (isNaN(d)) {
                d = parseInt(d);
                if (isNaN(d)) {
                    d = "17px"
                } else {
                    d = d + "px"
                }
            }
            d = parseInt(d);
            var s = 4;
            var h = 2;
            var j = 0;
            if (F.vScrollBar[0].style.visibility == "visible") {
                j = d + s
            }
            if (F.hScrollBar[0].style.visibility == "visible") {
                h = d + s + 2
            }
            var r = 0;
            if (F.pageable) {
                r = F.pagerheight;
                h += F.pagerheight
            }
            if (F.showstatusbar) {
                h += F.statusbarheight;
                r += F.statusbarheight
            }
            if (F.showeverpresentrow && F.everpresentrowposition === "bottom") {
                h += F.everpresentrowheight;
                r += F.everpresentrowheight
            }
            if (F.hScrollBar[0].style.height != d + "px") {
                F.hScrollBar[0].style.height = parseInt(d) + "px"
            }
            if (F.hScrollBar[0].style.top != v + x - s - d - r + "px" || F.hScrollBar[0].style.left != "0px") {
                F.hScrollBar.css({
                    top: v + x - s - d - r + "px",
                    left: "0px"
                })
            }
            var q = F.hScrollBar[0].style.width;
            var l = false;
            var D = false;
            if (j == 0) {
                if (q != (A - 2) + "px") {
                    F.hScrollBar.width(A - 2);
                    l = true
                }
            } else {
                if (q != (A - d - s) + "px") {
                    F.hScrollBar.width(A - d - s + "px");
                    l = true
                }
            }
            if (!F.autoheight) {
                if (F.vScrollBar[0].style.width != d + "px") {
                    F.vScrollBar.width(d);
                    D = true
                }
                if (F.vScrollBar[0].style.height != parseInt(x) - h + "px") {
                    F.vScrollBar.height(parseInt(x) - h + "px");
                    D = true
                }
                if (F.vScrollBar[0].style.left != parseInt(A) - parseInt(d) - s + "px" || F.vScrollBar[0].style.top != v + "px") {
                    F.vScrollBar.css({
                        left: parseInt(A) - parseInt(d) - s + "px",
                        top: v
                    })
                }
            }
            if (F.rtl) {
                F.vScrollBar.css({
                    left: "0px",
                    top: v
                });
                if (F.vScrollBar.css("visibility") != "hidden") {
                    F.hScrollBar.css({
                        left: d + 2
                    })
                }
            }
            var o = F.vScrollInstance;
            o.disabled = F.disabled;
            if (!F.autoheight) {
                if (D) {
                    o.refresh()
                }
            }
            var z = F.hScrollInstance;
            z.disabled = F.disabled;
            if (l) {
                z.refresh()
            }
            if (F.autowidth) {
                F.hScrollBar[0].style.visibility = "hidden"
            }
            F.statusbarheight = parseInt(F.statusbarheight);
            F.toolbarheight = parseInt(F.toolbarheight);
            var t = function(w) {
                if ((w.vScrollBar[0].style.visibility == "visible") && (w.hScrollBar[0].style.visibility == "visible")) {
                    w.bottomRight[0].style.visibility = "visible";
                    w.bottomRight.css({
                        left: 1 + parseInt(w.vScrollBar.css("left")),
                        top: parseInt(w.hScrollBar.css("top"))
                    });
                    if (w.rtl) {
                        w.bottomRight.css("left", "0px")
                    }
                    w.bottomRight.width(parseInt(d) + 3);
                    w.bottomRight.height(parseInt(d) + 4);
                    var G = w.showeverpresentrow && w.everpresentrowposition == "bottom";
                    var i = G ? w.everpresentrowheight: 0;
                    if (i > 0 && !w.showaggregates) {
                        w.bottomRight.css("z-index", 99);
                        w.bottomRight.height(parseInt(d) + 4 + i);
                        w.bottomRight.css({
                            top: parseInt(w.hScrollBar.css("top")) - i
                        })
                    }
                    if (w.showaggregates) {
                        w.bottomRight.css("z-index", 99);
                        w.bottomRight.height(parseInt(d) + 4 + w.statusbarheight + i);
                        w.bottomRight.css({
                            top: parseInt(w.hScrollBar.css("top")) - w.statusbarheight - i
                        })
                    }
                } else {
                    w.bottomRight[0].style.visibility = "hidden"
                }
            };
            t(this);
            if (F.content[0].style.width != A - j + "px") {
                F.content.width(A - j)
            }
            if (F.content[0].style.height != x - h + 3 + "px") {
                F.content.height(x - h + 3)
            }
            if (F.scrollbarautoshow) {
                if (F.content[0].style.width != A + "px") {
                    F.content.width(A)
                }
                if (F.content[0].style.height != x + "px") {
                    F.content.height(x)
                }
            }
            if (F.content[0].style.top != v + "px") {
                F.content.css("top", v)
            }
            if (F.rtl) {
                F.content.css("left", j);
                if (F.scrollbarautoshow) {
                    F.content.css("left", "0px")
                }
                if (F.table) {
                    var u = F.table.width();
                    if (u < A - j) {
                        F.content.css("left", A - u)
                    }
                }
            }
            if (F.showstatusbar) {
                F.statusbar.css("top", v + x - F.statusbarheight - (F.pageable ? F.pagerheight: 0));
                if (F.showaggregates) {
                    if (F.hScrollBar.css("visibility") == "visible") {
                        F.hScrollBar.css({
                            top: v + x - s - d - r + F.statusbarheight + "px"
                        });
                        F.statusbar.css("top", 1 + v + x - d - 5 - F.statusbarheight - (F.pageable ? F.pagerheight: 0))
                    }
                    t(this)
                }
                if (F.rtl) {
                    if (F.hScrollBar.css("visibility") != "visible") {
                        F.statusbar.css("left", F.content.css("left"))
                    } else {
                        F.statusbar.css("left", "0px")
                    }
                }
            }
            if (F.showeverpresentrow && F.everpresentrowposition === "bottom") {
                F.addnewrow.css("top", v + x - (F.showstatusbar ? F.statusbarheight: 0) - (F.pageable ? F.pagerheight: 0) - F.everpresentrowheight);
                if (F.rtl) {
                    if (F.hScrollBar.css("visibility") != "visible") {
                        F.addnewrow.css("left", F.content.css("left"))
                    } else {
                        F.addnewrow.css("left", "0px")
                    }
                }
            }
            if (F.pageable) {
                F.pager.width(A);
                F.pager.height(F.pagerheight);
                F.pager.css("top", v + x - F.pagerheight - 1)
            } else {
                F.pager[0].style.height = "0px"
            }
            if (F.table != null) {
                var g = -2;
                if (F.vScrollBar[0].style.visibility == "visible") {
                    g = F.scrollbarsize + 3
                }
                if (F.hScrollBar[0].style.visibility == "visible") {
                    var E = g + F.table.width() - F.host.width();
                    if (E >= 0) {
                        F.hScrollBar.jqxScrollBar("max", E)
                    }
                    if (F.hScrollBar[0].style.visibility == "visible" && E == 0) {
                        F.hScrollBar[0].style.visibility = "hidden";
                        F._arrange()
                    }
                }
            }
            if (A != parseInt(F.dataloadelement[0].style.width)) {
                F.dataloadelement[0].style.width = F.element.style.width
            }
            if (x != parseInt(F.dataloadelement[0].style.height)) {
                F.dataloadelement[0].style.height = F.element.style.height
            }
            F._hostwidth = A
        },
        destroy: function() {
            delete b.jqx.dataFormat.datescache;
            delete this.gridlocalization;
            b.jqx.utilities.resize(this.host, null, true);
            if (this.table && this.table[0]) {
                var m = this.table[0].rows.length;
                for (var k = 0; k < m; k++) {
                    var q = this.table[0].rows[k];
                    var p = q.cells;
                    var f = p.length;
                    for (var h = 0; h < f; h++) {
                        b(q.cells[h]).remove();
                        q.cells[h] = null;
                        delete q.cells[h]
                    }
                    q.cells = null;
                    if (q.cells) {
                        delete q.cells
                    }
                    b(this.table[0].rows[k]).remove();
                    this.table[0].rows[k] = null
                }
                try {
                    delete this.table[0].rows
                } catch(n) {}
                this.table.remove();
                delete this.table
            }
            if (this.columns && this.columns.records) {
                for (var k = 0; k < this.columns.records.length; k++) {
                    var e = this.columns.records[k];
                    if (e.addnewrowwidget) {
                        if (e.destroyeverpresentrowwidget) {
                            e.destroyeverpresentrowwidget(e.addnewrowwidget)
                        }
                    }
                    this._removecolumnhandlers(this.columns.records[k]);
                    if (e.element) {
                        b(e.element).remove();
                        b(e.sortasc).remove();
                        b(e.sortdesc).remove();
                        b(e.filtericon).remove();
                        b(e.menu).remove();
                        e.element = null;
                        e.uielement = null;
                        e.sortasc = null;
                        e.sortdesc = null;
                        e.filtericon = null;
                        e.menu = null;
                        delete e.element;
                        delete e.uielement;
                        delete e.sortasc;
                        delete e.sortdesc;
                        delete e.filtericon;
                        delete e.menu;
                        delete this.columnsrow[0].cells[k]
                    }
                }
                try {
                    delete this.columnsrow[0].cells
                } catch(n) {}
                delete this.columnsrow
            }
            b.removeData(document.body, "contextmenu" + this.element.id);
            if (this.host.jqxDropDownList) {
                if (this._destroyfilterpanel) {
                    this._destroyfilterpanel()
                }
            }
            if (this.editable && this._destroyeditors) {
                this._destroyeditors()
            }
            if (this.filterable && this._destroyedfilters && this.showfilterrow) {
                this._destroyedfilters()
            }
            if (this.host.jqxMenu) {
                if (this.gridmenu) {
                    this.removeHandler(b(document), "click.menu" + this.element.id);
                    this.removeHandler(this.gridmenu, "keydown");
                    this.removeHandler(this.gridmenu, "closed");
                    this.removeHandler(this.gridmenu, "itemclick");
                    this.gridmenu.jqxMenu("destroy");
                    this.gridmenu = null
                }
            }
            if (this.pagershowrowscombo) {
                this.pagershowrowscombo.jqxDropDownList("destroy");
                this.pagershowrowscombo = null
            }
            if (this.pagerrightbutton) {
                this.removeHandler(this.pagerrightbutton, "mousedown");
                this.removeHandler(this.pagerrightbutton, "mouseup");
                this.removeHandler(this.pagerrightbutton, "click");
                this.pagerrightbutton.jqxButton("destroy");
                this.pagerrightbutton = null
            }
            if (this.pagerleftbutton) {
                this.removeHandler(this.pagerleftbutton, "mousedown");
                this.removeHandler(this.pagerleftbutton, "mouseup");
                this.removeHandler(this.pagerleftbutton, "click");
                this.pagerleftbutton.jqxButton("destroy");
                this.removeHandler(b(document), "mouseup.pagerbuttons" + this.element.id);
                this.pagerleftbutton = null
            }
            this.removeHandler(b(document), "selectstart." + this.element.id);
            this.removeHandler(b(document), "mousedown.resize" + this.element.id);
            this.removeHandler(b(document), "mouseup.resize" + this.element.id);
            this.removeHandler(b(document), "mousemove.resize" + this.element.id);
            if (this.isTouchDevice()) {
                var l = b.jqx.mobile.getTouchEventName("touchmove") + ".resize" + this.element.id;
                var d = b.jqx.mobile.getTouchEventName("touchstart") + ".resize" + this.element.id;
                var g = b.jqx.mobile.getTouchEventName("touchend") + ".resize" + this.element.id;
                this.removeHandler(b(document), l);
                this.removeHandler(b(document), d);
                this.removeHandler(b(document), g)
            }
            this.removeHandler(b(document), "mousedown.reorder" + this.element.id);
            this.removeHandler(b(document), "mouseup.reorder" + this.element.id);
            this.removeHandler(b(document), "mousemove.reorder" + this.element.id);
            if (this.isTouchDevice()) {
                var l = b.jqx.mobile.getTouchEventName("touchmove") + ".reorder" + this.element.id;
                var d = b.jqx.mobile.getTouchEventName("touchstart") + ".reorder" + this.element.id;
                var g = b.jqx.mobile.getTouchEventName("touchend") + ".reorder" + this.element.id;
                this.removeHandler(b(document), l);
                this.removeHandler(b(document), d);
                this.removeHandler(b(document), g)
            }
            this.removeHandler(b(window), "resize." + this.element.id);
            if (this.groupable) {
                var l = "mousemove.grouping" + this.element.id;
                var d = "mousedown.grouping" + this.element.id;
                var g = "mouseup.grouping" + this.element.id;
                this.removeHandler(b(document), l);
                this.removeHandler(b(document), d);
                this.removeHandler(b(document), g)
            }
            if (this.columnsreorder) {
                var l = "mousemove.reorder" + this.element.id;
                var d = "mousedown.reorder" + this.element.id;
                var g = "mouseup.reorder" + this.element.id;
                this.removeHandler(b(document), l);
                this.removeHandler(b(document), d);
                this.removeHandler(b(document), g);
                delete this.columnsbounds
            }
            if (this.content) {
                this.removeHandler(this.content, "mousedown");
                this.removeHandler(this.content, "scroll")
            }
            this._removeHandlers();
            this.hScrollInstance.destroy();
            this.vScrollInstance.destroy();
            this.hScrollBar.remove();
            this.vScrollBar.remove();
            this._clearcaches();
            delete this.hScrollInstance;
            delete this.vScrollInstance;
            delete this.visiblerows;
            delete this.hittestinfo;
            delete this.rows;
            delete this.columns;
            delete this.columnsbydatafield;
            delete this.pagescache;
            delete this.pageviews;
            delete this.cellscache;
            delete this.heights;
            delete this.hiddens;
            delete this.hiddenboundrows;
            delete this.heightboundrows;
            delete this.detailboundrows;
            delete this.details;
            delete this.expandedgroups;
            delete this._rowdetailscache;
            delete this._rowdetailselementscache;
            delete this.columnsmenu;
            if (this.columnsheader) {
                this.columnsheader.remove();
                delete this.columnsheader
            }
            if (this.selectionarea) {
                this.selectionarea.remove();
                delete this.selectionarea
            }
            if (this.menuitemsarray && this.menuitemsarray.length) {
                var o = this.menuitemsarray.length;
                for (var k = 0; k < o; k++) {
                    b(this.menuitemsarray[k]).remove()
                }
            }
            delete this.menuitemsarray;
            this.dataview._clearcaches();
            this.content.removeClass();
            this.content.remove();
            this.content = null;
            delete this.content;
            this.vScrollBar = null;
            this.hScrollBar = null;
            delete this.hScrollBar;
            delete this.hScrollBar;
            if (this.gridcontent) {
                this.gridcontent.remove();
                delete this.gridcontent
            }
            if (this.gridmenu) {
                this.gridmenu = null;
                delete this.gridmenu
            }
            delete this._mousemovefunc;
            delete this._mousewheelfunc;
            this.dataview.destroy();
            delete this.dataview;
            this.bottomRight.remove();
            delete this.bottomRight;
            this.wrapper.remove();
            delete this.wrapper;
            if (this.pagerdiv) {
                this.pagerdiv.remove();
                delete this.pagerdiv
            }
            if (this.pagerpageinput) {
                this.pagerpageinput.remove();
                delete this.pagerpageinput
            }
            if (this.pagergoto) {
                this.pagergoto.remove();
                delete this.pagergoto
            }
            if (this.pagershowrows) {
                this.pagershowrows.remove();
                delete this.pagershowrows
            }
            if (this.pagerfirstbutton) {
                this.pagerfirstbutton.remove();
                delete this.pagerfirstbutton
            }
            if (this.pagerlastbutton) {
                this.pagerlastbutton.remove();
                delete this.pagerlastbutton
            }
            if (this.pagerbuttons) {
                this.pagerbuttons.remove();
                delete this.pagerbuttons
            }
            if (this.pagerdetails) {
                this.pagerdetails.remove();
                delete this.pagerdetails
            }
            if (this.pagergotoinput) {
                this.pagergotoinput.remove();
                delete this.pagergotoinput
            }
            this.pager.remove();
            delete this.pager;
            this.groupsheader.remove();
            delete this.groupsheader;
            this.dataloadelement.remove();
            delete this.dataloadelement;
            this.toolbar.remove();
            delete this.toolbar;
            this.statusbar.remove();
            delete this.statusbar;
            this.host.removeData();
            this.host.removeClass();
            this.host.remove();
            this.host = null;
            delete this.host;
            delete this.element;
            delete this.set;
            delete this.get;
            delete this.that;
            delete this.call
        },
        _initializeColumns: function() {
            var f = this.source ? this.source.datafields: null;
            if (f == null && this.source && this.source._source) {
                f = this.source._source.datafields
            }
            var j = f ? f.length > 0 : false;
            if (this.autogeneratecolumns) {
                var l = new Array();
                if (f) {
                    b.each(f,
                    function() {
                        var i = {
                            datafield: this.name,
                            text: this.text || this.name,
                            cellsformat: this.format || ""
                        };
                        l.push(i)
                    })
                } else {
                    if (this.source.records.length > 0) {
                        var n = this.source.records[0];
                        for (obj in n) {
                            if (obj != "uid") {
                                var g = {
                                    width: 100,
                                    datafield: obj,
                                    text: obj
                                };
                                l.push(g)
                            }
                        }
                    }
                }
                this.columns = l
            }
            if (this.columns && this.columns.records) {
                for (var h = 0; h < this.columns.records.length; h++) {
                    this._removecolumnhandlers(this.columns.records[h])
                }
            }
            var k = this.that;
            var e = new b.jqx.collection(this.element);
            var d = 0;
            this._haspinned = false;
            if (!this._columns) {
                this._columns = this.columns
            } else {
                this.columns = this._columns
            }
            if (this.groupable) {
                b.each(this.groups,
                function(i) {
                    var o = new c(k, this);
                    o.visibleindex = d++;
                    o.width = k.groupindentwidth;
                    e.add(o);
                    o.grouped = true;
                    o.filterable = false;
                    o.sortable = false;
                    o.editable = false;
                    o.resizable = false;
                    o.draggable = false
                })
            }
            if (this.rowdetails && this.showrowdetailscolumn) {
                var g = new c(k, this);
                g.visibleindex = d++;
                g.width = k.groupindentwidth;
                g.pinned = true;
                g.editable = false;
                g.filterable = false;
                g.draggable = false;
                g.groupable = false;
                g.resizable = false;
                e.add(g);
                k._haspinned = true
            }
            if (this.selectionmode == "checkbox") {
                var g = new c(k, null);
                g.visibleindex = d++;
                g.width = k.groupindentwidth;
                g.checkboxcolumn = true;
                g.editable = false;
                g.columntype = "checkbox";
                g.groupable = false;
                g.draggable = false;
                g.filterable = false;
                g.resizable = false;
                g.datafield = "_checkboxcolumn";
                e.add(g)
            }
            var m = new Array();
            b.each(this.columns,
            function(i) {
                if (k.columns[i] != undefined) {
                    var o = new c(k, this);
                    o.visibleindex = d++;
                    if (this.dataField != undefined) {
                        this.datafield = this.dataField
                    }
                    if (this.pinned) {
                        k._haspinned = true
                    }
                    if (k.showeverpresentrow) {
                        if (this.datafield === "addButtonColumn" || this.datafield === "resetButtonColumn" || this.datafield === "updateButtonColumn" || this.datafield === "deleteButtonColumn") {
                            o.editable = false;
                            o.groupable = false;
                            o.draggable = false;
                            o.filterable = false;
                            o.resizable = false;
                            o.menu = false
                        }
                    }
                    if (this.datafield == null) {
                        if (k.source && k.source._source && (k.source._source.datatype == "array")) {
                            if (!j) {
                                if (!k.source._source.datafields) {
                                    k.source._source.datafields = new Array();
                                    k.source._source.datafields.push({
                                        name: i.toString()
                                    })
                                } else {
                                    k.source._source.datafields.push({
                                        name: i.toString()
                                    })
                                }
                            }
                            this.datafield = i.toString();
                            this.displayfield = i.toString();
                            o.datafield = this.datafield;
                            o.displayfield = this.displayfield
                        }
                    } else {
                        if (m[this.datafield]) {
                            throw new Error("jqxGrid: Invalid column 'datafield' setting. jqxGrid's columns should be initialized with unique data fields.");
                            k.host.remove();
                            return false
                        } else {
                            m[this.datafield] = true
                        }
                    }
                    e.add(o)
                }
            });
            if (this.rtl) {
                e.records.reverse()
            }
            this.columns = e
        },
        _initializeRows: function() {
            var d = new b.jqx.collection(this.element);
            if (this.rows) {
                this.rows.clear()
            }
            this.rows = d
        },
        _raiseEvent: function(i, e) {
            if (e == undefined) {
                e = {
                    owner: null
                }
            }
            if (this._trigger === false) {
                return
            }
            var f = this.events[i];
            if (!this._camelCase) {
                f = f.toLowerCase()
            }
            if (i == 2 || i == 15) {
                if (this.showeverpresentrow && (this.everpresentrowactions.indexOf("delete") >= 0 || this.everpresentrowactions.indexOf("update") >= 0)) {
                    if (this.updateeverpresentrow) {
                        var h = this
                    }
                    setTimeout(function() {
                        h.updateeverpresentrow()
                    },
                    50)
                }
            }
            args = e;
            args.owner = this;
            var g = new b.Event(f);
            g.owner = this;
            g.args = args;
            var d = this.host.trigger(g);
            e = g.args;
            return d
        },
        wheel: function(f, e) {
            if (e.autoheight && e.hScrollBar.css("visibility") != "visible") {
                f.returnValue = true;
                return true
            }
            var g = 0;
            if (!f) {
                f = window.event
            }
            if (f.originalEvent && f.originalEvent.wheelDelta) {
                f.wheelDelta = f.originalEvent.wheelDelta
            }
            if (f.wheelDelta) {
                g = f.wheelDelta / 120
            } else {
                if (f.detail) {
                    g = -f.detail / 3
                }
            }
            if (g) {
                var d = e._handleDelta(g);
                if (d) {
                    if (f.preventDefault) {
                        f.preventDefault()
                    }
                    if (f.originalEvent != null) {
                        f.originalEvent.mouseHandled = true
                    }
                    if (f.stopPropagation != undefined) {
                        f.stopPropagation()
                    }
                }
                if (d) {
                    d = false;
                    f.returnValue = d;
                    return d
                } else {
                    return false
                }
            }
            if (f.preventDefault) {
                f.preventDefault()
            }
            f.returnValue = false
        },
        _handleDelta: function(f) {
            if (this.vScrollBar.css("visibility") != "hidden") {
                var e = this.vScrollInstance.value;
                if (f < 0) {
                    this.scrollDown()
                } else {
                    this.scrollUp()
                }
                var d = this.vScrollInstance.value;
                if (e != d) {
                    return true
                }
            } else {
                if (this.hScrollBar.css("visibility") != "hidden") {
                    var e = this.hScrollInstance.value;
                    if (f > 0) {
                        if (this.hScrollInstance.value > 2 * this.horizontalscrollbarstep) {
                            this.hScrollInstance.setPosition(this.hScrollInstance.value - 2 * this.horizontalscrollbarstep)
                        } else {
                            this.hScrollInstance.setPosition(0)
                        }
                    } else {
                        if (this.hScrollInstance.value < this.hScrollInstance.max) {
                            this.hScrollInstance.setPosition(this.hScrollInstance.value + 2 * this.horizontalscrollbarstep)
                        } else {
                            this.hScrollInstance.setPosition(this.hScrollInstance.max)
                        }
                    }
                    var d = this.hScrollInstance.value;
                    if (e != d) {
                        return true
                    }
                }
            }
            return false
        },
        scrollDown: function() {
            if (this.vScrollBar.css("visibility") == "hidden") {
                return
            }
            var d = this.vScrollInstance;
            if (d.value + this.rowsheight <= d.max) {
                d.setPosition(parseInt(d.value) + this.rowsheight)
            } else {
                d.setPosition(d.max)
            }
        },
        scrollUp: function() {
            if (this.vScrollBar.css("visibility") == "hidden") {
                return
            }
            var d = this.vScrollInstance;
            if (d.value - this.rowsheight >= d.min) {
                d.setPosition(parseInt(d.value) - this.rowsheight)
            } else {
                d.setPosition(d.min)
            }
        },
        _removeHandlers: function() {
            var d = this.that;
            d.removeHandler(d.vScrollBar, "valueChanged");
            d.removeHandler(d.hScrollBar, "valueChanged");
            d.vScrollInstance.valueChanged = null;
            d.hScrollInstance.valueChanged = null;
            var e = "mousedown.jqxgrid";
            if (d.isTouchDevice()) {
                e = b.jqx.mobile.getTouchEventName("touchend")
            }
            d.removeHandler(d.host, "dblclick.jqxgrid");
            d.removeHandler(d.host, e);
            d.removeHandler(d.content, "mousemove", d._mousemovefunc);
            d.removeHandler(d.host, "mouseleave.jqxgrid");
            d.removeHandler(d.content, "mouseenter");
            d.removeHandler(d.content, "mouseleave");
            d.removeHandler(d.content, "mousedown");
            d.removeHandler(d.content, "scroll");
            d.removeHandler(d.content, "selectstart." + d.element.id);
            d.removeHandler(d.host, "dragstart." + d.element.id);
            d.removeHandler(d.host, "keydown.edit" + d.element.id);
            d.removeHandler(b(document), "keydown.edit" + d.element.id);
            d.removeHandler(b(document), "keyup.edit" + d.element.id);
            if (d._mousemovedocumentfunc) {
                d.removeHandler(b(document), "mousemove.selection" + d.element.id, d._mousemovedocumentfunc)
            }
            d.removeHandler(b(document), "mouseup.selection" + d.element.id);
            if (d._mousewheelfunc) {
                d.removeHandler(d.host, "mousewheel", d._mousewheelfunc)
            }
            if (d.editable) {
                d.removeHandler(b(document), "mousedown.gridedit" + d.element.id)
            }
            if (d.host.off) {
                d.content.off("mousemove");
                d.host.off("mousewheel")
            }
        },
        _addHandlers: function() {
            var e = this.that;
            var d = e.isTouchDevice();
            if (!d) {
                e.addHandler(e.host, "dragstart." + e.element.id,
                function(j) {
                    return false
                })
            }
            if (e.scrollbarautoshow) {
                e.addHandler(e.host, "mouseenter.gridscroll" + e.element.id,
                function(j) {
                    e.vScrollBar.fadeIn("fast");
                    e.hScrollBar.fadeIn("fast")
                });
                e.addHandler(e.host, "mouseleave.gridscroll" + e.element.id,
                function(j) {
                    if (!e.vScrollInstance.isScrolling() && !e.hScrollInstance.isScrolling()) {
                        e.vScrollBar.fadeOut("fast");
                        e.hScrollBar.fadeOut("fast")
                    }
                })
            }
            if (e.editable) {
                e.addHandler(b(document), "mousedown.gridedit" + e.element.id,
                function(m) {
                    if (e.editable && e.begincelledit) {
                        if (e.editcell) {
                            if (!e.vScrollInstance.isScrolling() && !e.vScrollInstance.isScrolling()) {
                                var r = e.host.coord();
                                var q = e.host.width();
                                var n = e.host.height();
                                var v = false;
                                var k = false;
                                var t = false;
                                if (m.pageY < r.top || m.pageY > r.top + n) {
                                    v = true;
                                    k = true
                                }
                                if (m.pageX < r.left || m.pageX > r.left + q) {
                                    v = true;
                                    t = true
                                }
                                if (v) {
                                    var u = false;
                                    if (e.editcell && e.editcell.editor) {
                                        switch (e.editcell.columntype) {
                                        case "datetimeinput":
                                            if (e.editcell.editor.jqxDateTimeInput && e.editcell.editor.jqxDateTimeInput("container") && e.editcell.editor.jqxDateTimeInput("container")[0].style.display == "block") {
                                                var s = e.editcell.editor.jqxDateTimeInput("container").coord().top;
                                                var j = e.editcell.editor.jqxDateTimeInput("container").coord().top + e.editcell.editor.jqxDateTimeInput("container").height();
                                                if (k && (m.pageY < s || m.pageY > j)) {
                                                    v = true;
                                                    e.editcell.editor.jqxDateTimeInput("close")
                                                } else {
                                                    return
                                                }
                                            }
                                            break;
                                        case "combobox":
                                            if (e.editcell.editor.jqxComboBox && e.editcell.editor.jqxComboBox("container") && e.editcell.editor.jqxComboBox("container")[0].style.display == "block") {
                                                var s = e.editcell.editor.jqxComboBox("container").coord().top;
                                                var j = e.editcell.editor.jqxComboBox("container").coord().top + e.editcell.editor.jqxComboBox("container").height();
                                                if (k && (m.pageY < s || m.pageY > j)) {
                                                    v = true;
                                                    e.editcell.editor.jqxComboBox("close")
                                                } else {
                                                    return
                                                }
                                            }
                                            break;
                                        case "dropdownlist":
                                            if (e.editcell.editor.jqxDropDownList && e.editcell.editor.jqxDropDownList("container") && e.editcell.editor.jqxDropDownList("container")[0].style.display == "block") {
                                                var s = e.editcell.editor.jqxDropDownList("container").coord().top;
                                                var j = e.editcell.editor.jqxDropDownList("container").coord().top + e.editcell.editor.jqxDropDownList("container").height();
                                                if (k && (m.pageY < s || m.pageY > j)) {
                                                    v = true;
                                                    e.editcell.editor.jqxDropDownList("close")
                                                } else {
                                                    return
                                                }
                                            }
                                            break;
                                        case "template":
                                        case "custom":
                                            var l = ["jqxDropDownList", "jqxComboBox", "jqxDropDownButton", "jqxDateTimeInput"];
                                            var p = function(A) {
                                                var z = e.editcell.editor.data();
                                                if (z[A] && z[A].instance.container && z[A].instance.container[0].style.display == "block") {
                                                    var x = z[A].instance;
                                                    var B = x.container.coord().top;
                                                    var y = x.container.coord().top + x.container.height();
                                                    if (k && (m.pageY < B || m.pageY > y)) {
                                                        v = true;
                                                        x.close();
                                                        return true
                                                    } else {
                                                        return false
                                                    }
                                                }
                                            };
                                            for (var o = 0; o < l.length; o++) {
                                                var w = p(l[o]);
                                                if (w == false) {
                                                    return
                                                }
                                            }
                                            break
                                        }
                                    }
                                    e.endcelledit(e.editcell.row, e.editcell.column, false, true);
                                    e._oldselectedcell = null
                                }
                            }
                        }
                    }
                })
            }
            e.vScrollInstance.valueChanged = function(j) {
                if (e.virtualsizeinfo) {
                    e._closemenu();
                    if (e.scrollmode != "physical") {
                        e._renderrows(e.virtualsizeinfo);
                        e.currentScrollValue = j.currentValue
                    } else {
                        if (e.currentScrollValue != undefined && Math.abs(e.currentScrollValue - j.currentValue) >= 5) {
                            e._renderrows(e.virtualsizeinfo);
                            e.currentScrollValue = j.currentValue
                        } else {
                            e._renderrows(e.virtualsizeinfo);
                            e.currentScrollValue = j.currentValue
                        }
                    }
                    if (!e.pageable && !e.groupable && e.dataview.virtualmode) {
                        if (e.loadondemandupdate) {
                            clearTimeout(e.loadondemandupdate)
                        }
                        e.loadondemandupdate = setTimeout(function() {
                            e.loadondemand = true;
                            e._renderrows(e.virtualsizeinfo)
                        },
                        100)
                    }
                    if (d) {
                        e._lastScroll = new Date()
                    }
                }
            };
            e.hScrollInstance.valueChanged = function(l) {
                if (e.virtualsizeinfo) {
                    e._closemenu();
                    var k = function() {
                        e._renderhorizontalscroll();
                        e._renderrows(e.virtualsizeinfo);
                        if (e.editcell && !e.editrow) {
                            if (e._showcelleditor && e.editcell.editing) {
                                if (!e.hScrollInstance.isScrolling()) {
                                    e._showcelleditor(e.editcell.row, e.getcolumn(e.editcell.column), e.editcell.element, e.editcell.init)
                                }
                            }
                        }
                    };
                    var j = e._browser == undefined ? e._isIE10() : e._browser;
                    if (navigator && navigator.userAgent.indexOf("Safari") != -1 && navigator.userAgent.indexOf("Chrome") == -1) {
                        if (e._hScrollTimer) {
                            clearTimeout(e._hScrollTimer)
                        }
                        e._hScrollTimer = setTimeout(function() {
                            k()
                        },
                        1)
                    } else {
                        if (b.jqx.browser.msie) {
                            if (e._hScrollTimer) {
                                clearTimeout(e._hScrollTimer)
                            }
                            e._hScrollTimer = setTimeout(function() {
                                k()
                            },
                            0.01)
                        } else {
                            k()
                        }
                    }
                    if (d) {
                        e._lastScroll = new Date()
                    }
                }
            };
            e._mousewheelfunc = e._mousewheelfunc ||
            function(j) {
                if (!e.editcell && e.enablemousewheel) {
                    e.wheel(j, e);
                    return false
                }
            };
            e.removeHandler(e.host, "mousewheel", e._mousewheelfunc);
            e.addHandler(e.host, "mousewheel", e._mousewheelfunc);
            var h = "mousedown.jqxgrid";
            if (d) {
                h = b.jqx.mobile.getTouchEventName("touchend")
            }
            e.addHandler(e.host, h,
            function(k) {
                if (e.isTouchDevice()) {
                    e._newScroll = new Date();
                    if (e._newScroll - e._lastScroll < 500) {
                        return false
                    }
                    if (b(k.target).ischildof(e.vScrollBar)) {
                        return false
                    }
                    if (b(k.target).ischildof(e.hScrollBar)) {
                        return false
                    }
                }
                e._mousedown = new Date();
                var j = e._handlemousedown(k, e);
                if (e.isNestedGrid) {
                    if (!e.resizablecolumn && !e.columnsreorder) {
                        k.stopPropagation()
                    }
                }
                e._lastmousedown = new Date();
                return j
            });
            if (!d) {
                e.addHandler(e.host, "dblclick.jqxgrid",
                function(k) {
                    if (e.editable && e.begincelledit && e.editmode == "dblclick") {
                        e._handledblclick(k, e)
                    } else {
                        if (b.jqx.browser.msie && b.jqx.browser.version < 9) {
                            var j = e._handlemousedown(k, e)
                        }
                    }
                    e.mousecaptured = false;
                    e._lastmousedown = new Date();
                    return true
                });
                e._mousemovefunc = function(j) {
                    if (e._handlemousemove) {
                        return e._handlemousemove(j, e)
                    }
                };
                e.addHandler(e.content, "mousemove", e._mousemovefunc);
                if (e._handlemousemoveselection) {
                    e._mousemovedocumentfunc = function(j) {
                        if (e._handlemousemoveselection) {
                            return e._handlemousemoveselection(j, e)
                        }
                    };
                    e.addHandler(b(document), "mousemove.selection" + e.element.id, e._mousemovedocumentfunc)
                }
                e.addHandler(b(document), "mouseup.selection" + e.element.id,
                function(j) {
                    if (e._handlemouseupselection) {
                        e._handlemouseupselection(j, e)
                    }
                })
            }
            try {
                if (document.referrer != "" || window.frameElement) {
                    if (window.top != null && window.top != window.self) {
                        var i = null;
                        if (window.parent && document.referrer) {
                            i = document.referrer
                        }
                        if (i && i.indexOf(document.location.host) != -1) {
                            var g = function(k) {
                                if (e._handlemouseupselection) {
                                    try {
                                        e._handlemouseupselection(k, e)
                                    } catch(j) {}
                                }
                            };
                            if (window.top.document.addEventListener) {
                                window.top.document.addEventListener("mouseup", g, false)
                            } else {
                                if (window.top.document.attachEvent) {
                                    window.top.document.attachEvent("onmouseup", g)
                                }
                            }
                        }
                    }
                }
            } catch(f) {}
            e.focused = false;
            if (!d) {
                e.addHandler(e.content, "mouseenter",
                function(j) {
                    e.focused = true;
                    if (e.wrapper) {
                        e.wrapper.attr("tabindex", 1);
                        e.content.attr("tabindex", 2)
                    }
                    if (e._overlayElement) {
                        if (e.vScrollInstance.isScrolling() || e.hScrollInstance.isScrolling()) {
                            e._overlayElement[0].style.visibility = "visible"
                        } else {
                            e._overlayElement[0].style.visibility = "hidden"
                        }
                    }
                });
                e.addHandler(e.content, "mouseleave",
                function(j) {
                    if (e._handlemousemove) {
                        if (e.enablehover) {
                            e._clearhoverstyle()
                        }
                    }
                    if (e._overlayElement) {
                        e._overlayElement[0].style.visibility = "hidden"
                    }
                    e.focused = false
                });
                if (e.groupable || e.columnsreorder) {
                    e.addHandler(b(document), "selectstart." + e.element.id,
                    function(j) {
                        if (e.__drag === true) {
                            return false
                        }
                    })
                }
                e.addHandler(e.content, "selectstart." + e.element.id,
                function(j) {
                    if (e.enablebrowserselection) {
                        return true
                    }
                    if (e.showfilterrow) {
                        if (b(j.target).ischildof(e.filterrow)) {
                            return true
                        }
                    }
                    if (e.showeverpresentrow) {
                        if (b(j.target).ischildof(e.addnewrow)) {
                            return true
                        }
                        if (e.addnewrowtop) {
                            if (b(j.target).ischildof(e.addnewrowtop)) {
                                return true
                            }
                        }
                    }
                    if (!e.editcell) {
                        return false
                    }
                    if (j.stopPropagation) {
                        j.stopPropagation()
                    }
                });
                e.addHandler(b(document), "keyup.edit" + e.element.id,
                function(j) {
                    e._keydown = false
                });
                e.addHandler(b(document), "keydown.edit" + e.element.id,
                function(l) {
                    e._keydown = true && !e.editcell;
                    var k = l.charCode ? l.charCode: l.keyCode ? l.keyCode: 0;
                    if (e.handlekeyboardnavigation) {
                        var m = e.handlekeyboardnavigation(l);
                        if (m == true) {
                            return false
                        }
                    }
                    if (e.editable && e.editcell) {
                        if (k == 13 || k == 27) {
                            if (e._handleeditkeydown) {
                                j = e._handleeditkeydown(l, e)
                            }
                        }
                    }
                    if (k == 27) {
                        e.mousecaptured = false;
                        if (e.selectionarea.css("visibility") == "visible") {
                            e.selectionarea.css("visibility", "hidden")
                        }
                    }
                    if (b.jqx.browser.msie && b.jqx.browser.version < 12 && e.focused && !e.isNestedGrid) {
                        if (k == 13 && j == false) {
                            return j
                        }
                        var j = true;
                        var k = l.charCode ? l.charCode: l.keyCode ? l.keyCode: 0;
                        if (!e.editcell && e.editable && e.editmode != "programmatic") {
                            if (e._handleeditkeydown) {
                                j = e._handleeditkeydown(l, e)
                            }
                        }
                        if (j && e.keyboardnavigation && e._handlekeydown) {
                            j = e._handlekeydown(l, e);
                            if (!j) {
                                if (l.preventDefault) {
                                    l.preventDefault()
                                }
                                if (l.stopPropagation != undefined) {
                                    l.stopPropagation()
                                }
                            }
                            return j
                        }
                    }
                    return true
                });
                e.addHandler(e.host, "keydown.edit" + e.element.id,
                function(k) {
                    var j = true;
                    if (e.handlekeyboardnavigation) {
                        var l = e.handlekeyboardnavigation(k);
                        if (l == true) {
                            return false
                        }
                    }
                    if (e.editable && e.editmode != "programmatic") {
                        if (e._handleeditkeydown) {
                            j = e._handleeditkeydown(k, e);
                            if (e.isNestedGrid) {
                                k.stopPropagation()
                            }
                        }
                    }
                    if (! (b.jqx.browser.msie && b.jqx.browser.version < 8)) {
                        if (j && e.keyboardnavigation && e._handlekeydown) {
                            j = e._handlekeydown(k, e);
                            if (e.isNestedGrid) {
                                k.stopPropagation()
                            }
                        }
                    } else {
                        if (e.isNestedGrid) {
                            if (j && e.keyboardnavigation && e._handlekeydown) {
                                j = e._handlekeydown(k, e);
                                k.stopPropagation()
                            }
                        }
                    }
                    if (!j) {
                        if (k.preventDefault) {
                            k.preventDefault()
                        }
                        if (k.stopPropagation != undefined) {
                            k.stopPropagation()
                        }
                    }
                    return j
                })
            }
        },
        _hittestrow: function(s, q) {
            if (this.vScrollInstance == null || this.hScrollInstance == null) {
                return
            }
            if (s == undefined) {
                s = 0
            }
            if (q == undefined) {
                q == 0
            }
            var l = this.vScrollInstance;
            var k = this.hScrollInstance;
            var f = l.value;
            if (this.vScrollBar.css("visibility") != "visible") {
                f = 0
            }
            var m = k.value;
            if (this.hScrollBar.css("visibility") != "visible") {
                m = 0
            }
            if (this.scrollmode == "deferred" && this._newmax != null) {
                if (f > this._newmax) {
                    f = this._newmax
                }
            }
            var r = parseInt(f) + q;
            var j = parseInt(m) + s;
            if (this.visiblerows == null) {
                return
            }
            if (this.visiblerows.length == 0) {
                return
            }
            var e = false;
            var i = this._findvisiblerow(r, this.visiblerows);
            if (i >= 0) {
                var o = this.visiblerows[i];
                var d = this.rowdetails && o.rowdetails;
                var n = !o.rowdetailshidden;
                if (d) {
                    var g = this.visiblerows[i - 1];
                    if (g == o) {
                        o = g;
                        i--
                    }
                    if (n) {
                        var h = b(this.hittestinfo[i].visualrow).position().top + parseInt(this.table.css("top"));
                        var p = b(this.hittestinfo[i].visualrow).height();
                        if (! (q >= h && q <= h + p)) {
                            i++;
                            o = this.visiblerows[i];
                            e = true
                        }
                    }
                }
            }
            return {
                index: i,
                row: o,
                details: e
            }
        },
        getcellatposition: function(j, q) {
            var r = this.that;
            var z = this.showheader ? this.columnsheader.height() + 2 : 0;
            var s = this._groupsheader() ? this.groupsheader.height() : 0;
            var B = this.showtoolbar ? this.toolbarheight: 0;
            s += B;
            var g = this.host.coord();
            if (this.hasTransform) {
                g = b.jqx.utilities.getOffset(this.host)
            }
            var p = j - g.left;
            var n = q - z - g.top - s;
            var d = this._hittestrow(p, n);
            var k = d.row;
            var l = d.index;
            var t = this.table[0].rows[l];
            if (this.dataview && this.dataview.records.length == 0) {
                var o = this.table[0].rows;
                var C = 0;
                for (var w = 0; w < o.length; w++) {
                    if (n >= C && n < C + this.rowsheight) {
                        t = o[w];
                        break
                    }
                    C += this.rowsheight
                }
                k = {
                    boundindex: w
                }
            }
            if (t == null) {
                return true
            }
            var u = this.hScrollInstance;
            var v = u.value;
            var f = 0;
            var m = this.groupable ? this.groups.length: 0;
            for (var w = 0; w < t.cells.length; w++) {
                var h = parseInt(b(this.columnsrow[0].cells[w]).css("left"));
                var j = h - v;
                if (r.columns.records[w].pinned) {
                    j = h
                }
                if (r.columns.records[w].hidden) {
                    continue
                }
                var A = j + b(this.columnsrow[0].cells[w]).width();
                if (A >= p && p >= j) {
                    f = w;
                    break
                }
            }
            if (k != null) {
                var e = this._getcolumnat(f);
                return {
                    row: this.getboundindex(k),
                    column: e.datafield,
                    value: this.getcellvalue(this.getboundindex(k), e.datafield)
                }
            }
            return null
        },
        _handlemousedown: function(P, l) {
            if (P.target == null) {
                return true
            }
            if (l.disabled) {
                return true
            }
            if (b(P.target).ischildof(this.columnsheader)) {
                return true
            }
            var m;
            if (P.which) {
                m = (P.which == 3)
            } else {
                if (P.button) {
                    m = (P.button == 2)
                }
            }
            var I;
            if (P.which) {
                I = (P.which == 2)
            } else {
                if (P.button) {
                    I = (P.button == 1)
                }
            }
            if (I) {
                return true
            }
            if (this.showstatusbar) {
                if (b(P.target).ischildof(this.statusbar)) {
                    return true
                }
                if (P.target == this.statusbar[0]) {
                    return true
                }
            }
            if (this.showtoolbar) {
                if (b(P.target).ischildof(this.toolbar)) {
                    return true
                }
                if (P.target == this.toolbar[0]) {
                    return true
                }
            }
            if (this.pageable) {
                if (b(P.target).ischildof(this.pager)) {
                    return true
                }
                if (P.target == this.pager[0]) {
                    return true
                }
            }
            if (!this.columnsheader) {
                return true
            }
            if (!this.editcell) {
                if (this.pageable) {
                    if (b(P.target).ischildof(this.pager)) {
                        return true
                    }
                }
            }
            var N = this.showheader ? this.columnsheader.height() + 2 : 0;
            var u = this._groupsheader() ? this.groupsheader.height() : 0;
            var z = this.showtoolbar ? this.toolbarheight: 0;
            u += z;
            var L = this.host.coord();
            if (this.hasTransform) {
                L = b.jqx.utilities.getOffset(this.host);
                var R = this._getBodyOffset();
                L.left -= R.left;
                L.top -= R.top
            }
            var h = parseInt(P.pageX);
            var j = parseInt(P.pageY);
            if (this.isTouchDevice()) {
                var Q = l.getTouches(P);
                var H = Q[0];
                h = parseInt(H.pageX);
                j = parseInt(H.pageY);
                if (l.touchmode == true) {
                    if (H._pageX != undefined) {
                        h = parseInt(H._pageX);
                        j = parseInt(H._pageY)
                    }
                }
            }
            var C = h - L.left;
            var B = j - N - L.top - u;
            if (this.pageable && !this.autoheight && this.gotopage) {
                var d = this.pager.coord().top - L.top - u - N;
                if (B > d) {
                    return
                }
            }
            var M = this._hittestrow(C, B);
            if (!M) {
                return
            }
            if (M.details) {
                return
            }
            var p = M.row;
            var w = M.index;
            var q = P.target.className;
            var g = this.table[0].rows[w];
            if (g == null) {
                if (l.editable && l.begincelledit) {
                    if (l.editcell) {
                        l.endcelledit(l.editcell.row, l.editcell.column, false, true)
                    }
                }
                return true
            }
            l.mousecaptured = true;
            l.mousecaptureposition = {
                left: P.pageX,
                top: P.pageY - u,
                clickedrow: g
            };
            var k = this.hScrollInstance;
            var s = k.value;
            if (this.rtl) {
                if (this.hScrollBar.css("visibility") != "hidden") {
                    s = k.max - k.value
                }
            }
            var A = -1;
            var v = this.groupable ? this.groups.length: 0;
            if (this.rtl) {
                if (this.vScrollBar[0].style.visibility != "hidden") {
                    s -= this.scrollbarsize + 4
                }
                if (this.hScrollBar[0].style.visibility == "hidden") {
                    s = -parseInt(this.content.css("left"))
                }
            }
            for (var J = 0; J < g.cells.length; J++) {
                var K = parseInt(b(this.columnsrow[0].cells[J]).css("left"));
                var h = K - s;
                if (l.columns.records[J].pinned && !l.rtl) {
                    h = K
                }
                var D = this._getcolumnat(J);
                if (D != null && D.hidden) {
                    continue
                }
                var E = h + b(this.columnsrow[0].cells[J]).width();
                if (E >= C && C >= h) {
                    A = J;
                    l.mousecaptureposition.clickedcell = J;
                    break
                }
            }
            if (this.rtl && this._haspinned) {
                for (var J = g.cells.length - 1; J >= 0; J--) {
                    if (!l.columns.records[J].pinned) {
                        break
                    }
                    var K = b(this.columnsrow[0].cells[J]).coord().left - this.host.coord().left;
                    var h = K;
                    var D = this._getcolumnat(J);
                    if (D != null && D.hidden) {
                        continue
                    }
                    var E = h + b(this.columnsrow[0].cells[J]).width();
                    if (E >= C && C >= h) {
                        A = J;
                        l.mousecaptureposition.clickedcell = J;
                        break
                    }
                }
            }
            if (p != null && A >= 0) {
                this._raiseEvent(1, {
                    rowindex: this.getboundindex(p),
                    visibleindex: p.visibleindex,
                    row: p,
                    group: p.group,
                    rightclick: m,
                    originalEvent: P
                });
                var D = this._getcolumnat(A);
                var F = this.getcellvalue(this.getboundindex(p), D.datafield);
                if (this.editable && this.editcell) {
                    if (D.datafield == this.editcell.column) {
                        if (this.getboundindex(p) == this.editcell.row) {
                            this.mousecaptured = false
                        }
                    }
                }
                this._raiseEvent(8, {
                    rowindex: this.getboundindex(p),
                    column: D ? D.getcolumnproperties() : null,
                    row: p,
                    visibleindex: p.visibleindex,
                    datafield: D ? D.datafield: null,
                    columnindex: A,
                    value: F,
                    rightclick: m,
                    originalEvent: P
                });
                if (this.isTouchDevice()) {
                    if (D.columntype == "checkbox" && this.editable && this._overlayElement) {
                        if (!this.editcell) {
                            this._overlayElement.css("visibility", "hidden");
                            this.editcell = this.getcell(w, D.datafield);
                            return true
                        }
                    } else {
                        if (D.columntype == "button" && this._overlayElement) {
                            if (D.buttonclick) {
                                D.buttonclick(g.cells[A].buttonrow, P)
                            }
                            return true
                        }
                    }
                }
                var f = false;
                if (this._lastmousedown != null) {
                    if (this._mousedown - this._lastmousedown < 300) {
                        if (this._clickedrowindex == this.getboundindex(p)) {
                            this._raiseEvent(22, {
                                rowindex: this.getboundindex(p),
                                row: p,
                                visibleindex: p.visibleindex,
                                group: p.group,
                                rightclick: m,
                                originalEvent: P
                            });
                            if (this._clickedcolumn == D.datafield) {
                                this._raiseEvent(23, {
                                    rowindex: this.getboundindex(p),
                                    row: p,
                                    visibleindex: p.visibleindex,
                                    column: D ? D.getcolumnproperties() : null,
                                    datafield: D ? D.datafield: null,
                                    columnindex: A,
                                    value: F,
                                    rightclick: m,
                                    originalEvent: P
                                })
                            }
                            f = true;
                            this._clickedrowindex = -1;
                            this._clickedcolumn = null;
                            if (P.isPropagationStopped && P.isPropagationStopped()) {
                                return false
                            }
                        }
                    }
                }
                if (m) {
                    return true
                }
                if (!f) {
                    this._clickedrowindex = this.getboundindex(p);
                    this._clickedcolumn = D.datafield
                }
                var e = b.jqx.utilities.getBrowser();
                if (e.browser == "msie" && parseInt(e.version) <= 7) {
                    if (A == 0 && this.rowdetails) {
                        q = "jqx-grid-group-collapse"
                    }
                    if (v > 0) {
                        if (A <= v) {
                            q = "jqx-grid-group-collapse"
                        }
                    }
                }
                if (q.indexOf("jqx-grid-group-expand") != -1 || q.indexOf("jqx-grid-group-collapse") != -1) {
                    if (!this.rtl) {
                        if (v > 0 && A < v && this._togglegroupstate) {
                            this._togglegroupstate(p.bounddata, true)
                        } else {
                            if (A == v && this.rowdetails && this.showrowdetailscolumn) {
                                this._togglerowdetails(p.bounddata, true);
                                this.gridcontent[0].scrollTop = 0;
                                this.gridcontent[0].scrollLeft = 0
                            }
                        }
                    } else {
                        if (v > 0 && A > g.cells.length - v - 1 && this._togglegroupstate) {
                            this._togglegroupstate(p.bounddata, true)
                        } else {
                            if (A == g.cells.length - 1 - v && this.rowdetails && this.showrowdetailscolumn) {
                                this._togglerowdetails(p.bounddata, true);
                                this.gridcontent[0].scrollTop = 0;
                                this.gridcontent[0].scrollLeft = 0
                            }
                        }
                    }
                } else {
                    if (p.boundindex != -1) {
                        var n = this.selectedrowindexes.slice(0);
                        var O = false;
                        if (l.selectionmode != "none" && l.selectionmode != "checkbox" && this._selectrowwithmouse) {
                            if (l.selectionmode == "multiplecellsadvanced" || l.selectionmode == "multiplecellsextended" || l.selectionmode == "multiplerowsextended" || l.selectionmode == "multiplerowsadvanced") {
                                if (!P.ctrlKey && !P.shiftKey && !P.metaKey) {
                                    l.selectedrowindexes = new Array();
                                    l.selectedcells = new Array()
                                }
                            }
                            var t = false;
                            var o = this.getboundindex(p);
                            if (l._oldselectedrow === o || l.selectionmode === "none") {
                                t = true
                            }
                            if (l.selectionmode.indexOf("cell") == -1) {
                                if ((l.selectionmode != "singlerow") || (l.selectedrowindex != o && l.selectionmode == "singlerow")) {
                                    this._applyrowselection(o, true, false, null, D.datafield);
                                    this._selectrowwithmouse(l, M, n, D.datafield, P.ctrlKey || P.metaKey, P.shiftKey)
                                }
                            } else {
                                if (D.datafield != null) {
                                    this._selectrowwithmouse(l, M, n, D.datafield, P.ctrlKey || P.metaKey, P.shiftKey);
                                    if (!P.shiftKey) {
                                        this._applycellselection(o, D.datafield, true, false)
                                    }
                                }
                            }
                            if (l._oldselectedcell) {
                                if (l._oldselectedcell.datafield == l.selectedcell.datafield && l._oldselectedcell.rowindex == l.selectedcell.rowindex) {
                                    O = true
                                }
                            }
                            l._oldselectedcell = l.selectedcell;
                            l._oldselectedrow = o
                        }
                        if (l.autosavestate) {
                            if (l.savestate) {
                                l.savestate()
                            }
                        }
                        if (l.editable && l.begincelledit && l.editmode != "programmatic") {
                            if (P.isPropagationStopped && P.isPropagationStopped()) {
                                return false
                            }
                            if (l.editmode == "selectedrow") {
                                if (t && !l.editcell) {
                                    if (D.columntype !== "checkbox") {
                                        var r = l.beginrowedit(this.getboundindex(p))
                                    }
                                } else {
                                    if (l.editcell && !t && l.selectionmode != "none") {
                                        var r = l.endrowedit(l.editcell.row)
                                    }
                                }
                            } else {
                                var G = l.editmode == "click" || (O && l.editmode == "selectedcell");
                                if (l.selectionmode.indexOf("cell") == -1) {
                                    if (l.editmode != "dblclick") {
                                        G = true
                                    }
                                }
                                if (G) {
                                    if (p.boundindex != undefined && D.editable) {
                                        var r = l.begincelledit(this.getboundindex(p), D.datafield, D.defaulteditorvalue);
                                        if (l.selectionmode.indexOf("cell") != -1) {
                                            l._applycellselection(o, D.datafield, false, false)
                                        }
                                    }
                                }
                                if (l.selectionmode.indexOf("cell") != -1) {
                                    if (l.editmode == "selectedcell" && !O && l.editcell) {
                                        l.endcelledit(l.editcell.row, l.editcell.column, false, true)
                                    }
                                }
                            }
                            return true
                        }
                    }
                }
            }
            return true
        },
        _columnPropertyChanged: function(e, d, g, f) {},
        _rowPropertyChanged: function(g, d, f, e) {},
        _serializeObject: function(d) {
            if (d == null) {
                return ""
            }
            var e = "";
            b.each(d,
            function(g) {
                var h = this;
                if (g > 0) {
                    e += ", "
                }
                e += "[";
                var f = 0;
                for (obj in h) {
                    if (f > 0) {
                        e += ", "
                    }
                    e += "{" + obj + ":" + h[obj] + "}";
                    f++
                }
                e += "]"
            });
            return e
        },
        isbindingcompleted: function() {
            return ! this._loading
        },
        propertyChangedHandler: function(e, f, i, h) {
            if (this.isInitialized == undefined || this.isInitialized == false) {
                return
            }
            f = f.toLowerCase();
            switch (f) {
            case "editable":
                e.refresh();
                break;
            case "everpresentrowactionsmode":
                if (i != h) {
                    e._removeaddnewrow();
                    e.render()
                }
                break;
            case "everpresentrowactions":
                e._updateaddnewrowui();
                break;
            case "showeverpresentrow":
            case "everpresentrowposition":
            case "everpresentrowheight":
                if (i != h) {
                    e._removeaddnewrow();
                    e.render()
                }
                break;
            case "rtl":
                e.content.css("left", "");
                e.columns = e._columns;
                e._filterrowcache = [];
                e.vScrollBar.jqxScrollBar({
                    rtl: h
                });
                e.hScrollBar.jqxScrollBar({
                    rtl: h
                });
                if (e._initpager) {
                    e._initpager()
                }
                if (e._initgroupsheader) {
                    e._initgroupsheader()
                }
                e.render();
                break;
            case "enablebrowserselection":
                if (!e.showfilterrow) {
                    if (!e.showstatusbar && !e.showtoolbar) {
                        e.host.addClass("jqx-disableselect")
                    }
                    e.content.addClass("jqx-disableselect")
                }
                if (e.enablebrowserselection) {
                    e.content.removeClass("jqx-disableselect");
                    e.host.removeClass("jqx-disableselect")
                }
                break;
            case "columnsheight":
                if (e.columnsheight != 25 || e.columngroups) {
                    e._measureElement("column")
                }
                e._render(true, true, true, false, false);
                break;
            case "rowsheight":
                if (h != i) {
                    if (e.rowsheight != 25) {
                        e._measureElement("cell")
                    }
                    e.virtualsizeinfo = null;
                    e.rendergridcontent(true, false);
                    e.refresh()
                }
                break;
            case "scrollMode":
                e.vScrollInstance.thumbStep = e.rowsheight;
                break;
            case "showdefaultloadelement":
                e._builddataloadelement();
                break;
            case "showfiltermenuitems":
            case "showsortmenuitems":
            case "showgroupmenuitems":
            case "filtermode":
                e._initmenu();
                break;
            case "touchmode":
                if (i != h) {
                    e._removeHandlers();
                    e.touchDevice = null;
                    e.vScrollBar.jqxScrollBar({
                        touchMode: h
                    });
                    e.hScrollBar.jqxScrollBar({
                        touchMode: h
                    });
                    e._updateTouchScrolling();
                    e._arrange();
                    e._updatecolumnwidths();
                    e._updatecellwidths();
                    e._addHandlers()
                }
                break;
            case "autoshowcolumnsmenubutton":
                if (i != h) {
                    e._rendercolumnheaders()
                }
                break;
            case "rendergridrows":
                if (i != h) {
                    e.updatebounddata()
                }
                break;
            case "editmode":
                if (i != h) {
                    e._removeHandlers();
                    e._addHandlers()
                }
                break;
            case "source":
                e.updatebounddata();
                if (e.virtualmode && !e._loading) {
                    e.loadondemand = true;
                    e._renderrows(e.virtualsizeinfo)
                }
                break;
            case "horizontalscrollbarstep":
            case "verticalscrollbarstep":
            case "horizontalscrollbarlargestep":
            case "verticalscrollbarlargestep":
                this.vScrollBar.jqxScrollBar({
                    step:
                    this.verticalscrollbarstep,
                    largestep: this.verticalscrollbarlargestep
                });
                this.hScrollBar.jqxScrollBar({
                    step: this.horizontalscrollbarstep,
                    largestep: this.horizontalscrollbarlargestep
                });
                break;
            case "closeablegroups":
                if (e._initgroupsheader) {
                    e._initgroupsheader()
                }
                break;
            case "showgroupsheader":
                if (i != h) {
                    e._arrange();
                    if (e._initgroupsheader) {
                        e._initgroupsheader()
                    }
                    e._renderrows(e.virtualsizeinfo)
                }
                break;
            case "theme":
                if (h != i) {
                    b.jqx.utilities.setTheme(i, h, e.host);
                    if (e.gridmenu) {
                        e.gridmenu.jqxMenu({
                            theme: h
                        })
                    }
                    if (e.pageable) {
                        e._updatepagertheme()
                    }
                    if (e.filterable) {
                        e._updatefilterrowui(true)
                    }
                    if (e.showeverpresentrow) {
                        e._updateaddnewrowui(true)
                    }
                }
                break;
            case "showtoolbar":
            case "toolbarheight":
                if (i != h) {
                    e._arrange();
                    e.refresh()
                }
                break;
            case "showstatusbar":
                if (i != h) {
                    if (e.statusbar) {
                        if (h) {
                            e.statusbar.show()
                        } else {
                            e.statusbar.hide()
                        }
                    }
                    e._arrange();
                    e.refresh()
                }
                break;
            case "statusbarheight":
                if (i != h) {
                    e._arrange();
                    e.refresh()
                }
                break;
            case "filterable":
            case "showfilterrow":
                if (i != h) {
                    e.render()
                }
                break;
            case "autoshowfiltericon":
            case "showfiltercolumnbackground":
            case "showpinnedcolumnbackground":
            case "showsortcolumnbackground":
                if (i != h) {
                    e.rendergridcontent()
                }
                break;
            case "showrowdetailscolumn":
                if (i != h) {
                    e.render()
                }
                break;
            case "scrollbarsize":
                if (i != h) {
                    e._arrange()
                }
                break;
            case "width":
            case "height":
                if (i != h) {
                    e._updatesize(true, true);
                    e._resizeWindow();
                    if (e.virtualmode && !e._loading) {
                        e.vScrollInstance.setPosition(0)
                    } else {
                        setTimeout(function() {
                            e._renderrows(e.virtualsizeinfo)
                        },
                        100)
                    }
                }
                break;
            case "altrows":
            case "altstart":
            case "altstep":
                if (i != h) {
                    e._renderrows(e.virtualsizeinfo)
                }
                break;
            case "groupsheaderheight":
                if (i != h) {
                    e._arrange();
                    if (e._initgroupsheader) {
                        e._initgroupsheader()
                    }
                }
                break;
            case "pagerheight":
                if (i != h) {
                    e._initpager()
                }
                break;
            case "selectedrowindex":
                e.selectrow(h);
                break;
            case "selectionmode":
                if (i != h) {
                    if (h == "none") {
                        e.selectedrowindexes = new Array();
                        e.selectedcells = new Array();
                        e.selectedrowindex = -1
                    }
                    e._renderrows(e.virtualsizeinfo);
                    if (h == "checkbox") {
                        e._render(false, false, true, false, false)
                    }
                }
                break;
            case "showheader":
                if (h) {
                    e.columnsheader.css("display", "block")
                } else {
                    e.columnsheader.css("display", "none")
                }
                break;
            case "virtualmode":
                if (i != h) {
                    e.dataview.virtualmode = e.virtualmode;
                    e.dataview.refresh(false);
                    e._render(false, false, false)
                }
                break;
            case "columnsmenu":
                if (i != h) {
                    e.render()
                }
                break;
            case "columngroups":
                e._render(true, true, true, false, false);
                break;
            case "columns":
                if (e._serializeObject(e._cachedcolumns) !== e._serializeObject(h)) {
                    var d = false;
                    if (e.filterable) {
                        if (i && i.records) {
                            b.each(i.records,
                            function() {
                                if (this.filter) {
                                    d = true
                                }
                                e.dataview.removefilter(this.displayfield, this.filter)
                            })
                        }
                    }
                    e._columns = null;
                    e._filterrowcache = [];
                    e.render();
                    if (d) {
                        e.applyfilters()
                    }
                    e._cachedcolumns = e.columns;
                    if (e.removesort) {
                        e.removesort()
                    }
                } else {
                    e._initializeColumns()
                }
                break;
            case "autoheight":
                if (i != h) {
                    e._render(false, false, true)
                }
                break;
            case "pagermode":
            case "pagerbuttonscount":
                if (i != h) {
                    if (e._initpager) {
                        if (e.pagershowrowscombo) {
                            e.pagershowrowscombo.jqxDropDownList("destroy");
                            e.pagershowrowscombo = null
                        }
                        if (e.pagerrightbutton) {
                            e.removeHandler(e.pagerrightbutton, "mousedown");
                            e.removeHandler(e.pagerrightbutton, "mouseup");
                            e.removeHandler(e.pagerrightbutton, "click");
                            e.pagerrightbutton.jqxButton("destroy");
                            e.pagerrightbutton = null
                        }
                        if (e.pagerleftbutton) {
                            e.removeHandler(e.pagerleftbutton, "mousedown");
                            e.removeHandler(e.pagerleftbutton, "mouseup");
                            e.removeHandler(e.pagerleftbutton, "click");
                            e.pagerleftbutton.jqxButton("destroy");
                            e.removeHandler(b(document), "mouseup.pagerbuttons" + e.element.id);
                            e.pagerleftbutton = null
                        }
                        e.pagerdiv.remove();
                        e._initpager()
                    }
                }
                break;
            case "pagesizeoptions":
            case "pageable":
            case "pagesize":
                if (i != h) {
                    if (e._loading) {
                        throw new Error("jqxGrid: " + e.loadingerrormessage);
                        return
                    }
                    if (!e.host.jqxDropDownList || !e.host.jqxListBox) {
                        e._testmodules();
                        return
                    }
                    if (e._initpager) {
                        if (f != "pageable" && f != "pagermode") {
                            if (typeof(h) == "string") {
                                var g = "The expected value type is: Int.";
                                if (f != "pagesize") {
                                    var g = "The expected value type is: Array of Int values."
                                }
                                throw new Error("Invalid Value for: " + f + ". " + g)
                            }
                        }
                        e.dataview.pageable = e.pageable;
                        e.dataview.pagenum = 0;
                        e.dataview.pagesize = e._getpagesize();
                        if (e.virtualmode) {
                            e.updatebounddata()
                        }
                        e.dataview.refresh(true);
                        e._initpager();
                        if (f == "pagesizeoptions") {
                            if (h != null && h.length > 0) {
                            	if(h[0]=="全部"){
                            		e.pagesize = 1000000;
                            		e.dataview.pagesize = 1000000;
                            	}else{
                            		e.pagesize = parseInt(h[0]);
                            		e.dataview.pagesize = parseInt(h[0]);
                            	}
                                e.prerenderrequired = true;
                                e._requiresupdate = true;
                                e.dataview.pagenum = -1;
                                e.gotopage(0)
                            }
                        }
                    }
                    e._render(false, false, false)
                }
                break;
            case "groups":
                if (e._serializeObject(i) !== e._serializeObject(h)) {
                    e.dataview.groups = h;
                    e._refreshdataview();
                    e._render(true, true, true, false)
                }
                break;
            case "groupable":
                if (i != h) {
                    e.dataview.groupable = e.groupable;
                    e.dataview.pagenum = 0;
                    e.dataview.refresh(false);
                    e._render(false, false, true)
                }
                break;
            case "renderstatusbar":
                if (h != null) {
                    e.renderstatusbar(e.statusbar)
                }
                break;
            case "rendertoolbar":
                if (h != null) {
                    e.rendertoolbar(e.toolbar)
                }
                break;
            case "disabled":
                if (h) {
                    e.host.addClass(e.toThemeProperty("jqx-fill-state-disabled"))
                } else {
                    e.host.removeClass(e.toThemeProperty("jqx-fill-state-disabled"))
                }
                b.jqx.aria(e, "aria-disabled", e.disabled);
                if (e.pageable) {
                    if (e.pagerrightbutton) {
                        e.pagerrightbutton.jqxButton({
                            disabled: h
                        });
                        e.pagerleftbutton.jqxButton({
                            disabled: h
                        });
                        e.pagershowrowscombo.jqxDropDownList({
                            disabled: h
                        });
                        e.pagergotoinput.attr("disabled", h)
                    }
                    if (e.pagerfirstbutton) {
                        e.pagerfirstbutton.jqxButton({
                            disabled: h
                        });
                        e.pagerlastbutton.jqxButton({
                            disabled: h
                        })
                    }
                }
                e.vScrollBar.jqxScrollBar({
                    disabled: h
                });
                e.hScrollBar.jqxScrollBar({
                    disabled: h
                });
                if (e.filterable && e.showfilterrow) {
                    e._updatefilterrowui(true)
                }
                if (e.showeverpresentrow) {
                    e._updateaddnewrowui(true)
                }
                break
            }
        }
    });
    function c(d, e) {
        this.owner = d;
        this.datafield = null;
        this.displayfield = null;
        this.text = "";
        this.createfilterpanel = null;
        this.sortable = true;
        this.hideable = true;
        this.editable = true;
        this.hidden = false;
        this.groupable = true;
        this.renderer = null;
        this.cellsrenderer = null;
        this.checkchange = null,
        this.threestatecheckbox = false;
        this.buttonclick = null,
        this.columntype = null;
        this.cellsformat = "";
        this.align = "left";
        this.cellsalign = "left";
        this.width = "auto";
        this.minwidth = 25;
        this.maxwidth = "auto";
        this.pinned = false;
        this.visibleindex = -1;
        this.filterable = true;
        this.filter = null;
        this.filteritems = [];
        this.resizable = true;
        this.initeditor = null;
        this.createeditor = null;
        this.destroyeditor = null;
        this.geteditorvalue = null;
        this.validation = null;
        this.classname = "";
        this.cellclassname = "";
        this.cellendedit = null;
        this.cellbeginedit = null;
        this.cellvaluechanging = null;
        this.aggregates = null;
        this.aggregatesrenderer = null;
        this.menu = true;
        this.createfilterwidget = null;
        this.filtertype = "default";
        this.filtercondition = null;
        this.rendered = null;
        this.exportable = true;
        this.exporting = false;
        this.draggable = true;
        this.nullable = true;
        this.enabletooltips = true;
        this.columngroup = null;
        this.isRoleColumn=false;
        this.filterdelay = 800;
        this.reseteverpresentrowwidgetvalue = null;
        this.geteverpresentrowwidgetvalue = null;
        this.createeverpresentrowwidget = null;
        this.initeverpresentrowwidget = null;
        this.validateeverpresentrowwidgetvalue = null;
        this.destroyeverpresentrowwidget = null;
        this.getcolumnproperties = function() {
            return {
                nullable: this.nullable,
                sortable: this.sortable,
                hideable: this.hideable,
                hidden: this.hidden,
                groupable: this.groupable,
                width: this.width,
                align: this.align,
                editable: this.editable,
                minwidth: this.minwidth,
                maxwidth: this.maxwidth,
                resizable: this.resizable,
                datafield: this.datafield,
                text: this.text,
                exportable: this.exportable,
                cellsalign: this.cellsalign,
                pinned: this.pinned,
                cellsformat: this.cellsformat,
                columntype: this.columntype,
                classname: this.classname,
                cellclassname: this.cellclassname,
                menu: this.menu
            }
        },
        this.setproperty = function(f, g) {
            if (this[f]) {
                var h = this[f];
                this[f] = g;
                this.owner._columnPropertyChanged(this, f, g, h)
            } else {
                if (this[f.toLowerCase()]) {
                    var h = this[f.toLowerCase()];
                    this[f.toLowerCase()] = g;
                    this.owner._columnPropertyChanged(this, f.toLowerCase(), g, h)
                }
            }
        };
        this._initfields = function(g) {
            if (g != null) {
                var f = this.that;
                if (b.jqx.hasProperty(g, "isRoleColumn")) {
                    this.isRoleColumn = b.jqx.get(g, "isRoleColumn")
                }
                if (b.jqx.hasProperty(g, "dataField")) {
                    this.datafield = b.jqx.get(g, "dataField")
                }
                if (b.jqx.hasProperty(g, "displayField")) {
                    this.displayfield = b.jqx.get(g, "displayField")
                } else {
                    this.displayfield = this.datafield
                }
                if (b.jqx.hasProperty(g, "enableTooltips")) {
                    this.enabletooltips = b.jqx.get(g, "enableTooltips")
                }
                if (b.jqx.hasProperty(g, "text")) {
                    this.text = b.jqx.get(g, "text")
                } else {
                    this.text = this.displayfield
                }
                if (b.jqx.hasProperty(g, "createfilterpanel")) {
                    this.createfilterpanel = b.jqx.get(g, "createfilterpanel")
                }
                if (b.jqx.hasProperty(g, "sortable")) {
                    this.sortable = b.jqx.get(g, "sortable")
                }
                if (b.jqx.hasProperty(g, "hideable")) {
                    this.hideable = b.jqx.get(g, "hideable")
                }
                if (b.jqx.hasProperty(g, "hidden")) {
                    this.hidden = b.jqx.get(g, "hidden")
                }
                if (b.jqx.hasProperty(g, "groupable")) {
                    this.groupable = b.jqx.get(g, "groupable")
                }
                if (b.jqx.hasProperty(g, "renderer")) {
                    this.renderer = b.jqx.get(g, "renderer")
                }
                if (b.jqx.hasProperty(g, "align")) {
                    this.align = b.jqx.get(g, "align")
                }
                if (b.jqx.hasProperty(g, "cellsAlign")) {
                    this.cellsalign = b.jqx.get(g, "cellsAlign")
                }
                if (b.jqx.hasProperty(g, "cellsFormat")) {
                    this.cellsformat = b.jqx.get(g, "cellsFormat")
                }
                if (b.jqx.hasProperty(g, "width")) {
                    this.width = b.jqx.get(g, "width")
                }
                if (b.jqx.hasProperty(g, "minWidth")) {
                    this.minwidth = parseInt(b.jqx.get(g, "minWidth"));
                    if (isNaN(this.minwidth)) {
                        this.minwidth = 25
                    }
                }
                if (b.jqx.hasProperty(g, "maxWidth")) {
                    this.maxwidth = parseInt(b.jqx.get(g, "maxWidth"));
                    if (isNaN(this.maxwidth)) {
                        this.maxwidth = "auto"
                    }
                }
                if (b.jqx.hasProperty(g, "cellsRenderer")) {
                    this.cellsrenderer = b.jqx.get(g, "cellsRenderer")
                } else {
                    if (g.cellsRenderer) {
                        this.cellsrenderer = g.cellsRenderer
                    }
                }
                if (b.jqx.hasProperty(g, "columnType")) {
                    this.columntype = b.jqx.get(g, "columnType")
                }
                if (b.jqx.hasProperty(g, "checkChange")) {
                    this.checkchange = b.jqx.get(g, "checkChange")
                }
                if (b.jqx.hasProperty(g, "buttonClick")) {
                    this.buttonclick = b.jqx.get(g, "buttonClick")
                } else {
                    if (g.buttonClick) {
                        this.buttonclick = g.buttonClick
                    }
                }
                if (b.jqx.hasProperty(g, "pinned")) {
                    this.pinned = b.jqx.get(g, "pinned")
                }
                if (b.jqx.hasProperty(g, "visibleIndex")) {
                    this.visibleindex = b.jqx.get(g, "visibleIndex")
                }
                if (b.jqx.hasProperty(g, "filterable")) {
                    this.filterable = b.jqx.get(g, "filterable")
                }
                if (b.jqx.hasProperty(g, "filter")) {
                    this.filter = b.jqx.get(g, "filter")
                }
                if (b.jqx.hasProperty(g, "resizable")) {
                    this.resizable = b.jqx.get(g, "resizable")
                }
                if (b.jqx.hasProperty(g, "editable")) {
                    this.editable = b.jqx.get(g, "editable")
                }
                if (b.jqx.hasProperty(g, "initEditor")) {
                    this.initeditor = b.jqx.get(g, "initEditor")
                } else {
                    if (g.initEditor) {
                        this.initeditor = g.initEditor
                    }
                }
                if (b.jqx.hasProperty(g, "createEditor")) {
                    this.createeditor = b.jqx.get(g, "createEditor")
                } else {
                    if (g.createEditor) {
                        this.createeditor = g.createEditor
                    }
                }
                if (b.jqx.hasProperty(g, "reseteverpresentrowwidgetvalue") || b.jqx.hasFunction(g, "reseteverpresentrowwidgetvalue")) {
                    this.reseteverpresentrowwidgetvalue = b.jqx.get(g, "reseteverpresentrowwidgetvalue")
                } else {
                    if (g.resetEverPresentRowWidgetValue) {
                        this.reseteverpresentrowwidgetvalue = g.resetEverPresentRowWidgetValue
                    }
                }
                if (b.jqx.hasProperty(g, "geteverpresentrowwidgetvalue") || b.jqx.hasFunction(g, "geteverpresentrowwidgetvalue")) {
                    this.geteverpresentrowwidgetvalue = b.jqx.get(g, "geteverpresentrowwidgetvalue")
                } else {
                    if (g.getEverPresentRowWidgetValue) {
                        this.geteverpresentrowwidgetvalue = g.getEverPresentRowWidgetValue
                    }
                }
                if (b.jqx.hasProperty(g, "createeverpresentrowwidget") || b.jqx.hasFunction(g, "createeverpresentrowwidget")) {
                    this.createeverpresentrowwidget = b.jqx.get(g, "createeverpresentrowwidget")
                } else {
                    if (g.createEverPresentRowWidget) {
                        this.createeverpresentrowwidget = g.createEverPresentRowWidget
                    }
                }
                if (b.jqx.hasProperty(g, "initeverpresentrowwidget") || b.jqx.hasFunction(g, "initeverpresentrowwidget")) {
                    this.initeverpresentrowwidget = b.jqx.get(g, "initeverpresentrowwidget")
                } else {
                    if (g.initEverPresentRowWidget) {
                        this.initeverpresentrowwidget = g.initEverPresentRowWidget
                    }
                }
                if (b.jqx.hasProperty(g, "validateeverpresentrowwidgetvalue")) {
                    this.validateeverpresentrowwidgetvalue = b.jqx.get(g, "validateeverpresentrowwidgetvalue")
                } else {
                    if (g.validateEverPresentRowWidgetValue) {
                        this.validateeverpresentrowwidgetvalue = g.validateEverPresentRowWidgetValue
                    }
                }
                if (b.jqx.hasProperty(g, "destroyeverpresentrowwidget") || b.jqx.hasFunction(g, "destroyeverpresentrowwidget")) {
                    this.destroyeverpresentrowwidget = b.jqx.get(g, "destroyeverpresentrowwidget")
                } else {
                    if (g.destroyEverPresentRowWidget) {
                        this.destroyEverPresentRowWidget = g.destroyEverPresentRowWidget
                    }
                }
                if (b.jqx.hasProperty(g, "destroyEditor")) {
                    this.destroyeditor = b.jqx.get(g, "destroyEditor")
                } else {
                    if (g.destroyEditor) {
                        this.destroyeditor = g.destroyEditor
                    }
                }
                if (b.jqx.hasProperty(g, "getEditorValue")) {
                    this.geteditorvalue = b.jqx.get(g, "getEditorValue")
                } else {
                    if (g.getEditorValue) {
                        this.geteditorvalue = g.getEditorValue
                    }
                }
                if (b.jqx.hasProperty(g, "validation")) {
                    this.validation = b.jqx.get(g, "validation")
                } else {
                    if (g.validation) {
                        this.validation = g.validation
                    }
                }
                if (b.jqx.hasProperty(g, "cellBeginEdit")) {
                    this.cellbeginedit = b.jqx.get(g, "cellBeginEdit")
                } else {
                    if (g.cellBeginEdit) {
                        this.cellbeginedit = g.cellBeginEdit
                    }
                }
                if (b.jqx.hasProperty(g, "cellEndEdit")) {
                    this.cellendedit = b.jqx.get(g, "cellEndEdit")
                } else {
                    if (g.cellEndEdit) {
                        this.cellendedit = g.cellEndEdit
                    }
                }
                if (b.jqx.hasProperty(g, "className")) {
                    this.classname = b.jqx.get(g, "className")
                }
                if (b.jqx.hasProperty(g, "cellClassName")) {
                    this.cellclassname = b.jqx.get(g, "cellClassName")
                } else {
                    if (g.cellClassName) {
                        this.cellclassname = g.cellClassName
                    }
                }
                if (b.jqx.hasProperty(g, "menu")) {
                    this.menu = b.jqx.get(g, "menu")
                }
                if (b.jqx.hasProperty(g, "aggregates")) {
                    this.aggregates = b.jqx.get(g, "aggregates")
                }
                if (b.jqx.hasProperty(g, "aggregatesRenderer")) {
                    this.aggregatesrenderer = b.jqx.get(g, "aggregatesRenderer")
                }
                if (b.jqx.hasProperty(g, "createFilterWidget")) {
                    this.createfilterwidget = b.jqx.get(g, "createFilterWidget")
                }
                if (b.jqx.hasProperty(g, "filterType")) {
                    this.filtertype = b.jqx.get(g, "filterType")
                }
                if (b.jqx.hasProperty(g, "filterDelay")) {
                    this.filterdelay = b.jqx.get(g, "filterDelay")
                }
                if (b.jqx.hasProperty(g, "rendered")) {
                    this.rendered = b.jqx.get(g, "rendered")
                }
                if (b.jqx.hasProperty(g, "exportable")) {
                    this.exportable = b.jqx.get(g, "exportable")
                }
                if (b.jqx.hasProperty(g, "filterItems")) {
                    this.filteritems = b.jqx.get(g, "filterItems")
                }
                if (b.jqx.hasProperty(g, "cellValueChanging")) {
                    this.cellvaluechanging = b.jqx.get(g, "cellValueChanging")
                }
                if (b.jqx.hasProperty(g, "draggable")) {
                    this.draggable = b.jqx.get(g, "draggable")
                }
                if (b.jqx.hasProperty(g, "filterCondition")) {
                    this.filtercondition = b.jqx.get(g, "filterCondition")
                }
                if (b.jqx.hasProperty(g, "threeStateCheckbox")) {
                    this.threestatecheckbox = b.jqx.get(g, "threeStateCheckbox")
                }
                if (b.jqx.hasProperty(g, "nullable")) {
                    this.nullable = b.jqx.get(g, "nullable")
                }
                if (b.jqx.hasProperty(g, "columnGroup")) {
                    this.columngroup = b.jqx.get(g, "columnGroup")
                }
                if (!g instanceof String && !(typeof g == "string")) {
                    for (var h in g) {
                        if (!f.hasOwnProperty(h)) {
                            if (!f.hasOwnProperty(h.toLowerCase())) {
                                d.host.remove();
                                throw new Error("jqxGrid: Invalid property name - " + h + ".")
                            }
                        }
                    }
                }
            }
        };
        this._initfields(e);
        return this
    }
    function a(d, e) {
        this.setdata = function(f) {
            if (f != null) {
                this.bounddata = f;
                this.boundindex = f.boundindex;
                this.visibleindex = f.visibleindex;
                this.group = f.group;
                this.parentbounddata = f.parentItem;
                this.uniqueid = f.uniqueid;
                this.level = f.level
            }
        };
        this.setdata(e);
        this.parentrow = null;
        this.subrows = new Array();
        this.owner = d;
        this.height = 25;
        this.hidden = false;
        this.rowdetails = null;
        this.rowdetailsheight = 100;
        this.rowdetailshidden = true;
        this.top = -1;
        this.setrowinfo = function(f) {
            this.hidden = f.hidden;
            this.rowdetails = f.rowdetails;
            this.rowdetailsheight = f.rowdetailsheight;
            this.rowdetailshidden = !f.showdetails;
            this.height = f.height
        };
        return this
    }
    b.jqx.collection = function(d) {
        this.records = new Array();
        this.owner = d;
        this.updating = false;
        this.beginupdate = function() {
            this.updating = true
        };
        this.resumeupdate = function() {
            this.updating = false
        };
        this._raiseEvent = function(e) {};
        this.clear = function() {
            this.records = new Array()
        };
        this.replace = function(f, e) {
            this.records[f] = e;
            if (!this.updating) {
                this._raiseEvent({
                    type: "replace",
                    element: e
                })
            }
        };
        this.isempty = function(e) {
            if (this.records[e] == undefined) {
                return true
            }
            return false
        };
        this.initialize = function(e) {
            if (e < 1) {
                e = 1
            }
            this.records[e - 1] = -1
        };
        this.length = function() {
            return this.records.length
        };
        this.indexOf = function(e) {
            return this.records.indexOf(e)
        };
        this.add = function(e) {
            if (e == null) {
                return false
            }
            this.records[this.records.length] = e;
            if (!this.updating) {
                this._raiseEvent({
                    type: "add",
                    element: e
                })
            }
            return true
        };
        this.insertAt = function(f, e) {
            if (f == null || f == undefined) {
                return false
            }
            if (e == null) {
                return false
            }
            if (f >= 0) {
                if (f < this.records.length) {
                    this.records.splice(f, 0, e);
                    if (!this.updating) {
                        this._raiseEvent({
                            type: "insert",
                            index: f,
                            element: e
                        })
                    }
                    return true
                } else {
                    return this.add(e)
                }
            }
            return false
        };
        this.remove = function(f) {
            if (f == null || f == undefined) {
                return false
            }
            var e = this.records.indexOf(f);
            if (e != -1) {
                this.records.splice(e, 1);
                if (!this.updating) {
                    this._raiseEvent({
                        type: "remove",
                        element: f
                    })
                }
                return true
            }
            return false
        };
        this.removeAt = function(f) {
            if (f == null || f == undefined) {
                return false
            }
            if (f < 0) {
                return false
            }
            if (f < this.records.length) {
                var e = this.records[f];
                this.records.splice(f, 1);
                if (!this.updating) {
                    this._raiseEvent({
                        type: "removeAt",
                        index: f,
                        element: e
                    })
                }
                return true
            }
            return false
        };
        return this
    };
    b.jqx.dataview = function() {
        this.self = this;
        this.grid = null;
        this.uniqueId = "id";
        this.records = [];
        this.rows = [];
        this.columns = [];
        this.groups = [];
        this.filters = new Array();
        this.updated = null;
        this.update = null;
        this.suspend = false;
        this.pagesize = 0;
        this.pagenum = 0;
        this.totalrows = 0;
        this.totalrecords = 0;
        this.groupable = true;
        this.loadedrecords = [];
        this.loadedrootgroups = [];
        this.loadedgroups = [];
        this.loadedgroupsByKey = [];
        this.virtualmode = true;
        this._cachegrouppages = new Array();
        this.source = null;
        this.changedrecords = new Array();
        this.rowschangecallback = null;
        this.that = this;
        this.destroy = function() {
            delete this.self;
            delete this.grid;
            delete this.uniqueId;
            delete this.records;
            delete this.rows;
            delete this.columns;
            delete this.groups;
            delete this.filters;
            delete this.updated;
            delete this.update;
            delete this.suspend;
            delete this.pagesize;
            delete this.pagenum;
            delete this.totalrows;
            delete this.totalrecords;
            delete this.groupable;
            delete this.loadedrecords;
            delete this.loadedrootgroups;
            delete this.loadedgroups;
            delete this.loadedgroupsByKey;
            delete this.virtualmode;
            delete this._cachegrouppages;
            delete this.source;
            delete this.changedrecords;
            delete this.rowschangecallback;
            delete this.that
        },
        this.suspendupdate = function() {
            this.suspend = true
        },
        this.isupdating = function() {
            return this.suspend
        },
        this.resumeupdate = function(d) {
            this.suspend = false;
            if (d == undefined) {
                d = true
            }
            this.refresh(d)
        },
        this.getrecords = function() {
            return this.records
        },
        this.clearrecords = function() {
            this.recordids = new Array()
        };
        this.databind = function(q, l) {
            var p = q._source ? true: false;
            var g = null;
            if (p) {
                g = q;
                q = q._source
            } else {
                g = new b.jqx.dataAdapter(q, {
                    autoBind: false
                })
            }
            var e = function(m) {
                g.recordids = [];
                g.records = new Array();
                g.cachedrecords = new Array();
                g.originaldata = new Array();
                g._options.virtualmode = m.virtualmode;
                g._options.totalrecords = m.totalrecords;
                g._options.originaldata = m.originaldata;
                g._options.recordids = m.recordids;
                g._options.cachedrecords = new Array();
                g._options.pagenum = m.pagenum;
                g._options.pageable = m.pageable;
                if (q.type != undefined) {
                    g._options.type = q.type
                }
                if (q.formatdata != undefined) {
                    g._options.formatData = q.formatdata
                }
                if (q.contenttype != undefined) {
                    g._options.contentType = q.contenttype
                }
                if (q.async != undefined) {
                    g._options.async = q.async
                }
                if (q.updaterow != undefined) {
                    g._options.updaterow = q.updaterow
                }
                if (q.addrow != undefined) {
                    g._options.addrow = q.addrow
                }
                if (q.deleterow != undefined) {
                    g._options.deleterow = q.deleterow
                }
                if (m.pagesize == 0) {
                    m.pagesize = 10
                }
                g._options.pagesize = m.pagesize
            };
            var t = function(C) {
                C.totalrecords = g.totalrecords;
                if (!C.virtualmode) {
                    C.originaldata = g.originaldata;
                    C.records = g.records;
                    C.recordids = g.recordids;
                    C.cachedrecords = g.cachedrecords
                } else {
                    var x = {
                        startindex: C.pagenum * C.pagesize,
                        endindex: (C.pagenum * C.pagesize + C.pagesize)
                    };
                    if (q.recordstartindex != undefined) {
                        x.startindex = parseInt(q.recordstartindex)
                    }
                    if (q.recordendindex != undefined) {
                        x.endindex = parseInt(q.recordendindex)
                    } else {
                        if (!C.grid.pageable) {
                            x.endindex = x.startindex + 100;
                            if (C.grid.autoheight) {
                                x.endindex = x.startindex + C.totalrecords
                            }
                        }
                    }
                    if (!q.recordendindex) {
                        if (!C.grid.pageable) {
                            x.endindex = x.startindex + 100;
                            if (C.grid.autoheight) {
                                x.endindex = x.startindex + C.totalrecords
                            }
                        } else {
                            x = {
                                startindex: C.pagenum * C.pagesize,
                                endindex: (C.pagenum * C.pagesize + C.pagesize)
                            }
                        }
                    }
                    x.data = g.records;
                    if (C.grid.rendergridrows && C.totalrecords > 0) {
                        var E = 0;
                        q.records = C.grid.rendergridrows(x);
                        if (q.records.length) {
                            E = q.records.length
                        }
                        if (q.records && !q.records[x.startindex]) {
                            var m = new Array();
                            var D = x.startindex;
                            b.each(q.records,
                            function() {
                                m[D] = this;
                                D++;
                                E++
                            });
                            q.records = m
                        }
                        if (E == 0) {
                            if (q.records) {
                                b.each(q.records,
                                function() {
                                    E++
                                })
                            }
                        }
                        if (E > 0 && E < x.endindex - x.startindex && !C.grid.groupable) {
                            var A = q.records[0];
                            for (var z = 0; z < x.endindex - x.startindex - E; z++) {
                                var B = {};
                                for (obj in A) {
                                    B[obj] = ""
                                }
                                if (q.records.push) {
                                    q.records.push(B)
                                }
                            }
                        }
                    }
                    if (!q.records || C.totalrecords == 0) {
                        q.records = new Array()
                    }
                    C.originaldata = q.records;
                    C.records = q.records;
                    C.cachedrecords = q.records
                }
            };
            e(this);
            this.source = q;
            if (l !== undefined) {
                uniqueId = l
            }
            var y = this.that;
            switch (q.datatype) {
            case "local":
            case "array":
            default:
                if (q.localdata == null) {
                    q.localdata = []
                }
                if (q.localdata != null) {
                    g.unbindBindingUpdate(y.grid.element.id);
                    if ((!y.grid.autobind && y.grid.isInitialized) || y.grid.autobind) {
                        g.dataBind()
                    }
                    var k = function(x) {
                        if (x != undefined && x != "") {
                            var z = g._changedrecords[0];
                            if (z) {
                                var A = new Array();
                                b.each(g._changedrecords,
                                function(E) {
                                    var B = this.index;
                                    var C = this.record;
                                    y.grid._updateFromAdapter = true;
                                    switch (x) {
                                    case "update":
                                        var D = y.grid.getrowid(B);
                                        if (E == g._changedrecords.length - 1) {
                                            y.grid.updaterow(D, C)
                                        } else {
                                            y.grid.updaterow(D, C, false)
                                        }
                                        y.grid._updateFromAdapter = false;
                                        return;
                                    case "add":
                                        y.grid.addrow(null, C);
                                        y.grid._updateFromAdapter = false;
                                        return;
                                    case "remove":
                                        var D = y.grid.getrowid(B);
                                        A.push(D);
                                        return
                                    }
                                });
                                if (A.length > 0) {
                                    y.grid.deleterow(A, false);
                                    y.grid._updateFromAdapter = false
                                }
                            }
                            if (x == "update") {
                                return
                            }
                        }
                        var m = y.totalrecords;
                        t(y, x);
                        if (q.localdata.notifier === null && q.localdata.name == "observableArray") {
                            q.localdata.notifier = function(F) {
                                if (this._updating) {
                                    return
                                }
                                this._updating = true;
                                var E = y.grid.getrowid(F.index);
                                switch (F.type) {
                                case "add":
                                    var B = b.extend({},
                                    F.object[F.index]);
                                    var D = g.getid(q.id, B, F.index);
                                    if (F.index === 0) {
                                        y.grid.addrow(D, B, "first")
                                    } else {
                                        y.grid.addrow(D, B)
                                    }
                                    break;
                                case "delete":
                                    y.grid.deleterow(E);
                                    break;
                                case "update":
                                    if (F.path && F.path.split(".").length > 1) {
                                        var C = F.path.split(".");
                                        y.grid.setcellvalue(F.index, C[C.length - 1], F.newValue)
                                    } else {
                                        var B = b.extend({},
                                        F.object[F.index]);
                                        y.grid.updaterow(E, B)
                                    }
                                    break
                                }
                                this._updating = false
                            }
                        }
                        if (x == "updateData") {
                            y.refresh();
                            y.grid._updateGridData()
                        } else {
                            if (q.recordstartindex && this.virtualmode) {
                                y.updateview(q.recordstartindex, q.recordstartindex + y.pagesize)
                            } else {
                                y.refresh()
                            }
                            y.update(m != y.totalrecords)
                        }
                    };
                    k();
                    g.bindBindingUpdate(y.grid.element.id, k)
                }
                break;
            case "json":
            case "jsonp":
            case "xml":
            case "xhtml":
            case "script":
            case "text":
            case "csv":
            case "tab":
                if (q.localdata != null) {
                    g.unbindBindingUpdate(y.grid.element.id);
                    if ((!y.grid.autobind && y.grid.isInitialized) || y.grid.autobind) {
                        g.dataBind()
                    }
                    var k = function(x) {
                        var m = y.totalrecords;
                        t(y);
                        if (x == "updateData") {
                            y.refresh();
                            y.grid._updateGridData()
                        } else {
                            if (q.recordstartindex && y.virtualmode) {
                                y.updateview(q.recordstartindex, q.recordstartindex + y.pagesize)
                            } else {
                                y.refresh()
                            }
                            y.update(m != y.totalrecords)
                        }
                    };
                    k();
                    g.bindBindingUpdate(y.grid.element.id, k);
                    return
                }
                var u = {};
                var o = 0;
                var v = {};
                for (var i = 0; i < this.filters.length; i++) {
                    var f = this.filters[i].datafield;
                    var j = this.filters[i].filter;
                    if (!j.getfilters) {
                        continue
                    }
                    var h = j.getfilters();
                    v[f + "operator"] = j.operator;
                    for (var s = 0; s < h.length; s++) {
                        h[s].datafield = f;
                        var n = h[s].value;
                        if (h[s].type == "datefilter") {
                            if (h[s].value && h[s].value.toLocaleString) {
                                var d = this.grid.getcolumn(h[s].datafield);
                                if (d.cellsformat) {
                                    var r = this.grid.source.formatDate(h[s].value, d.cellsformat, this.grid.gridlocalization);
                                    if (r) {
                                        v["filtervalue" + o] = r
                                    } else {
                                        v["filtervalue" + o] = h[s].value.toLocaleString()
                                    }
                                } else {
                                    v["filtervalue" + o] = n.toString()
                                }
                            } else {
                                v["filtervalue" + o] = n.toString()
                            }
                        } else {
                            v["filtervalue" + o] = n.toString();
                            if (h[s].data) {
                                v["filterid" + o] = h[s].data.toString()
                            }
                            if (h[s].id) {
                                v["filterid" + o] = h[s].id.toString()
                            }
                        }
                        v["filtercondition" + o] = h[s].condition;
                        v["filteroperator" + o] = h[s].operator;
                        v["filterdatafield" + o] = f;
                        o++
                    }
                }
                v.filterscount = o;
                v.groupscount = y.groups.length;
                for (var i = 0; i < y.groups.length; i++) {
                    v["group" + i] = y.groups[i]
                }
                if (q.recordstartindex == undefined) {
                    q.recordstartindex = 0
                }
                if (q.recordendindex == undefined || q.recordendindex == 0) {
                    if (y.grid.height && y.grid.height.toString().indexOf("%") == -1) {
                        q.recordendindex = parseInt(y.grid.height) / y.grid.rowsheight;
                        q.recordendindex += 2;
                        q.recordendindex = parseInt(q.recordendindex)
                    } else {
                        q.recordendindex = b(window).height() / y.grid.rowsheight;
                        q.recordendindex = parseInt(q.recordendindex)
                    }
                    if (this.pageable) {
                        q.recordendindex = this.pagesize
                    }
                }
                if (this.pageable) {
                    q.recordstartindex = (this.pagenum) * this.pagesize;
                    q.recordendindex = (this.pagenum + 1) * this.pagesize
                }
                b.extend(v, {
                    sortdatafield: y.sortfield,
                    sortorder: y.sortfielddirection,
                    pagenum: y.pagenum,
                    pagesize: y.grid.pagesize,
                    recordstartindex: q.recordstartindex,
                    recordendindex: q.recordendindex
                });
                var w = g._options.data;
                if (g._options.data) {
                    b.extend(g._options.data, v)
                } else {
                    if (q.data) {
                        b.extend(v, q.data)
                    }
                    g._options.data = v
                }
                var k = function() {
                    var x = b.jqx.browser.msie && b.jqx.browser.version < 9;
                    var z = function() {
                        var A = y.totalrecords;
                        t(y);
                        if (q.recordstartindex && y.virtualmode) {
                            y.updateview(q.recordstartindex, q.recordstartindex + y.pagesize)
                        } else {
                            y.refresh()
                        }
                        y.update(A != y.totalrecords)
                    };
                    if (x) {
                        try {
                            z()
                        } catch(m) {}
                    } else {
                        z()
                    }
                };
                g.unbindDownloadComplete(y.grid.element.id);
                g.bindDownloadComplete(y.grid.element.id, k);
                if ((!y.grid.autobind && y.grid.isInitialized) || y.grid.autobind) {
                    g.dataBind()
                } else {
                    if (!y.grid.isInitialized && !y.grid.autobind) {
                        k()
                    }
                }
                g._options.data = w
            }
        };
        this.getid = function(g, e, f) {
            if (b(g, e).length > 0) {
                return b(g, e).text()
            }
            if (g) {
                if (g.toString().length > 0) {
                    var d = b(e).attr(g);
                    if (d != null && d.toString().length > 0) {
                        return d
                    }
                }
            }
            return f
        };
        this.getvaluebytype = function(g, d) {
            var e = g;
            if (d.type == "date") {
                var f = new Date(g);
                if (f.toString() == "NaN" || f.toString() == "Invalid Date") {
                    if (b.jqx.dataFormat) {
                        g = b.jqx.dataFormat.tryparsedate(g)
                    } else {
                        g = f
                    }
                } else {
                    g = f
                }
                if (g == null) {
                    g = e
                }
            } else {
                if (d.type == "float") {
                    var g = parseFloat(g);
                    if (isNaN(g)) {
                        g = e
                    }
                } else {
                    if (d.type == "int") {
                        var g = parseInt(g);
                        if (isNaN(g)) {
                            g = e
                        }
                    } else {
                        if (d.type == "bool") {
                            if (g != null) {
                                if (g.toLowerCase() == "false") {
                                    g = false
                                } else {
                                    if (g.toLowerCase() == "true") {
                                        g = true
                                    }
                                }
                            }
                            if (g == 1) {
                                g = true
                            } else {
                                if (g == 0) {
                                    g = false
                                } else {
                                    g = ""
                                }
                            }
                        }
                    }
                }
            }
            return g
        };
        this.setpaging = function(d) {
            if (d.pageSize != undefined) {
                this.pagesize = d.pageSize
            }
            if (d.pageNum != undefined) {
                this.pagenum = Math.min(d.pageNum, Math.ceil(this.totalrows / this.pagesize))
            }
            this.refresh()
        };
        this.getpagingdetails = function() {
            return {
                pageSize: this.pagesize,
                pageNum: this.pagenum,
                totalrows: this.totalrows
            }
        };
        this._clearcaches = function() {
            this.sortcache = {};
            this.sortdata = null;
            this.changedrecords = new Array();
            this.records = new Array();
            this.rows = new Array();
            this.cacheddata = new Array();
            this.originaldata = new Array();
            this.bounditems = new Array();
            this.loadedrecords = new Array();
            this.loadedrootgroups = new Array();
            this.loadedgroups = new Array();
            this.loadedgroupsByKey = new Array();
            this._cachegrouppages = new Array();
            this.recordsbyid = new Array();
            this.cachedrecords = new Array();
            this.recordids = new Array()
        };
        this.addfilter = function(g, f) {
            var e = -1;
            for (var d = 0; d < this.filters.length; d++) {
                if (this.filters[d].datafield == g) {
                    e = d;
                    break
                }
            }
            if (e == -1) {
                this.filters[this.filters.length] = {
                    filter: f,
                    datafield: g
                }
            } else {
                this.filters[e] = {
                    filter: f,
                    datafield: g
                }
            }
        };
        this.removefilter = function(e) {
            for (var d = 0; d < this.filters.length; d++) {
                if (this.filters[d].datafield == e) {
                    this.filters.splice(d, 1);
                    break
                }
            }
        };
        this.getItemFromIndex = function(d) {
            return this.records[d]
        };
        this.updaterow = function(d, n, l) {
            var e = this.filters && this.filters.length > 0 && !this.virtualmode;
            if (!e && n != undefined && d != undefined) {
                n.uid = d;
                if (! (n[this.source.id])) {
                    n[this.source.id] = n.uid
                }
                var j = this.recordsbyid["id" + d];
                var k = this.records.indexOf(j);
                if (k == -1) {
                    return false
                }
                this.records[k] = n;
                if (this.cachedrecords) {
                    this.cachedrecords[k] = n
                }
                if (l == true || l == undefined) {
                    this.refresh()
                }
                this.changedrecords[n.uid] = {
                    Type: "Update",
                    OldData: j,
                    Data: n
                };
                return true
            } else {
                if (this.filters && this.filters.length > 0) {
                    var f = this.cachedrecords;
                    var j = null;
                    var k = -1;
                    for (var h = 0; h < f.length; h++) {
                        if (f[h].uid == d) {
                            j = f[h];
                            k = h;
                            break
                        }
                    }
                    if (j) {
                        var m = this.that;
                        for (var g in n) {
                            m.cachedrecords[k][g] = n[g]
                        }
                        if (l == true || l == undefined) {
                            this.refresh()
                        }
                        return true
                    }
                }
            }
            return false
        };
        this.addrow = function(h, i, d, g) {
            if (i != undefined) {
                if (!h || this.recordsbyid["id" + h]) {
                    i.uid = this.getid(this.source.id, i, this.totalrecords);
                    var e = this.recordsbyid["id" + i.uid];
                    while (e != null) {
                        var f = Math.floor(Math.random() * 10000).toString();
                        i.uid = f;
                        e = this.recordsbyid["id" + f]
                    }
                } else {
                    i.uid = h
                }
                if (! (i[this.source.id])) {
                    if (this.source.id != undefined) {
                        i[this.source.id] = i.uid
                    }
                }
                if (d == "last") {
                    this.records.push(i)
                } else {
                    if (typeof d === "number" && isFinite(d)) {
                        this.records.splice(d, 0, i)
                    } else {
                        this.records.splice(0, 0, i)
                    }
                }
                if (this.filters && this.filters.length > 0) {
                    if (d == "last") {
                        this.cachedrecords.push(i)
                    } else {
                        if (typeof d === "number" && isFinite(d)) {
                            this.cachedrecords.splice(d, 0, i)
                        } else {
                            this.cachedrecords.splice(0, 0, i)
                        }
                    }
                }
                this.totalrecords++;
                if (this.virtualmode) {
                    this.source.totalrecords = this.totalrecords
                }
                if (g == true || g == undefined) {
                    this.refresh()
                }
                this.changedrecords[i.uid] = {
                    Type: "New",
                    Data: i
                };
                return true
            }
            return false
        };
        this.deleterow = function(j, h) {
            if (j != undefined) {
                var d = this.filters && this.filters.length > 0;
                if (this.recordsbyid["id" + j] && !d) {
                    var e = this.recordsbyid["id" + j];
                    var k = this.records.indexOf(e);
                    this.changedrecords[j] = {
                        Type: "Delete",
                        Data: this.records[k]
                    };
                    this.records.splice(k, 1);
                    this.totalrecords--;
                    if (this.virtualmode) {
                        this.source.totalrecords = this.totalrecords
                    }
                    if (h == true || h == undefined) {
                        this.refresh()
                    }
                    return true
                } else {
                    if (this.filters && this.filters.length > 0) {
                        var f = this.cachedrecords;
                        var e = null;
                        var k = -1;
                        for (var g = 0; g < f.length; g++) {
                            if (f[g].uid == j) {
                                e = f[g];
                                k = g;
                                break
                            }
                        }
                        if (e) {
                            this.cachedrecords.splice(k, 1);
                            if (h == true || h == undefined) {
                                this.totalrecords = 0;
                                this.records = this.cachedrecords;
                                this.refresh()
                            }
                            return true
                        }
                    }
                }
                return false
            }
            return false
        };
        this.reload = function(f, d, r, g, h, u, t) {
            var m = this.that;
            var l = new Array();
            var o = f;
            var i = d;
            var j = r;
            var p = g;
            var k = i.length;
            var w = 0;
            var e = 0;
            var s, n;
            this.columns = [];
            this.bounditems = new Array();
            this.loadedrecords = new Array();
            this.loadedrootgroups = new Array();
            this.loadedgroups = new Array();
            this.loadedgroupsByKey = new Array();
            this._cachegrouppages = new Array();
            this.recordsbyid = {};
            if (this.totalrecords == 0) {
                Object.size = function(z) {
                    var y = 0,
                    x;
                    for (x in z) {
                        if (z.hasOwnProperty(x)) {
                            y++
                        }
                    }
                    return y
                };
                var v = Object.size(o);
                this.totalrecords = v;
                b.each(this.records,
                function(y) {
                    var z = this;
                    var x = 0;
                    b.each(z,
                    function(A, B) {
                        m.columns[x++] = A
                    });
                    return false
                })
            }
            if (this.virtualmode) {
                if (this.pageable) {
                    this.updateview();
                    return
                }
                var u = 0;
                if (!this.groupable) {
                    this.updateview();
                    return
                } else {
                    var t = this.totalrecords
                }
            } else {
                var u = 0;
                var t = this.totalrecords
            }
            if (this.groupable && this.groups.length > 0 && this.loadgrouprecords) {
                var q = u;
                q = this.loadgrouprecords(0, u, t, j, e, p, i, k, l)
            } else {
                w = this.loadflatrecords(u, t, j, e, p, i, k, l)
            }
            if (k > e) {
                i.splice(e, k - e)
            }
            if (this.groups.length > 0 && this.groupable) {
                this.totalrows = q
            } else {
                this.totalrows = w
            }
            return l
        };
        this.loadflatrecords = function(d, o, e, p, l, u, n, q) {
            var t = this.that;
            var k = d;
            var m = d;
            o = Math.min(o, this.totalrecords);
            var g = this.sortdata != null;
            var f = this.source.id && (this.source.datatype == "local" || this.source.datatype == "array" || this.source.datatype == "");
            var j = g ? this.sortdata: this.records;
            for (var h = d; h < o; h++) {
                var s = {};
                if (!g) {
                    s = b.extend({},
                    j[h]);
                    id = s[t.uniqueId];
                    s.boundindex = k;
                    t.loadedrecords[k] = s;
                    if (s.uid == undefined) {
                        s.uid = t.getid(t.source.id, s, k)
                    }
                    t.recordsbyid["id" + s.uid] = j[h];
                    s.uniqueid = t.generatekey();
                    t.bounditems[this.bounditems.length] = s
                } else {
                    s = b.extend({},
                    j[h].value);
                    id = s[t.uniqueId];
                    s.boundindex = j[h].index;
                    if (s.uid == undefined) {
                        s.uid = t.getid(t.source.id, s, s.boundindex)
                    }
                    t.recordsbyid["id" + s.uid] = j[h].value;
                    t.loadedrecords[k] = s;
                    s.uniqueid = t.generatekey();
                    t.bounditems[s.boundindex] = s
                }
                if (p >= n || id != u[p][t.uniqueId] || (l && l[id])) {
                    q[q.length] = p
                }
                u[p] = s;
                p++;
                s.visibleindex = m;
                m++;
                k++
            }
            if (t.grid.summaryrows) {
                var r = k;
                b.each(t.grid.summaryrows,
                function() {
                    var i = b.extend({},
                    this);
                    i.boundindex = o++;
                    t.loadedrecords[r] = i;
                    i.uniqueid = t.generatekey();
                    t.bounditems[t.bounditems.length] = i;
                    u[p] = i;
                    p++;
                    i.visibleindex = m;
                    m++;
                    r++
                })
            }
            return m
        },
        this.updateview = function(o, p) {
            var r = this.that;
            var k = this.pagesize * this.pagenum;
            var n = 0;
            var s = new Array();
            var e = this.filters;
            var j = this.updated;
            var l = s.length;
            if (this.pageable) {
                if (this.virtualmode) {
                    if (!this.groupable || this.groups.length == 0) {
                        this.loadflatrecords(this.pagesize * this.pagenum, this.pagesize * (1 + this.pagenum), e, n, j, s, l, []);
                        this.totalrows = s.length
                    } else {
                        if (this.groupable && this.groups.length > 0 && this.loadgrouprecords) {
                            if (this._cachegrouppages[this.pagenum + "_" + this.pagesize] != undefined) {
                                this.rows = this._cachegrouppages[this.pagenum + "_" + this.pagesize];
                                this.totalrows = this.rows.length;
                                return
                            }
                            var m = this.pagesize * (1 + this.pagenum);
                            if (m > this.totalrecords) {
                                m = this.totalrecords
                            }
                            this.loadgrouprecords(0, this.pagesize * this.pagenum, m, e, n, j, s, l, []);
                            this._cachegrouppages[this.pagenum + "_" + this.pagesize] = this.rows;
                            this.totalrows = this.rows.length;
                            return
                        }
                    }
                }
            } else {
                if (this.virtualmode && (!this.groupable || this.groups.length == 0)) {
                    var g = this.pagesize;
                    if (g == 0) {
                        g = Math.min(100, this.totalrecords)
                    }
                    var d = g * this.pagenum;
                    if (this.loadedrecords.length == 0) {
                        d = 0
                    }
                    if (o != null && p != null) {
                        this.loadflatrecords(o, p, e, n, j, s, l, [])
                    } else {
                        this.loadflatrecords(this.pagesize * this.pagenum, this.pagesize * (1 + this.pagenum), e, n, j, s, l, [])
                    }
                    this.totalrows = this.loadedrecords.length;
                    this.rows = s;
                    if (s.length >= g) {
                        return
                    }
                }
            }
            if (this.groupable && this.pageable && this.groups.length > 0 && this._updategroupsinpage) {
                s = this._updategroupsinpage(r, e, k, n, l, this.pagesize * this.pagenum, this.pagesize * (1 + this.pagenum))
            } else {
                for (var h = this.pagesize * this.pagenum; h < this.pagesize * (1 + this.pagenum); h++) {
                    var q = h < this.loadedrecords.length ? this.loadedrecords[h] : null;
                    if (q == null) {
                        continue
                    }
                    if (!this.pagesize || (k >= this.pagesize * this.pagenum && k <= this.pagesize * (this.pagenum + 1))) {
                        s[n] = q;
                        n++
                    }
                    k++
                }
            }
            if ((s.length == 0 || s.length < this.pagesize) && !this.pageable && this.virtualmode) {
                n = s.length;
                var f = s.length;
                for (var h = this.pagesize * this.pagenum; h < this.pagesize * (1 + this.pagenum) - f; h++) {
                    var q = {};
                    q.boundindex = h + f;
                    q.visibleindex = h + f;
                    q.uniqueid = r.generatekey();
                    q.empty = true;
                    r.bounditems[h + f] = q;
                    s[n] = q;
                    n++
                }
            }
            this.rows = s
        };
        this.generatekey = function() {
            var d = function() {
                return (((1 + Math.random()) * 16) | 0)
            };
            return ("" + d() + d() + "-" + d() + "-" + d() + "-" + d() + "-" + d() + d() + d())
        };
        this.reloaddata = function() {
            this.reload(this.records, this.rows, this.filter, this.updated, true)
        };
        this.refresh = function(h) {
            if (this.suspend) {
                return
            }
            if (h == undefined) {
                h = true
            }
            var l = this.rows.length;
            var k = this.totalrows;
            if (this.filters.length > 0 && !this.virtualmode) {
                var e = "";
                var g = this.cachedrecords.length;
                var s = new Array();
                this.totalrecords = 0;
                var n = this.cachedrecords;
                this._dataIndexToBoundIndex = new Array();
                var f = this.filters.length;
                if (this.source != null && this.source.filter != undefined && this.source.localdata != undefined) {
                    s = this.source.filter(this.filters, n, g);
                    if (s == undefined) {
                        s = new Array()
                    }
                    this.records = s
                } else {
                    if (this.source.filter == null || this.source.filter == undefined) {
                        for (var u = 0; u < g; u++) {
                            var o = n[u];
                            var d = undefined;
                            for (var m = 0; m < f; m++) {
                                var e = this.filters[m].filter;
                                var r = o[this.filters[m].datafield];
                                var t = e.evaluate(r);
                                if (d == undefined) {
                                    d = t
                                } else {
                                    if (e.operator == "or") {
                                        d = d || t
                                    } else {
                                        d = d && t
                                    }
                                }
                            }
                            if (d) {
                                s[s.length] = b.extend({
                                    dataindex: u
                                },
                                o);
                                this._dataIndexToBoundIndex[u] = {
                                    boundindex: s.length - 1
                                }
                            } else {
                                this._dataIndexToBoundIndex[u] = null
                            }
                        }
                        this.records = s
                    }
                }
                if (this.sortdata) {
                    var i = this.sortfield;
                    if (this.sortcache[i]) {
                        this.sortdata = null;
                        var p = this.sortcache[i].direction;
                        this.sortcache[i] = null;
                        this.sortby(this.sortfield, p);
                        return
                    }
                }
            } else {
                if (this.filters.length == 0 && !this.virtualmode) {
                    if (this.cachedrecords) {
                        this.totalrecords = 0;
                        var n = this.cachedrecords;
                        this.records = n;
                        if (this.sortdata) {
                            var i = this.sortfield;
                            if (this.sortcache[i]) {
                                this.sortdata = null;
                                var p = this.sortcache[i].direction;
                                this.sortcache[i] = null;
                                this.sortby(this.sortfield, p);
                                return
                            }
                        }
                    }
                }
            }
            var q = this.reload(this.records, this.rows, this.filter, this.updated, h);
            this.updated = null;
            if (this.rowschangecallback != null) {
                if (k != totalrows) {
                    this.rowschangecallback({
                        type: "PagingChanged",
                        data: getpagingdetails()
                    })
                }
                if (l != rows.length) {
                    this.rowschangecallback({
                        type: "RowsCountChanged",
                        data: {
                            previous: l,
                            current: rows.length
                        }
                    })
                }
                if (q.length > 0 || l != rows.length) {
                    this.rowschangecallback({
                        type: "RowsChanged",
                        data: {
                            previous: l,
                            current: rows.length,
                            diff: q
                        }
                    })
                }
            }
        };
        return this
    }
})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.extend(a.jqx._jqxGrid.prototype,{_handledblclick:function(t,n){if(t.target==null){return}if(n.disabled){return}if(a(t.target).ischildof(this.columnsheader)){return}var w;if(t.which){w=(t.which==3)}else{if(t.button){w=(t.button==2)}}if(w){return}var B;if(t.which){B=(t.which==2)}else{if(t.button){B=(t.button==1)}}if(B){return}var v=this.showheader?this.columnsheader.height()+2:0;var o=this._groupsheader()?this.groupsheader.height():0;var A=this.showtoolbar?this.toolbarheight:0;o+=A;var e=this.host.offset();var m=t.pageX-e.left;var l=t.pageY-v-e.top-o;var b=this._hittestrow(m,l);if(!b){return}var h=b.row;var j=b.index;var q=t.target.className;var p=this.table[0].rows[j];if(p==null){return}n.mousecaptured=true;n.mousecaptureposition={left:t.pageX,top:t.pageY-o};var r=this.hScrollInstance;var s=r.value;var d=0;var k=this.groupable?this.groups.length:0;for(var u=0;u<p.cells.length;u++){var f=parseInt(a(this.columnsrow[0].cells[u]).css("left"));var g=f-s;if(n.columns.records[u].pinned){g=f}var c=this._getcolumnat(u);if(c!=null&&c.hidden){continue}var z=g+a(this.columnsrow[0].cells[u]).width();if(z>=m&&m>=g){d=u;break}}if(h!=null){var c=this._getcolumnat(d);if(!(q.indexOf("jqx-grid-group-expand")!=-1||q.indexOf("jqx-grid-group-collapse")!=-1)){if(h.boundindex!=-1){n.begincelledit(n.getboundindex(h),c.datafield,c.defaulteditorvalue)}}}},_getpreveditablecolumn:function(c){var b=this;while(c>0){c--;var d=b.getcolumnat(c);if(!d){return null}if(!d.editable){continue}if(!d.hidden){return d}}return null},_getnexteditablecolumn:function(c){var b=this;while(c<this.columns.records.length){c++;var d=b.getcolumnat(c);if(!d){return null}if(!d.editable){continue}if(!d.hidden){return d}}return null},_handleeditkeydown:function(D,x){if(x.handlekeyboardnavigation){var p=x.handlekeyboardnavigation(D);if(p==true){return true}}var H=D.charCode?D.charCode:D.keyCode?D.keyCode:0;if(x.showfilterrow&&x.filterable){if(this.filterrow){if(a(D.target).ischildof(this.filterrow)){return true}}}if(x.pageable){if(a(D.target).ischildof(this.pager)){return true}}if(this.showtoolbar){if(a(D.target).ischildof(this.toolbar)){return true}}if(this.showeverpresentrow){if(this.addnewrowtop){if(a(D.target).ischildof(this.addnewrowtop)){return true}}if(this.addnewrowbottom){if(a(D.target).ischildof(this.addnewrowbottom)){return true}}}if(this.showstatusbar){if(a(D.target).ischildof(this.statusbar)){return true}}if(this.rowdetails){if(a(D.target).ischildof(this.content.find("[role='rowgroup']"))){return true}}if(this.editcell){if(this.editmode==="selectedrow"){if(H===13){this.endrowedit(this.editcell.row,false)}else{if(H===27){this.endrowedit(this.editcell.row,true)}}if(H===9){return false}return true}if(this.editcell.columntype==null||this.editcell.columntype=="textbox"||this.editcell.columntype=="numberinput"||this.editcell.columntype=="combobox"||this.editcell.columntype=="datetimeinput"){if(H>=33&&H<=40&&x.selectionmode=="multiplecellsadvanced"){var i=this.editcell.columntype=="textbox"||this.editcell.columntype==null?this.editcell.editor:this.editcell.editor.find("input");var I=x._selection(i);var y=i.val().length;if(I.length>0&&this.editcell.columntype!="datetimeinput"){x._cancelkeydown=true}if(I.start>0&&H==37){x._cancelkeydown=true}if(I.start<y&&H==39&&this.editcell.columntype!="datetimeinput"){x._cancelkeydown=true}if(this.editcell.columntype=="datetimeinput"&&H==39){if(I.start+I.length<y){x._cancelkeydown=true}}}}else{if(this.editcell.columntype=="dropdownlist"){if(H==37||H==39&&x.selectionmode=="multiplecellsadvanced"){x._cancelkeydown=false}}else{if(this.selectionmode=="multiplecellsadvanced"&&this.editcell.columntype!="textbox"&&this.editcell.columntype!="numberinput"){x._cancelkeydown=true}}}if(H==32){if(x.editcell.columntype=="checkbox"){var f=x.getcolumn(x.editcell.datafield);if(f.editable){var o=!x.getcellvalue(x.editcell.row,x.editcell.column);if(f.cellbeginedit){var b=f.cellbeginedit(x.editcell.row,f.datafield,f.columntype,!o);if(b==false){return false}}var k=x.getrowdata(x.editcell.row);x.setcellvalue(x.editcell.row,x.editcell.column,o,true);x._raiseEvent(18,{rowindex:x.editcell.row,row:k,datafield:x.editcell.column,oldvalue:!o,value:o,columntype:"checkbox"});return false}}}if(H==9){var h=this.editcell.row;var v=this.editcell.column;var n=v;var A=x._getcolumnindex(v);var u=false;var d=x.getrowvisibleindex(h);this.editchar="";var e=this.editcell.validated;if(!this.editcell.validated){var e=this.endcelledit(this.editcell.row,this.editcell.column,false,true,false)}if(e!=false){if(D.shiftKey){var f=x._getpreveditablecolumn(A);if(f){v=f.datafield;u=true;if(x.selectionmode.indexOf("cell")!=-1){x.selectprevcell(h,n);x._oldselectedcell=x.selectedcell;setTimeout(function(){x.ensurecellvisible(d,v)},10)}}}else{var f=x._getnexteditablecolumn(A);if(f){v=f.datafield;u=true;if(x.selectionmode.indexOf("cell")!=-1){x.selectnextcell(h,n);x._oldselectedcell=x.selectedcell;setTimeout(function(){x.ensurecellvisible(d,v)},10)}}}if(u){x.begincelledit(h,v);if(this.editcell!=null&&this.editcell.columntype=="checkbox"){this._renderrows(this.virtualsizeinfo)}}else{if(this.editcell!=null){x.endcelledit(h,v,false);this._renderrows(this.virtualsizeinfo)}return true}}return false}else{if(H==13){var t=this.selectedcell;if(t){var w=this.getrowvisibleindex(t.rowindex)}this.endcelledit(this.editcell.row,this.editcell.column,false,true);if(this.selectionmode=="multiplecellsadvanced"){var c=x.getselectedcell();if(c!=null){if(x.selectcell){if(this.editcell==null){if(c.rowindex+1<this.dataview.totalrecords){if(this.sortcolumn!=c.datafield){var d=this.getrowvisibleindex(c.rowindex);var G=this.dataview.loadedrecords[d+1];if(G){if(!this.pageable||(this.pageable&&d+1<(this.dataview.pagenum+1)*this.pagesize)){this.clearselection(false);this.selectcell(this.getboundindex(G),c.datafield);var c=this.getselectedcell();this.ensurecellvisible(G.visibleindex,c.datafield)}}}else{if(t!=null){var F=this.dataview.loadedrecords[w+1];if(F){if(!this.pageable||(this.pageable&&w+1<this.pagesize)){this.clearselection(false);this.selectcell(this.getboundindex(F),c.datafield)}else{if(this.pageable&&w+1>=this.pagesize){this.clearselection(false);var F=this.dataview.loadedrecords[w];this.selectcell(this.getboundindex(F),c.datafield)}}}}}}}}}}return false}else{if(H==27){this.endcelledit(this.editcell.row,this.editcell.column,true,true);return false}}}}else{var z=false;if(H==113){z=true}if(!D.ctrlKey&&!D.altKey&&!D.metaKey){if(H>=48&&H<=57){this.editchar=String.fromCharCode(H);z=true}if(H>=65&&H<=90){this.editchar=String.fromCharCode(H);var s=false;if(D.shiftKey){s=D.shiftKey}else{if(D.modifiers){s=!!(D.modifiers&4)}}if(!s){this.editchar=this.editchar.toLowerCase()}z=true}else{if(H>=96&&H<=105){this.editchar=H-96;this.editchar=this.editchar.toString();z=true}}var r=a(".jqx-grid").length;z=z&&(r==1||(r>1&&x.focused));var l=a.data(document.body,"jqxgrid.edit");if(l!==undefined&&l!==""){if(H===13||z){if(l!=x.element.id){return true}}}}if(H==13||z){if(x.getselectedrowindex){var h=x.getselectedrowindex();switch(x.selectionmode){case"singlerow":case"multiplerows":case"multiplerowsextended":if(h>=0){var v="";for(var B=0;B<x.columns.records.length;B++){var f=x.getcolumnat(B);if(f.editable){v=f.datafield;break}}x.begincelledit(h,v)}break;case"singlecell":case"multiplecells":case"multiplecellsextended":var c=x.getselectedcell();if(c!=null){var f=x._getcolumnbydatafield(c.datafield);if(f.columntype!="checkbox"){x.begincelledit(c.rowindex,c.datafield)}}break;case"multiplecellsadvanced":var c=x.getselectedcell();if(c!=null){if(H==13){if(x.selectcell){if(c.rowindex+1<x.dataview.totalrecords){var d=this.getrowvisibleindex(c.rowindex);var G=this.dataview.loadedrecords[d+1];if(G){this.clearselection(false);this.selectcell(this.getboundindex(G),c.datafield);var c=this.getselectedcell();this.ensurecellvisible(G.visibleindex,c.datafield)}}}}else{if(x.editmode!=="selectedrow"){x.begincelledit(c.rowindex,c.datafield)}}}break}return false}}if(H==46){var g=x.getselectedcells();if(x.selectionmode.indexOf("cell")==-1){if(x._getcellsforcopypaste){g=x._getcellsforcopypaste()}}if(g!=null&&g.length>0){for(var q=0;q<g.length;q++){var c=g[q];if(!c.datafield){continue}var f=x.getcolumn(c.datafield);var E=x.getcellvalue(c.rowindex,c.datafield);if(E!==""&&f.editable&&x.enablekeyboarddelete){var j=null;if(f.columntype=="checkbox"){if(!f.threestatecheckbox){j=false}}if(f.cellbeginedit){var b=f.cellbeginedit(c.rowindex,f.datafield,f.columntype,j);if(b==false){return false}}var k=x.getrowdata(c.rowindex);x._raiseEvent(17,{rowindex:c.rowindex,row:k,datafield:c.datafield,value:E});if(q==g.length-1){x.setcellvalue(c.rowindex,c.datafield,j,true);if(f.displayfield!=f.datafield){x.setcellvalue(c.rowindex,f.displayfield,j,true)}}else{x.setcellvalue(c.rowindex,c.datafield,j,false);if(f.displayfield!=f.datafield){x.setcellvalue(c.rowindex,f.displayfield,j,true)}}if(f.cellendedit){var C=f.cellendedit(c.rowindex,f.datafield,f.columntype,j)}x._raiseEvent(18,{rowindex:c.rowindex,row:k,datafield:c.datafield,oldvalue:E,value:j})}}this.dataview.updateview();this._renderrows(this.virtualsizeinfo);return false}}if(H==32){var c=x.getselectedcell();if(c!=null){var f=x.getcolumn(c.datafield);if(f.columntype=="checkbox"&&f.editable){var o=!x.getcellvalue(c.rowindex,c.datafield);if(f.cellbeginedit){var b=f.cellbeginedit(c.rowindex,f.datafield,f.columntype,!o);if(b==false){return false}}var k=x.getrowdata(c.rowindex);x._raiseEvent(17,{rowindex:c.rowindex,row:k,datafield:c.datafield,value:!o,columntype:"checkbox"});x.setcellvalue(c.rowindex,c.datafield,o,true);x._raiseEvent(18,{rowindex:c.rowindex,row:k,datafield:c.datafield,oldvalue:!o,value:o,columntype:"checkbox"});return false}}}}return true},begincelledit:function(n,e,l,g,c){var f=this.getcolumn(e);this._cellscache=new Array();if(e==null){return}if(f.columntype=="number"||f.columntype=="button"){return}if(this.groupable){if(this.groups.indexOf(e)>=0){return}if(this.groups.indexOf(f.displayfield)>=0){return}}if(this.editrow!=undefined){return}if(this.editcell){if(this.editcell.row==n&&this.editcell.column==e){return true}if(this.editmode==="selectedrow"){if(this.editcell.row==n){return}}var d=this.endcelledit(this.editcell.row,this.editcell.column,false,true,false);if(false==d){return}}var i=f.columntype=="checkbox"||f.columntype=="button";this.host.removeClass("jqx-disableselect");this.content.removeClass("jqx-disableselect");if(f.editable){if(f.cellbeginedit){var k=this.getcell(n,e);var m=f.cellbeginedit(n,e,f.columntype,k!=null?k.value:null);if(m==false){return}}var j=this.getrowvisibleindex(n);this.editcell=this.getcell(n,e);if(this.editcell){this.editcell.visiblerowindex=j;if(!this.editcell.editing){if(!i){this.editcell.editing=true}this.editcell.columntype=f.columntype;this.editcell.defaultvalue=l;if(f.defaultvalue!=undefined){this.editcell.defaultvalue=f.defaultvalue}this.editcell.init=true;if(f.columntype!="checkbox"&&this.editmode!="selectedrow"){var h=this.getrowdata(n);this._raiseEvent(17,{rowindex:n,row:h,datafield:f.datafield,value:this.editcell.value,columntype:f.columntype})}a.data(document.body,"jqxgrid.edit",this.element.id);if(!i){var b=this.getrowvisibleindex(n);if(g!==false){this.ensurecellvisible(b,f.datafield)}if(c!==false){this._renderrows(this.virtualsizeinfo)}}if(this.editcell){this.editcell.init=false;return true}}}}else{if(!this.editcell){return}this.editcell.editor=null;this.editcell.editing=false;if(c!==false){this._renderrows(this.virtualsizeinfo)}this.editcell=null}},getScrollTop:function(){if(this._py){return pageYOffset}this._py=typeof pageYOffset!="undefined";if(this._py){return pageYOffset}else{var c=document.body;var b=document.documentElement;b=(b.clientHeight)?b:c;return b.scrollTop}},getScrollLeft:function(){if(typeof pageXOffset!="undefined"){return pageXOffset}else{var c=document.body;var b=document.documentElement;b=(b.clientHeight)?b:c;return b.scrollLeft}},endcelledit:function(h,n,j,e,o){if(h==undefined||n==undefined){if(this.editcell){h=this.editcell.row;n=this.editcell.column}if(j==undefined){j=true}}if(!this.editcell){return}var d=this.getcolumn(n);var u=this;if(u.editmode==="selectedrow"){this.endrowedit(h,j);return}var t=function(){if(o!=false){if(u.isTouchDevice()){return}if(!u.isNestedGrid){var v=u.getScrollTop();var x=u.getScrollLeft();try{u.element.focus();u.content.focus();if(v!=u.getScrollTop()){window.scrollTo(x,v)}setTimeout(function(){u.element.focus();u.content.focus();if(v!=u.getScrollTop()){window.scrollTo(x,v)}},10)}catch(w){}}}};if(d.columntype=="checkbox"||d.columntype=="button"){if(this.editcell){this.editcell.editor=null;this.editcell.editing=false;this.editcell=null}return true}var i=this._geteditorvalue(d);var g=function(w){w._hidecelleditor();if(d.cellendedit){d.cellendedit(h,n,d.columntype,w.editcell.value,i)}w.editchar=null;if(d.displayfield!=d.datafield){var v=w.getcellvalue(w.editcell.row,d.displayfield);var x=w.editcell.value;oldvalue={value:x,label:v}}else{oldvalue=w.editcell.value}var y=w.getrowdata(h);w._raiseEvent(18,{rowindex:h,row:y,datafield:n,displayfield:d.displayfield,oldvalue:i,value:i,columntype:d.columntype});w.editcell.editor=null;w.editcell.editing=false;w.editcell=null;if(e||e==undefined){w._renderrows(w.virtualsizeinfo)}t();if(!w.enablebrowserselection){w.host.addClass("jqx-disableselect");w.content.addClass("jqx-disableselect")}};if(j){g(this);return false}if(this.validationpopup){this.validationpopup.hide();this.validationpopuparrow.hide()}if(d.cellvaluechanging){var b=d.cellvaluechanging(h,n,d.columntype,this.editcell.value,i);if(b!=undefined){i=b}}if(d.validation){var c=this.getcell(h,n);try{var p=d.validation(c,i);var l=this.gridlocalization.validationstring;if(p.message!=undefined){l=p.message}var m=typeof p=="boolean"?p:p.result;if(!m){if(p.showmessage==undefined||p.showmessage==true){this._showvalidationpopup(h,n,l)}this.editcell.validated=false;return false}}catch(r){this._showvalidationpopup(h,n,this.gridlocalization.validationstring);this.editcell.validated=false;return false}}if(d.displayfield!=d.datafield){var k=this.getcellvalue(this.editcell.row,d.displayfield);var q=this.editcell.value;oldvalue={value:q,label:k}}else{oldvalue=this.editcell.value}var f=this.getrowdata(h);if(d.cellendedit){var s=d.cellendedit(h,n,d.columntype,this.editcell.value,i);if(s==false){this._raiseEvent(18,{rowindex:h,row:f,datafield:n,displayfield:d.displayfield,oldvalue:oldvalue,value:oldvalue,columntype:d.columntype});g(this);return false}}this._raiseEvent(18,{rowindex:h,row:f,datafield:n,displayfield:d.displayfield,oldvalue:oldvalue,value:i,columntype:d.columntype});this._hidecelleditor(false);if(this.editcell!=undefined){this.editcell.editor=null;this.editcell.editing=false}this.editcell=null;this.editchar=null;this.setcellvalue(h,n,i,e);if(!this.enablebrowserselection){this.host.addClass("jqx-disableselect");this.content.addClass("jqx-disableselect")}if(!a.jqx.browser.msie){t()}a.data(document.body,"jqxgrid.edit","");return true},beginrowedit:function(e){var d=this;var f=-1;d._oldselectedrow=e;this._cellscache=new Array();var c=false;if(this.editmode!="selectedrow"){c=true}if(c){var b=this.editmode;this.editmode="selectedrow"}a.each(this.columns.records,function(h,j){if(d.editable&&this.editable){var g=d.getcell(e,this.datafield);d.begincelledit(e,this.datafield,null,false,false);var i=d.getrowdata(e);d._raiseEvent(17,{rowindex:e,row:i,datafield:this.datafield,value:g.value,columntype:this.columntype})}});if(d.editcell){d.editcell.init=true}this._renderrows(this.virtualsizeinfo);if(c){this.editmode=b}},endrowedit:function(k,o){var D=this;if(!this.editcell){return false}if(this.editcell.editor==undefined){return false}var C=function(){if(focus!=false){if(D.isTouchDevice()){return}if(!D.isNestedGrid){var i=D.getScrollTop();var F=D.getScrollLeft();try{D.element.focus();D.content.focus();if(i!=D.getScrollTop()){window.scrollTo(F,i)}setTimeout(function(){D.element.focus();D.content.focus();if(i!=D.getScrollTop()){window.scrollTo(F,i)}},10)}catch(E){}}}};var p=false;if(this.editmode!="selectedrow"){p=true}if(p){var v=this.editmode;this.editmode="selectedrow"}var h=false;var d={};if(this.validationpopup){this.validationpopup.hide();this.validationpopuparrow.hide()}for(var B=0;B<this.columns.records.length;B++){var e=this.columns.records[B];if(!e.editable){continue}if(e.hidden){continue}if(e.columntype=="checkbox"){continue}var l=this._geteditorvalue(e);var g=function(F){F._hidecelleditor();var E=F.getcellvalue(F.editcell.row,e.displayfield);if(e.cellendedit){e.cellendedit(k,u,e.columntype,E,l)}F.editchar=null;if(e.displayfield!=e.datafield){var i=F.getcellvalue(F.editcell.row,e.displayfield);var H=E;n={value:H,label:i}}else{n=E}var G=F.getrowdata(k);F._raiseEvent(18,{rowindex:k,row:G,datafield:u,displayfield:e.displayfield,oldvalue:E,value:E,columntype:e.columntype});F.editcell.editing=false};if(o){g(this);continue}if(e.cellvaluechanging){var n=this.getcellvalue(this.editcell.row,e.displayfield);var b=e.cellvaluechanging(k,u,e.columntype,n,l);if(b!=undefined){l=b}}var u=e.datafield;if(e.validation){var c=this.getcell(k,e.datafield);try{var w=e.validation(c,l);var r=this.gridlocalization.validationstring;if(w.message!=undefined){r=w.message}var t=typeof w=="boolean"?w:w.result;if(!t){if(w.showmessage==undefined||w.showmessage==true){this._showvalidationpopup(k,u,r)}h=true;this.editcell[e.datafield].validated=false;continue}}catch(z){this._showvalidationpopup(k,u,this.gridlocalization.validationstring);this.editcell[e.datafield].validated=false;h=true;continue}}if(e.displayfield!=e.datafield){var q=this.getcellvalue(this.editcell.row,e.displayfield);var x=this.editcell.value;n={value:x,label:q}}else{n=this.getcellvalue(this.editcell.row,e.displayfield)}d[e.datafield]={newvalue:l,oldvalue:n}}var y={};var s={};if(!h){this._hidecelleditor(false);for(var B=0;B<this.columns.records.length;B++){var e=this.columns.records[B];var u=e.datafield;if(e.hidden){continue}if(!e.editable){continue}var f=this.getrowdata(k);if(e.columntype=="checkbox"){var l=this.getcellvalue(k,e.displayfield);this._raiseEvent(18,{rowindex:k,row:f,datafield:e.datafield,displayfield:e.displayfield,oldvalue:l,value:l,columntype:e.columntype});continue}if(!d[e.datafield]){continue}var l=d[e.datafield].newvalue;var n=d[e.datafield].oldvalue;if(e.cellendedit){var A=e.cellendedit(k,u,e.columntype,n,l);if(A==false){this._raiseEvent(18,{rowindex:k,row:f,datafield:u,displayfield:e.displayfield,oldvalue:n,value:n,columntype:e.columntype});g(this);continue}}if(!this.source.updaterow){this._raiseEvent(18,{rowindex:k,row:f,datafield:e.datafield,displayfield:e.displayfield,oldvalue:n,value:l,columntype:e.columntype})}y[e.datafield]=l;s[e.datafield]=n}var j=this.getrowid(k);var f=this.getrowdata(k);a.each(y,function(i,F){if(F&&F.label!=undefined){var E=D.getcolumn(i);f[E.displayfield]=F.label;f[E.datafield]=F.value}else{f[i]=F}});if(!this.enablebrowserselection){this.host.addClass("jqx-disableselect");this.content.addClass("jqx-disableselect")}a.data(document.body,"jqxgrid.edit","");this.editcell=null;this.editchar=null;if(this.source.updaterow){var m=false;var D=this;var t=function(I){var G=D.source.updaterow;D.source.updaterow=null;if(false==I){a.each(s,function(i,K){if(K&&K.label!=undefined){var J=D.getcolumn(i);f[J.displayfield]=K.label;f[J.datafield]=K.value}else{f[i]=K}});D.updaterow(j,f)}else{D.updaterow(j,f)}for(var F=0;F<D.columns.records.length;F++){var H=D.columns.records[F];var E=H.datafield;D._raiseEvent(18,{rowindex:k,datafield:H.datafield,row:f,displayfield:H.displayfield,oldvalue:s[H.datafield],value:f[H.displayfield],columntype:H.columntype})}D.source.updaterow=G};try{m=this.source.updaterow(j,f,t);if(m==undefined){m=true}}catch(z){m=false;return}}else{this.updaterow(j,f);this._renderrows(this.virtualsizeinfo)}}if(p){this.editmode=v}return h},_selection:function(b){if("selectionStart" in b[0]){var g=b[0];var h=g.selectionEnd-g.selectionStart;return{start:g.selectionStart,end:g.selectionEnd,length:h,text:g.value}}else{var d=document.selection.createRange();if(d==null){return{start:0,end:g.value.length,length:0}}var c=b[0].createTextRange();var f=c.duplicate();c.moveToBookmark(d.getBookmark());f.setEndPoint("EndToStart",c);var h=d.text.length;return{start:f.text.length,end:f.text.length+d.text.length,length:h,text:d.text}}},_setSelection:function(e,b,d){if("selectionStart" in d[0]){d[0].focus();d[0].setSelectionRange(e,b)}else{var c=d[0].createTextRange();c.collapse(true);c.moveEnd("character",b);c.moveStart("character",e);c.select()}},findRecordIndex:function(g,c,b){var b=b;if(c){var e=b.length;for(var h=0;h<e;h++){var f=b[h];var d=f.label;if(g==d){return h}}}return -1},_destroyeditors:function(){var b=this;if(!this.columns.records){return}a.each(this.columns.records,function(f,j){var c=a.trim(this.datafield).split(" ").join("");switch(this.columntype){case"dropdownlist":var g=b.editors["dropdownlist_"+c];if(g){g.jqxDropDownList("destroy");b.editors["dropdownlist_"+c]=null}break;case"combobox":var k=b.editors["combobox_"+c];if(k){k.jqxComboBox("destroy");b.editors["combobox_"+c]=null}break;case"datetimeinput":var d=b.editors["datetimeinput_"+this.datafield];if(d){d.jqxDateTimeInput("destroy");b.editors["datetimeinput_"+c]=null}break;case"numberinput":var e=b.editors["numberinput_"+c];if(e){e.jqxNumberInput("destroy");b.editors["numberinput_"+c]=null}break;case"custom":case"template":if(b.destroyeditor){if(b.editors["templateeditor_"+c]){b.destroyeditor(b.editors["templateeditor_"+c]);b.editors["templateeditor_"+c]=null}}if(b.destroyeditor){var m=b.getrows.length();for(var l=0;l<m;l++){if(b.editors["customeditor_"+c+"_"+l]){b.destroyeditor(b.editors["customeditor_"+c+"_"+l],l);b.editors["customeditor_"+c+"_"+l]=null}}}break;case"textbox":default:var h=b.editors["textboxeditor_"+c];if(h){b.removeHandler(h,"keydown");b.editors["textbox_"+c]=null}break}});b.editors=new Array()},_showcelleditor:function(q,G,n,K,w){if(n==undefined){return}if(this.editcell==null){return}if(G.columntype=="checkbox"&&G.editable){return}if(w==undefined){w=true}if(this.editmode=="selectedrow"){this.editchar="";w=false}var E=G.datafield;var g=a(n);var s=this;var d=this.editcell.editor;var I=this.getcellvalue(q,E);var C=this.getcelltext(q,E);var j=this.hScrollInstance;var t=j.value;var i=parseInt(t);var J=this.columns.records.indexOf(G);this.editcell.element=n;if(this.editcell.validated==false){var H="";if(this.validationpopup){H=this.validationpopup.text()}this._showvalidationpopup(q,E,H)}var l=function(P){if(s.hScrollInstance.isScrolling()||s.vScrollInstance.isScrolling()){return}if(!w){return}if(s.isTouchDevice()){return}if(P){P.focus()}if(s.gridcontent[0].scrollTop!=0){s.scrolltop(Math.abs(s.gridcontent[0].scrollTop));s.gridcontent[0].scrollTop=0}if(s.gridcontent[0].scrollLeft!=0){s.gridcontent[0].scrollLeft=0}};switch(G.columntype){case"dropdownlist":if(this.host.jqxDropDownList){n.innerHTML="";var D=a.trim(G.datafield).split(" ").join("");var A=a.trim(G.displayfield).split(" ").join("");if(D.indexOf(".")!=-1){D=D.replace(".","")}if(A.indexOf(".")!=-1){A=A.replace(".","")}var k=this.editors["dropdownlist_"+D];d=k==undefined?a("<div style='border-radius: 0px; -moz-border-radius: 0px; -webkit-border-radius: 0px; z-index: 99999; top: 0px; left: 0px; position: absolute;' id='dropdownlisteditor'></div>"):k;d.css("top",a(n).parent().position().top);if(this.oldhscroll){d.css("left",-i+parseInt(a(n).position().left))}else{d.css("left",parseInt(a(n).position().left))}if(G.pinned){d.css("left",i+parseInt(a(n).position().left))}if(k==undefined){d.prependTo(this.table);d[0].id="dropdownlisteditor"+this.element.id+D;var f=this.source._source?true:false;var x=null;if(!f){x=new a.jqx.dataAdapter(this.source,{autoBind:false,uniqueDataFields:[A],async:false,autoSort:true,autoSortField:A})}else{var p={localdata:this.source.records,datatype:this.source.datatype,async:false};x=new a.jqx.dataAdapter(p,{autoBind:false,async:false,uniqueDataFields:[A],autoSort:true,autoSortField:A})}var u=!G.createeditor?true:false;d.jqxDropDownList({enableBrowserBoundsDetection:true,keyboardSelection:false,source:x,rtl:this.rtl,autoDropDownHeight:u,theme:this.theme,width:g.width()-2,height:g.height()-2,displayMember:A,valueMember:E});this.editors["dropdownlist_"+D]=d;if(G.createeditor){G.createeditor(q,I,d)}}if(G._requirewidthupdate){d.jqxDropDownList({width:g.width()-2})}var c=d.jqxDropDownList("listBox").visibleItems;if(!G.createeditor){if(c.length<8){d.jqxDropDownList("autoDropDownHeight",true)}else{d.jqxDropDownList("autoDropDownHeight",false)}}var I=this.getcellvalue(q,A);var z=this.findRecordIndex(I,A,c);if(K){if(I!=""){d.jqxDropDownList("selectIndex",z,true)}else{d.jqxDropDownList("selectIndex",-1)}}if(!this.editcell){return}if(this.editcell.defaultvalue!=undefined){d.jqxDropDownList("selectIndex",this.editcell.defaultvalue,true)}if(w){d.jqxDropDownList("focus")}}break;case"combobox":if(this.host.jqxComboBox){n.innerHTML="";var D=a.trim(G.datafield).split(" ").join("");var A=a.trim(G.displayfield).split(" ").join("");if(D.indexOf(".")!=-1){D=D.replace(".","")}if(A.indexOf(".")!=-1){A=A.replace(".","")}var r=this.editors["combobox_"+D];d=r==undefined?a("<div style='border-radius: 0px; -moz-border-radius: 0px; -webkit-border-radius: 0px; z-index: 99999; top: 0px; left: 0px; position: absolute;' id='comboboxeditor'></div>"):r;d.css("top",a(n).parent().position().top);if(this.oldhscroll){d.css("left",-i+parseInt(a(n).position().left))}else{d.css("left",parseInt(a(n).position().left))}if(G.pinned){d.css("left",i+parseInt(a(n).position().left))}if(r==undefined){d.prependTo(this.table);d[0].id="comboboxeditor"+this.element.id+D;var f=this.source._source?true:false;var x=null;if(!f){x=new a.jqx.dataAdapter(this.source,{autoBind:false,uniqueDataFields:[A],async:false,autoSort:true,autoSortField:A})}else{var p={localdata:this.source.records,datatype:this.source.datatype,async:false};x=new a.jqx.dataAdapter(p,{autoBind:false,async:false,uniqueDataFields:[A],autoSort:true,autoSortField:A})}var u=!G.createeditor?true:false;d.jqxComboBox({enableBrowserBoundsDetection:true,keyboardSelection:false,source:x,rtl:this.rtl,autoDropDownHeight:u,theme:this.theme,width:g.width()-2,height:g.height()-2,displayMember:A,valueMember:E});d.removeAttr("tabindex");d.find("div").removeAttr("tabindex");this.editors["combobox_"+D]=d;if(G.createeditor){G.createeditor(q,I,d)}}if(G._requirewidthupdate){d.jqxComboBox({width:g.width()-2})}var c=d.jqxComboBox("listBox").visibleItems;if(!G.createeditor){if(c.length<8){d.jqxComboBox("autoDropDownHeight",true)}else{d.jqxComboBox("autoDropDownHeight",false)}}var I=this.getcellvalue(q,A);var z=this.findRecordIndex(I,A,c);if(K){if(I!=""){d.jqxComboBox("selectIndex",z,true);d.jqxComboBox("val",I)}else{d.jqxComboBox("selectIndex",-1);d.jqxComboBox("val",I)}}if(!this.editcell){return}if(this.editcell.defaultvalue!=undefined){d.jqxComboBox("selectIndex",this.editcell.defaultvalue,true)}if(this.editchar&&this.editchar.length>0){d.jqxComboBox("input").val(this.editchar)}if(w){setTimeout(function(){l(d.jqxComboBox("input"));if(d){d.jqxComboBox("_setSelection",0,0);if(s.editchar){d.jqxComboBox("_setSelection",1,1);s.editchar=null}else{if(d.jqxComboBox("input")){var P=d.jqxComboBox("input").val();d.jqxComboBox("_setSelection",0,P.length)}}}},10)}}break;case"datetimeinput":if(this.host.jqxDateTimeInput){n.innerHTML="";var D=a.trim(G.datafield).split(" ").join("");if(D.indexOf(".")!=-1){D=D.replace(".","")}var v=this.editors["datetimeinput_"+D];d=v==undefined?a("<div style='border-radius: 0px; -moz-border-radius: 0px; -webkit-border-radius: 0px; z-index: 99999; top: 0px; left: 0px; position: absolute;' id='datetimeeditor'></div>"):v;d.show();d.css("top",a(n).parent().position().top);if(this.oldhscroll){d.css("left",-i+parseInt(a(n).position().left))}else{d.css("left",parseInt(a(n).position().left))}if(G.pinned){d.css("left",i+parseInt(a(n).position().left))}if(v==undefined){d.prependTo(this.table);d[0].id="datetimeeditor"+this.element.id+D;var F={calendar:this.gridlocalization};d.jqxDateTimeInput({enableBrowserBoundsDetection:true,localization:F,_editor:true,theme:this.theme,rtl:this.rtl,width:g.width(),height:g.height(),formatString:G.cellsformat});this.editors["datetimeinput_"+D]=d;if(G.createeditor){G.createeditor(q,I,d)}}if(G._requirewidthupdate){d.jqxDateTimeInput({width:g.width()-2})}if(K){if(I!=""&&I!=null){var L=new Date(I);if(L=="Invalid Date"){if(this.source.getvaluebytype){L=this.source.getvaluebytype(I,{name:G.datafield,type:"date"})}}d.jqxDateTimeInput("setDate",L)}else{d.jqxDateTimeInput("setDate",null)}if(this.editcell.defaultvalue!=undefined){d.jqxDateTimeInput("setDate",this.editcell.defaultvalue)}}if(w){setTimeout(function(){l(d.jqxDateTimeInput("dateTimeInput"))},10)}}break;case"numberinput":if(this.host.jqxNumberInput){n.innerHTML="";var D=a.trim(G.datafield).split(" ").join("");if(D.indexOf(".")!=-1){D=D.replace(".","")}var N=this.editors["numberinput_"+D];d=N==undefined?a("<div style='border-radius: 0px; -moz-border-radius: 0px; -webkit-border-radius: 0px; z-index: 99999; top: 0px; left: 0px; position: absolute;' id='numbereditor'></div>"):N;d.show();d.css("top",a(n).parent().position().top);if(this.oldhscroll){d.css("left",-i+parseInt(a(n).position().left))}else{d.css("left",parseInt(a(n).position().left))}if(G.pinned){d.css("left",i+parseInt(a(n).position().left))}if(N==undefined){d.prependTo(this.table);d[0].id="numbereditor"+this.element.id+D;var m="";var y="left";var M=2;if(G.cellsformat){if(G.cellsformat.indexOf("c")!=-1){m=this.gridlocalization.currencysymbol;y=this.gridlocalization.currencysymbolposition;if(y=="before"){y="left"}else{y="right"}if(G.cellsformat.length>1){M=parseInt(G.cellsformat.substring(1),10)}}else{if(G.cellsformat.indexOf("p")!=-1){m=this.gridlocalization.percentsymbol;y="right";if(G.cellsformat.length>1){M=parseInt(G.cellsformat.substring(1),10)}}}}else{M=0}d.jqxNumberInput({decimalSeparator:this.gridlocalization.decimalseparator,decimalDigits:M,inputMode:"simple",theme:this.theme,rtl:this.rtl,width:g.width()-1,height:g.height()-1,spinButtons:true,symbol:m,symbolPosition:y});this.editors["numberinput_"+D]=d;if(G.createeditor){G.createeditor(q,I,d)}}if(G._requirewidthupdate){d.jqxNumberInput({width:g.width()-2})}if(K){if(I!=""&&I!=null){var O=I;d.jqxNumberInput("setDecimal",O)}else{d.jqxNumberInput("setDecimal",0)}if(this.editcell.defaultvalue!=undefined){d.jqxNumberInput("setDecimal",this.editcell.defaultvalue)}if(this.editchar&&this.editchar.length>0){var o=parseInt(this.editchar);if(!isNaN(o)){d.jqxNumberInput("setDecimal",o)}}if(w){setTimeout(function(){l(d.jqxNumberInput("numberInput"));d.jqxNumberInput("_setSelectionStart",0);if(s.editchar){if(G.cellsformat.length>0){d.jqxNumberInput("_setSelectionStart",2)}else{d.jqxNumberInput("_setSelectionStart",1)}s.editchar=null}else{var P=d.jqxNumberInput("spinButtons");if(P){var Q=d.jqxNumberInput("numberInput").val();s._setSelection(d.jqxNumberInput("numberInput")[0],Q.length,Q.length)}else{var Q=d.jqxNumberInput("numberInput").val();s._setSelection(d.jqxNumberInput("numberInput")[0],0,Q.length)}}d.jqxNumberInput("selectAll")},10)}}}break;case"custom":n.innerHTML="";var D=a.trim(G.datafield).split(" ").join("");if(D.indexOf(".")!=-1){D=D.replace(".","")}var B=this.editors["customeditor_"+D+"_"+q];d=B==undefined?a("<div style='overflow: hidden; border-radius: 0px; -moz-border-radius: 0px; -webkit-border-radius: 0px; z-index: 99999; top: 0px; left: 0px; position: absolute;' id='customeditor'></div>"):B;d.show();d.css("top",a(n).parent().position().top);if(this.oldhscroll){d.css("left",-i+parseInt(a(n).position().left))}else{d.css("left",parseInt(a(n).position().left))}if(G.pinned){d.css("left",i+parseInt(a(n).position().left))}if(B==undefined){d.prependTo(this.table);d[0].id="customeditor"+this.element.id+D+"_"+q;this.editors["customeditor_"+D+"_"+q]=d;var b=g.width()-1;var e=g.height()-1;d.width(b);d.height(e);if(G.createeditor){G.createeditor(q,I,d,C,b,e,this.editchar)}}if(G._requirewidthupdate){d.width(g.width()-2)}break;case"template":n.innerHTML="";var D=a.trim(G.datafield).split(" ").join("");if(D.indexOf(".")!=-1){D=D.replace(".","")}var h=this.editors["templateeditor_"+D];d=h==undefined?a("<div style='overflow: hidden; border-radius: 0px; -moz-border-radius: 0px; -webkit-border-radius: 0px; z-index: 99999; top: 0px; left: 0px; position: absolute;' id='templateeditor'></div>"):h;d.show();d.css("top",a(n).parent().position().top);if(this.oldhscroll){d.css("left",-i+parseInt(a(n).position().left))}else{d.css("left",parseInt(a(n).position().left))}if(G.pinned){d.css("left",i+parseInt(a(n).position().left))}if(h==undefined){d.prependTo(this.table);d[0].id="templateeditor"+this.element.id+D;this.editors["templateeditor_"+D]=d;var b=g.width()-1;var e=g.height()-1;d.width(b);d.height(e);if(G.createeditor){G.createeditor(q,I,d,C,b,e,this.editchar)}}if(G._requirewidthupdate){d.width(g.width()-2)}break;case"textbox":default:n.innerHTML="";d=this.editors["textboxeditor_"+G.datafield]||a("<input autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' type='textbox' id='textboxeditor'/>");d[0].id="textboxeditor"+this.element.id+G.datafield;d.appendTo(g);if(this.rtl){d.css("direction","rtl")}if(K||d[0].className==""){d.addClass(this.toThemeProperty("jqx-input"));d.addClass(this.toThemeProperty("jqx-widget-content"));if(this.editchar&&this.editchar.length>0){d.val(this.editchar)}else{if(G.cellsformat!=""){I=this.getcelltext(q,E)}if(I==undefined){I=""}d.val(I)}if(this.editcell.defaultvalue!=undefined){d.val(this.editcell.defaultvalue)}d.width(g.width()+1);d.height(g.height()+1);if(G.createeditor){G.createeditor(q,I,d)}if(G.cellsformat!=""){if(G.cellsformat.indexOf("p")!=-1||G.cellsformat.indexOf("c")!=-1||G.cellsformat.indexOf("n")!=-1||G.cellsformat.indexOf("f")!=-1){if(!this.editors["textboxeditor_"+G.datafield]){d.keydown(function(Q){var W=Q.charCode?Q.charCode:Q.keyCode?Q.keyCode:0;var T=String.fromCharCode(W);var U=parseInt(T);if(isNaN(U)){return true}if(s._selection(d).length>0){return true}var S="";var R=d.val();if(G.cellsformat.length>1){var V=parseInt(G.cellsformat.substring(1));if(isNaN(V)){V=0}}else{var V=0}if(V>0){if(R.indexOf(s.gridlocalization.decimalseparator)!=-1){if(s._selection(d).start>R.indexOf(s.gridlocalization.decimalseparator)){return true}}}for(var X=0;X<R.length-V;X++){var P=R.substring(X,X+1);if(P.match(/^[0-9]+$/)!=null){S+=P}}if(S.length>=11){return false}})}}}}this.editors["textboxeditor_"+G.datafield]=d;if(K){if(w){setTimeout(function(){l(d);if(s.editchar){s._setSelection(d[0],1,1);s.editchar=null}else{s._setSelection(d[0],0,d.val().length)}},25)}}break}if(d){d[0].style.zIndex=1+n.style.zIndex;if(a.jqx.browser.msie&&a.jqx.browser.version<8){d[0].style.zIndex=1+this.columns.records.length+n.style.zIndex}d.css("display","block");this.editcell.editor=d;if(!this.editcell[E]){this.editcell[E]={};this.editcell[E].editor=d}else{this.editcell[E].editor=d}}if(K){if(G.initeditor){G.initeditor(q,I,d,C,this.editchar)}}if(s.isTouchDevice()){return}setTimeout(function(){if(s.content){s.content[0].scrollTop=0;s.content[0].scrollLeft=0}if(s.gridcontent){s.gridcontent[0].scrollLeft=0;s.gridcontent[0].scrollTop=0}},10)},_setSelection:function(d,g,b){try{if("selectionStart" in d){d.setSelectionRange(g,b)}else{var c=d.createTextRange();c.collapse(true);c.moveEnd("character",b);c.moveStart("character",g);c.select()}}catch(e){var f=e}},_hideeditors:function(){if(this.editcells!=null){var b=this;for(var c in this.editcells){b.editcell=b.editcells[c];b._hidecelleditor()}}},_hidecelleditor:function(b){if(!this.editcell){return}if(this.editmode==="selectedrow"){for(var c=0;c<this.columns.records.length;c++){var e=this.columns.records[c];if(this.editcell[e.datafield]&&this.editcell[e.datafield].editor){this.editcell[e.datafield].editor.hide();var d=this.editcell[e.datafield].editor;switch(e.columntype){case"dropdownlist":d.jqxDropDownList({closeDelay:0});d.jqxDropDownList("hideListBox");d.jqxDropDownList({closeDelay:300});break;case"combobox":d.jqxComboBox({closeDelay:0});d.jqxComboBox("hideListBox");d.jqxComboBox({closeDelay:300});break;case"datetimeinput":if(d.jqxDateTimeInput("isOpened")){d.jqxDateTimeInput({closeDelay:0});d.jqxDateTimeInput("hideCalendar");d.jqxDateTimeInput({closeDelay:300})}break}}}if(this.validationpopup){this.validationpopup.hide();this.validationpopuparrow.hide()}return}if(this.editcell.columntype=="checkbox"){return}if(this.editcell.editor){this.editcell.editor.hide();switch(this.editcell.columntype){case"dropdownlist":this.editcell.editor.jqxDropDownList({closeDelay:0});this.editcell.editor.jqxDropDownList("hideListBox");this.editcell.editor.jqxDropDownList({closeDelay:300});break;case"combobox":this.editcell.editor.jqxComboBox({closeDelay:0});this.editcell.editor.jqxComboBox("hideListBox");this.editcell.editor.jqxComboBox({closeDelay:300});break;case"datetimeinput":var f=this.editcell.editor;if(f.jqxDateTimeInput("isOpened")){f.jqxDateTimeInput({closeDelay:0});f.jqxDateTimeInput("hideCalendar");f.jqxDateTimeInput({closeDelay:300})}break}}if(this.validationpopup){this.validationpopup.hide();this.validationpopuparrow.hide()}if(!this.isNestedGrid){if(b!=false){this.element.focus()}}},_geteditorvalue:function(h){var o=new String();if(!this.editcell){return null}var l=this.editcell.editor;if(this.editmode=="selectedrow"){if(this.editcell[h.datafield]){var l=this.editcell[h.datafield].editor}}if(l){switch(h.columntype){case"textbox":default:o=l.val();if(h.cellsformat!=""){var n="string";var e=this.source.datafields||((this.source._source)?this.source._source.datafields:null);if(e){var p="";a.each(e,function(){if(this.name==h.displayfield){if(this.type){p=this.type}return false}});if(p){n=p}}var i=n==="number"||n==="float"||n==="int"||n==="integer";var f=n==="date"||n==="time";if(i||(n==="string"&&(h.cellsformat.indexOf("p")!=-1||h.cellsformat.indexOf("c")!=-1||h.cellsformat.indexOf("n")!=-1||h.cellsformat.indexOf("f")!=-1))){if(o===""&&h.nullable){return""}if(o.indexOf(this.gridlocalization.currencysymbol)>-1){o=o.replace(this.gridlocalization.currencysymbol,"")}var m=function(w,u,v){var s=w;if(u==v){return w}var t=s.indexOf(u);while(t!=-1){s=s.replace(u,v);t=s.indexOf(u)}return s};var k=o;k=new Number(k);if(!isNaN(k)){return k}o=m(o,this.gridlocalization.thousandsseparator,"");o=o.replace(this.gridlocalization.decimalseparator,".");if(o.indexOf(this.gridlocalization.percentsymbol)>-1){o=o.replace(this.gridlocalization.percentsymbol,"")}var d="";for(var r=0;r<o.length;r++){var b=o.substring(r,r+1);if(b==="-"){d+="-"}if(b==="."){d+="."}if(b.match(/^[0-9]+$/)!=null){d+=b}}o=d;o=o.replace(/ /g,"");o=new Number(o);if(isNaN(o)){o=""}}if(f||(n==="string"&&(h.cellsformat.indexOf("H")!=-1||h.cellsformat.indexOf("m")!=-1||h.cellsformat.indexOf("M")!=-1||h.cellsformat.indexOf("y")!=-1||h.cellsformat.indexOf("h")!=-1||h.cellsformat.indexOf("d")!=-1))){if(o===""&&h.nullable){return""}var c=o;o=new Date(o);if(o=="Invalid Date"||o==null){if(a.jqx.dataFormat){o=a.jqx.dataFormat.tryparsedate(c,this.gridlocalization)}if(o=="Invalid Date"||o==null){o=""}}}}if(h.displayfield!=h.datafield){o={label:o,value:o}}break;case"checkbox":if(l.jqxCheckBox){o=l.jqxCheckBox("checked")}break;case"datetimeinput":if(l.jqxDateTimeInput){l.jqxDateTimeInput({isEditing:false});l.jqxDateTimeInput("_validateValue");o=l.jqxDateTimeInput("getDate");if(o==null){return null}o=new Date(o.toString());if(h.displayfield!=h.datafield){o={label:o,value:o}}}break;case"dropdownlist":if(l.jqxDropDownList){var g=l.jqxDropDownList("selectedIndex");var q=l.jqxDropDownList("listBox").getVisibleItem(g);if(h.displayfield!=h.datafield){if(q){o={label:q.label,value:q.value}}else{o=""}}else{if(q){o=q.label}else{o=""}}if(o==null){o=""}}break;case"combobox":if(l.jqxComboBox){o=l.jqxComboBox("val");if(h.displayfield!=h.datafield){var q=l.jqxComboBox("getSelectedItem");if(q!=null){o={label:q.label,value:q.value}}}if(o==null){o=""}}break;case"numberinput":if(l.jqxNumberInput){if(this.touchdevice){l.jqxNumberInput("_doTouchHandling")}var j=l.jqxNumberInput("getDecimal");o=new Number(j);o=parseFloat(o);if(isNaN(o)){o=0}if(h.displayfield!=h.datafield){o={label:o,value:o}}}break}if(h.geteditorvalue){if(this.editmode=="selectedrow"){o=h.geteditorvalue(this.editcell.row,this.getcellvalue(this.editcell.row,h.datafield),l)}else{o=h.geteditorvalue(this.editcell.row,this.editcell.value,l)}}}return o},hidevalidationpopups:function(){if(this.popups){a.each(this.popups,function(){this.validation.remove();this.validationrow.remove()});this.popups=new Array()}if(this.validationpopup){this.validationpopuparrow.hide();this.validationpopup.hide()}},showvalidationpopup:function(f,j,h){if(h==undefined){var h=this.gridlocalization.validationstring}var g=a("<div style='z-index: 99999; top: 0px; left: 0px; position: absolute;'></div>");var r=a("<div style='width: 20px; height: 20px; z-index: 999999; top: 0px; left: 0px; position: absolute;'></div>");g.html(h);r.addClass(this.toThemeProperty("jqx-grid-validation-arrow-up"));g.addClass(this.toThemeProperty("jqx-grid-validation"));g.addClass(this.toThemeProperty("jqx-rc-all"));g.prependTo(this.table);r.prependTo(this.table);var l=this.hScrollInstance;var n=l.value;var d=parseInt(n);var b=this.getcolumn(j).uielement;var p=null;for(var o=0;o<this.hittestinfo.length;o++){if(f===this.hittestinfo[o].row.visibleindex){p=this.hittestinfo[o]}}if(!p){this.ensurerowvisible(f);var s=this;g.remove();r.remove();setTimeout(function(){var v=null;for(var u=0;u<s.hittestinfo.length;u++){if(f===s.hittestinfo[u].row.visibleindex){v=s.hittestinfo[u]}}if(v){s.showvalidationpopup(f,j,h)}},25);return}var c=a(p.visualrow);g.css("top",parseInt(c.position().top)+30+"px");var k=parseInt(g.css("top"));r.css("top",k-12);r.removeClass();r.addClass(this.toThemeProperty("jqx-grid-validation-arrow-up"));var q=false;if(k>=this._gettableheight()){r.removeClass(this.toThemeProperty("jqx-grid-validation-arrow-up"));r.addClass(this.toThemeProperty("jqx-grid-validation-arrow-down"));k=parseInt(c.position().top)-this.rowsheight-5;if(k<0){k=0;this.validationpopuparrow.removeClass(this.toThemeProperty("jqx-grid-validation-arrow-down"));q=true}g.css("top",k+"px");r.css("top",k+g.outerHeight()-9)}var t=-d+parseInt(a(b).position().left);r.css("left",d+t+30);var m=g.width();if(m+t>this.host.width()-20){var e=m+t-this.host.width()+40;t-=e}if(!q){g.css("left",d+t)}else{g.css("left",d+parseInt(a(b).position().left)-g.outerWidth())}g.show();r.show();if(!this.popups){this.popups=new Array()}this.popups[this.popups.length]={validation:g,validationrow:r}},_showvalidationpopup:function(p,e,q){var c=this.editcell;var k=this.editcell.editor;if(this.editmode=="selectedrow"){var c=this.editcell[e];if(c&&c.editor){k=c.editor;c.element=k}}if(!k){return}if(this.validationpopup&&a.jqx.isHidden(this.validationpopup)){if(this.validationpopup.remove){this.validationpopup.remove();this.validationpopuparrow.remove()}this.validationpopup=null;this.validationpopuparrow=null;if(e===undefined&&q===undefined&&this.editors&&this.editors.length===0){return}}if(!this.validationpopup){var n=a("<div style='z-index: 99999; top: 0px; left: 0px; position: absolute;'></div>");var m=a("<div style='width: 20px; height: 20px; z-index: 999999; top: 0px; left: 0px; position: absolute;'></div>");n.html(q);m.addClass(this.toThemeProperty("jqx-grid-validation-arrow-up"));n.addClass(this.toThemeProperty("jqx-grid-validation"));n.addClass(this.toThemeProperty("jqx-rc-all"));n.prependTo(this.table);m.prependTo(this.table);this.validationpopup=n;this.validationpopuparrow=m}else{this.validationpopup.html(q)}var h=this.hScrollInstance;var j=h.value;var g=parseInt(j);if(this.editmode=="selectedrow"){this.validationpopup.css("top",parseInt(a(c.editor).position().top)+(this.rowsheight+5)+"px")}else{this.validationpopup.css("top",parseInt(a(c.element).parent().position().top)+(this.rowsheight+5)+"px")}var b=parseInt(this.validationpopup.css("top"));this.validationpopuparrow.css("top",b-11);this.validationpopuparrow.removeClass();this.validationpopuparrow.addClass(this.toThemeProperty("jqx-grid-validation-arrow-up"));var o=this._gettableheight();var f=false;if(b>=o){this.validationpopuparrow.removeClass(this.toThemeProperty("jqx-grid-validation-arrow-up"));this.validationpopuparrow.addClass(this.toThemeProperty("jqx-grid-validation-arrow-down"));b=parseInt(a(c.element).parent().position().top)-this.rowsheight-5;if(this.editmode=="selectedrow"){b=parseInt(a(c.editor).position().top)-this.rowsheight-5}if(b<0){b=0;this.validationpopuparrow.removeClass(this.toThemeProperty("jqx-grid-validation-arrow-down"));f=true}this.validationpopup.css("top",b+"px");this.validationpopuparrow.css("top",b+this.validationpopup.outerHeight()-9)}var l=-g+parseInt(a(c.element).position().left);this.validationpopuparrow.css("left",g+l+30);var d=this.validationpopup.width();if(d+l>this.host.width()-20){var i=d+l-this.host.width()+40;l-=i}if(!f){this.validationpopup.css("left",g+l)}else{this.validationpopup.css("left",g+parseInt(a(c.element).position().left)-this.validationpopup.outerWidth())}if(this.editcell.editor.css("display")=="none"){this.validationpopup.hide();this.validationpopuparrow.hide()}else{this.validationpopup.show();this.validationpopuparrow.show()}}})})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a) {
    a.extend(a.jqx._jqxGrid.prototype, {
        _initpager: function() {
            var r = this.that;
            var j = this.gridlocalization.pagergotopagestring;
            var s = this.gridlocalization.pagerrangestring;
            var l = this.gridlocalization.pagershowrowsstring;
            var m = (this.pagerheight - 17) / 2;
            this.pagerdiv = this.pagerdiv || a('<div style="width: 100%; height: 100%; position: relative;"><div style="width:650px;margin:0 auto;" id="centerDIV" ></div></div>');
            if (!this.pageable) {
                this.pagerdiv.remove();
                this.vScrollBar.jqxScrollBar({
                    thumbSize: 0
                });
                return
            }
            if (!this.pagerrenderer) {
                this.pagerdiv.css("top", m);
                this.pager.append(this.pagerdiv);
                this.pagergotoinput = this.pagergotoinput || a('<div style="margin-right: 7px; width: 27px; height: 17px; float: right;"><input style="margin-top: 0px; text-align: right; width: 27px;" type="text"/></div>');
                this.pagergoto = this.pagergoto || a('<div style="float: right; margin-right: 7px;"></div>');
                this.pagerrightbutton = this.pagerrightbutton || a('<div type="button" style="padding: 0px; margin-top: 0px; margin-right: 3px; width: 27px; float: right;"></div>');
                this.pagerleftbutton = this.pagerleftbutton || a('<div type="button" style="padding: 0px; margin-top: 0px; margin-right: 3px; width: 27px; float: right;"></div>');
                this.pagerdetails = this.pagerdetails || a('<div style="margin-right: 7px; float: right;"></div>');	//框架原有的“总条数、当前条数”信息容器
                
                //自定义内容目前只在this.pagermode != "simple"且!this.rtl场景表应用，其他场景下保留原有风格
                this.totalCount = this.totalCount || a('<div style="margin-right: 7px; float: right;"></div>');	//自定义：总条数
                this.currNum = this.currNum || a('<div style="margin-right: 7px; float: right;"></div>');	//自定义：当天条数
                this.totalPagenum = this.totalPagenum || a('<div style="float: right; margin-right: 7px;"></div>');	//自定义：总页数
                
                this.pagershowrows = this.pagershowrows || a('<div style="margin-right: 7px; float: right;"></div>');
                this.pagerbuttons = a('<div style="margin-right: 3px; float: right;"></div>');
                if (this.pagershowrowscombo && this.pagershowrowscombo.jqxDropDownList) {
                    this.pagershowrowscombo.remove();
                    this.pagershowrowscombo = null
                }
                this.pagergotoinput.attr("disabled", this.disabled);
                this.pagerfirstbutton = a('<div type="button" style="padding: 0px; margin-top: 0px; margin-left: 3px; margin-right: 3px; width: 27px; float: right;"></div>');
                this.pagerlastbutton = a('<div type="button" style="padding: 0px; margin-top: 0px; margin-right: 3px; width: 27px; float: right;"></div>');
                this.pagershowrowscombo = this.pagershowrowscombo || a('<div id="gridpagerlist" style="margin-top: 0px; margin-right: 7px; float: right;"></div>');
                //
                this.pagerdiv.find("#centerDIV").children().remove();
                this.pagershowrowscombo[0].id = "gridpagerlist" + this.element.id;
                this.removeHandler(this.pagerrightbutton, "mousedown");
                this.removeHandler(this.pagerrightbutton, "mouseup");
                this.removeHandler(this.pagerrightbutton, "click");
                this.removeHandler(this.pagerleftbutton, "mousedown");
                this.removeHandler(this.pagerleftbutton, "mouseup");
                this.removeHandler(this.pagerleftbutton, "click");
                this.removeHandler(this.pagerfirstbutton, "mousedown");
                this.removeHandler(this.pagerfirstbutton, "mouseup");
                this.removeHandler(this.pagerfirstbutton, "click");
                this.removeHandler(this.pagerlastbutton, "mousedown");
                this.removeHandler(this.pagerlastbutton, "mouseup");
                this.removeHandler(this.pagerlastbutton, "click");
                this.pagerleftbutton.attr("title", this.gridlocalization.pagerpreviousbuttonstring);
                this.pagerrightbutton.attr("title", this.gridlocalization.pagernextbuttonstring);
                if (this.pagermode == "simple") {
                    if (a.jqx.browser.msie && a.jqx.browser.version < 8) {
                        this.pagerbuttons.css("overflow", "visible");
                        this.pagerbuttons.css("padding", "3px")
                    }
                    this.pagerfirstbutton.attr("title", this.gridlocalization.pagerfirstbuttonstring);
                    this.pagerlastbutton.attr("title", this.gridlocalization.pagerlastbuttonstring);
                    var n = a("<div style='margin-left: 6px; width: 15px; height: 15px;'></div>");
                    n.addClass(this.toThemeProperty("jqx-icon-arrow-first"));
                    this.pagerfirstbutton.wrapInner(n);
                    var g = a("<div style='margin-left: 6px; width: 15px; height: 15px;'></div>");
                    g.addClass(this.toThemeProperty("jqx-icon-arrow-last"));
                    this.pagerlastbutton.wrapInner(g);
                    if (!this.rtl) {
                        this.pagerdiv.find("#centerDIV").append(this.pagerfirstbutton);
                        this.pagerdiv.find("#centerDIV").append(this.pagerleftbutton);
                        this.pagerdiv.find("#centerDIV").append(this.pagerbuttons);
                        this.pagerdiv.find("#centerDIV").append(this.pagerrightbutton);
                        this.pagerdiv.find("#centerDIV").append(this.pagerlastbutton)
                    } else {
                        this.pagerdiv.find("#centerDIV").append(this.pagerlastbutton);
                        this.pagerdiv.find("#centerDIV").append(this.pagerrightbutton);
                        this.pagerdiv.find("#centerDIV").append(this.pagerbuttons);
                        this.pagerdiv.find("#centerDIV").append(this.pagerleftbutton);
                        this.pagerdiv.find("#centerDIV").append(this.pagerfirstbutton)
                    }
                    this.pagerlastbutton.jqxButton({
                        cursor: "pointer",
                        disabled: this.disabled,
                        theme: this.theme
                    });
                    this.pagerfirstbutton.jqxButton({
                        cursor: "pointer",
                        disabled: this.disabled,
                        theme: this.theme
                    });
                    var t = !this.rtl ? "left": "right";
                    this.pagerbuttons.css("float", t);
                    this.pagerlastbutton.css("float", t);
                    this.pagerfirstbutton.css("float", t);
                    this.pagerrightbutton.css("float", t);
                    this.pagerleftbutton.css("float", t);
                    this.pagerdetails.css("float", this.rtl ? "left": "right");
                    if (this.rtl) {
                        this.pagerdetails.css("margin-left", "7px");
                        this.pagerdetails.css("margin-right", "0px")
                    } else {
                        this.pagerdetails.css("margin-left", "0px");
                        this.pagerdetails.css("margin-right", "7px")
                    }
                    this.pagergotoinput.hide();
                    this.pagershowrowscombo.hide();
                    this.pagergoto.hide();
                    this.pagershowrows.hide();
                } else {
                    this.pagergotoinput.show();
                    this.pagershowrowscombo.show();
                    this.pagergoto.show();
                    this.pagershowrows.show();
                    if (!this.rtl) {
                        this.pagerdiv.find("#centerDIV").append(this.pagerrightbutton);
                        this.pagerdiv.find("#centerDIV").append(this.pagerleftbutton);
                    }
                }
                this.pagerrightbutton.jqxButton({
                    cursor: "pointer",
                    disabled: this.disabled,
                    theme: this.theme
                });
                this.pagerleftbutton.jqxButton({
                    cursor: "pointer",
                    disabled: this.disabled,
                    theme: this.theme
                });
                this.pagerleftbutton.find(".jqx-icon-arrow-left").remove();
                this.pagerrightbutton.find(".jqx-icon-arrow-right").remove();
                var c = a("<div style='margin-left: 6px; width: 15px; height: 15px;'></div>");
                c.addClass(this.toThemeProperty("jqx-icon-arrow-left"));
                this.pagerleftbutton.wrapInner(c);
                var d = a("<div style='margin-left: 6px; width: 15px; height: 15px;'></div>");
                d.addClass(this.toThemeProperty("jqx-icon-arrow-right"));
                this.pagerrightbutton.wrapInner(d);
                //this.pagerdiv.find("#centerDIV").append(this.pagerdetails);
                if (this.pagermode != "simple") {
                    if (!this.rtl) {
                        this.pagerdiv.find("#centerDIV").append(this.pagergotoinput);
                        this.pagerdiv.find("#centerDIV").append(this.pagergoto);
                        this.pagerdiv.find("#centerDIV").append(this.totalPagenum);
                        this.pagerdiv.find("#centerDIV").append(this.currNum);
                        this.pagerdiv.find("#centerDIV").append(this.pagershowrowscombo);
                        this.pagerdiv.find("#centerDIV").append(this.pagershowrows);
                        this.pagerdiv.find("#centerDIV").append(this.totalCount);
                    } else {
                        this.pagerdiv.find("#centerDIV").append(this.pagergoto);
                        this.pagerdiv.find("#centerDIV").append(this.pagergotoinput);
                        this.pagerdiv.find("#centerDIV").append(this.pagershowrows);
                        this.pagerdiv.find("#centerDIV").append(this.pagershowrowscombo);
                        this.pagerdiv.find("#centerDIV").append(this.pagerdetails);
                        this.pagerdiv.find("#centerDIV").append(this.pagerrightbutton);
                        this.pagerdiv.find("#centerDIV").append(this.pagerleftbutton);
                    }
                } else {
                	this.pagerdiv.find("#centerDIV").append(this.pagerdetails);
                }
                var o = this.pagesizeoptions;
                if (!this.pagershowrowscombo.jqxDropDownList) {
                    throw new Error("jqxGrid: jqxdropdownlist.js is not loaded.");
                    return
                }
                this.pagershowrowscombo.jqxDropDownList({
                    rtl: this.rtl,
                    disabled: this.disabled,
                    source: o,
                    enableBrowserBoundsDetection: true,
                    keyboardSelection: false,
                    autoDropDownHeight: true,
                    width: "auto",
                    height: 16,
                    theme: this.theme
                });
                var q = 0;
                for (var p = 0; p < o.length; p++) {
                    if (this.pagesize >= o[p]) {
                        q = p
                    }
                }
                this.pagershowrows[0].innerHTML = l;
                this.pagergoto[0].innerHTML = j;
                this.updatepagerdetails();
                this.pagershowrowscombo.jqxDropDownList({
                    selectedIndex: q
                });
                this.pagerpageinput = this.pagergotoinput.find("input");
                this.pagerpageinput.addClass(this.toThemeProperty("jqx-input"));
                this.pagerpageinput.addClass(this.toThemeProperty("jqx-widget-content"));
                if (this.rtl) {
                    this.pagerpageinput.css("direction", "rtl")
                }
                var r = this.that;
                this.removeHandler(this.pagershowrowscombo, "select");
                this.addHandler(this.pagershowrowscombo, "select",
                function(w) {
                    if (w.args) {
                        if (r.vScrollInstance) {
                            r.vScrollInstance.setPosition(0)
                        }
                        if (r.editcell != null && r.endcelledit) {
                            r.endcelledit(r.editcell.row, r.editcell.column, true, false)
                        }
                        var u = w.args.index;
                        var x = r.dataview.pagenum * r.dataview.pagesize;
                        var v = o[u];
                        var y = r.pagesize;
                        r.pagesize = parseInt(v);
                        if (isNaN(r.pagesize)) {
                            r.pagesize = 100000
                        }
                        if (v >= 100) {
                            r.pagershowrowscombo.jqxDropDownList({
                                width: "auto"
                            })
                        } else {
                            r.pagershowrowscombo.jqxDropDownList({
                                width: 44
                            })
                        }
                        r.dataview.pagesize = r.pagesize;
                        var i = Math.floor(x / r.dataview.pagesize);
                        r.prerenderrequired = true;
                        r._requiresupdate = true;
                        r._raiseEvent(10, {
                            pagenum: i,
                            oldpagesize: y,
                            pagesize: r.dataview.pagesize
                        });
                        r.gotopage(i);
                        if (r.autoheight && r._updatesizeonwindowresize) {
                            r._updatesize(true);
                            setTimeout(function() {
                                r._updatesize(true)
                            },
                            500)
                        }
                    }
                });
                var k = this.pagergotoinput.find("input");
                k.addClass(this.toThemeProperty("jqx-grid-pager-input"));
                k.addClass(this.toThemeProperty("jqx-rc-all"));
                this.removeHandler(k, "keydown");
                this.removeHandler(k, "change");
                this.addHandler(k, "keydown",
                function(i) {
                    if (i.keyCode >= 65 && i.keyCode <= 90) {
                        return false
                    }
                    if (i.keyCode == "13") {
                        var u = k.val();
                        u = parseInt(u);
                        if (!isNaN(u)) {
                            r.gotopage(u - 1)
                        }
                        return false
                    }
                });
                this.addHandler(k, "change",
                function() {
                    var i = k.val();
                    i = parseInt(i);
                    if (!isNaN(i)) {
                        r.gotopage(i - 1)
                    }
                });
                this.addHandler(this.pagerrightbutton, "mouseenter",
                function() {
                    d.addClass(r.toThemeProperty("jqx-icon-arrow-right-hover"))
                });
                this.addHandler(this.pagerleftbutton, "mouseenter",
                function() {
                    c.addClass(r.toThemeProperty("jqx-icon-arrow-left-hover"))
                });
                this.addHandler(this.pagerrightbutton, "mouseleave",
                function() {
                    d.removeClass(r.toThemeProperty("jqx-icon-arrow-right-hover"))
                });
                this.addHandler(this.pagerleftbutton, "mouseleave",
                function() {
                    c.removeClass(r.toThemeProperty("jqx-icon-arrow-left-hover"))
                });
                this.addHandler(this.pagerrightbutton, "mousedown",
                function() {
                    d.addClass(r.toThemeProperty("jqx-icon-arrow-right-selected"))
                });
                this.addHandler(this.pagerrightbutton, "mouseup",
                function() {
                    d.removeClass(r.toThemeProperty("jqx-icon-arrow-right-selected"))
                });
                this.addHandler(this.pagerleftbutton, "mousedown",
                function() {
                    c.addClass(r.toThemeProperty("jqx-icon-arrow-left-selected"))
                });
                this.addHandler(this.pagerleftbutton, "mouseup",
                function() {
                    c.removeClass(r.toThemeProperty("jqx-icon-arrow-left-selected"))
                });
                this.addHandler(a(document), "mouseup.pagerbuttons" + this.element.id,
                function() {
                    d.removeClass(r.toThemeProperty("jqx-icon-arrow-right-selected"));
                    c.removeClass(r.toThemeProperty("jqx-icon-arrow-left-selected"))
                });
                this.addHandler(this.pagerrightbutton, "click",
                function() {
                    if (!r.pagerrightbutton.jqxButton("disabled")) {
                        if (!r.rtl) {
                            r.gotonextpage()
                        } else {
                            r.gotoprevpage()
                        }
                    }
                });
                this.addHandler(this.pagerleftbutton, "click",
                function() {
                    if (!r.pagerleftbutton.jqxButton("disabled")) {
                        if (!r.rtl) {
                            r.gotoprevpage()
                        } else {
                            r.gotonextpage()
                        }
                    }
                });
                var f = this;
                if (this.pagermode === "simple") {
                    var e = this.pagerfirstbutton;
                    var h = this.pagerlastbutton;
                    this.addHandler(h, "mouseenter",
                    function() {
                        g.addClass(f.toThemeProperty("jqx-icon-arrow-last-hover"))
                    });
                    this.addHandler(e, "mouseenter",
                    function() {
                        n.addClass(f.toThemeProperty("jqx-icon-arrow-first-hover"))
                    });
                    this.addHandler(h, "mouseleave",
                    function() {
                        g.removeClass(f.toThemeProperty("jqx-icon-arrow-last-hover"))
                    });
                    this.addHandler(e, "mouseleave",
                    function() {
                        n.removeClass(f.toThemeProperty("jqx-icon-arrow-first-hover"))
                    });
                    this.addHandler(h, "mousedown",
                    function() {
                        g.addClass(f.toThemeProperty("jqx-icon-arrow-last-selected"))
                    });
                    this.addHandler(e, "mousedown",
                    function() {
                        n.addClass(f.toThemeProperty("jqx-icon-arrow-first-selected"))
                    });
                    this.addHandler(h, "mouseup",
                    function() {
                        g.removeClass(f.toThemeProperty("jqx-icon-arrow-last-selected"))
                    });
                    this.addHandler(e, "mouseup",
                    function() {
                        n.removeClass(f.toThemeProperty("jqx-icon-arrow-first-selected"))
                    });
                    this.addHandler(a(document), "mouseup.pagerbuttons" + name + this.element.id,
                    function() {
                        d.removeClass(f.toThemeProperty("jqx-icon-arrow-right-selected"));
                        c.removeClass(f.toThemeProperty("jqx-icon-arrow-left-selected"));
                        if (g) {
                            g.removeClass(f.toThemeProperty("jqx-icon-arrow-last-selected"));
                            n.removeClass(f.toThemeProperty("jqx-icon-arrow-first-selected"))
                        }
                    });
                    this.addHandler(e, "click",
                    function() {
                        if (!e.jqxButton("disabled")) {
                            if (!f.rtl) {
                                f.gotopage(0)
                            } else {
                                var u = f.dataview.totalrecords;
                                var i = Math.ceil(u / f.pagesize);
                                f.gotopage(i - 1)
                            }
                        }
                    });
                    this.addHandler(h, "click",
                    function() {
                        if (!h.jqxButton("disabled")) {
                            if (!f.rtl) {
                                var u = f.dataview.totalrecords;
                                var i = Math.ceil(u / f.pagesize);
                                f.gotopage(i - 1)
                            } else {
                                f.gotopage(0)
                            }
                        }
                    })
                }
            } else {
                this.pagerdiv.children().remove();
                var b = this.pagerrenderer();
                if (b != null) {
                    this.pagerdiv.find("#centerDIV").append(a(b))
                }
                this.pager.append(this.pagerdiv)
            }
            this.vScrollBar.jqxScrollBar("refresh");
            this._arrange()
        },
        _updatepagertheme: function() {
            if (this.pagershowrowscombo == null) {
                return
            }
            this.pagershowrowscombo.jqxDropDownList({
                theme: this.theme
            });
            this.pagerrightbutton.jqxButton({
                theme: this.theme
            });
            this.pagerleftbutton.jqxButton({
                theme: this.theme
            });
            this.pagerpageinput.removeClass();
            var c = this.pagergotoinput.find("input");
            c.removeClass();
            c.addClass(this.toThemeProperty("jqx-grid-pager-input"));
            c.addClass(this.toThemeProperty("jqx-rc-all"));
            this.pagerpageinput.addClass(this.toThemeProperty("jqx-input"));
            this.pagerpageinput.addClass(this.toThemeProperty("jqx-widget-content"));
            this.pagerleftbutton.find(".jqx-icon-arrow-left").remove();
            this.pagerrightbutton.find(".jqx-icon-arrow-right").remove();
            var d = a("<div style='margin-left: 6px; width: 15px; height: 15px;'></div>");
            d.addClass(this.toThemeProperty("jqx-icon-arrow-left"));
            this.pagerleftbutton.wrapInner(d);
            var e = a("<div style='margin-left: 6px; width: 15px; height: 15px;'></div>");
            e.addClass(this.toThemeProperty("jqx-icon-arrow-right"));
            this.pagerrightbutton.wrapInner(e);
            if (this.pagermode == "simple") {
                if (a.jqx.browser.msie && a.jqx.browser.version < 8) {
                    this.pagerbuttons.css("overflow", "visible");
                    this.pagerbuttons.css("padding", "3px")
                }
                this.pagerfirstbutton.attr("title", this.gridlocalization.pagerfirstbuttonstring);
                this.pagerlastbutton.attr("title", this.gridlocalization.pagerlastbuttonstring);
                var h = a("<div style='margin-left: 6px; width: 15px; height: 15px;'></div>");
                h.addClass(this.toThemeProperty("jqx-icon-arrow-first"));
                this.pagerfirstbutton.wrapInner(h);
                var g = a("<div style='margin-left: 6px; width: 15px; height: 15px;'></div>");
                g.addClass(this.toThemeProperty("jqx-icon-arrow-last"));
                this.pagerlastbutton.wrapInner(g);
                this.pagerdiv.find("#centerDIV").append(this.pagerfirstbutton);
                this.pagerdiv.find("#centerDIV").append(this.pagerleftbutton);
                this.pagerdiv.find("#centerDIV").append(this.pagerbuttons);
                this.pagerdiv.find("#centerDIV").append(this.pagerrightbutton);
                this.pagerdiv.find("#centerDIV").append(this.pagerlastbutton);
                this.pagerlastbutton.jqxButton({
                    cursor: "pointer",
                    disabled: this.disabled,
                    theme: this.theme
                });
                this.pagerfirstbutton.jqxButton({
                    cursor: "pointer",
                    disabled: this.disabled,
                    theme: this.theme
                });
                this.pagerbuttons.css("float", "left");
                this.pagerlastbutton.css("float", "left");
                this.pagerfirstbutton.css("float", "left");
                this.pagerrightbutton.css("float", "left");
                this.pagerleftbutton.css("float", "left");
                this.pagergotoinput.hide();
                this.pagershowrowscombo.hide();
                this.pagergoto.hide();
                this.pagershowrows.hide()
            } else {
                this.pagergotoinput.show();
                this.pagershowrowscombo.show();
                this.pagergoto.show();
                this.pagershowrows.show()
            }
            var b = function(j, i) {
                j.removeHandler(i, "mouseenter");
                j.removeHandler(i, "mouseleave");
                j.removeHandler(i, "mousedown");
                j.removeHandler(i, "mouseup")
            };
            b(this, this.pagerrightbutton);
            b(this, this.pagerleftbutton);
            var f = this.that;
            this.addHandler(this.pagerrightbutton, "mouseenter",
            function() {
                e.addClass(f.toThemeProperty("jqx-icon-arrow-right-hover"))
            });
            this.addHandler(this.pagerleftbutton, "mouseenter",
            function() {
                d.addClass(f.toThemeProperty("jqx-icon-arrow-left-hover"))
            });
            this.addHandler(this.pagerrightbutton, "mouseleave",
            function() {
                e.removeClass(f.toThemeProperty("jqx-icon-arrow-right-hover"))
            });
            this.addHandler(this.pagerleftbutton, "mouseleave",
            function() {
                d.removeClass(f.toThemeProperty("jqx-icon-arrow-left-hover"))
            });
            this.addHandler(this.pagerrightbutton, "mousedown",
            function() {
                e.addClass(f.toThemeProperty("jqx-icon-arrow-right-selected"))
            });
            this.addHandler(this.pagerrightbutton, "mouseup",
            function() {
                e.removeClass(f.toThemeProperty("jqx-icon-arrow-right-selected"))
            });
            this.addHandler(this.pagerleftbutton, "mousedown",
            function() {
                d.addClass(f.toThemeProperty("jqx-icon-arrow-left-selected"))
            });
            this.addHandler(this.pagerleftbutton, "mouseup",
            function() {
                d.removeClass(f.toThemeProperty("jqx-icon-arrow-left-selected"))
            })
        },
        gotopage: function(d) {
            if (d == null || d == undefined) {
                d = 0
            }
            if (d == -1) {
                d = 0
            }
            if (d < 0) {
                return
            }
            var c = this.dataview.totalrecords;
            if (this.summaryrows) {
                c += this.summaryrows.length
            }
            var e = this.pagenum;
            this._raiseEvent(25, {
                oldpagenum: this.dataview.pagenum,
                pagenum: d,
                pagesize: this.dataview.pagesize
            });
            var b = Math.ceil(c / this.pagesize);
            if (d >= b) {
                if (this.dataview.totalrecords == 0) {
                    this.dataview.pagenum = 0;
                    this.updatepagerdetails()
                }
                if (d > 0) {
                    d = b - 1
                }
                if (d < 0) {
                    d = 0
                }
            }
            if (this.dataview.pagenum != d || this._requiresupdate) {
                if (this.pageable) {
                    if (this.source.pager) {
                        this.source.pager(d, this.dataview.pagesize, this.dataview.pagenum)
                    }
                    this.dataview.pagenum = d;
                    if (this.virtualmode) {
                        this.hiddens = new Array();
                        this.expandedgroups = new Array();
                        if (this.rendergridrows) {
                            var h = d * this.dataview.pagesize;
                            var g = h + this.dataview.pagesize;
                            if (h != null && g != null) {
                                if (this.pagerrightbutton) {
                                    this.pagerrightbutton.jqxButton({
                                        disabled: true
                                    });
                                    this.pagerleftbutton.jqxButton({
                                        disabled: true
                                    });
                                    this.pagershowrowscombo.jqxDropDownList({
                                        disabled: true
                                    })
                                }
                                if (this.pagerfirstbutton) {
                                    this.pagerfirstbutton.jqxButton({
                                        disabled: true
                                    });
                                    this.pagerlastbutton.jqxButton({
                                        disabled: true
                                    })
                                }
                                this.updatebounddata("pagechanged");
                                this._raiseEvent(9, {
                                    pagenum: d,
                                    oldpagenum: e,
                                    pagesize: this.dataview.pagesize
                                });
                                this.updatepagerdetails();
                                if (this.autosavestate) {
                                    if (this.savestate) {
                                        this.savestate()
                                    }
                                }
                                return
                            }
                        }
                    } else {
                        this.dataview.updateview()
                    }
                    this._loadrows();
                    this._updatepageviews();
                    this.tableheight = null;
                    this._updatecolumnwidths();
                    this._updatecellwidths();
                    this._renderrows(this.virtualsizeinfo);
                    this.updatepagerdetails();
                    if (this.autoheight || this.autorowheight) {
                        var f = this.host.height() - this._gettableheight();
                        height = f + this._pageviews[0].height;
                        if (height != this.host.height()) {
                            this._arrange();
                            this._updatepageviews();
                            if (this.autorowheight) {
                                this._renderrows(this.virtualsizeinfo)
                            }
                        }
                    }
                    if (this.editcell != null && this.endcelledit) {
                        this.endcelledit(this.editcell.row, this.editcell.column, false, false)
                    }
                    this.focus();
                    this._raiseEvent(9, {
                        pagenum: d,
                        oldpagenum: e,
                        pagesize: this.dataview.pagesize
                    });
                    if (this.autosavestate) {
                        if (this.savestate) {
                            this.savestate()
                        }
                    }
                }
            }
        },
        gotoprevpage: function() {
            if (this.dataview.pagenum > 0) {
                this.gotopage(this.dataview.pagenum - 1)
            } else {
                if (this.pagermode != "simple") {
                    var c = this.dataview.totalrecords;
                    if (this.summaryrows) {
                        c += this.summaryrows.length
                    }
                    var b = Math.ceil(c / this.pagesize);
                    this.gotopage(b - 1)
                }
            }
        },
        gotonextpage: function() {
            var c = this.dataview.totalrecords;
            if (this.summaryrows) {
                c += this.summaryrows.length
            }
            var b = Math.ceil(c / this.pagesize);
            if (this.dataview.pagenum < b - 1) {
                this.gotopage(this.dataview.pagenum + 1)
            } else {
                if (this.pagermode != "simple") {
                    this.gotopage(0)
                }
            }
        },
        updatepagerdetails: function() {
            if (this.pagerdetails != null && this.pagerdetails.length > 0) {
                var n = this.dataview.pagenum * this.pagesize;
                var d = (this.dataview.pagenum + 1) * this.pagesize;
                if (d >= this.dataview.totalrecords) {
                    d = this.dataview.totalrecords
                }
                var q = this.dataview.totalrecords;
                if (this.summaryrows) {
                    q += this.summaryrows.length;
                    if ((this.dataview.pagenum + 1) * this.pagesize > this.dataview.totalrecords) {
                        d = q
                    }
                }
                n++;
                var g = Math.ceil(q / this.dataview.pagesize);
                if (g >= 1) {
                    g--
                }
                g++;
                if (this.pagermode !== "simple") {
                    var o = this.pagergotoinput.find("input");
                    o.val(this.dataview.pagenum + 1)
                } else {
                    var b = "";
                    var f = this.pagerbuttonscount;
                    if (f == 0 || !f) {
                        f = 5
                    }
                    var h = 0;
                    if (this.rtl) {
                        h = f - 1
                    }
                    while ((this.rtl && h >= 0) || (!this.rtl && h < f)) {
                        var m = 1 + h;
                        var k = this.dataview.pagenum / f;
                        var e = Math.floor(k);
                        m += e * f;
                        var l = this.toTP("jqx-grid-pager-number");
                        l += " " + this.toTP("jqx-rc-all");
                        if (m > g) {
                            break
                        }
                        if (!this.rtl) {
                            if (h == 0 && m > f) {
                                b += "<a class='" + l + "' tabindex=-1 href='javascript:;' data-page='" + ( - 1 + m) + "'>...</a>"
                            }
                        }
                        if (this.dataview.pagenum === m - 1) {
                            l += " " + this.toTP("jqx-fill-state-pressed")
                        }
                        if (!this.rtl) {
                            b += "<a class='" + l + "' tabindex=-1 href='javascript:;' data-page='" + m + "'>" + m + "</a>";
                            if (h === f - 1) {
                                var l = this.toTP("jqx-grid-pager-number");
                                l += " " + this.toTP("jqx-rc-all");
                                if (g >= 1 + m) {
                                    b += "<a class='" + l + "' tabindex=-1 href='javascript:;' data-page='" + (1 + m) + "'>...</a>"
                                }
                            }
                        } else {
                            if (h === f - 1) {
                                var l = this.toTP("jqx-grid-pager-number");
                                l += " " + this.toTP("jqx-rc-all");
                                if (g >= 1 + m) {
                                    b += "<a class='" + l + "' tabindex=-1 href='javascript:;' data-page='" + (1 + m) + "'>...</a>"
                                }
                            }
                            if (this.dataview.pagenum === m - 1) {
                                l += " " + this.toTP("jqx-fill-state-pressed")
                            }
                            b += "<a class='" + l + "' tabindex=-1 href='javascript:;' data-page='" + m + "'>" + m + "</a>"
                        }
                        if (this.rtl) {
                            var l = this.toTP("jqx-grid-pager-number");
                            l += " " + this.toTP("jqx-rc-all");
                            if (h == 0 && m > f) {
                                b += "<a class='" + l + "' tabindex=-1 href='javascript:;' data-page='" + ( - 1 + m) + "'>...</a>"
                            }
                        }
                        if (!this.rtl) {
                            h++
                        } else {
                            h--
                        }
                    }
                    var p = this["pagerbuttons"].find("a");
                    this.removeHandler(p, "click");
                    this.removeHandler(p, "mouseenter");
                    this.removeHandler(p, "mouseleave");
                    this["pagerbuttons"][0].innerHTML = b;
                    var j = this;
                    var c = function() {
                        j.addHandler(p, "click",
                        function(i) {
                            var r = a(i.target).attr("data-page");
                            j.gotopage(parseInt(r) - 1);
                            return false
                        });
                        j.addHandler(p, "mouseenter",
                        function(i) {
                            a(i.target).addClass(j.toTP("jqx-fill-state-hover"))
                        });
                        j.addHandler(p, "mouseleave",
                        function(i) {
                            a(i.target).removeClass(j.toTP("jqx-fill-state-hover"))
                        })
                    };
                    var p = this["pagerbuttons"].find("a");
                    c(p)
                }
                //this.pagergotoinput.attr("title", "1 - " + g);
                if (d == 0 && d < n) {
                    n = 0
                }
                
                if (!this.rtl) {
                    this.pagerdetails[0].innerHTML = n + "-" + d + this.gridlocalization.pagerrangestring + q;
                    
                    if (this.pagermode != "simple") {
                        //总页数
                        var totalPageNum;
                        if (q == 0) {
                        	totalPageNum = 1;
                        } else {
                        	totalPageNum = Math.ceil(q / this.pagesize);
                        }
                    	
                        this.totalCount[0].innerHTML = this.gridlocalization.pagerrangestring + q;	//总条数
                        this.currNum[0].innerHTML = this.gridlocalization.pagercurrnumstring + n + "-" + d;	//当前条数
                        this.totalPagenum[0].innerHTML =  this.gridlocalization.pagertotalpagestring + totalPageNum;	//总页数
                    }
                } else {
                    this.pagerdetails[0].innerHTML = q + this.gridlocalization.pagerrangestring + d + "-" + n;
                }
                if (n > d) {
                    this.gotoprevpage()
                }
            }
        },
        _updatepagedview: function(e, g, b) {
            var j = this.that;
            if (this.dataview.rows.length != this.dataview.pagesize) {
                this.dataview.updateview()
            }
            var k = this.dataview.rows.length;
            for (var d = 0; d < k; d++) {
                var f = this.dataview.rows[d].visibleindex;
                var h = {
                    index: f,
                    height: this.heights[f],
                    hidden: this.hiddens[f],
                    details: this.details[f]
                };
                if (this.heights[f] == undefined) {
                    this.heights[f] = this.rowsheight;
                    h.height = this.rowsheight
                }
                if (this.hiddens[f] == undefined) {
                    this.hiddens[f] = false;
                    h.hidden = false
                }
                if (this.details[f] == undefined) {
                    this.details[f] = null
                }
                if (h.height != j.rowsheight) {
                    g -= j.rowsheight;
                    g += h.height
                }
                if (h.hidden) {
                    g -= h.height
                } else {
                    b += h.height;
                    var c = 0;
                    if (this.rowdetails) {
                        if (h.details && h.details.rowdetails && !h.details.rowdetailshidden) {
                            c = h.details.rowdetailsheight;
                            b += c;
                            g += c
                        }
                    }
                }
            }
            this._pageviews[0] = {
                top: 0,
                height: b
            };
            return g
        }
    })
})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.dataview.sort=function(){this.sortby=function(d,f,p){var m=Object.prototype.toString;if(f==null){this.sortdata=null;this.sortcache={};this.refresh();return}if(f==undefined){f=true}if(f=="a"||f=="asc"||f=="ascending"||f==true){f=true}else{f=false}var g=d;this.sortfield=d;this.sortfielddirection=f?"asc":"desc";if(this.sortcache==undefined){this.sortcache={}}this.sortdata=[];var b=[];var c=false;if(g=="constructor"){g=""}if(!this.virtualmode&&this.sortcache[g]!=null){var o=this.sortcache[g];b=o._sortdata;if(o.direction==f){b.reverse()}else{if(!o.direction&&f){b.reverse()}c=true}if(b.length<this.totalrecords){this.sortcache={};c=false;b=[]}}Object.prototype.toString=(typeof d=="function")?d:function(){return this[d]};var r=this.records;var t=this.that;var n="";if(this.source.datafields){a.each(this.source.datafields,function(){if(this.name==d){if(this.type){n=this.type}return false}})}if(b.length==0){if(r.length){var h=r.length;for(var q=0;q<h;q++){var e=r[q];if(e!=null){var j=e;var s=j.toString();b.push({sortkey:s,value:j,index:q})}}}else{var l=false;for(obj in r){var e=r[obj];if(e==undefined){l=true;break}var j=e;b.push({sortkey:j.toString(),value:j,index:obj})}if(l){a.each(r,function(u,v){b.push({sortkey:v.toString(),value:v,index:u})})}}}if(!c){if(p==null){this._sortcolumntype=n;var k=this;b.sort(function(u,i){return k._compare(u,i,n)})}else{b.sort(p)}}if(!f){b.reverse()}Object.prototype.toString=m;this.sortdata=b;this.sortcache[g]={_sortdata:b,direction:f};this.reload(this.records,this.rows,this.filters,this.updated,true)},this.clearsortdata=function(){this.sortcache={};this.sortdata=null};this._compare=function(c,b,e){var c=c.sortkey;var b=b.sortkey;if(c===undefined){c=null}if(b===undefined){b=null}if(c===null&&b===null){return 0}if(c===null&&b!==null){return -1}if(c!==null&&b===null){return 1}if(a.jqx.dataFormat){if(e&&e!=""){switch(e){case"number":case"int":case"float":if(c<b){return -1}if(c>b){return 1}return 0;case"date":case"time":if(c<b){return -1}if(c>b){return 1}return 0;case"string":case"text":c=String(c).toLowerCase();b=String(b).toLowerCase();break}}else{if(a.jqx.dataFormat.isNumber(c)&&a.jqx.dataFormat.isNumber(b)){if(c<b){return -1}if(c>b){return 1}return 0}else{if(a.jqx.dataFormat.isDate(c)&&a.jqx.dataFormat.isDate(b)){if(c<b){return -1}if(c>b){return 1}return 0}else{if(!a.jqx.dataFormat.isNumber(c)&&!a.jqx.dataFormat.isNumber(b)){c=String(c).toLowerCase();b=String(b).toLowerCase()}}}}}try{if(c<b){return -1}if(c>b){return 1}}catch(d){var f=d}return 0};this._equals=function(c,b){return(this._compare(c,b)===0)}};a.extend(a.jqx._jqxGrid.prototype,{_rendersortcolumn:function(){var b=this.that;var d=this.getsortcolumn();if(this.sortdirection){var c=function(f,g){var e=b.getcolumn(f);if(e){if(g.ascending){a.jqx.aria(e.element,"aria-sort","ascending")}else{if(g.descending){a.jqx.aria(e.element,"aria-sort","descending")}else{a.jqx.aria(e.element,"aria-sort","none")}}}};if(this._oldsortinfo){if(this._oldsortinfo.column){c(this._oldsortinfo.column,{ascending:false,descending:false})}}c(d,this.sortdirection)}this._oldsortinfo={column:d,direction:this.sortdirection};if(this.sortdirection){a.each(this.columns.records,function(f,g){var e=a.data(document.body,"groupsortelements"+this.displayfield);if(d==null||this.displayfield!=d){a(this.sortasc).hide();a(this.sortdesc).hide();if(e!=null){e.sortasc.hide();e.sortdesc.hide()}}else{if(b.sortdirection.ascending){a(this.sortasc).show();a(this.sortdesc).hide();if(e!=null){e.sortasc.show();e.sortdesc.hide()}}else{a(this.sortasc).hide();a(this.sortdesc).show();if(e!=null){e.sortasc.hide();e.sortdesc.show()}}}})}},getsortcolumn:function(){if(this.sortcolumn!=undefined){return this.sortcolumn}return null},removesort:function(){this.sortby(null)},sortby:function(d,g,f,e,b){if(this._loading&&b!==false){throw new Error("jqxGrid: "+this.loadingerrormessage);return false}if(d==null){g=null;d=this.sortcolumn}if(d!=undefined){var c=this.that;if(f==undefined&&c.source.sortcomparer!=null){f=c.source.sortcomparer}if(g=="a"||g=="asc"||g=="ascending"||g==true){ascending=true}else{ascending=false}if(g!=null){c.sortdirection={ascending:ascending,descending:!ascending}}else{c.sortdirection={ascending:false,descending:false}}if(g!=null){c.sortcolumn=d}else{c.sortcolumn=null}if(c.source.sort||c.virtualmode){c.dataview.sortfield=d;if(g==null){c.dataview.sortfielddirection=""}else{c.dataview.sortfielddirection=ascending?"asc":"desc"}if(c.source.sort&&!this._loading){c.source.sort(d,g);c._raiseEvent(6,{sortinformation:c.getsortinformation()});return}}else{c.dataview.sortby(d,g,f)}if(e===false){return}if(c.groupable&&c.groups.length>0){c._render(true,false,false);if(c._updategroupheadersbounds&&c.showgroupsheader){c._updategroupheadersbounds()}}else{if(c.pageable){c.dataview.updateview()}c._updaterowsproperties();c.rendergridcontent(true)}c._raiseEvent(6,{sortinformation:c.getsortinformation()})}},_togglesort:function(d){var b=this.that;if(this.disabled){return}if(d.sortable&&b.sortable){var c=b.getsortinformation();var e=null;if(c.sortcolumn!=null&&c.sortcolumn==d.displayfield){e=c.sortdirection.ascending;if(b.sorttogglestates>1){if(e==true){e=false}else{e=null}}else{e=!e}}else{e=true}b.sortby(d.displayfield,e,null)}}})})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.extend(a.jqx._jqxGrid.prototype,{_updatefilterrowui:function(f){var m=this.columns.records.length;var e=0;var l=this;if(!this.filterrow){return}for(var i=0;i<m;i++){var g=this.columns.records[i];var c=g.width;if(c<g.minwidth){c=g.minwidth}if(c>g.maxwidth){c=g.maxwidth}var k=a(this.filterrow[0].cells[i]);k.css("left",e);var h=true;if(k.width()==c){h=false}if(f){h=true}k.width(c);k[0].left=e;if(!(g.hidden&&g.hideable)){e+=c}else{k.css("display","none")}if(!h){continue}if(g.createfilterwidget&&g.filtertype=="custom"){g.createfilterwidget(g,k)}else{if(g.filterable){var d=function(n,o){var j=a(o.children()[0]);j.width(c-10);j.attr("disabled",n.disabled)};switch(g.filtertype){case"number":case"input":a(k.children()[0]).width(c);k.find("input").width(c-30);k.find("input").attr("disabled",l.disabled);a(k.find(".jqx-dropdownlist-state-normal")).jqxDropDownList({theme:l.theme,disabled:l.disabled});break;case"date":case"range":if(this.host.jqxDateTimeInput){a(k.children()[0]).jqxDateTimeInput({theme:l.theme,disabled:l.disabled,width:c-10})}else{d(this,k)}break;case"textbox":case"default":d(this,k);break;case"list":case"checkedlist":if(this.host.jqxDropDownList){a(k.children()[0]).jqxDropDownList({theme:l.theme,disabled:l.disabled,width:c-10})}else{d(this,k)}break;case"bool":case"boolean":if(!this.host.jqxCheckBox){d(this,k)}else{a(k.children()[0]).jqxCheckBox({theme:l.theme,disabled:l.disabled})}break}}}}var b=a(this.filterrow.children()[0]);b.width(parseInt(e)+2);b.height(this.filterrowheight)},clearfilterrow:function(d){this._disablefilterrow=true;if(!this.columns.records){return}var l=this.columns.records.length;var e=0;for(var h=0;h<l;h++){var f=this.columns.records[h];var k=a(this.filterrow[0].cells[h]);if(typeof d=="string"){if(f.displayfield!=d){continue}}if(f.filterable){var c=function(n,o){var j=a(o.children()[0]);j.val("");if(j[0]){n["_oldWriteText"+j[0].id]=""}};switch(f.filtertype){case"number":case"input":k.find("input").val("");if(this.host.jqxDropDownList){var i=a(a(a(k).children()[0]).children()[1]);i.jqxDropDownList("clearSelection");var g=0;if(g==0){var b=this._getfiltersbytype(f.filtertype=="number"?"number":"string");var m=b.indexOf("contains");if(m!=-1&&f.filtercondition==null){g=m}}i.jqxDropDownList({selectedIndex:g});i.jqxDropDownList("ensureVisible",g)}break;case"date":case"range":if(this.host.jqxDateTimeInput){a(k.children()[0]).jqxDateTimeInput("setDate",null)}else{c(this,k)}break;case"textbox":case"default":c(this,k);break;case"list":if(this.host.jqxDropDownList){a(k.children()[0]).jqxDropDownList("clearSelection")}else{c(this,k)}break;case"checkedlist":if(this.host.jqxDropDownList){a(k.children()[0]).jqxDropDownList("checkAll",false)}else{c(this,k)}break;case"bool":case"boolean":if(!this.host.jqxCheckBox){c(this,k)}else{a(k.children()[0]).jqxCheckBox({checked:null})}break}}}this._disablefilterrow=false},_applyfilterfromfilterrow:function(){if(this._disablefilterrow==true){return}if(this.disabled){return}var z=this.columns.records.length;var D=this.that;for(var t=0;t<z;t++){var k=new a.jqx.filter();var u=this.columns.records[t];if(!u.filterable){continue}if(u.datafield===null){continue}var f=D._getcolumntypebydatafield(u);var d=D._getfiltertype(f);var l=1;var E=true;var e=u.filtertype;var B=function(j,L,I){var i=true;if(j._filterwidget){var G=j._filterwidget.val();if(G!=""){var J="equal";if(L=="stringfilter"){var J="contains"}if(L=="numericfilter"){if(D.gridlocalization.decimalseparator==","){if(G.indexOf(D.gridlocalization.decimalseparator)>=0){G=G.replace(D.gridlocalization.decimalseparator,".")}}}if(L!="stringfilter"){var K=0;if(G.indexOf(">")!=-1){J="greater_than";K=1}if(G.indexOf("<")!=-1){J="less_than";K=1}if(G.indexOf("=")!=-1){if(J=="greater_than"){J="greater_than_or_equal";K=2}else{if(J=="less_than"){J="less_than_or_equal";K=2}else{J="equal";K=1}}}if(K!=0){G=G.substring(K);if(G.length<1){return false}}}if(j.filtercondition!=undefined){J=j.filtercondition}if(L=="datefilter"){var H=I.createfilter(L,G,J,null,j.cellsformat,D.gridlocalization)}else{var H=I.createfilter(L,G,J)}I.addfilter(l,H)}else{i=false}}return i};switch(u.filtertype){case"range":case"date":if(u._filterwidget.jqxDateTimeInput){if(u.filtertype=="range"){var p=u._filterwidget.jqxDateTimeInput("getRange");if(p!=null&&p.from!=null&&p.to!=null){var o="GREATER_THAN_OR_EQUAL";var r=new Date(0);r.setHours(0);r.setMinutes(0);r.setFullYear(p.from.getFullYear(),p.from.getMonth(),p.from.getDate());var q=new Date(0);q.setHours(0);q.setMinutes(0);q.setFullYear(p.to.getFullYear(),p.to.getMonth(),p.to.getDate());q.setHours(p.to.getHours());q.setMinutes(p.to.getMinutes());q.setSeconds(p.to.getSeconds());var y=k.createfilter(d,r,o);k.addfilter(0,y);var c="LESS_THAN_OR_EQUAL";var x=k.createfilter(d,q,c);k.addfilter(0,x)}else{E=false}}else{var p=u._filterwidget.jqxDateTimeInput("getDate");if(p!=null){var r=new Date(0);r.setHours(0);r.setMinutes(0);r.setFullYear(p.getFullYear(),p.getMonth(),p.getDate());var y=k.createfilter(d,r,"EQUAL");k.addfilter(0,y)}else{E=false}}}else{E=B(u,d,k)}break;case"input":if(u._filterwidget){var p=u._filterwidget.find("input").val();var h=u._filterwidget.find(".filter").jqxDropDownList("selectedIndex");var w=k.getoperatorsbyfiltertype(d)[h];if(D.updatefilterconditions){var F=D.updatefilterconditions(d,k.getoperatorsbyfiltertype(d));if(F!=undefined){k.setoperatorsbyfiltertype(d,F)}var w=k.getoperatorsbyfiltertype(d)[h]}var n=w=="NULL"||w=="NOT_NULL";var s=w=="EMPTY"||w=="NOT_EMPTY";if(p!=undefined&&p.length>0||n||s){y=k.createfilter(d,p,w,null,u.cellsformat,D.gridlocalization);k.addfilter(0,y)}else{E=false}}else{E=false}break;case"number":if(u._filterwidget){var p=u._filterwidget.find("input").val();if(D.gridlocalization.decimalseparator==","){if(p.indexOf(D.gridlocalization.decimalseparator)>=0){p=p.replace(D.gridlocalization.decimalseparator,".")}}var h=u._filterwidget.find(".filter").jqxDropDownList("selectedIndex");var w=k.getoperatorsbyfiltertype(d)[h];if(D.updatefilterconditions){var F=D.updatefilterconditions(d,k.getoperatorsbyfiltertype(d));if(F!=undefined){k.setoperatorsbyfiltertype(d,F)}var w=k.getoperatorsbyfiltertype(d)[h]}var n=w=="NULL"||w=="NOT_NULL";var s=w=="EMPTY"||w=="NOT_EMPTY";if(p!=undefined&&p.length>0||n||s){y=k.createfilter(d,new Number(p),w,null,u.cellsformat,D.gridlocalization);k.addfilter(0,y)}else{E=false}}else{E=false}break;case"textbox":case"default":E=B(u,d,k);break;case"bool":case"boolean":if(u._filterwidget.jqxCheckBox){var p=u._filterwidget.jqxCheckBox("checked");if(p!=null){var o="equal";var m=k.createfilter(d,p,o);k.addfilter(l,m)}else{E=false}}else{E=B(u,d,k)}break;case"list":var g=u._filterwidget.jqxDropDownList("listBox");if(g.selectedIndex>0){var b=g.getItem(g.selectedIndex);var p=b.label;var A=b.value;var o="equal";if(p===""){o="NULL"}var m=k.createfilter(d,p,o);k.addfilter(l,m);if(A!==p){m.data=A}}else{E=false}break;case"checkedlist":if(u._filterwidget.jqxDropDownList){var g=u._filterwidget.jqxDropDownList("listBox");var C=g.getCheckedItems();if(C.length==0){for(var v=1;v<g.items.length;v++){var p=g.items[v].label;var A=g.items[v].value;var o="not_equal";if(p===""){o="NULL"}var m=k.createfilter(d,p,o);if(A!==p){m.data=A}k.addfilter(0,m)}E=true}else{if(C.length!=g.items.length){for(var v=0;v<C.length;v++){var p=C[v].label;var A=C[v].value;var o="equal";if(p===""){o="NULL"}var m=k.createfilter(d,p,o);if(A!==p){m.data=A}k.addfilter(l,m)}}else{E=false}}}else{E=B(u,d,k)}break}if(!this._loading){if(E){this.addfilter(u.displayfield,k,false)}else{this.removefilter(u.displayfield,false)}}}if(!this._loading){this.applyfilters("filterrow")}},_updatefilterrow:function(){var b=a('<div style="position: relative;" id="row00'+this.element.id+'"></div>');var f=0;var o=this.columns.records.length;var m=this.toThemeProperty("jqx-grid-cell");m+=" "+this.toThemeProperty("jqx-grid-cell-pinned");m+=" "+this.toThemeProperty("jqx-grid-cell-filter-row");var r=o+10;var s=new Array();var n=this.that;this.filterrow[0].cells=s;b.height(this.filterrowheight);this.filterrow.children().detach();this.filterrow.append(b);if(!this._filterrowcache){this._filterrowcache=new Array()}this._initcolumntypes();var g=false;var d=new Array();var q=document.createDocumentFragment();for(var h=0;h<o;h++){var e=this.columns.records[h];var c=e.width;if(c<e.minwidth){c=e.minwidth}if(c>e.maxwidth){c=e.maxwidth}var l=document.createElement("div");l.style.overflow="hidden";l.style.position="absolute";l.style.height="100%";l.className=m;l=a(l);q.appendChild(l[0]);l[0].style.left=f+"px";if(this.rtl){l.css("z-index",r++);l.css("border-left-width","1px")}else{l.css("z-index",r--)}if(c=="auto"){c=0}l[0].style.width=parseFloat(c)+"px";l[0].left=f;if(!(e.hidden&&e.hideable)){f+=c}else{l.css("display","none")}s[s.length]=l[0];var k=true;if(!this.rtl){if(this.groupable){var p=(this.showrowdetailscolumn&&this.rowdetails)?1:0;if(this.groups.length+p>h){k=false}}if(this.showrowdetailscolumn&&this.rowdetails&&h==0){k=false}}else{if(this.groupable){var p=(this.showrowdetailscolumn&&this.rowdetails)?1:0;if(this.groups.length+p+h>o-1){k=false}}if(this.showrowdetailscolumn&&this.rowdetails&&h==o-1){k=false}}if(k){if(e.filtertype=="custom"&&e.createfilterwidget){var i=function(){n._applyfilterfromfilterrow()};e.createfilterwidget(e,l,i)}else{if(e.filterable){if(this._filterrowcache[e.datafield]){g=true;l.append(this._filterrowcache[e.datafield]);e._filterwidget=this._filterrowcache[e.datafield]}else{this._addfilterwidget(e,l,c);d[e.datafield]=e._filterwidget}}}}}b[0].appendChild(q);this._filterrowcache=d;if(a.jqx.browser.msie&&a.jqx.browser.version<8){b.css("z-index",r--)}b.width(parseFloat(f)+2);this.filterrow.addClass(m);this.filterrow.css("border-top-width","1px");this.filterrow.css("border-right-width","0px");if(g){this._updatefilterrowui(true)}},_addfilterwidget:function(C,d,A){var G=this.that;var z="";for(var E=0;E<G.dataview.filters.length;E++){var x=G.dataview.filters[E];if(x.datafield&&x.datafield==C.datafield){z=x.filter.getfilters()[0].value;break}}var g=function(H,I){var f=a('<input autocomplete="off" type="textarea"/>');f[0].id=a.jqx.utilities.createId();f.addClass(H.toThemeProperty("jqx-widget"));f.addClass(H.toThemeProperty("jqx-input"));f.addClass(H.toThemeProperty("jqx-rc-all"));f.addClass(H.toThemeProperty("jqx-widget-content"));if(H.rtl){f.css("direction","rtl")}if(H.disabled){f.attr("disabled",true)}f.attr("disabled",false);f.appendTo(I);f.width(A-10);f.height(H.filterrowheight-10);f.css("margin","4px");if(C.createfilterwidget){C.createfilterwidget(C,I,f)}C._filterwidget=f;f.focus(function(){H.content[0].scrollLeft=0;setTimeout(function(){H.content[0].scrollLeft=0},10);H.focusedfilter=f;f.addClass(H.toThemeProperty("jqx-fill-state-focus"));return false});f.blur(function(){f.removeClass(H.toThemeProperty("jqx-fill-state-focus"))});f.keydown(function(J){if(J.keyCode=="13"){H._applyfilterfromfilterrow()}if(f[0]._writeTimer){clearTimeout(f[0]._writeTimer)}f[0]._writeTimer=setTimeout(function(){if(!H._loading){if(!H["_oldWriteText"+f[0].id]){H["_oldWriteText"+f[0].id]=""}if(H["_oldWriteText"+f[0].id]!=f.val()){H._applyfilterfromfilterrow();H["_oldWriteText"+f[0].id]=f.val()}}},C.filterdelay);H.focusedfilter=f});H.host.removeClass("jqx-disableselect");H.content.removeClass("jqx-disableselect");f.val(z)};if(C.datatype!=null){if(C.filtertype=="number"){if(C.datatype=="string"||C.datatype=="date"||C.datatype=="bool"){C.filtertype="textbox"}}if(C.filtertype=="date"){if(C.datatype=="string"||C.datatype=="number"||C.datatype=="bool"){C.filtertype="textbox"}}if(C.filtertype=="bool"){if(C.datatype=="string"||C.datatype=="number"||C.datatype=="date"){C.filtertype="textbox"}}}switch(C.filtertype){case"number":case"input":var m=a("<div></div>");m.width(d.width());m.height(this.filterrowheight);d.append(m);var A=d.width()-20;var s=function(I,J,f){var H=a('<input style="float: left;" autocomplete="off" type="textarea"/>');if(G.rtl){H.css("float","right");H.css("direction","rtl")}H[0].id=a.jqx.utilities.createId();H.addClass(G.toThemeProperty("jqx-widget jqx-input jqx-rc-all jqx-widget-content"));H.appendTo(I);H.width(J-10);if(G.disabled){H.attr("disabled",true)}H.attr("disabled",false);H.height(G.filterrowheight-10);H.css("margin","4px");H.css("margin-right","2px");H.focus(function(){G.focusedfilter=H;H.addClass(G.toThemeProperty("jqx-fill-state-focus"))});H.blur(function(){H.removeClass(G.toThemeProperty("jqx-fill-state-focus"))});H.keydown(function(K){if(K.keyCode=="13"){G._applyfilterfromfilterrow()}if(H[0]._writeTimer){clearTimeout(H[0]._writeTimer)}H[0]._writeTimer=setTimeout(function(){if(!G._loading){if(G["_oldWriteText"+H[0].id]!=H.val()){G._applyfilterfromfilterrow();G["_oldWriteText"+H[0].id]=H.val()}}},C.filterdelay);G.focusedfilter=H});H.val(z);return H};s(m,A);var B=G._getfiltersbytype(C.filtertype=="number"?"number":"string");var t=a("<div class='filter' style='float: left;'></div>");t.css("margin-top","4px");t.appendTo(m);if(G.rtl){t.css("float","right")}var h=0;if(C.filtercondition!=null){var E=new a.jqx.filter();var r=E.getoperatorsbyfiltertype(C.filtertype=="number"?"numericfilter":"stringfilter");var e=r.indexOf(C.filtercondition.toUpperCase());if(e!=-1){h=e}}var D=170;if(C.filtertype=="input"){D=240;if(h==0){var e=B.indexOf("contains");if(e!=-1&&C.filtercondition==null){h=e}}}t.jqxDropDownList({disabled:G.disabled,touchMode:G.touchmode,rtl:G.rtl,dropDownHorizontalAlignment:"right",enableBrowserBoundsDetection:true,selectedIndex:h,width:18,height:21,dropDownHeight:150,dropDownWidth:D,source:B,theme:G.theme});t.jqxDropDownList({selectionRenderer:function(f){return""}});t.jqxDropDownList("setContent","");t.find(".jqx-dropdownlist-content").hide();if(C.createfilterwidget){C.createfilterwidget(C,d,m)}C._filterwidget=m;var j=null;this.addHandler(t,"select",function(){var f=t.jqxDropDownList("getSelectedItem").label;if(C._filterwidget.find("input").val().length>0&&!G.refreshingfilter){G._applyfilterfromfilterrow()}if(C.filtertype=="input"&&!G.refreshingfilter){G._applyfilterfromfilterrow()}else{if(C._filterwidget.find("input").val().length==0&&!G.refreshingfilter){if(j=="null"||j=="not null"||f=="null"||f=="not null"){G._applyfilterfromfilterrow()}}}j=f});break;case"textbox":case"default":default:g(this,d);break;case"none":break;case"date":case"range":if(this.host.jqxDateTimeInput){var b=a("<div></div>");b.css("margin","4px");b.appendTo(d);var n={calendar:this.gridlocalization,todayString:this.gridlocalization.todaystring,clearString:this.gridlocalization.clearstring};b.jqxDateTimeInput({readonly:true,disabled:G.disabled,localization:n,rtl:G.rtl,showFooter:true,formatString:C.cellsformat,selectionMode:C.filtertype,value:null,theme:this.theme,width:A-10,height:this.filterrowheight-10});if(C.createfilterwidget){C.createfilterwidget(C,d,b)}C._filterwidget=b;this.addHandler(b,"valueChanged",function(f){if(!G.refreshingfilter){G._applyfilterfromfilterrow();G.focusedfilter=null}})}else{g(this,d)}break;case"list":case"checkedlist":if(this.host.jqxDropDownList){var q=this._getfilterdataadapter(C);var l=false;var t=a("<div></div>");t.css("margin","4px");var u=C.datafield;var v=C.filtertype=="checkedlist"?true:false;var D=A<150?220:"auto";q.dataBind();var p=q.records;var k=p.length<8?true:false;l=k;t.appendTo(d);t.jqxDropDownList({disabled:G.disabled,touchMode:G.touchmode,rtl:G.rtl,checkboxes:v,dropDownWidth:D,source:q.records,autoDropDownHeight:k,theme:this.theme,width:A-10,height:this.filterrowheight-10,displayMember:C.displayfield,valueMember:u});if(C.createfilterwidget){C.createfilterwidget(C,d,t)}var c=t.jqxDropDownList("listBox");if(v){t.jqxDropDownList({selectionRenderer:function(){var f='<span class="'+G.toThemeProperty("jqx-item")+'" style="top: 2px; position: relative; color: inherit; border: none; background-color: transparent;">'+G.gridlocalization.filterselectstring+"</span>";return f}});var y=a('<span style="top: 2px; position: relative; color: inherit; border: none; background-color: transparent;">'+G.gridlocalization.filterselectstring+"</span>");y.addClass(this.toThemeProperty("jqx-item"));if(c!=undefined){if(!l){c.host.height(200)}c.insertAt(G.gridlocalization.filterselectallstring,0);t.jqxDropDownList("setContent",y);var i=true;var F=new Array();c.checkAll(false);G.addHandler(c.host,"checkChange",function(I){t[0]._selectionChanged=true;if(!i){return}if(I.args.label!=G.gridlocalization.filterselectallstring){i=false;c.host.jqxListBox("checkIndex",0,true,false);var f=c.host.jqxListBox("getCheckedItems");var H=c.host.jqxListBox("getItems");if(f.length==1){c.host.jqxListBox("uncheckIndex",0,true,false)}else{if(H.length!=f.length){c.host.jqxListBox("indeterminateIndex",0,true,false)}}i=true}else{i=false;if(I.args.checked){c.host.jqxListBox("checkAll",false)}else{c.host.jqxListBox("uncheckAll",false)}i=true}})}}else{c.insertAt({label:this.gridlocalization.filterchoosestring,value:""},0);t.jqxDropDownList({selectedIndex:0})}C._filterwidget=t;var o=t.jqxDropDownList("dropdownlistWrapper");if(C.filtertype=="list"){this.addHandler(t,"select",function(f){if(!G.refreshingfilter){if(f.args&&f.args.type!="none"){G._applyfilterfromfilterrow();G.focusedfilter=null}}})}else{this.addHandler(t,"close",function(f){if(t[0]._selectionChanged){G._applyfilterfromfilterrow();G.focusedfilter=null;t[0]._selectionChanged=false}})}}else{g(this,d)}break;case"bool":case"boolean":if(this.host.jqxCheckBox){var w=a('<div tabIndex=0 style="opacity: 0.99; position: absolute; top: 50%; left: 50%; margin-top: -7px; margin-left: -10px;"></div>');w.appendTo(d);w.jqxCheckBox({disabled:G.disabled,enableContainerClick:false,animationShowDelay:0,animationHideDelay:0,hasThreeStates:true,theme:this.theme,checked:null});if(C.createfilterwidget){C.createfilterwidget(C,d,w)}if(z===true||z=="true"){w.jqxCheckBox({checked:true})}else{if(z===false||z=="false"){w.jqxCheckBox({checked:false})}}C._filterwidget=w;this.addHandler(w,"change",function(f){if(!G.refreshingfilter){if(f.args){G.focusedfilter=null;G._applyfilterfromfilterrow()}}})}else{g(this,d)}break}},_getfilterdataadapter:function(b){var c=this.source._source?true:false;if(!c){dataadapter=new a.jqx.dataAdapter(this.source,{autoBind:false,uniqueDataFields:[b.displayfield],autoSort:true,autoSortField:b.displayfield,async:false})}else{var e={localdata:this.source.records,datatype:this.source.datatype,async:false};var d=this;dataadapter=new a.jqx.dataAdapter(e,{autoBind:false,autoSort:true,autoSortField:b.displayfield,async:false,uniqueDataFields:[b.displayfield],beforeLoadComplete:function(f){var k=new Array();if(b.cellsformat){var j=d._getcolumntypebydatafield(b);for(var g=0;g<f.length;g++){k.push(f[g]);var h=f[g][b.displayfield];f[g][b.displayfield+"JQValue"]=h;if(j==="date"){f[g][b.displayfield]=dataadapter.formatDate(h,b.cellsformat,d.gridlocalization)}else{if(j==="number"||j==="float"||j==="int"){f[g][b.displayfield]=dataadapter.formatNumber(h,b.cellsformat,d.gridlocalization)}}}return k}else{return f}}})}if(b.filteritems&&b.filteritems.length>0){var e={localdata:b.filteritems,datatype:this.source.datatype,async:false};dataadapter=new a.jqx.dataAdapter(e,{autoBind:false,async:false})}else{if(b.filteritems){if(b.filteritems._source){b.filteritems._options.autoBind=false;b.filteritems._options.async=false;return b.filteritems}else{if(a.isFunction(b.filteritems)){return b.filteritems()}}}}return dataadapter},refreshfilterrow:function(){if(!this.showfilterrow){return}this.refreshingfilter=true;this._updatefilterrowui();this._updatelistfilters(true,true);var h=this.that;var l=this.columns.records.length;for(var d=0;d<l;d++){var c=this.columns.records[d];if(c.filterable){if(c.filter){var b=c.filter.getfilters();if(b.length>0){var k=b[0].value;var e=c._filterwidget;var f=c._filterwidget.parent();if(e!=null){switch(c.filtertype){case"number":f.find("input").val(k);if(this.host.jqxDropDownList){var i=c.filter.getoperatorsbyfiltertype("numericfilter");e.find(".filter").jqxDropDownList("selectIndex",i.indexOf(b[0].condition))}break;case"input":f.find("input").val(k);if(this.host.jqxDropDownList){var i=c.filter.getoperatorsbyfiltertype("stringfilter");e.find(".filter").jqxDropDownList("selectIndex",i.indexOf(b[0].condition))}break;case"date":case"range":if(this.host.jqxDateTimeInput){var k=c.filter.getfilterat(0).filtervalue;if(k!=undefined){if(c.filter.getfilterat(1)){var g=c.filter.getfilterat(1).filtervalue}else{g=k}if(c.filtertype=="range"){a(f.children()[0]).jqxDateTimeInput("setRange",new Date(k),new Date(g))}else{a(f.children()[0]).jqxDateTimeInput("setDate",new Date(k))}}}else{e.val(k)}break;case"textbox":case"default":e.val(k);h["_oldWriteText"+e[0].id]=k;break;case"bool":case"boolean":if(!this.host.jqxCheckBox){e.val(k)}else{a(f.children()[0]).jqxCheckBox({checked:k})}break}}}}}}this.refreshingfilter=false},_destroyedfilters:function(){var g=this.that;var b=this.columns.records.length;for(var f=0;f<b;f++){var c=this.columns.records[f];if(c.filterable){var h=c._filterwidget;if(c.filtertype=="list"||c.filtertype=="checkedlist"){this.removeHandler(h,"select");this.removeHandler(h,"close");h.jqxDropDownList("destroy")}else{if(c.filtertype=="date"){this.removeHandler(h,"valueChanged");h.jqxDateTimeInput("destroy")}else{if(c.filtertype=="bool"){this.removeHandler(h,"change");h.jqxCheckBox("destroy")}else{if(c.filtertype=="number"){var d=h.find(".jqx-input");this.removeHandler(d,"keydown");var e=a(h.children()[1]);e.jqxDropDownList("destroy")}else{this.removeHandler(h,"keydown")}}}}h.remove()}}},_updatelistfilters:function(l,k){var v=this.that;var t=this.columns.records.length;for(var p=0;p<t;p++){var q=this.columns.records[p];if(q.filterable){if(q.filtertype=="list"||q.filtertype=="checkedlist"){var h=q._filterwidget;if(!l){if(q.filter==undefined){h.jqxDropDownList("renderSelection");continue}}else{var e=this._getfilterdataadapter(q);h.jqxDropDownList({source:e});var d=h.jqxDropDownList("getItems");var o=true;if(d.length!=e.records.length+1){o=false}if(o){for(var s=1;s<d.length;s++){if(d[s].label!=e.records[s-1][q.displayfield]){o=false;break}}}if(o&&!k){continue}}var m=q.filtertype=="checkedlist"?true:false;var d=h.jqxDropDownList("getItems");var b=h.jqxDropDownList("listBox");h.jqxDropDownList("dataBind");if(m){h.jqxDropDownList({selectionRenderer:function(){return v.gridlocalization.filterselectstring}});b.insertAt(this.gridlocalization.filterselectallstring,0);var n=a('<span style="top: 2px; position: relative; color: inherit; border: none; background-color: transparent;">'+this.gridlocalization.filterselectstring+"</span>");n.addClass(this.toThemeProperty("jqx-item"));h.jqxDropDownList("setContent",n);b.checkAll(false);if(q.filter){var g=q.filter.getfilters();for(var s=0;s<b.items.length;s++){var f=b.items[s].label;var r=undefined;a.each(g,function(){var i;if(this.condition=="NOT_EQUAL"){if(f==this.value){i=false}else{i=true}}else{if(this.condition=="EQUAL"){if(f==this.value){i=true}else{i=false}}}if(r==undefined&&i!==undefined){r=i}else{if(this.condition=="EQUAL"){r=r||i}else{r=r&&i}}});if(r){b.checkIndex(s,false,false)}else{b.uncheckIndex(s,false,false)}}b._updateCheckedItems();var u=b.getCheckedItems().length;if(b.items.length!=u&&u>0){b.host.jqxListBox("indeterminateIndex",0,true,false)}}}else{b.insertAt({label:this.gridlocalization.filterchoosestring,value:""},0);h.jqxDropDownList({selectedIndex:0});if(q.filter){var g=q.filter.getfilters();var c=-1;for(var s=0;s<b.items.length;s++){var f=b.items[s].label;a.each(g,function(){if(this.condition=="NOT_EQUAL"){return true}if(f==this.value){c=s;return false}})}if(c!=-1){b.selectIndex(c)}}}if(d.length<8){h.jqxDropDownList("autoDropDownHeight",true)}else{h.jqxDropDownList("autoDropDownHeight",false)}}}}},_renderfiltercolumn:function(){var b=this.that;if(this.filterable){if(!this.columns.records){return}a.each(this.columns.records,function(d,e){var c=false;if(b.autoshowfiltericon){if(this.filter){a(this.filtericon).show();c=true}else{a(this.filtericon).hide()}}else{if(this.filterable){a(this.filtericon).show();c=true}}if(this.align=="right"&&!this.renderer){if(this.element){if(!c){this.element.firstChild.firstChild.style.marginRight="2px"}else{this.element.firstChild.firstChild.style.marginRight="18px"}}}})}},_initcolumntypes:function(){if(this.columns&&this.columns.records){var b=this.source._source.datafields;if(b){for(var c=0;c<this.columns.records.length;c++){var d=this.columns.records[c];if(d.datatype){continue}var e="";a.each(b,function(){if(this.name==d.displayfield){if(this.type){e=this.type}return false}});if(e!=""){d.datatype=e}else{d.datatype=""}}}}},_getcolumntypebydatafield:function(f){var g=this.that;var e="string";var d=g.source.datafields||((g.source._source)?g.source._source.datafields:null);if(d){var i="";a.each(d,function(){if(this.name==f.displayfield){if(this.type){i=this.type}return false}});if(i){return i}}if(f!=null){if(this.dataview.cachedrecords==undefined){return e}var b=null;if(!this.virtualmode){if(this.dataview.cachedrecords.length==0){return e}b=this.dataview.cachedrecords[0][f.displayfield];if(b!=null&&b.toString()==""){return"string"}}else{a.each(this.dataview.cachedrecords,function(){b=this[f.displayfield];return false})}if(b!=null){if(typeof b=="boolean"){e="boolean"}else{if(a.jqx.dataFormat.isNumber(b)){e="number"}else{var h=new Date(b);if(h.toString()=="NaN"||h.toString()=="Invalid Date"){if(a.jqx.dataFormat){h=a.jqx.dataFormat.tryparsedate(b);if(h!=null){if(h&&h.getFullYear()){if(h.getFullYear()==1970&&h.getMonth()==0&&h.getDate()==1){var c=new Number(b);if(!isNaN(c)){return"number"}return"string"}}return"date"}else{e="string"}}else{e="string"}}else{e="date"}}}}}return e},_getfiltersbytype:function(b){var c=this.that;var d="";switch(b){case"number":case"float":case"int":d=c.gridlocalization.filternumericcomparisonoperators;break;case"date":d=c.gridlocalization.filterdatecomparisonoperators;break;case"boolean":case"bool":d=c.gridlocalization.filterbooleancomparisonoperators;break;case"string":default:d=c.gridlocalization.filterstringcomparisonoperators;break}return d},_getfiltertype:function(b){var c="stringfilter";switch(b){case"number":case"int":case"float":case"decimal":c="numericfilter";break;case"boolean":case"bool":c="booleanfilter";break;case"date":case"time":case"range":c="datefilter";break;case"string":case"input":c="stringfilter";break}return c},_buildfilter:function(r,l,F){var f=a(l).find(".filter1");var G=a(l).find(".filter2");var K=a(l).find(".filter3");var k=a(l).find(".filtertext1"+r.element.id);var j=a(l).find(".filtertext2"+r.element.id);var A=k.val();var z=j.val();var M=r._getcolumntypebydatafield(F);var t=r._getfiltersbytype(M);var J=new a.jqx.filter();var w=r._getfiltertype(M);if(r.filtermode==="default"&&(F.filtertype!=="list"&&F.filtertype!=="checkedlist")){var E=f.jqxDropDownList("selectedIndex");var c=G.jqxDropDownList("selectedIndex");var D=K.jqxDropDownList("selectedIndex");var e=null;var d=null;if(r.updatefilterconditions){var p=r.updatefilterconditions(w,J.getoperatorsbyfiltertype(w));if(p!=undefined){J.setoperatorsbyfiltertype(w,p)}}var q=false;var L=J.getoperatorsbyfiltertype(w)[E];var K=J.getoperatorsbyfiltertype(w)[D];var v=L=="NULL"||L=="NOT_NULL";var h=L=="EMPTY"||L=="NOT_EMPTY";if(L==undefined){L=J.getoperatorsbyfiltertype(w)[0]}if(K==undefined){K=J.getoperatorsbyfiltertype(w)[0]}if(A.length>0||v||h){e=J.createfilter(w,A,L,null,F.cellsformat,r.gridlocalization);J.addfilter(c,e);q=true}var u=K=="NULL"||K=="NOT_NULL";var g=K=="EMPTY"||K=="NOT_EMPTY";if(z.length>0||u||g){d=J.createfilter(w,z,K,null,F.cellsformat,r.gridlocalization);J.addfilter(c,d);q=true}if(q){var C=F.displayfield;this.addfilter(C,J,true)}else{this._clearfilter(r,l,F)}}else{if(r.filtermode==="excel"||(F.filtertype==="list"||F.filtertype==="checkedlist")){var B=this;var n=false;var x=f.data().jqxListBox.instance;var I=this.filtermode==="excel"||F.filtertype==="checkedlist";var o=x.getCheckedItems();if(!I){var o=x.getSelectedItems()}if(o.length==0){for(var H=1;H<x.items.length;H++){var m=x.items[H].value;var b="not_equal";if(m.indexOf("|")>=0||m.indexOf(" AND ")>=0||m.indexOf(" OR ")>=0||m.indexOf(" and ")>=0||m.indexOf(" or ")>=0){m=m.replace("|","");m=m.replace("AND","");m=m.replace("OR","");m=m.replace("and","");m=m.replace("or","");var b="equal"}var y=J.createfilter(w,m,b,null);J.addfilter(0,y)}n=true}else{if(o.length!=x.items.length){n=true;for(var H=0;H<o.length;H++){if(r.gridlocalization.filterselectallstring===o[H].value){continue}var m=o[H].value;var b="equal";var y=J.createfilter(w,m,b,null);var s=1;J.addfilter(s,y)}}else{n=false}}if(n){var C=F.displayfield;this.addfilter(C,J,true)}else{var C=F.displayfield;this.removefilter(C,true)}}}},_clearfilter:function(e,c,d){var b=d.displayfield;this.removefilter(b,true)},addfilter:function(d,e,c){if(this._loading){throw new Error("jqxGrid: "+this.loadingerrormessage);return false}var f=this.getcolumn(d);var b=this._getcolumn(d);if(f==undefined||f==null){return}f.filter=e;b.filter=e;this.dataview.addfilter(d,e);if(c==true&&c!=undefined){this.applyfilters("add")}},removefilter:function(d,c){if(this._loading){throw new Error("jqxGrid: "+this.loadingerrormessage);return false}var e=this.getcolumn(d);var b=this._getcolumn(d);if(e==undefined||e==null){return}if(e.filter==null){return}this.dataview.removefilter(d,e.filter);e.filter=null;b.filter=null;if(this.showfilterrow){this.clearfilterrow(d)}if(c==true||c!==false){this.applyfilters("remove")}},applyfilters:function(f){var c=false;if(this.dataview.filters.length>=0&&(this.virtualmode||!this.source.localdata)){if(this.source!=null&&this.source.filter){var g=-1;if(this.pageable){g=this.dataview.pagenum;this.dataview.pagenum=0}else{this.vScrollInstance.setPosition(0);this.loadondemand=true;this._renderrows(this.virtualsizeinfo)}if(this.pageable&&this.virtualmode){this.dataview.pagenum=0}this.source.filter(this.dataview.filters,this.dataview.records,this.dataview.records.length);if(this.pageable&&!this.virtualmode){this.dataview.pagenum=g}}}if(this.dataview.clearsortdata){this.dataview.clearsortdata()}if(!this.virtualmode){var b=this.selectedrowindexes;var d=this.that;this.dataview.refresh();if(this.dataview.clearsortdata){if(this.sortcolumn&&this.sortdirection){var e=this.sortdirection.ascending?"asc":"desc";if(!this._loading){this.sortby(this.sortcolumn,e,null,false)}else{this.sortby(this.sortcolumn,e,null,false,false)}}}}else{if(this.pageable){this.dataview.updateview();if(this.gotopage){this.gotopage(0)}}this.rendergridcontent(false,false);if(this.showfilterrow){if(typeof f!="string"&&a.isEmptyObject(f)){this.refreshfilterrow()}}this._raiseEvent(13,{filters:this.dataview.filters});return}if(this.pageable){this.dataview.updateview();if(this.gotopage){this.gotopage(0);this.updatepagerdetails()}}this._updaterowsproperties();if(!this.groupable||(this.groupable&&this.groups.length==0)){this._rowdetailscache=new Array();this.virtualsizeinfo=null;this._pagescache=new Array();if(this.columns&&this.columns.records&&this.columns.records.length>0&&!this.columns.records[0].filtericon){this.prerenderrequired=true}this.rendergridcontent(true,false);this._updatecolumnwidths();this._updatecellwidths();this._renderrows(this.virtualsizeinfo);if(this.showaggregates&&this._updatecolumnsaggregates){this._updatecolumnsaggregates()}}else{this._rowdetailscache=new Array();this._render(true,true,false,false,false);if(this.showfilterrow){this._updatefocusedfilter()}this._updatecolumnwidths();this._updatecellwidths();this._renderrows(this.virtualsizeinfo)}if(this.showfilterrow){if(typeof f!="string"&&a.isEmptyObject(f)){this.refreshfilterrow()}}this._raiseEvent(13,{filters:this.dataview.filters})},getfilterinformation:function(){var d=new Array();for(var b=0;b<this.dataview.filters.length;b++){var c=this.getcolumn(this.dataview.filters[b].datafield);d[b]={filter:this.dataview.filters[b].filter,datafield:c.datafield,displayfield:c.displayfield,filtercolumn:c.datafield,filtercolumntext:c.text}}return d},clearfilters:function(b){var d=this.that;if(this.showfilterrow){this.clearfilterrow()}if(this.columns.records){var c=b==true||b!==false;a.each(this.columns.records,function(){d.removefilter(this.displayfield,!c)})}if(b===false){return}if(b==true||b!==false){this.applyfilters("clear")}},_destroyfilterpanel:function(){var e=a(a.find("#filterclearbutton"+this.element.id));var d=a(a.find("#filterbutton"+this.element.id));var h=a(a.find(".filter1"));var c=a(a.find(".filter2"));var g=a(a.find(".filter3"));var f=a(a.find(".filtertext1"+this.element.id));var b=a(a.find(".filtertext2"+this.element.id));if(f.length>0&&b.length>0){f.removeClass();b.removeClass();f.remove();b.remove()}if(e.length>0){e.jqxButton("destroy");d.jqxButton("destroy");this.removeHandler(e,"click");this.removeHandler(d,"click")}if(h.length>0){h.jqxDropDownList("destroy")}if(c.length>0){c.jqxDropDownList("destroy")}if(g.length>0){g.jqxDropDownList("destroy")}},_updatefilterpanel:function(s,p,E){if(s==null||s==undefined){s=this}var Q=s._getcolumntypebydatafield(E);var u=s._getfiltersbytype(Q);if(!s.host.jqxDropDownList){throw new Error("jqxGrid: Missing reference to jqxdropdownlist.js.");return}s.filterpanel.detach();s.excelfilterpanel.detach();if(E.filterpanel){E.filterpanel.detach()}a(p).children().detach();var k=a(s.menuitemsarray[6]);a(k).css("height","175px");if(E.createfilterpanel&&!E.filterpanel){var K=a("<div class='filter' style='margin-left: 7px;'></div>");a(p).append(K);E.createfilterpanel(E.displayfield,K);E.filterpanel=K}if(E.filtertype==="list"||E.filtertype==="checkedlist"){a(p).append(s.excelfilterpanel)}else{if(E.filtertype!=="custom"){a(p).append(s.filterpanel)}else{if(E.filterpanel){a(p).append(E.filterpanel)}}}var g=a(p);var N=g.find("#filterclearbutton"+s.element.id);var l=g.find("#filterbutton"+s.element.id);var f=g.find(".filter1");var m=g.find(".filter2");var P=g.find(".filter3");var j=g.find(".filtertext1"+s.element.id);var h=g.find(".filtertext2"+s.element.id);if(this._hasdatefilter&&(E.filtertype!=="list"&&E.filtertype!=="checkedlist"&&E.filtertype!=="custom")){var e=j.parent();var d=h.parent();e.children().remove();d.children().remove();if(E.filtertype=="date"){s._showwhere.text(s.gridlocalization.filtershowrowdatestring);var b=a("<div class='filtertext1"+s.element.id+"' style='margin-top: 3px; margin-bottom: 3px;'></div>");e.append(b);var n=function(c){var i={calendar:s.gridlocalization,todayString:s.gridlocalization.todaystring,clearString:s.gridlocalization.clearstring};c.jqxDateTimeInput({disabled:s.disabled,localization:i,rtl:s.rtl,width:s._filterpanelwidth-15,height:20,value:null,formatString:E.cellsformat,theme:s.theme})};n(b);var b=a("<div class='filtertext2"+s.element.id+"' style='margin-top: 3px; margin-bottom: 3px;'></div>");d.append(b);n(b)}else{s._showwhere.text(s.gridlocalization.filtershowrowstring);var b=a("<input class='filtertext1"+s.element.id+"' style='height: 20px; margin-top: 3px; margin-bottom: 3px;' type='text'></input>");e.append(b);var n=function(c){c.addClass(s.toThemeProperty("jqx-input"));c.addClass(s.toThemeProperty("jqx-widget-content"));c.addClass(s.toThemeProperty("jqx-rc-all"));c.width(s._filterpanelwidth-15)};n(b);var b=a("<input class='filtertext2"+s.element.id+"' style='height: 20px; margin-top: 3px; margin-bottom: 3px;' type='text'></input>");d.append(b);n(b)}var j=g.find(".filtertext1"+s.element.id);var h=g.find(".filtertext2"+s.element.id)}if(E.filtertype!="date"){j.val("");h.val("")}else{j.val(null);h.val(null)}this.removeHandler(l,"click");this.addHandler(l,"click",function(){s._buildfilter(s,p,E);s._closemenu()});this.removeHandler(N,"click");this.addHandler(N,"click",function(){s._clearfilter(s,p,E);s._closemenu()});this.removeHandler(l,"keydown");this.addHandler(l,"keydown",function(c){if(c.keyCode===13){s._buildfilter(s,p,E);s._closemenu()}});this.removeHandler(N,"keydown");this.addHandler(N,"keydown",function(c){if(c.keyCode===13){s._clearfilter(s,p,E);s._closemenu()}});this.removeHandler(j,"keydown");this.addHandler(j,"keydown",function(c){if(c.keyCode===13){l.trigger("click")}if(c.keyCode===27){s._closemenu()}});this.removeHandler(h,"keydown");this.addHandler(h,"keydown",function(c){if(c.keyCode===13){l.trigger("click")}if(c.keyCode===27){s._closemenu()}});if(this.filtermode==="default"&&(E.filtertype!=="list"&&E.filtertype!=="checkedlist"&&E.filtertype!=="custom")){if(f.jqxDropDownList("source")!=u){f.jqxDropDownList({enableBrowserBoundsDetection:false,source:u});P.jqxDropDownList({enableBrowserBoundsDetection:false,source:u})}if(Q=="boolean"||Q=="bool"){f.jqxDropDownList({autoDropDownHeight:true,selectedIndex:0});P.jqxDropDownList({autoDropDownHeight:true,selectedIndex:0})}else{var H=false;if(u&&u.length){if(u.length<5){H=true}}f.jqxDropDownList({autoDropDownHeight:H,selectedIndex:2});P.jqxDropDownList({autoDropDownHeight:H,selectedIndex:2})}m.jqxDropDownList({selectedIndex:0});var z=E.filter;var M=new a.jqx.filter();var x="";switch(Q){case"number":case"int":case"float":case"decimal":x="numericfilter";o=M.getoperatorsbyfiltertype("numericfilter");break;case"boolean":case"bool":x="booleanfilter";o=M.getoperatorsbyfiltertype("booleanfilter");break;case"date":case"time":x="datefilter";o=M.getoperatorsbyfiltertype("datefilter");break;case"string":x="stringfilter";o=M.getoperatorsbyfiltertype("stringfilter");break}if(z!=null){var e=z.getfilterat(0);var d=z.getfilterat(1);var I=z.getoperatorat(0);if(s.updatefilterconditions){var o=[];var r=s.updatefilterconditions(x,o);if(r!=undefined){for(var O=0;O<r.length;O++){r[O]=r[O].toUpperCase()}z.setoperatorsbyfiltertype(x,r);o=r}}var w="default";if(e!=null){var D=o.indexOf(e.comparisonoperator);var A=e.filtervalue;j.val(A);f.jqxDropDownList({selectedIndex:D,animationType:w})}if(d!=null){var C=o.indexOf(d.comparisonoperator);var y=d.filtervalue;h.val(y);P.jqxDropDownList({selectedIndex:C,animationType:w})}if(z.getoperatorat(0)==undefined){m.jqxDropDownList({selectedIndex:0,animationType:w})}else{if(z.getoperatorat(0)=="and"||z.getoperatorat(0)==0){m.jqxDropDownList({selectedIndex:0})}else{m.jqxDropDownList({selectedIndex:1})}}}if(s.updatefilterpanel){s.updatefilterpanel(f,P,m,j,h,l,N,z,x,o)}if(!this._hasdatefilter||(this._hasdatefilter&&E.filtertype!="date")){j.focus();setTimeout(function(){j.focus()},10)}}else{if(this.filtermode==="excel"||E.filtertype==="list"||E.filtertype==="checkedlist"){var v=s._getfilterdataadapter(E);var x=s._getfiltertype(Q);var L=this.filtermode==="excel"||E.filtertype==="checkedlist";f.jqxListBox("focus");this.removeHandler(f,"keyup");this.addHandler(f,"keyup",function(c){if(c.keyCode===13){l.trigger("click")}if(c.keyCode===27){s._closemenu()}});if(E.cellsformat){f.jqxListBox({checkboxes:L,displayMember:E.displayfield,valueMember:E.displayfield+"JQValue",source:v})}else{f.jqxListBox({checkboxes:L,displayMember:E.displayfield,valueMember:E.displayfield,source:v})}if(L){f.jqxListBox("insertAt",s.gridlocalization.filterselectallstring,0);var F=f.data().jqxListBox.instance;F.checkAll(false);var B=this;if(E.filter){F.uncheckAll(false);var t=E.filter.getfilters();for(var J=0;J<F.items.length;J++){var G=F.items[J].value;a.each(t,function(){if(this.condition=="NOT_EQUAL"){if(G!=this.value){F.uncheckIndex(J,false,false);return false}}else{if(this.condition=="EQUAL"){if(G==this.value){F.checkIndex(J,false,false);return false}}}})}F._updateCheckedItems();var q=F.getCheckedItems().length;if(F.items.length!=q&&q>0){F.host.jqxListBox("indeterminateIndex",0,true,false)}if(q===F.items.length-1){F.host.jqxListBox("checkIndex",0,true,false)}}}else{if(E.filter){var F=f.data().jqxListBox.instance;F.clearSelection();var t=E.filter.getfilters();for(var J=0;J<F.items.length;J++){var G=F.items[J].value;a.each(t,function(){if(this.condition=="NOT_EQUAL"){if(G!=this.value){F.unselectIndex(J,false,false);return false}}else{if(this.condition=="EQUAL"){if(G==this.value){F.selectIndex(J,true,false);return false}}}})}F._renderItems()}}}}},_initfilterpanel:function(z,b,c,p,w){if(z==null||z==undefined){z=this}b[0].innerHTML="";var t=a("<div class='filter' style='margin-left: 7px;'></div>");b.append(t);var n=a("<div class='filter' style='margin-top: 3px; margin-bottom: 3px;'></div>");n.text(z.gridlocalization.filtershowrowstring);this._showwhere=n;var o=w?"ex":"";var v=a("<div class='filter filter1' id='filter1"+z.element.id+o+"'></div>");var h=a("<div class='filter filter2' id='filter2"+z.element.id+o+"' style='margin-bottom: 3px;'></div>");var s=a("<div class='filter filter3' id='filter3"+z.element.id+o+"'></div>");var e=z._getcolumntypebydatafield(c);if(!v.jqxDropDownList){throw new Error("jqxGrid: jqxdropdownlist.js is not loaded.");return}var q=z._getfiltersbytype(e);this._hasdatefilter=false;this._filterpanelwidth=p;if(this.columns&&this.columns.records){for(var u=0;u<this.columns.records.length;u++){if(this.columns.records[u].filtertype=="date"){this._hasdatefilter=true;break}}}var k=a("<div class='filter'><input class='filtertext1"+z.element.id+"' style='height: 20px; margin-top: 3px; margin-bottom: 3px;' type='text'></input></div>");var m=k.find("input");m.addClass(this.toThemeProperty("jqx-input"));m.addClass(this.toThemeProperty("jqx-widget-content"));m.addClass(this.toThemeProperty("jqx-rc-all"));m.width(p-15);var l=a("<div class='filter'><input class='filtertext2"+z.element.id+"' style='height: 20px; margin-top: 3px;' type='text'></input></div>");var j=l.find("input");j.addClass(this.toThemeProperty("jqx-input"));j.addClass(this.toThemeProperty("jqx-widget-content"));j.addClass(this.toThemeProperty("jqx-rc-all"));j.width(p-15);if(z.rtl){m.css("direction","rtl");j.css("direction","rtl")}var g=a("<div class='filter' style='height: 25px; margin-left: 20px; margin-top: 7px;'></div>");var f=a('<span tabIndex=0 id="filterbutton'+z.element.id+'" class="filterbutton" style="padding: 4px 12px; margin-left: 2px;">'+z.gridlocalization.filterstring+"</span>");g.append(f);var x=a('<span tabIndex=0 id="filterclearbutton'+z.element.id+'" class="filterclearbutton" style="padding: 4px 12px; margin-left: 5px;">'+z.gridlocalization.filterclearstring+"</span>");g.append(x);f.jqxButton({height:20,theme:z.theme});x.jqxButton({height:20,theme:z.theme});var y=function(A){if(A){if(A.text().indexOf("case sensitive")!=-1){var i=A.text();i=i.replace("case sensitive","match case");A.text(i)}A.css("font-family",z.host.css("font-family"));A.css("font-size",z.host.css("font-size"));A.css("top","1px");A.css("position","relative");return A}return""};if(this.filtermode==="default"&&!w){t.append(n);t.append(v);v.jqxDropDownList({_checkForHiddenParent:false,rtl:z.rtl,enableBrowserBoundsDetection:false,selectedIndex:2,width:p-15,height:20,dropDownHeight:150,dropDownWidth:p-15,selectionRenderer:y,source:q,theme:z.theme});t.append(k);var r=new Array();r[0]=z.gridlocalization.filterandconditionstring;r[1]=z.gridlocalization.filterorconditionstring;h.jqxDropDownList({_checkForHiddenParent:false,rtl:z.rtl,enableBrowserBoundsDetection:false,autoDropDownHeight:true,selectedIndex:0,width:60,height:20,source:r,selectionRenderer:y,theme:z.theme});t.append(h);s.jqxDropDownList({_checkForHiddenParent:false,rtl:z.rtl,enableBrowserBoundsDetection:false,selectedIndex:2,width:p-15,height:20,dropDownHeight:150,dropDownWidth:p-15,selectionRenderer:y,source:q,theme:z.theme});t.append(s);t.append(l)}else{if(this.filtermode==="excel"||w){t.append(n);t.append(v);v.attr("tabindex",0);v.jqxListBox({rtl:z.rtl,_checkForHiddenParent:false,checkboxes:true,selectedIndex:2,width:p-15,height:120,theme:z.theme});var d=true;z.addHandler(v,"checkChange",function(B){if(!d){return}if(B.args.label!=z.gridlocalization.filterselectallstring){d=false;v.jqxListBox("checkIndex",0,true,false);var i=v.jqxListBox("getCheckedItems");var A=v.jqxListBox("getItems");if(i.length==1){v.jqxListBox("uncheckIndex",0,true,false)}else{if(A.length!=i.length){v.jqxListBox("indeterminateIndex",0,true,false)}}d=true}else{d=false;if(B.args.checked){v.jqxListBox("checkAll",false)}else{v.jqxListBox("uncheckAll",false)}d=true}})}}t.append(g);if(z.updatefilterpanel){z.updatefilterpanel(v,s,h,k,l,f,x,null,null,q)}}})})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxCheckBox","",{});a.extend(a.jqx._jqxCheckBox.prototype,{defineInstance:function(){var b={animationShowDelay:300,animationHideDelay:300,width:null,height:null,boxSize:"13px",checked:false,hasThreeStates:false,disabled:false,enableContainerClick:true,locked:false,groupName:"",keyboardCheck:true,enableHover:true,hasInput:true,rtl:false,updated:null,disabledContainer:false,_canFocus:true,aria:{"aria-checked":{name:"checked",type:"boolean"},"aria-disabled":{name:"disabled",type:"boolean"}},events:["checked","unchecked","indeterminate","change"]};a.extend(true,this,b);return b},createInstance:function(b){this.render()},_addInput:function(){if(this.hasInput){if(this.input){this.input.remove()}var b=this.host.attr("name");this.input=a("<input type='hidden'/>");this.host.append(this.input);if(b){this.input.attr("name",b)}this.input.val(this.checked);this.host.attr("role","checkbox");a.jqx.aria(this)}},render:function(){this.init=true;var d=this;this.setSize();this.propertyChangeMap.width=function(h,j,i,k){d.setSize()};this.propertyChangeMap.height=function(h,j,i,k){d.setSize()};this._removeHandlers();if(this.checkbox){this.checkbox.remove();this.checkbox=null}if(this.checkMark){this.checkMark.remove();this.checkMark=null}if(this.box){this.box.remove();this.box=null}if(this.clear){this.clear.remove();this.clear=null}if(this.boxSize==null){this.boxSize=13}var g=parseInt(this.boxSize)+"px";var f="13px";var e=Math.floor((parseInt(this.boxSize)-13)/2);var b=e;e+="px";b+="px";if(this.boxSize!="13px"){this.checkbox=a('<div><div style="width: '+g+"; height: "+g+';"><span style="position: relative; left: '+e+"; top: "+b+"; width: "+f+"; height: "+f+';"></span></div></div>')}else{this.checkbox=a('<div><div style="width: '+g+"; height: "+g+';"><span style="width: '+g+"; height: "+g+';"></span></div></div>')}this.host.prepend(this.checkbox);if(!this.disabledContainer){if(!this.host.attr("tabIndex")){this.host.attr("tabIndex",0)}this.clear=a('<div style="clear: both;"></div>');this.host.append(this.clear)}this.checkMark=a(this.checkbox[0].firstChild.firstChild);this.box=this.checkbox;this.box.addClass(this.toThemeProperty("jqx-checkbox-default")+" "+this.toThemeProperty("jqx-fill-state-normal")+" "+this.toThemeProperty("jqx-rc-all"));if(this.disabled){this.disable()}if(!this.disabledContainer){this.host.addClass(this.toThemeProperty("jqx-widget"));this.host.addClass(this.toThemeProperty("jqx-checkbox"))}if(this.locked&&!this.disabledContainer){this.host.css("cursor","auto")}var c=this.element.getAttribute("checked");if(c=="checked"||c=="true"||c==true){this.checked=true}this._addInput();this._render();this._addHandlers();this.init=false},refresh:function(b){if(!b){this.setSize();this._render()}},resize:function(c,b){this.width=c;this.height=b;this.refresh()},setSize:function(){if(this.width!=null&&this.width.toString().indexOf("px")!=-1){this.host.width(this.width)}else{if(this.width!=undefined&&!isNaN(this.width)){this.host.width(this.width)}}if(this.height!=null&&this.height.toString().indexOf("px")!=-1){this.host.height(this.height)}else{if(this.height!=undefined&&!isNaN(this.height)){this.host.height(this.height)}}},_addHandlers:function(){var d=this;var c=a.jqx.mobile.isTouchDevice();var b="mousedown";if(c){b=a.jqx.mobile.getTouchEventName("touchend")}this.addHandler(this.box,b,function(e){if(!d.disabled&&!d.enableContainerClick&&!d.locked){d.toggle();if(d.updated){e.owner=d;d.updated(e,d.checked,d.oldChecked)}if(e.preventDefault){e.preventDefault()}return false}});if(!this.disabledContainer){this.addHandler(this.host,"keydown",function(e){if(!d.disabled&&!d.locked&&d.keyboardCheck){if(e.keyCode==32){if(!d._canFocus){return true}d.toggle();if(d.updated){e.owner=d;d.updated(e,d.checked,d.oldChecked)}if(e.preventDefault){e.preventDefault()}return false}}});this.addHandler(this.host,b,function(e){if(!d.disabled&&d.enableContainerClick&&!d.locked){d.toggle();if(e.preventDefault){e.preventDefault()}if(d._canFocus){d.focus()}return false}});this.addHandler(this.host,"selectstart",function(e){if(!d.disabled&&d.enableContainerClick){if(e.preventDefault){e.preventDefault()}return false}});this.addHandler(this.host,"mouseup",function(e){if(!d.disabled&&d.enableContainerClick){if(e.preventDefault){e.preventDefault()}}});this.addHandler(this.host,"focus",function(e){if(!d.disabled&&!d.locked){if(!d._canFocus){return true}if(d.enableHover){d.box.addClass(d.toThemeProperty("jqx-checkbox-hover"))}d.box.addClass(d.toThemeProperty("jqx-fill-state-focus"));if(e.preventDefault){e.preventDefault()}d.hovered=true;return false}});this.addHandler(this.host,"blur",function(e){if(!d.disabled&&!d.locked){if(!d._canFocus){return true}if(d.enableHover){d.box.removeClass(d.toThemeProperty("jqx-checkbox-hover"))}d.box.removeClass(d.toThemeProperty("jqx-fill-state-focus"));if(e.preventDefault){e.preventDefault()}d.hovered=false;return false}});this.addHandler(this.host,"mouseenter",function(e){if(d.locked){d.host.css("cursor","arrow")}if(d.enableHover){if(!d.disabled&&d.enableContainerClick&&!d.locked){d.box.addClass(d.toThemeProperty("jqx-checkbox-hover"));d.box.addClass(d.toThemeProperty("jqx-fill-state-hover"));if(e.preventDefault){e.preventDefault()}d.hovered=true;return false}}});this.addHandler(this.host,"mouseleave",function(e){if(d.enableHover){if(!d.disabled&&d.enableContainerClick&&!d.locked){d.box.removeClass(d.toThemeProperty("jqx-checkbox-hover"));d.box.removeClass(d.toThemeProperty("jqx-fill-state-hover"));if(e.preventDefault){e.preventDefault()}d.hovered=false;return false}}});this.addHandler(this.box,"mouseenter",function(){if(d.locked){return}if(!d.disabled&&!d.enableContainerClick){d.box.addClass(d.toThemeProperty("jqx-checkbox-hover"));d.box.addClass(d.toThemeProperty("jqx-fill-state-hover"))}});this.addHandler(this.box,"mouseleave",function(){if(!d.disabled&&!d.enableContainerClick){d.box.removeClass(d.toThemeProperty("jqx-checkbox-hover"));d.box.removeClass(d.toThemeProperty("jqx-fill-state-hover"))}})}},focus:function(){try{this.host.focus()}catch(b){}},_removeHandlers:function(){var c=a.jqx.mobile.isTouchDevice();var b="mousedown";if(c){b="touchend"}if(this.box){this.removeHandler(this.box,b);this.removeHandler(this.box,"mouseenter");this.removeHandler(this.box,"mouseleave")}this.removeHandler(this.host,b);this.removeHandler(this.host,"mouseup");this.removeHandler(this.host,"selectstart");this.removeHandler(this.host,"mouseenter");this.removeHandler(this.host,"mouseleave");this.removeHandler(this.host,"keydown");this.removeHandler(this.host,"blur");this.removeHandler(this.host,"focus")},_render:function(){if(!this.disabled){if(this.enableContainerClick){this.host.css("cursor","pointer")}else{if(!this.init){this.host.css("cursor","auto")}}}else{this.disable()}if(this.rtl){this.box.addClass(this.toThemeProperty("jqx-checkbox-rtl"));this.host.addClass(this.toThemeProperty("jqx-rtl"))}this.updateStates()},_setState:function(c,b){if(this.checked!=c){this.checked=c;if(this.checked){this.checkMark[0].className=this.toThemeProperty("jqx-checkbox-check-checked")}else{if(this.checked==null){this.checkMark[0].className=this.toThemeProperty("jqx-checkbox-check-indeterminate")}else{this.checkMark[0].className=""}}}if(b===false||b===true){this.locked=b}},val:function(b){if(arguments.length==0||(b!=null&&typeof(b)=="object")){return this.checked}if(typeof b=="string"){if(b=="true"){this.check()}if(b=="false"){this.uncheck()}if(b==""){this.indeterminate()}}else{if(b==true){this.check()}if(b==false){this.uncheck()}if(b==null){this.indeterminate()}}return this.checked},check:function(){this.checked=true;var b=this;this.checkMark.removeClass();if(a.jqx.browser.msie||this.animationShowDelay==0){this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-checked"))}else{this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-checked"));this.checkMark.css("opacity",0);this.checkMark.stop().animate({opacity:1},this.animationShowDelay,function(){})}if(this.groupName!=null&&this.groupName.length>0){var c=a.find(this.toThemeProperty(".jqx-checkbox",true));a.each(c,function(){var d=a(this).jqxCheckBox("groupName");if(d==b.groupName&&this!=b.element){a(this).jqxCheckBox("uncheck")}})}this._raiseEvent("0",true);this._raiseEvent("3",{checked:true});if(this.input!=undefined){this.input.val(this.checked);a.jqx.aria(this,"aria-checked",this.checked)}},uncheck:function(){this.checked=false;var b=this;if(a.jqx.browser.msie||this.animationHideDelay==0){if(b.checkMark[0].className!=""){b.checkMark[0].className=""}}else{this.checkMark.css("opacity",1);this.checkMark.stop().animate({opacity:0},this.animationHideDelay,function(){if(b.checkMark[0].className!=""){b.checkMark[0].className=""}})}this._raiseEvent("1");this._raiseEvent("3",{checked:false});if(this.input!=undefined){this.input.val(this.checked);a.jqx.aria(this,"aria-checked",this.checked)}},indeterminate:function(){this.checked=null;this.checkMark.removeClass();if(a.jqx.browser.msie||this.animationShowDelay==0){this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-indeterminate"))}else{this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-indeterminate"));this.checkMark.css("opacity",0);this.checkMark.stop().animate({opacity:1},this.animationShowDelay,function(){})}this._raiseEvent("2");this._raiseEvent("3",{checked:null});if(this.input!=undefined){this.input.val(this.checked);a.jqx.aria(this,"aria-checked","undefined")}},toggle:function(){if(this.disabled){return}if(this.locked){return}if(this.groupName!=null&&this.groupName.length>0){if(this.checked!=true){this.checked=true;this.updateStates()}return}this.oldChecked=this.checked;if(this.checked==true){this.checked=this.hasThreeStates?null:false}else{this.checked=this.checked!=null}this.updateStates();if(this.input!=undefined){this.input.val(this.checked)}},updateStates:function(){if(this.checked){this.check()}else{if(this.checked==false){this.uncheck()}else{if(this.checked==null){this.indeterminate()}}}},disable:function(){this.disabled=true;if(this.checked==true){this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-disabled"))}else{if(this.checked==null){this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-indeterminate-disabled"))}}this.box.addClass(this.toThemeProperty("jqx-checkbox-disabled-box"));this.host.addClass(this.toThemeProperty("jqx-checkbox-disabled"));this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled"));this.box.addClass(this.toThemeProperty("jqx-checkbox-disabled"));a.jqx.aria(this,"aria-disabled",this.disabled)},enable:function(){if(this.checked==true){this.checkMark.removeClass(this.toThemeProperty("jqx-checkbox-check-disabled"))}else{if(this.checked==null){this.checkMark.removeClass(this.toThemeProperty("jqx-checkbox-check-indeterminate-disabled"))}}this.box.removeClass(this.toThemeProperty("jqx-checkbox-disabled-box"));this.host.removeClass(this.toThemeProperty("jqx-checkbox-disabled"));this.host.removeClass(this.toThemeProperty("jqx-fill-state-disabled"));this.box.removeClass(this.toThemeProperty("jqx-checkbox-disabled"));this.disabled=false;a.jqx.aria(this,"aria-disabled",this.disabled)},destroy:function(){this.host.remove()},_raiseEvent:function(g,e){if(this.init){return}var c=this.events[g];var f=new a.Event(c);f.owner=this;f.args=e;try{var b=this.host.trigger(f)}catch(d){}return b},propertyChangedHandler:function(b,c,e,d){if(this.isInitialized==undefined||this.isInitialized==false){return}if(c==b.enableContainerClick&&!b.disabled&&!b.locked){if(d){b.host.css("cursor","pointer")}else{b.host.css("cursor","auto")}}if(c=="rtl"){if(d){b.box.addClass(b.toThemeProperty("jqx-checkbox-rtl"));b.host.addClass(b.toThemeProperty("jqx-rtl"))}else{b.box.removeClass(b.toThemeProperty("jqx-checkbox-rtl"));b.host.removeClass(b.toThemeProperty("jqx-rtl"))}}if(c=="boxSize"){b.render()}if(c=="theme"){a.jqx.utilities.setTheme(e,d,b.host)}if(c=="checked"){if(d!=e){switch(d){case true:b.check();break;case false:b.uncheck();break;case null:b.indeterminate();break}}}if(c=="disabled"){if(d!=e){if(d){b.disable()}else{b.enable()}}}}})})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.extend(a.jqx._jqxGrid.prototype,{autoresizecolumns:function(z,g){if(z!="cells"&&z!="all"&&z!="column"){z="all"}var A=this.that;var n=this.getrows();if(this.pageable){n=this.dataview.rows;if(this.groupable){n=this.dataview.records}}if(g==undefined){g=0}else{g=parseInt(g)}var e=n.length;if(e==undefined&&n!=undefined){var t=new Array();a.each(n,function(i){t.push(this)});n=t;e=n.length}var w=a("<span></span>");w.addClass(this.toThemeProperty("jqx-widget"));w.addClass(this.toThemeProperty("jqx-grid-cell"));a(document.body).append(w);var c=[];var f=[];var b=[];var q=[];var o=A.host.width();if(A.vScrollBar[0].style.visibility!="hidden"){o-=this.scrollbarsize+5}if(o<0){o=0}for(var x=0;x<e;x++){var k=n[x];for(var v=0;v<this.columns.records.length;v++){var d=this.columns.records[v];if(d.hidden){continue}if(this.groups.length>0&&v<=this.groups.length-1){continue}if(f[d.displayfield]==undefined){f[d.displayfield]=0}if(b[d.displayfield]==undefined){b[d.displayfield]=""}var r=k[d.displayfield];if(d.cellsformat!=""){if(a.jqx.dataFormat){if(a.jqx.dataFormat.isDate(r)){r=a.jqx.dataFormat.formatdate(r,d.cellsformat,this.gridlocalization)}else{if(a.jqx.dataFormat.isNumber(r)){r=a.jqx.dataFormat.formatnumber(r,d.cellsformat,this.gridlocalization)}}}}else{if(d.cellsrenderer){var s=A._defaultcellsrenderer(r,d);var p=d.cellsrenderer(x,d.datafield,r,s,d.getcolumnproperties(),k);if(p!=undefined){r=a(p).text()}}}if(z==undefined||z=="cells"||z=="all"){if(r!=null){var c=r.toString().length;var u=r.toString();var B=u.replace(/[^A-Z]/g,"").length;if(c>f[d.displayfield]){f[d.displayfield]=c;b[d.displayfield]=r;q[d.displayfield]=B}if(c>0&&c>=B){var m=B*20+(c-B)*15;var l=q[d.displayfield]*20+(f[d.displayfield]-q[d.displayfield])*15;if(m>l&&m>0&&l>0){f[d.displayfield]=c;b[d.displayfield]=r;q[d.displayfield]=B}}}}if(z=="column"||z=="all"){if(d.text.toString().length>f[d.displayfield]){b[d.displayfield]=d.text;f[d.displayfield]=d.text.length;var u=d.text.toString();var B=u.replace(/[^A-Z]/g,"").length;q[d.displayfield]=B}var r=d.text;var c=r.toString().length;var u=r.toString();var B=u.replace(/[^A-Z]/g,"").length;if(c>0&&c>=B){var m=B*20+(c-B)*15;var l=q[d.displayfield]*20+(f[d.displayfield]-q[d.displayfield])*15;if(m>l&&m>0&&l>0){f[d.displayfield]=c;b[d.displayfield]=r;q[d.displayfield]=B}}}}}if(!this.columns.records){return}for(var v=0;v<this.columns.records.length;v++){var d=this.columns.records[v];if(!d.displayfield){continue}if(b[d.displayfield]==undefined){b[d.displayfield]=d.text}w[0].innerHTML=b[d.displayfield].toString();var y=w.outerWidth()+10;if(w.children().length>0){y=w.children().outerWidth()+10}if(a.jqx.browser.msie&&a.jqx.browser.version<8){y+=10}if(this.filterable&&this.showfilterrow){y+=5}y+=g;if(y>d.maxwidth){y=d.maxwidth}if(d._width!=undefined){d.__width=d._width}d._width=null;if(d.maxwidth=="auto"||y<=d.maxwidth){var h=d.width;if(y<d.minwidth){y=d.minwidth}d.width=y;if(d._percentagewidth!=undefined){d._percentagewidth=null}this._raiseEvent(14,{columntext:d.text,column:d.getcolumnproperties(),datafield:d.datafield,displayfield:d.displayfield,oldwidth:h,newwidth:y})}}w.remove();this._updatecolumnwidths();this._updatecellwidths();this._renderrows(this.virtualsizeinfo);for(var v=0;v<this.columns.records.length;v++){var d=this.columns.records[v];if(d.__width!=undefined){d._width=d.__width}}},autoresizecolumn:function(p,v,g){if(v!="cells"&&v!="all"&&v!="column"){v="all"}if(p==undefined){return false}var l=this.getrows();if(this.pageable){l=this.dataview.rows;if(this.groupable){l=this.dataview.records}}var d=this.getcolumn(p);if(d==undefined){return false}if(g==undefined){g=0}else{g=parseInt(g)}var e=l.length;var s=a("<span></span>");s.addClass(this.toThemeProperty("jqx-widget"));s.addClass(this.toThemeProperty("jqx-grid-cell"));a(document.body).append(s);var f=0;var b="";var o=0;var w=this.that;var m=w.host.width();if(w.vScrollBar[0].style.visibility!="hidden"){m-=this.scrollbarsize+5}if(m<0){m=0}if(v==undefined||v=="cells"||v=="all"){for(var t=0;t<e;t++){var q=l[t][d.displayfield];if(d.cellsformat!=""){if(a.jqx.dataFormat){if(a.jqx.dataFormat.isDate(q)){q=a.jqx.dataFormat.formatdate(q,d.cellsformat,this.gridlocalization)}else{if(a.jqx.dataFormat.isNumber(q)){q=a.jqx.dataFormat.formatnumber(q,d.cellsformat,this.gridlocalization)}}}}else{if(d.cellsrenderer){var n=d.cellsrenderer(t,d,q);if(n!=undefined){q=a(n).text()}}}if(q!=null){var c=q.toString().length;var r=q.toString();var x=r.replace(/[^A-Z]/g,"").length;if(c>f){f=c;b=q;o=x}if(c>0&&c>=x){var k=x*20+(c-x)*15;var j=o*20+(f-o)*15;if(k>j&&k>0&&j>0){f=c;b=q;o=x}}}}}if(v=="column"||v=="all"){if(d.text.toString().length>f){b=d.text}var q=d.text.toString();var c=q.toString().length;var r=q.toString();var x=r.replace(/[^A-Z]/g,"").length;if(c>0&&c>=x){var k=x*20+(c-x)*15;var j=o*20+(f-o)*15;if(k>j&&k>0&&j>0){f=c;b=q;o=x}}}if(b==undefined){b=d.text}s[0].innerHTML=b;var u=s.outerWidth()+10;if(a.jqx.browser.msie&&a.jqx.browser.version<8){u+=5}if(this.filterable&&this.showfilterrow){u+=5}u+=g;s.remove();if(u>d.maxwidth){u=d.maxwidth}if(d.maxwidth=="auto"||u<=d.maxwidth){var h=d.width;if(u<d.minwidth){u=d.minwidth}d.width=u;if(d._width!=undefined){d.__width=d._width}d._width=null;if(d._percentagewidth!=undefined){d._percentagewidth=null}this._updatecolumnwidths();this._updatecellwidths();this._raiseEvent(14,{columntext:d.text,column:d.getcolumnproperties(),datafield:p,displayfield:d.displayfield,oldwidth:h,newwidth:u});this._renderrows(this.virtualsizeinfo);if(d._width!=undefined){d._width=d.__width}}},_handlecolumnsresize:function(){var j=this.that;if(this.columnsresize){var i=false;if(j.isTouchDevice()&&j.touchmode!==true){i=true}var f="mousemove.resize"+this.element.id;var c="mousedown.resize"+this.element.id;var d="mouseup.resize"+this.element.id;if(i){var f=a.jqx.mobile.getTouchEventName("touchmove")+".resize"+this.element.id;var c=a.jqx.mobile.getTouchEventName("touchstart")+".resize"+this.element.id;var d=a.jqx.mobile.getTouchEventName("touchend")+".resize"+this.element.id}this.removeHandler(a(document),f);this.addHandler(a(document),f,function(m){var n=a.data(document.body,"contextmenu"+j.element.id);if(n!=null&&j.autoshowcolumnsmenubutton){return true}if(j.resizablecolumn!=null&&!j.disabled&&j.resizing){if(j.resizeline!=null){var s=j.resizablecolumn.columnelement;var p=j.host.coord();var v=parseInt(j.resizestartline.coord().left);var k=v-j._startcolumnwidth;var w=j.resizablecolumn.column.minwidth;if(w=="auto"){w=0}else{w=parseInt(w)}var l=j.resizablecolumn.column.maxwidth;if(l=="auto"){l=0}else{l=parseInt(l)}var q=m.pageX;if(i){var t=j.getTouches(m);var r=t[0];q=r.pageX}k+=w;var u=l>0?v+l:0;var o=l==0?true:j._startcolumnwidth+q-v<l?true:false;if(j.rtl){var o=true}if(o){if(!j.rtl){if(q>=p.left&&q>=k){if(u!=0&&m.pageX<u){j.resizeline.css("left",q)}else{if(u==0){j.resizeline.css("left",q)}}if(i){return false}}}else{if(q>=p.left&&q<=p.left+j.host.width()){j.resizeline.css("left",q);if(i){return false}}}}}}if(!i&&j.resizablecolumn!=null){return false}});this.removeHandler(a(document),c);this.addHandler(a(document),c,function(m){var l=a.data(document.body,"contextmenu"+j.element.id);if(l!=null&&j.autoshowcolumnsmenubutton){return true}if(j.resizablecolumn!=null&&!j.disabled){var k=j.resizablecolumn.columnelement;if(k.coord().top+k.height()+5<m.pageY){j.resizablecolumn=null;return}if(k.coord().top-5>m.pageY){j.resizablecolumn=null;return}j._startcolumnwidth=j.resizablecolumn.column.width;j.resizablecolumn.column._width=null;a(document.body).addClass("jqx-disableselect");a(document.body).addClass("jqx-position-reset");j.host.addClass("jqx-disableselect");j.content.addClass("jqx-disableselect");j._mouseDownResize=new Date();j.resizing=true;j._resizecolumn=j.resizablecolumn.column;j.resizeline=j.resizeline||a('<div style="position: absolute;"></div>');j.resizestartline=j.resizestartline||a('<div style="position: absolute;"></div>');j.resizebackground=j.resizebackground||a('<div style="position: absolute; left: 0; top: 0; background: #000;"></div>');j.resizebackground.css("opacity",0.01);j.resizebackground.css("cursor","col-resize");j.resizeline.css("cursor","col-resize");j.resizestartline.css("cursor","col-resize");j.resizeline.addClass(j.toThemeProperty("jqx-grid-column-resizeline"));j.resizestartline.addClass(j.toThemeProperty("jqx-grid-column-resizestartline"));a(document.body).append(j.resizeline);a(document.body).append(j.resizestartline);a(document.body).append(j.resizebackground);var n=j.resizablecolumn.columnelement.coord();j.resizebackground.css("left",j.host.coord().left);j.resizebackground.css("top",j.host.coord().top);j.resizebackground.width(j.host.width());j.resizebackground.height(j.host.height());j.resizebackground.css("z-index",9999);var o=function(q){if(!j.rtl){q.css("left",parseInt(n.left)+j._startcolumnwidth)}else{q.css("left",parseInt(n.left))}var t=j._groupsheader();var s=t?j.groupsheader.height():0;var v=j.showtoolbar?j.toolbarheight:0;s+=v;var p=j.showstatusbar?j.statusbarheight:0;s+=p;var r=0;if(j.pageable){r=j.pagerheight}var u=j.hScrollBar.css("visibility")=="visible"?17:0;q.css("top",parseInt(n.top));q.css("z-index",99999);if(j.columngroups){q.height(j.host.height()+j.resizablecolumn.columnelement.height()-r-s-u-j.columngroupslevel*j.columnsheight)}else{q.height(j.host.height()-r-s-u)}if(j.enableanimations){q.show("fast")}else{q.show()}};o(j.resizeline);o(j.resizestartline);j.dragmousedown=null}});var e=function(){a(document.body).removeClass("jqx-disableselect");a(document.body).removeClass("jqx-position-reset");if(j.showfilterrow||j.showstatusbar||j.showtoolbar||j.enablebrowserselection){j.host.removeClass("jqx-disableselect");j.content.removeClass("jqx-disableselect")}if(!j.resizing){return}j._mouseUpResize=new Date();var r=j._mouseUpResize-j._mouseDownResize;if(r<200){j.resizing=false;if(j._resizecolumn!=null&&j.resizeline!=null&&j.resizeline.css("display")=="block"){j._resizecolumn=null;j.resizeline.hide();j.resizestartline.hide();j.resizebackground.remove()}return}j.resizing=false;if(j.disabled){return}var p=j.host.width();if(j.vScrollBar[0].style.visibility!="hidden"){p-=20}if(p<0){p=0}if(j._resizecolumn!=null&&j.resizeline!=null&&j.resizeline.css("display")=="block"){var s=parseInt(j.resizeline.css("left"));var o=parseInt(j.resizestartline.css("left"));var l=j._startcolumnwidth+s-o;if(j.rtl){var l=j._startcolumnwidth-s+o}var q=j._resizecolumn.width;j._closemenu();if(l<j._resizecolumn.minwidth){l=j._resizecolumn.minwidth}j._resizecolumn.width=l;if(j._resizecolumn._percentagewidth!=undefined){j._resizecolumn._percentagewidth=(l/p)*100}for(var k=0;k<j._columns.length;k++){if(j._columns[k].datafield===j._resizecolumn.datafield){j._columns[k].width=j._resizecolumn.width;if(j._columns[k].width<j._resizecolumn.minwidth){j._columns[k].width=j._resizecolumn.minwidth}break}}var n=j.hScrollBar[0].style.visibility;j._updatecolumnwidths();j._updatecellwidths();j._raiseEvent(14,{columntext:j._resizecolumn.text,column:j._resizecolumn.getcolumnproperties(),datafield:j._resizecolumn.datafield,oldwidth:q,newwidth:l});j._renderrows(j.virtualsizeinfo);if(j.autosavestate){if(j.savestate){j.savestate()}}if(n!=j.hScrollBar[0].style.visibility){j.hScrollInstance.setPosition(0)}if(j.rtl){j._arrange()}j._resizecolumn=null;j.resizeline.hide();j.resizestartline.hide();j.resizebackground.remove();j.resizablecolumn=null}else{j.resizablecolumn=null}};try{if(document.referrer!=""||window.frameElement){var b=null;if(window.top!=null&&window.top!=window.self){if(window.parent&&document.referrer){b=document.referrer}}if(b&&b.indexOf(document.location.host)!=-1){var g=function(k){e()};if(window.top.document.addEventListener){window.top.document.addEventListener("mouseup",g,false)}else{if(window.top.document.attachEvent){window.top.document.attachEvent("onmouseup",g)}}}}}catch(h){}this.removeHandler(a(document),d);this.addHandler(a(document),d,function(l){var k=a.data(document.body,"contextmenu"+j.element.id);if(k!=null&&j.autoshowcolumnsmenubutton){return true}e()})}}})})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a) {
    a.extend(a.jqx._jqxGrid.prototype, {
        selectallrows: function() {
            this._trigger = false;
            var d = this.virtualmode ? this.dataview.totalrecords: this.dataview.loadedrecords.length;
            this.selectedrowindexes = new Array();
            var e = this.dataview.loadedrecords;
            for (var c = 0; c < d; c++) {
                var f = e[c];
                if (!f) {
                    this.selectedrowindexes[c] = c;
                    continue
                }
                var b = this.getboundindex(f);
                if (b != undefined) {
                    this.selectedrowindexes[c] = b
                }
            }
            if (this.selectionmode == "checkbox" && !this._checkboxcolumnupdating) {
                if (this._checkboxcolumn) {
                    this._checkboxcolumn.checkboxelement.jqxCheckBox({
                        checked: true
                    })
                }
            }
            this._renderrows(this.virtualsizeinfo);
            this._trigger = true;
            if (this.selectionmode == "checkbox") {
                this._raiseEvent(2, {
                    rowindex: this.selectedrowindexes
                })
            }
        },
        unselectallrows: function() {
            this._trigger = false;
            var c = this.virtualmode ? this.dataview.totalrecords: this.dataview.loadedrecords.length;
            this.selectedrowindexes = new Array();
            var d = this.dataview.loadedrecords;
            for (var b = 0; b < c; b++) {
                var e = d[b];
                if (!e) {
                    
                	//this.selectedrowindexes[b] = b;
                	this.selectedrowindexes[b] && delete this.selectedrowindexes[b];
                    continue
                }
                delete this.selectedrowindexes[b]
            }
            if (this.selectionmode == "checkbox" && !this._checkboxcolumnupdating) {
                if (this._checkboxcolumn) {
                    this._checkboxcolumn.checkboxelement.jqxCheckBox({
                        checked: false
                    })
                }
            }
            this._renderrows(this.virtualsizeinfo);
            this._trigger = true;
            if (this.selectionmode == "checkbox") {
                this._raiseEvent(2, {
                    rowindex: this.selectedrowindexes
                })
            }
        },
        selectrow: function(b, c) {
            this._applyrowselection(b, true, c);
            if (c !== false) {
                this._updatecheckboxselection()
            }
        },
        _updatecheckboxselection: function() {
            if (this.selectionmode == "checkbox") {
                var d = this.getrows();
                if (d && this._checkboxcolumn) {
                    if (d.length === 0) {
                        this._checkboxcolumn.checkboxelement.jqxCheckBox({
                            checked: false
                        });
                        return
                    }
                    var c = d.length;
                    if (this.groupable) {
                        c = this.dataview.loadedrecords.length
                    }
                    if (this.virtualmode) {
                        c = this.source._source.totalrecords
                    }
                    var b = this.selectedrowindexes.length;
                    if (b === c) {
                        this._checkboxcolumn.checkboxelement.jqxCheckBox({
                            checked: true
                        })
                    } else {
                        if (b === 0) {
                            this._checkboxcolumn.checkboxelement.jqxCheckBox({
                                checked: false
                            })
                        } else {
                            this._checkboxcolumn.checkboxelement.jqxCheckBox({
                                checked: null
                            })
                        }
                    }
                }
            }
        },
        unselectrow: function(b, c) {
            this._applyrowselection(b, false, c);
            if (c !== false) {
                this._updatecheckboxselection()
            }
        },
        selectcell: function(c, b) {
            this._applycellselection(c, b, true)
        },
        unselectcell: function(c, b) {
            this._applycellselection(c, b, false)
        },
        clearselection: function(c, d) {
            this._trigger = false;
            this.selectedrowindex = -1;
            this._oldselectedcell = null;
            if (d !== false) {
                for (var b = 0; b < this.selectedrowindexes.length; b++) {
                    this._raiseEvent(3, {
                        rowindex: this.selectedrowindexes[b]
                    })
                }
            }
            this.selectedrowindexes = new Array();
            this.selectedcells = new Array();
            this.selectedcell = null;
            if (this.selectionmode == "checkbox" && !this._checkboxcolumnupdating) {
                this._checkboxcolumn.checkboxelement.jqxCheckBox({
                    checked: false
                })
            }
            if (false === c) {
                this._trigger = true;
                return
            }
            this._renderrows(this.virtualsizeinfo);
            this._trigger = true;
            if (this.selectionmode == "checkbox") {
                this._raiseEvent(3, {
                    rowindex: this.selectedrowindexes
                })
            }
        },
        getselectedrowindex: function() {
            if (this.selectedrowindex == -1 || this.selectedrowindex == undefined) {
                for (var b = 0; b < this.selectedrowindexes.length; b++) {
                    return this.selectedrowindexes[b]
                }
            }
            return this.selectedrowindex
        },
        getselectedrowindexes: function() {
            return this.selectedrowindexes
        },
        getselectedcell: function() {
            if (!this.selectedcell) {
                return null
            }
            var b = this.selectedcell;
            b.row = this.selectedcell.rowindex;
            b.column = this.selectedcell.datafield;
            b.value = this.getcellvalue(b.row, b.column);
            return b
        },
        getselectedcells: function() {
            var b = new Array();
            for (obj in this.selectedcells) {
                b[b.length] = this.selectedcells[obj]
            }
            return b
        },
        _getcellsforcopypaste: function() {
            var e = new Array();
            if (this.selectionmode.indexOf("cell") == -1) {
                var h = this.selectedrowindexes;
                for (var d = 0; d < h.length; d++) {
                    var c = h[d];
                    for (var f = 0; f < this.columns.records.length; f++) {
                        var g = c + "_" + this.columns.records[f].datafield;
                        var b = {
                            rowindex: c,
                            datafield: this.columns.records[f].datafield
                        };
                        e.push(b)
                    }
                }
            }
            return e
        },
        deleteselection: function() {
            var d = this;
            var f = d.getselectedcells();
            if (this.selectionmode.indexOf("cell") == -1) {
                f = this._getcellsforcopypaste()
            }
            if (f != null && f.length > 0) {
                for (var e = 0; e < f.length; e++) {
                    var b = f[e];
                    var g = d.getcolumn(b.datafield);
                    var h = d.getcellvalue(b.rowindex, b.datafield);
                    if (!g) {
                        continue
                    }
                    if (h !== "") {
                        var c = null;
                        if (g.columntype == "checkbox") {
                            if (!g.threestatecheckbox) {
                                c = false
                            }
                        }
                        d._raiseEvent(17, {
                            rowindex: b.rowindex,
                            datafield: b.datafield,
                            value: h
                        });
                        if (e == f.length - 1) {
                            d.setcellvalue(b.rowindex, b.datafield, c, true);
                            if (g.displayfield != g.datafield) {
                                d.setcellvalue(b.rowindex, g.displayfield, c, true)
                            }
                        } else {
                            d.setcellvalue(b.rowindex, b.datafield, c, false);
                            if (g.displayfield != g.datafield) {
                                d.setcellvalue(b.rowindex, g.displayfield, c, true)
                            }
                        }
                        d._raiseEvent(18, {
                            rowindex: b.rowindex,
                            datafield: b.datafield,
                            oldvalue: h,
                            value: c
                        })
                    }
                }
                this.dataview.updateview();
                this._renderrows(this.virtualsizeinfo)
            }
        },
        copyselection: function() {
            var j = "";
            var p = this;
            this.clipboardselection = {};
            this.logicalclipboardselection = {};
            this._clipboardselection = [];
            var o = p.getselectedcells();
            if (this.selectionmode.indexOf("cell") == -1) {
                o = this._getcellsforcopypaste()
            }
            var b = 0;
            if (o != null && o.length > 0) {
                var q = 999999999999999;
                var n = -1;
                for (var g = 0; g < o.length; g++) {
                    var k = o[g];
                    var c = p.getcolumn(k.datafield);
                    if (c != null) {
                        var m = p.getcelltext(k.rowindex, c.displayfield);
                        var f = this.getrowdisplayindex(k.rowindex);
                        if (!this.clipboardselection[f]) {
                            this.clipboardselection[f] = {}
                        }
                        this.clipboardselection[f][c.displayfield] = m;
                        if (!this.logicalclipboardselection[f]) {
                            this.logicalclipboardselection[f] = {}
                        }
                        this.logicalclipboardselection[f][c.displayfield] = m;
                        if (c.displayfield != c.datafield) {
                            this.logicalclipboardselection[f][c.datafield] = p.getcellvalue(k.rowindex, c.datafield)
                        }
                        q = Math.min(q, f);
                        n = Math.max(n, f)
                    }
                }
                var e = new Array();
                for (var d = q; d <= n; d++) {
                    var l = a.extend({},
                    this.logicalclipboardselection[d]);
                    e.push(l)
                }
                this.logicalclipboardselection = e;
                for (var d = q; d <= n; d++) {
                    var h = 0;
                    this._clipboardselection[this._clipboardselection.length] = new Array();
                    if (this.clipboardselection[d] != undefined) {
                        a.each(this.clipboardselection[d],
                        function(i, r) {
                            if (h > 0) {
                                j += "\t"
                            }
                            var s = r;
                            if (r == null) {
                                s = ""
                            }
                            p._clipboardselection[p._clipboardselection.length - 1][h] = s;
                            h++;
                            j += s
                        })
                    }
                    if (d < n) {
                        j += "\r\n"
                    }
                }
            }
            this.clipboardselectedtext = j;
            return j
        },
        pasteselection: function() {
            var r = this.getselectedcells();
            if (this.selectionmode.indexOf("cell") == -1) {
                r = this._getcellsforcopypaste()
            }
            if (r != null && r.length > 0) {
                var q = r[0].rowindex;
                var i = this.getrowdisplayindex(q);
                var g = r[0].datafield;
                var n = this._getcolumnindex(g);
                var l = 0;
                this.selectedrowindexes = new Array();
                this.selectedcells = new Array();
                if (!this._clipboardselection) {
                    return
                }
                for (var s = 0; s < this._clipboardselection.length; s++) {
                    for (var k = 0; k < this._clipboardselection[s].length; k++) {
                        var h = this.getcolumnat(n + k);
                        if (!h) {
                            continue
                        }
                        var f = this.getrowboundindex(i + s);
                        var o = this.getcell(f, h.datafield);
                        var d = null;
                        d = this._clipboardselection[s][k];
                        if (d != null) {
                            if (h.cellsformat) {
                                if (h.cellsformat.indexOf("p") != -1 || h.cellsformat.indexOf("c") != -1 || h.cellsformat.indexOf("n") != -1 || h.cellsformat.indexOf("f") != -1) {
                                    if (d.indexOf(this.gridlocalization.currencysymbol) > -1) {
                                        d = d.replace(this.gridlocalization.currencysymbol, "")
                                    }
                                    var j = function(w, u, v) {
                                        var c = w;
                                        if (u == v) {
                                            return w
                                        }
                                        var t = c.indexOf(u);
                                        while (t != -1) {
                                            c = c.replace(u, v);
                                            t = c.indexOf(u)
                                        }
                                        return c
                                    };
                                    d = j(d, this.gridlocalization.thousandsseparator, "");
                                    d = d.replace(this.gridlocalization.decimalseparator, ".");
                                    if (d.indexOf(this.gridlocalization.percentsymbol) > -1) {
                                        d = d.replace(this.gridlocalization.percentsymbol, "")
                                    }
                                    var e = "";
                                    for (var p = 0; p < d.length; p++) {
                                        var b = d.substring(p, p + 1);
                                        if (b === "-") {
                                            e += "-"
                                        }
                                        if (b === ".") {
                                            e += "."
                                        }
                                        if (b.match(/^[0-9]+$/) != null) {
                                            e += b
                                        }
                                    }
                                    d = e;
                                    d = d.replace(/ /g, "");
                                    d = new Number(d);
                                    if (isNaN(d)) {
                                        d = ""
                                    }
                                }
                            }
                            this._raiseEvent(17, {
                                rowindex: f,
                                datafield: o.datafield,
                                value: d
                            });
                            this.setcellvalue(f, h.displayfield, d, false);
                            if (h.displayfield != h.datafield && this.logicalclipboardselection) {
                                var m = this.logicalclipboardselection[s][h.datafield];
                                if (m != undefined) {
                                    this.setcellvalue(f, h.datafield, m, false)
                                }
                            }
                            this._raiseEvent(18, {
                                rowindex: f,
                                datafield: o.datafield,
                                oldvalue: this.getcellvalue(o.rowindex, o.datafield),
                                value: d
                            });
                            this._applycellselection(f, o.datafield, true, false)
                        }
                    }
                }
                this.dataview.updateview();
                this._renderrows(this.virtualsizeinfo)
            }
        },
        _applyrowselection: function(e, i, f, h, b) {
            if (e == null) {
                return false
            }
            var j = this.selectedrowindex;
            if (this.selectionmode == "singlerow") {
                if (i) {
                    this._raiseEvent(2, {
                        rowindex: e,
                        row: this.getrowdata(e)
                    })
                } else {
                    this._raiseEvent(3, {
                        rowindex: e,
                        row: this.getrowdata(e)
                    })
                }
                this._raiseEvent(3, {
                    rowindex: j
                });
                this.selectedrowindexes = new Array();
                this.selectedcells = new Array()
            }
            if (h == true) {
                this.selectedrowindexes = new Array()
            }
            if (this.dataview.filters.length > 0) {
                var c = this.getrowdata(e);
                if (c && c.dataindex !== undefined) {
                    e = c.dataindex
                } else {
                    if (c && c.dataindex === undefined) {
                        if (c.uid != undefined) {
                            e = this.getrowboundindexbyid(c.uid)
                        }
                    }
                }
            }
            var d = this.selectedrowindexes.indexOf(e);
            if (i) {
                this.selectedrowindex = e;
                if (d == -1) {
                    this.selectedrowindexes.push(e);
                    if (this.selectionmode != "singlerow") {
                        this._raiseEvent(2, {
                            rowindex: e,
                            row: this.getrowdata(e)
                        })
                    }
                } else {
                    if (this.selectionmode == "multiplerows") {
                        this.selectedrowindexes.splice(d, 1);
                        this._raiseEvent(3, {
                            rowindex: this.selectedrowindex,
                            row: this.getrowdata(e)
                        });
                        this.selectedrowindex = this.selectedrowindexes.length > 0 ? this.selectedrowindexes[this.selectedrowindexes.length - 1] : -1
                    }
                }
            } else {
                if (d >= 0 || this.selectionmode == "singlerow" || this.selectionmode == "multiplerowsextended" || this.selectionmode == "multiplerowsadvanced") {
                    var g = this.selectedrowindexes[d];
                    this.selectedrowindexes.splice(d, 1);
                    this._raiseEvent(3, {
                        rowindex: g,
                        row: this.getrowdata(e)
                    });
                    this.selectedrowindex = -1
                }
            }
            if (f == undefined || f) {
                this._rendervisualrows()
            }
            return true
        },
        _applycellselection: function(e, b, h, f) {
            if (e == null) {
                return false
            }
            if (b == null) {
                return false
            }
            var j = this.selectedrowindex;
            if (this.selectionmode == "singlecell") {
                var d = this.selectedcell;
                if (d != null) {
                    this._raiseEvent(16, {
                        rowindex: d.rowindex,
                        datafield: d.datafield
                    })
                }
                this.selectedcells = new Array()
            }
            if (this.selectionmode == "multiplecellsextended" || this.selectionmode == "multiplecellsadvanced") {
                var d = this.selectedcell;
                if (d != null) {
                    this._raiseEvent(16, {
                        rowindex: d.rowindex,
                        datafield: d.datafield
                    })
                }
            }
            var g = e + "_" + b;
            if (this.dataview.filters.length > 0) {
                var c = this.getrowdata(e);
                if (c && c.dataindex !== undefined) {
                    e = c.dataindex;
                    var g = e + "_" + b
                } else {
                    if (c && c.dataindex === undefined) {
                        if (c.uid) {
                            e = this.getrowboundindexbyid(c.uid);
                            var g = e + "_" + b
                        }
                    }
                }
            }
            var i = {
                rowindex: e,
                datafield: b
            };
            if (h) {
                this.selectedcell = i;
                if (!this.selectedcells[g]) {
                    this.selectedcells[g] = i;
                    this.selectedcells.length++;
                    this._raiseEvent(15, i)
                } else {
                    if (this.selectionmode == "multiplecells" || this.selectionmode == "multiplecellsextended" || this.selectionmode == "multiplecellsadvanced") {
                        delete this.selectedcells[g];
                        if (this.selectedcells.length > 0) {
                            this.selectedcells.length--
                        }
                        this._raiseEvent(16, i)
                    }
                }
            } else {
                delete this.selectedcells[g];
                if (this.selectedcells.length > 0) {
                    this.selectedcells.length--
                }
                this._raiseEvent(16, i)
            }
            if (f == undefined || f) {
                this._rendervisualrows()
            }
            return true
        },
        _getcellindex: function(b) {
            var c = -1;
            a.each(this.selectedcells,
            function() {
                c++;
                if (this[b]) {
                    return false
                }
            });
            return c
        },
        _clearhoverstyle: function() {
            if (undefined == this.hoveredrow || this.hoveredrow == -1) {
                return
            }
            if (this.vScrollInstance.isScrolling()) {
                return
            }
            if (this.hScrollInstance.isScrolling()) {
                return
            }
            var b = this.table.find(".jqx-grid-cell-hover");
            if (b.length > 0) {
                b.removeClass(this.toTP("jqx-grid-cell-hover"));
                b.removeClass(this.toTP("jqx-fill-state-hover"))
            }
            this.hoveredrow = -1
        },
        _clearselectstyle: function() {
            var k = this.table[0].rows.length;
            var p = this.table[0].rows;
            var l = this.toTP("jqx-grid-cell-selected");
            var c = this.toTP("jqx-fill-state-pressed");
            var m = this.toTP("jqx-grid-cell-hover");
            var h = this.toTP("jqx-fill-state-hover");
            for (var g = 0; g < k; g++) {
                var b = p[g];
                var f = b.cells.length;
                var o = b.cells;
                for (var e = 0; e < f; e++) {
                    var d = o[e];
                    var n = a(d);
                    if (d.className.indexOf("jqx-grid-cell-selected") != -1) {
                        n.removeClass(l);
                        n.removeClass(c)
                    }
                    if (d.className.indexOf("jqx-grid-cell-hover") != -1) {
                        n.removeClass(m);
                        n.removeClass(h)
                    }
                }
            }
        },
        _selectpath: function(n, e) {
            var l = this;
            var i = this._lastClickedCell ? Math.min(this._lastClickedCell.row, n) : 0;
            var k = this._lastClickedCell ? Math.max(this._lastClickedCell.row, n) : 0;
            if (i <= k) {
                var h = this._getcolumnindex(this._lastClickedCell.column);
                var g = this._getcolumnindex(e);
                var f = Math.min(h, g);
                var d = Math.max(h, g);
                this.selectedcells = new Array();
                var m = this.dataview.loadedrecords;
                for (var b = i; b <= k; b++) {
                    for (var j = f; j <= d; j++) {
                        var n = m[b];
                        this._applycellselection(l.getboundindex(n), l._getcolumnat(j).datafield, true, false)
                    }
                }
                this._rendervisualrows()
            }
        },
        _selectrowpath: function(g) {
            if (this.selectionmode == "multiplerowsextended") {
                var c = this;
                var b = this._lastClickedCell ? Math.min(this._lastClickedCell.row, g) : 0;
                var h = this._lastClickedCell ? Math.max(this._lastClickedCell.row, g) : 0;
                var f = this.dataview.loadedrecords;
                if (b <= h) {
                    this.selectedrowindexes = new Array();
                    for (var e = b; e <= h; e++) {
                        var g = f[e];
                        var d = this.getrowboundindex(e);
                        this._applyrowselection(d, true, false)
                    }
                    this._rendervisualrows()
                }
            }
        },
        _selectrowwithmouse: function(p, b, c, f, d, s) {
            var j = b.row;
            if (j == undefined) {
                return
            }
            var k = b.index;
            if (this.hittestinfo[k] == undefined) {
                return
            }
            var t = this.hittestinfo[k].visualrow;
            if (this.hittestinfo[k].details) {
                return
            }
            var m = t.cells[0].className;
            if (j.group) {
                return
            }
            if (this.selectionmode == "multiplerows" || this.selectionmode == "multiplecells" || this.selectionmode == "checkbox" || (this.selectionmode.indexOf("multiple") != -1 && (s == true || d == true))) {
                var l = this.getboundindex(j);
                if (this.dataview.filters.length > 0) {
                    var v = this.getrowdata(l);
                    if (v) {
                        l = v.dataindex;
                        if (l == undefined) {
                            var l = this.getboundindex(j)
                        }
                    }
                }
                var q = c.indexOf(l) != -1;
                var w = this.getboundindex(j) + "_" + f;
                if (this.selectionmode.indexOf("cell") != -1) {
                    var h = this.selectedcells[w] != undefined;
                    if (this.selectedcells[w] != undefined && h) {
                        this._selectcellwithstyle(p, false, k, f, t)
                    } else {
                        this._selectcellwithstyle(p, true, k, f, t)
                    }
                    if (s && this._lastClickedCell == undefined) {
                        var g = this.getselectedcells();
                        if (g && g.length > 0) {
                            this._lastClickedCell = {
                                row: g[0].rowindex,
                                column: g[0].datafield
                            }
                        }
                    }
                    if (s && this._lastClickedCell) {
                        this._selectpath(j.visibleindex, f);
                        this.mousecaptured = false;
                        if (this.selectionarea.css("visibility") == "visible") {
                            this.selectionarea.css("visibility", "hidden")
                        }
                    }
                } else {
                    if (q) {
                        if (d) {
                            this._applyrowselection(this.getboundindex(j), false)
                        } else {
                            this._selectrowwithstyle(p, t, false, f)
                        }
                    } else {
                        this._selectrowwithstyle(p, t, true, f)
                    }
                    if (s && this._lastClickedCell == undefined) {
                        var i = this.getselectedrowindexes();
                        if (i && i.length > 0) {
                            this._lastClickedCell = {
                                row: i[0],
                                column: f
                            }
                        }
                    }
                    if (s && this._lastClickedCell) {
                        this.selectedrowindexes = new Array();
                        var e = this._lastClickedCell ? Math.min(this._lastClickedCell.row, j.visibleindex) : 0;
                        var u = this._lastClickedCell ? Math.max(this._lastClickedCell.row, j.visibleindex) : 0;
                        var n = this.dataview.loadedrecords;
                        for (var o = e; o <= u; o++) {
                            var j = n[o];
                            if (j) {
                                this._applyrowselection(this.getboundindex(j), true, false, false)
                            }
                        }
                        this._rendervisualrows()
                    }
                }
            } else {
                this._clearselectstyle();
                this._selectrowwithstyle(p, t, true, f);
                if (this.selectionmode.indexOf("cell") != -1) {
                    this._selectcellwithstyle(p, true, k, f, t)
                }
            }
            if (!s) {
                this._lastClickedCell = {
                    row: j.visibleindex,
                    column: f
                }
            }
        },
        _selectcellwithstyle: function(d, c, g, f, e) {
            var b = a(e.cells[d._getcolumnindex(f)]);
            b.removeClass(this.toTP("jqx-grid-cell-hover"));
            b.removeClass(this.toTP("jqx-fill-state-hover"));
            if (c) {
                b.addClass(this.toTP("jqx-grid-cell-selected"));
                b.addClass(this.toTP("jqx-fill-state-pressed"))
            } else {
                b.removeClass(this.toTP("jqx-grid-cell-selected"));
                b.removeClass(this.toTP("jqx-fill-state-pressed"))
            }
        },
        _selectrowwithstyle: function(e, h, b, j) {
            var c = h.cells.length;
            var f = 0;
            if (e.rowdetails && e.showrowdetailscolumn) {
                if (!this.rtl) {
                    f = 1 + this.groups.length
                } else {
                    c -= 1;
                    c -= this.groups.length
                }
            } else {
                if (this.groupable) {
                    if (!this.rtl) {
                        f = this.groups.length
                    } else {
                        c -= this.groups.length
                    }
                }
            }
            for (var g = f; g < c; g++) {
                var d = h.cells[g];
                if (b) {
                    a(d).removeClass(this.toTP("jqx-grid-cell-hover"));
                    a(d).removeClass(this.toTP("jqx-fill-state-hover"));
                    if (e.selectionmode.indexOf("cell") == -1) {
                        a(d).addClass(this.toTP("jqx-grid-cell-selected"));
                        a(d).addClass(this.toTP("jqx-fill-state-pressed"))
                    }
                } else {
                    a(d).removeClass(this.toTP("jqx-grid-cell-hover"));
                    a(d).removeClass(this.toTP("jqx-grid-cell-selected"));
                    a(d).removeClass(this.toTP("jqx-fill-state-hover"));
                    a(d).removeClass(this.toTP("jqx-fill-state-pressed"))
                }
            }
        },
        _handlemousemoveselection: function(ab, o) {
            if (o.hScrollInstance.isScrolling() || o.vScrollInstance.isScrolling()) {
                return false
            }
            if ((o.selectionmode == "multiplerowsextended" || o.selectionmode == "multiplecellsextended" || o.selectionmode == "multiplecellsadvanced") && o.mousecaptured) {
                if (o.multipleselectionbegins) {
                    var b = o.multipleselectionbegins(ab);
                    if (b === false) {
                        return true
                    }
                }
                var aa = this.showheader ? this.columnsheader.height() + 2 : 0;
                var I = this._groupsheader() ? this.groupsheader.height() : 0;
                var K = this.showtoolbar ? this.toolbar.height() : 0;
                I += K;
                var Z = this.host.coord();
                if (this.hasTransform) {
                    Z = a.jqx.utilities.getOffset(this.host);
                    var ad = this._getBodyOffset();
                    Z.left -= ad.left;
                    Z.top -= ad.top
                }
                if (this.host.css("border-top-width") === "0px") {
                    I -= 2
                }
                var M = ab.pageX;
                var L = ab.pageY - I;
                if (Math.abs(this.mousecaptureposition.left - M) > 3 || Math.abs(this.mousecaptureposition.top - L) > 3) {
                    var f = parseInt(this.columnsheader.coord().top);
                    if (this.hasTransform) {
                        f = a.jqx.utilities.getOffset(this.columnsheader).top
                    }
                    if (M < Z.left) {
                        M = Z.left
                    }
                    if (M > Z.left + this.host.width()) {
                        M = Z.left + this.host.width()
                    }
                    var X = Z.top + aa;
                    if (L < X) {
                        L = X + 5
                    }
                    var J = parseInt(Math.min(o.mousecaptureposition.left, M));
                    var g = -5 + parseInt(Math.min(o.mousecaptureposition.top, L));
                    var H = parseInt(Math.abs(o.mousecaptureposition.left - M));
                    var P = parseInt(Math.abs(o.mousecaptureposition.top - L));
                    J -= Z.left;
                    g -= Z.top;
                    this.selectionarea.css("visibility", "visible");
                    if (o.selectionmode == "multiplecellsadvanced") {
                        var M = J;
                        var t = M + H;
                        var G = M;
                        var n = o.hScrollInstance;
                        var v = n.value;
                        if (this.rtl) {
                            if (this.hScrollBar.css("visibility") != "hidden") {
                                v = n.max - n.value
                            }
                            if (this.vScrollBar[0].style.visibility != "hidden") {}
                        }
                        var h = o.table[0].rows[0];
                        var T = 0;
                        var B = o.mousecaptureposition.clickedcell;
                        var A = B;
                        var m = false;
                        var r = 0;
                        var ac = h.cells.length;
                        if (o.mousecaptureposition.left <= ab.pageX) {
                            r = B
                        }
                        for (var W = r; W < ac; W++) {
                            var Y = parseInt(a(this.columnsrow[0].cells[W]).css("left"));
                            var j = Y - v;
                            if (o.columns.records[W].pinned) {
                                j = Y;
                                continue
                            }
                            var O = this._getcolumnat(W);
                            if (O != null && O.hidden) {
                                continue
                            }
                            if (o.groupable && o.groups.length > 0) {
                                if (W < o.groups.length) {
                                    continue
                                }
                            }
                            var S = j + a(this.columnsrow[0].cells[W]).width();
                            if (o.mousecaptureposition.left > ab.pageX) {
                                if (S >= M && M >= j) {
                                    A = W;
                                    m = true;
                                    break
                                }
                            } else {
                                if (S >= t && t >= j) {
                                    A = W;
                                    m = true;
                                    break
                                }
                            }
                        }
                        if (!m) {
                            if (o.mousecaptureposition.left > ab.pageX) {
                                a.each(this.columns.records,
                                function(i, k) {
                                    if (o.groupable && o.groups.length > 0) {
                                        if (i < o.groups.length) {
                                            return true
                                        }
                                    }
                                    if (!this.pinned && !this.hidden) {
                                        A = i;
                                        return false
                                    }
                                })
                            } else {
                                if (!o.groupable || (o.groupable && !o.groups.length > 0)) {
                                    A = h.cells.length - 1
                                }
                            }
                        }
                        var N = B;
                        B = Math.min(B, A);
                        A = Math.max(N, A);
                        g += 5;
                        g += I;
                        var R = o.table[0].rows.indexOf(o.mousecaptureposition.clickedrow);
                        var w = 0;
                        var e = -1;
                        var u = -1;
                        var d = 0;
                        for (var W = 0; W < o.table[0].rows.length; W++) {
                            var s = a(o.table[0].rows[W]);
                            if (W == 0) {
                                d = s.coord().top
                            }
                            var F = s.height();
                            var z = d - Z.top;
                            if (e == -1 && z + F >= g) {
                                var c = false;
                                for (var Q = 0; Q < o.groups.length; Q++) {
                                    var V = s[0].cells[Q].className;
                                    if (V.indexOf("jqx-grid-group-collapse") != -1 || V.indexOf("jqx-grid-group-expand") != -1) {
                                        c = true;
                                        break
                                    }
                                }
                                if (c) {
                                    continue
                                }
                                e = W
                            }
                            d += F;
                            if (o.groupable && o.groups.length > 0) {
                                var c = false;
                                for (var Q = 0; Q < o.groups.length; Q++) {
                                    var V = s[0].cells[Q].className;
                                    if (V.indexOf("jqx-grid-group-collapse") != -1 || V.indexOf("jqx-grid-group-expand") != -1) {
                                        c = true;
                                        break
                                    }
                                }
                                if (c) {
                                    continue
                                }
                                var T = 0;
                                for (var U = o.groups.length; U < s[0].cells.length; U++) {
                                    var E = s[0].cells[U];
                                    if (a(E).html() == "") {
                                        T++
                                    }
                                }
                                if (T == s[0].cells.length - o.groups.length) {
                                    continue
                                }
                            }
                            if (e != -1) {
                                w += F
                            }
                            if (z + F > g + P) {
                                u = W;
                                break
                            }
                        }
                        if (e != -1) {
                            g = a(o.table[0].rows[e]).coord().top - Z.top - I - 2;
                            var D = 0;
                            if (this.filterable && this.showfilterrow) {
                                D = this.filterrowheight
                            }
                            if (parseInt(o.table[0].style.top) < 0 && g < this.rowsheight + D) {
                                g -= parseInt(o.table[0].style.top);
                                w += parseInt(o.table[0].style.top)
                            }
                            P = w;
                            var l = a(this.columnsrow[0].cells[B]);
                            var C = a(this.columnsrow[0].cells[A]);
                            J = parseInt(l.css("left"));
                            H = parseInt(C.css("left")) - parseInt(J) + C.width() - 2;
                            J -= v;
                            if (o.editcell && o.editable && o.endcelledit && (B != A || e != u)) {
                                if (o.editcell.validated == false) {
                                    return
                                }
                                o.endcelledit(o.editcell.row, o.editcell.column, true, true)
                            }
                        }
                    }
                    this.selectionarea.width(H);
                    this.selectionarea.height(P);
                    this.selectionarea.css("left", J);
                    this.selectionarea.css("top", g)
                }
            }
        },
        _handlemouseupselection: function(u, o) {
            if (!this.selectionarea) {
                return
            }
            if (this.selectionarea[0].style.visibility != "visible") {
                o.mousecaptured = false;
                return true
            }
            if (o.mousecaptured && (o.selectionmode == "multiplerowsextended" || o.selectionmode == "multiplerowsadvanced" || o.selectionmode == "multiplecellsextended" || o.selectionmode == "multiplecellsadvanced")) {
                o.mousecaptured = false;
                if (this.selectionarea.css("visibility") == "visible") {
                    this.selectionarea.css("visibility", "hidden");
                    var w = this.showheader ? this.columnsheader.height() + 2 : 0;
                    var p = this._groupsheader() ? this.groupsheader.height() : 0;
                    if (this.host.css("border-top-width") === "0px") {
                        p -= 2
                    }
                    var B = this.showtoolbar ? this.toolbar.height() : 0;
                    p += B;
                    var C = this.selectionarea.coord();
                    var c = this.host.coord();
                    if (this.hasTransform) {
                        c = a.jqx.utilities.getOffset(this.host);
                        C = a.jqx.utilities.getOffset(this.selectionarea)
                    }
                    if (this.host.css("border-top-width") === "0px") {
                        p -= 2
                    }
                    var n = C.left - c.left;
                    var k = C.top - w - c.top - p;
                    var s = k;
                    var g = n + this.selectionarea.width();
                    var D = n;
                    var l = new Array();
                    var e = new Array();
                    if (o.selectionmode == "multiplerowsextended") {
                        while (k < s + this.selectionarea.height()) {
                            var b = this._hittestrow(n, k);
                            var f = b.row;
                            var h = b.index;
                            if (h != -1) {
                                if (!e[h]) {
                                    e[h] = true;
                                    l[l.length] = b
                                }
                            }
                            k += 20
                        }
                        var s = 0;
                        a.each(l,
                        function() {
                            var i = this;
                            var m = this.row;
                            if (o.selectionmode != "none" && o._selectrowwithmouse) {
                                if (u.ctrlKey || u.metaKey) {
                                    o._applyrowselection(o.getboundindex(m), true, false, false)
                                } else {
                                    if (s == 0) {
                                        o._applyrowselection(o.getboundindex(m), true, false, true)
                                    } else {
                                        o._applyrowselection(o.getboundindex(m), true, false, false)
                                    }
                                }
                                s++
                            }
                        })
                    } else {
                        if (o.selectionmode == "multiplecellsadvanced") {
                            k += 2
                        }
                        var r = o.hScrollInstance;
                        var t = r.value;
                        if (this.rtl) {
                            if (this.hScrollBar.css("visibility") != "hidden") {
                                t = r.max - r.value
                            }
                            if (this.vScrollBar[0].style.visibility != "hidden") {
                                t -= this.scrollbarsize + 4
                            }
                        }
                        var q = o.table[0].rows[0];
                        var j = o.selectionarea.height();
                        if (!u.ctrlKey && !u.metaKey && j > 0) {
                            o.selectedcells = new Array()
                        }
                        var A = j;
                        while (k < s + A) {
                            var b = o._hittestrow(n, k);
                            if (!b) {
                                k += 5;
                                continue
                            }
                            var f = b.row;
                            var h = b.index;
                            if (h != -1) {
                                if (!e[h]) {
                                    e[h] = true;
                                    for (var v = 0; v < q.cells.length; v++) {
                                        var d = parseInt(a(o.columnsrow[0].cells[v]).css("left")) - t;
                                        var z = d + a(o.columnsrow[0].cells[v]).width();
                                        if ((D >= d && D <= z) || (g >= d && g <= z) || (d >= D && d <= g)) {
                                            o._applycellselection(o.getboundindex(f), o._getcolumnat(v).datafield, true, false)
                                        }
                                    }
                                }
                            }
                            k += 5
                        }
                    }
                    if (o.autosavestate) {
                        if (o.savestate) {
                            o.savestate()
                        }
                    }
                    o._renderrows(o.virtualsizeinfo)
                }
            }
        },
        selectprevcell: function(e, c) {
            var f = this._getcolumnindex(c);
            var b = this.columns.records.length;
            var d = this._getprevvisiblecolumn(f);
            if (d != null) {
                this.clearselection();
                this.selectcell(e, d.datafield)
            }
        },
        selectnextcell: function(e, d) {
            var f = this._getcolumnindex(d);
            var c = this.columns.records.length;
            var b = this._getnextvisiblecolumn(f);
            if (b != null) {
                this.clearselection();
                this.selectcell(e, b.datafield)
            }
        },
        _getfirstvisiblecolumn: function() {
            var b = this;
            var e = this.columns.records.length;
            for (var c = 0; c < e; c++) {
                var d = this.columns.records[c];
                if (!d.hidden && d.datafield != null) {
                    return d
                }
            }
            return null
        },
        _getlastvisiblecolumn: function() {
            var b = this;
            var e = this.columns.records.length;
            for (var c = e - 1; c >= 0; c--) {
                var d = this.columns.records[c];
                if (!d.hidden && d.datafield != null) {
                    return d
                }
            }
            return null
        },
        _handlekeydown: function(y, r) {
            if (r.groupable && r.groups.length > 0) {}
            if (r.disabled) {
                return false
            }
            var E = y.charCode ? y.charCode: y.keyCode ? y.keyCode: 0;
            if (r.editcell && r.selectionmode != "multiplecellsadvanced") {
                return true
            } else {
                if (r.editcell && r.selectionmode == "multiplecellsadvanced") {
                    if (E >= 33 && E <= 40) {
                        if (!y.altKey) {
                            if (r._cancelkeydown == undefined || r._cancelkeydown == false) {
                                if (r.editmode !== "selectedrow") {
                                    r.endcelledit(r.editcell.row, r.editcell.column, false, true);
                                    r._cancelkeydown = false;
                                    if (r.editcell && !r.editcell.validated) {
                                        r._rendervisualrows();
                                        r.endcelledit(r.editcell.row, r.editcell.column, false, true);
                                        return false
                                    }
                                } else {
                                    return true
                                }
                            } else {
                                r._cancelkeydown = false;
                                return true
                            }
                        } else {
                            r._cancelkeydown = false;
                            return true
                        }
                    } else {
                        return true
                    }
                }
            }
            if (r.selectionmode == "none") {
                return true
            }
            if (r.showfilterrow && r.filterable) {
                if (this.filterrow) {
                    if (a(y.target).ischildof(r.filterrow)) {
                        return true
                    }
                }
            }
            if (r.showeverpresentrow) {
                if (r.addnewrowtop) {
                    if (a(y.target).ischildof(r.addnewrowtop)) {
                        return true
                    }
                }
                if (r.addnewrowbottom) {
                    if (a(y.target).ischildof(r.addnewrowbottom)) {
                        return true
                    }
                }
            }
            if (r.pageable) {
                if (a(y.target).ischildof(this.pager)) {
                    return true
                }
            }
            if (this.showtoolbar) {
                if (a(y.target).ischildof(this.toolbar)) {
                    return true
                }
            }
            if (this.showstatusbar) {
                if (a(y.target).ischildof(this.statusbar)) {
                    return true
                }
            }
            var p = false;
            if (y.altKey) {
                return true
            }
            if (y.ctrlKey || y.metaKey) {
                if (this.clipboard) {
                    var b = String.fromCharCode(E).toLowerCase();
                    if (b == "c" || b == "x") {
                        var o = this.copyselection();
                        if (window.clipboardData) {
                            window.clipboardData.setData("Text", o)
                        } else {
                            var g = a('<textarea style="position: absolute; left: -1000px; top: -1000px;"/>');
                            g.val(o);
                            a("body").append(g);
                            g.select();
                            setTimeout(function() {
                                document.designMode = "off";
                                g.select();
                                g.remove();
                                r.focus()
                            },
                            100)
                        }
                    } else {
                        if (b == "v") {
                            var D = a('<textarea style="position: absolute; left: -1000px; top: -1000px;"/>');
                            a("body").append(D);
                            D.select();
                            var j = this;
                            setTimeout(function() {
                                j._clipboardselection = new Array();
                                var J = D.val();
                                if (J.length == 0 && window.clipboardData) {
                                    D.val(window.clipboardData.getData("Text"));
                                    var J = D.val()
                                }
                                var I = J.split("\n");
                                for (var H = 0; H < I.length; H++) {
                                    if (I[H].split("\t").length > 0) {
                                        var G = I[H].split("\t");
                                        if (G.length == 1 && H == I.length - 1 && G[0] == "") {
                                            continue
                                        }
                                        if (G.length > 0) {
                                            j._clipboardselection.push(G)
                                        }
                                    }
                                }
                                j.pasteselection();
                                D.remove();
                                j.focus()
                            },
                            100)
                        }
                    }
                    if (b == "x") {
                        this.deleteselection();
                        this.host.focus()
                    }
                }
            }
            var l = Math.round(r._gettableheight());
            var w = Math.round(l / r.rowsheight);
            var f = r.getdatainformation();
            switch (r.selectionmode) {
            case "singlecell":
            case "multiplecells":
            case "multiplecellsextended":
            case "multiplecellsadvanced":
                var F = r.getselectedcell();
                if (F != null) {
                    var e = this.getrowvisibleindex(F.rowindex);
                    var i = e;
                    var n = F.datafield;
                    var u = r._getcolumnindex(n);
                    var c = r.columns.records.length;
                    var t = function(N, H, M, L) {
                        var G = function(Y, R) {
                            var T = r.dataview.loadedrecords[Y];
                            if (r.groupable && r.groups.length > 0) {
                                var U = Y;
                                if (L == "up") {
                                    U++
                                }
                                if (L == "down") {
                                    U--
                                }
                                var T = r.getdisplayrows()[U];
                                var O = function(Z) {
                                    if (Z.group) {
                                        if (r.expandedgroups[Z.uniqueid]) {
                                            return r.expandedgroups[Z.uniqueid].expanded
                                        }
                                    } else {
                                        return false
                                    }
                                };
                                var W = 1;
                                var P = true;
                                while (P && W < 300) {
                                    P = false;
                                    if (L == "down") {
                                        T = r.getdisplayrows()[U + W]
                                    } else {
                                        if (L == "up") {
                                            T = r.getdisplayrows()[U - W]
                                        }
                                    }
                                    if (!T) {
                                        break
                                    }
                                    if (T && T.group) {
                                        P = true
                                    }
                                    var X = T.parentItem;
                                    while (X) {
                                        if (X && !O(X)) {
                                            P = true
                                        }
                                        X = X.parentItem
                                    }
                                    if (!P) {
                                        break
                                    }
                                    W++
                                }
                                if (W == 300) {
                                    T = null
                                }
                                if (r.pageable) {
                                    var V = false;
                                    if (T) {
                                        for (var S = 0; S < r.dataview.rows.length; S++) {
                                            if (r.dataview.rows[S].boundindex == T.boundindex) {
                                                V = true
                                            }
                                        }
                                        if (!V) {
                                            T = null
                                        }
                                    }
                                }
                            }
                            if (T != undefined && R != null) {
                                if (M || M == undefined) {
                                    r.clearselection()
                                }
                                var Q = r.getboundindex(T);
                                r.selectcell(Q, R);
                                r._oldselectedcell = r.selectedcell;
                                p = true;
                                r.ensurecellvisible(Y, R);
                                return true
                            }
                            return false
                        };
                        if (!G(N, H)) {
                            r.ensurecellvisible(N, H);
                            G(N, H);
                            if (r.virtualmode) {
                                r.host.focus()
                            }
                        }
                        var J = r.groupable && r.groups.length > 0;
                        if (!J) {
                            if (y.shiftKey && E != 9) {
                                if (r.selectionmode == "multiplecellsextended" || r.selectionmode == "multiplecellsadvanced") {
                                    if (r._lastClickedCell) {
                                        r._selectpath(N, H);
                                        var K = r.dataview.loadedrecords[N];
                                        var I = r.getboundindex(K);
                                        r.selectedcell = {
                                            rowindex: I,
                                            datafield: H
                                        };
                                        return
                                    }
                                }
                            } else {
                                if (!y.shiftKey) {
                                    r._lastClickedCell = {
                                        row: N,
                                        column: H
                                    }
                                }
                            }
                        }
                    };
                    var z = y.shiftKey && r.selectionmode != "singlecell" && r.selectionmode != "multiplecells";
                    var A = function() {
                        t(0, n, !z)
                    };
                    var h = function() {
                        var G = f.rowscount - 1;
                        t(G, n, !z)
                    };
                    var d = E == 9 && !y.shiftKey;
                    var k = E == 9 && y.shiftKey;
                    if (r.rtl) {
                        var q = d;
                        d = k;
                        k = q
                    }
                    if (d || k) {
                        z = false
                    }
                    if (d || k) {
                        if (document.activeElement && document.activeElement.className && document.activeElement.className.indexOf("jqx-grid-cell-add-new-row") >= 0) {
                            return true
                        }
                    }
                    var m = y.ctrlKey || y.metaKey;
                    if (m && E == 37) {
                        var C = r._getfirstvisiblecolumn(u);
                        if (C != null) {
                            t(i, C.datafield)
                        }
                    } else {
                        if (m && E == 39) {
                            var s = r._getlastvisiblecolumn(u);
                            if (s != null) {
                                t(i, s.datafield)
                            }
                        } else {
                            if (E == 39 || d) {
                                var v = r._getnextvisiblecolumn(u);
                                if (v != null) {
                                    t(i, v.datafield, !z)
                                } else {
                                    if (!d) {
                                        p = true
                                    }
                                }
                            } else {
                                if (E == 37 || k) {
                                    var C = r._getprevvisiblecolumn(u);
                                    if (C != null) {
                                        t(i, C.datafield, !z)
                                    } else {
                                        if (!k) {
                                            p = true
                                        }
                                    }
                                } else {
                                    if (E == 36) {
                                        A()
                                    } else {
                                        if (E == 35) {
                                            h()
                                        } else {
                                            if (E == 33) {
                                                if (i - w >= 0) {
                                                    var B = i - w;
                                                    t(B, n, !z)
                                                } else {
                                                    A()
                                                }
                                            } else {
                                                if (E == 34) {
                                                    if (f.rowscount > i + w) {
                                                        var B = i + w;
                                                        t(B, n, !z)
                                                    } else {
                                                        h()
                                                    }
                                                } else {
                                                    if (E == 38) {
                                                        if (m) {
                                                            A()
                                                        } else {
                                                            if (i > 0) {
                                                                t(i - 1, n, !z, "up")
                                                            } else {
                                                                p = true
                                                            }
                                                        }
                                                    } else {
                                                        if (E == 40) {
                                                            if (m) {
                                                                h()
                                                            } else {
                                                                if ((f.rowscount > i + 1) || (r.groupable && r.groups.length > 0)) {
                                                                    t(i + 1, n, !z, "down")
                                                                } else {
                                                                    p = true
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                break;
            case "singlerow":
            case "multiplerows":
            case "multiplerowsextended":
            case "multiplerowsadvanced":
                var i = r.getselectedrowindex();
                if (i == null || i == -1) {
                    return true
                }
                i = this.getrowvisibleindex(i);
                var x = function(H, K, J) {
                    var G = function(S) {
                        var R = r.dataview.loadedrecords[S];
                        if (r.groupable && r.groups.length > 0) {
                            if (J == "up") {
                                S++
                            }
                            if (J == "down") {
                                S--
                            }
                            var R = r.getdisplayrows()[S];
                            var L = function(W) {
                                if (W.group) {
                                    if (r.expandedgroups[W.uniqueid]) {
                                        return r.expandedgroups[W.uniqueid].expanded
                                    }
                                } else {
                                    return false
                                }
                            };
                            var U = 1;
                            var M = true;
                            while (M && U < 300) {
                                M = false;
                                if (J == "down") {
                                    R = r.getdisplayrows()[S + U]
                                } else {
                                    if (J == "up") {
                                        R = r.getdisplayrows()[S - U]
                                    }
                                }
                                if (!R) {
                                    break
                                }
                                if (R && R.group) {
                                    M = true
                                }
                                var V = R.parentItem;
                                while (V) {
                                    if (V && !L(V)) {
                                        M = true
                                    }
                                    V = V.parentItem
                                }
                                if (!M) {
                                    break
                                }
                                U++
                            }
                            if (U == 300) {
                                R = null
                            }
                            if (r.pageable) {
                                var T = false;
                                if (R) {
                                    for (var Q = 0; Q < r.dataview.rows.length; Q++) {
                                        if (r.dataview.rows[Q].boundindex == R.boundindex) {
                                            T = true
                                        }
                                    }
                                    if (!T) {
                                        R = null
                                    }
                                }
                            }
                        }
                        if (R != undefined) {
                            var N = r.getboundindex(R);
                            var P = r.selectedrowindex;
                            if (K || K == undefined) {
                                r.clearselection()
                            }
                            r.selectedrowindex = P;
                            r.selectrow(N, false);
                            var O = r.ensurerowvisible(S);
                            if (!O || r.autoheight || r.groupable) {
                                r._rendervisualrows()
                            }
                            p = true;
                            return true
                        }
                        return false
                    };
                    if (!G(H)) {
                        r.ensurerowvisible(H);
                        G(H, K);
                        if (r.virtualmode) {
                            setTimeout(function() {
                                G(H, K)
                            },
                            25)
                        }
                        if (r.virtualmode) {
                            r.host.focus()
                        }
                    }
                    var I = r.groupable && r.groups.length > 0;
                    if (!I) {
                        if (y.shiftKey && E != 9) {
                            if (r.selectionmode == "multiplerowsextended") {
                                if (r._lastClickedCell) {
                                    r._selectrowpath(H);
                                    r.selectedrowindex = r.getrowboundindex(H);
                                    return
                                }
                            }
                        } else {
                            if (!y.shiftKey) {
                                r._lastClickedCell = {
                                    row: H
                                };
                                r.selectedrowindex = r.getrowboundindex(H)
                            }
                        }
                    }
                };
                var z = y.shiftKey && r.selectionmode != "singlerow" && r.selectionmode != "multiplerows";
                var A = function() {
                    x(0, !z)
                };
                var h = function() {
                    var G = f.rowscount - 1;
                    x(G, !z)
                };
                var m = y.ctrlKey || y.metaKey;
                if (E == 36 || (m && E == 38)) {
                    A()
                } else {
                    if (E == 35 || (m && E == 40)) {
                        h()
                    } else {
                        if (E == 33) {
                            if (i - w >= 0) {
                                var B = i - w;
                                x(B, !z)
                            } else {
                                A()
                            }
                        } else {
                            if (E == 34) {
                                if (f.rowscount > i + w) {
                                    var B = i + w;
                                    x(B, !z)
                                } else {
                                    h()
                                }
                            } else {
                                if (E == 38) {
                                    if (i > 0) {
                                        x(i - 1, !z, "up")
                                    } else {
                                        p = true
                                    }
                                } else {
                                    if (E == 40) {
                                        if ((f.rowscount > i + 1) || (r.groupable && r.groups.length > 0)) {
                                            x(i + 1, !z, "down")
                                        } else {
                                            p = true
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                break
            }
            if (p) {
                if (r.autosavestate) {
                    if (r.savestate) {
                        r.savestate()
                    }
                }
                return false
            }
            return true
        },
        _handlemousemove: function(u, p) {
            if (p.vScrollInstance.isScrolling()) {
                return
            }
            if (p.hScrollInstance.isScrolling()) {
                return
            }
            var w;
            var q;
            var f;
            var n;
            var m;
            if (p.enablehover || p.selectionmode == "multiplerows") {
                w = this.showheader ? this.columnsheader.height() + 2 : 0;
                q = this._groupsheader() ? this.groupsheader.height() : 0;
                var A = this.showtoolbar ? this.toolbarheight: 0;
                q += A;
                f = this.host.coord();
                if (this.hasTransform) {
                    f = a.jqx.utilities.getOffset(this.host);
                    var k = this._getBodyOffset();
                    f.left -= k.left;
                    f.top -= k.top
                }
                n = u.pageX - f.left;
                m = u.pageY - w - f.top - q
            }
            if (p.selectionmode == "multiplerowsextended" || p.selectionmode == "multiplecellsextended" || p.selectionmode == "multiplecellsadvanced") {
                if (p.mousecaptured == true) {
                    return
                }
            }
            if (p.enablehover) {
                if (p.disabled) {
                    return
                }
                if (this.vScrollInstance.isScrolling() || this.hScrollInstance.isScrolling()) {
                    return
                }
                var c = this._hittestrow(n, m);
                if (!c) {
                    return
                }
                var h = c.row;
                var j = c.index;
                if (this.hoveredrow != -1 && j != -1 && this.hoveredrow == j && this.selectionmode.indexOf("cell") == -1 && this.selectionmode != "checkbox") {
                    return
                }
                this._clearhoverstyle();
                if (j == -1 || h == undefined) {
                    return
                }
                var r = this.hittestinfo[j].visualrow;
                if (r == null) {
                    return
                }
                if (this.hittestinfo[j].details) {
                    return
                }
                if (u.clientX > a(r).width() + a(r).coord().left) {
                    return
                }
                var B = 0;
                var o = r.cells.length;
                if (p.rowdetails && p.showrowdetailscolumn) {
                    if (!this.rtl) {
                        B = 1 + this.groups.length
                    } else {
                        o -= 1;
                        o -= this.groups.length
                    }
                } else {
                    if (this.groupable) {
                        if (!this.rtl) {
                            B = this.groups.length
                        } else {
                            o -= this.groups.length
                        }
                    }
                }
                if (r.cells.length == 0) {
                    return
                }
                var l = r.cells[B].className;
                if (h.group || (this.selectionmode.indexOf("row") >= 0 && l.indexOf("jqx-grid-cell-selected") != -1)) {
                    return
                }
                this.hoveredrow = j;
                if (this.selectionmode.indexOf("cell") != -1 || this.selectionmode == "checkbox") {
                    var e = -1;
                    var s = this.hScrollInstance;
                    var t = s.value;
                    if (this.rtl) {
                        if (this.hScrollBar.css("visibility") != "hidden") {
                            t = s.max - s.value
                        }
                    }
                    for (var v = B; v < o; v++) {
                        var g = parseInt(a(this.columnsrow[0].cells[v]).css("left")) - t;
                        var z = g + a(this.columnsrow[0].cells[v]).width();
                        if (z >= n && n >= g) {
                            e = v;
                            break
                        }
                    }
                    if (e != -1) {
                        var b = r.cells[e];
                        if (this.cellhover) {
                            this.cellhover(b, u.pageX, u.pageY)
                        }
                        if (b.className.indexOf("jqx-grid-cell-selected") == -1) {
                            if (this.editcell) {
                                var d = this._getcolumnat(e);
                                if (d) {
                                    if (this.editcell.row == j && this.editcell.column == d.datafield) {
                                        return
                                    }
                                }
                            }
                            a(b).addClass(this.toTP("jqx-grid-cell-hover"));
                            a(b).addClass(this.toTP("jqx-fill-state-hover"))
                        }
                    }
                    return
                }
                for (var v = B; v < o; v++) {
                    var b = r.cells[v];
                    a(b).addClass(this.toTP("jqx-grid-cell-hover"));
                    a(b).addClass(this.toTP("jqx-fill-state-hover"));
                    if (this.cellhover) {
                        this.cellhover(b, u.pageX, u.pageY)
                    }
                }
            } else {
                return true
            }
        }
    })
})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxPanel","",{});a.extend(a.jqx._jqxPanel.prototype,{defineInstance:function(){var b={width:null,height:null,disabled:false,scrollBarSize:a.jqx.utilities.scrollBarSize,sizeMode:"fixed",autoUpdate:false,autoUpdateInterval:500,touchMode:"auto",horizontalScrollBarMax:null,verticalScrollBarMax:null,touchModeStyle:"auto",rtl:false,events:["layout"]};a.extend(true,this,b);return b},createInstance:function(b){this.render()},render:function(){var b=this;if(a.jqx.utilities.scrollBarSize!=15){this.scrollBarSize=a.jqx.utilities.scrollBarSize}this.host.addClass(this.toThemeProperty("jqx-panel"));this.host.addClass(this.toThemeProperty("jqx-widget"));this.host.addClass(this.toThemeProperty("jqx-widget-content"));this.host.addClass(this.toThemeProperty("jqx-rc-all"));var c=a("<div id='panelWrapper' style='overflow: hidden; width: 100%; height: 100%; background-color: transparent; -webkit-appearance: none; outline: none; align:left; border: 0px; padding: 0px; margin: 0px; left: 0px; top: 0px; valign:top; position: relative;'><div id='panelContent' style='-webkit-appearance: none; -moz-box-sizing: border-box; box-sizing: border-box; width: 100%; height: 100%; outline: none; border: none; padding: 0px; position: absolute; margin: 0px; align:left; valign:top; left: 0px; top: 0px;'/><div id='verticalScrollBar' style='align:left; valign:top; left: 0px; top: 0px; position: absolute;'/><div id='horizontalScrollBar' style='align:left; valign:top; left: 0px; top: 0px; position: absolute;'/><div id='bottomRight' style='align:left; valign:top; left: 0px; top: 0px; position: absolute;'/></div>");if(!this.host.jqxButton){throw new Error("jqxPanel: Missing reference to jqxbuttons.js.")}if(!this.host.jqxScrollBar){throw new Error("jqxPanel: Missing reference to jqxscrollbar.js.")}var d=this.host.children();this._rtl=false;if(d.length>0&&d.css("direction")=="rtl"){this.rtl=true;this._rtl=true}this.host.wrapInner(c);var g=this.host.find("#verticalScrollBar");g[0].id=this.element.id+"verticalScrollBar";this.vScrollBar=g.jqxScrollBar({vertical:true,rtl:this.rtl,touchMode:this.touchMode,theme:this.theme});var f=this.host.find("#horizontalScrollBar");f[0].id=this.element.id+"horizontalScrollBar";this.hScrollBar=f.jqxScrollBar({vertical:false,rtl:this.rtl,touchMode:this.touchMode,theme:this.theme});this.content=this.host.find("#panelContent");this.wrapper=this.host.find("#panelWrapper");this.content.addClass(this.toThemeProperty("jqx-widget-content"));this.wrapper[0].id=this.wrapper[0].id+this.element.id;this.content[0].id=this.content[0].id+this.element.id;this.bottomRight=this.host.find("#bottomRight").addClass(this.toThemeProperty("jqx-panel-bottomright")).addClass(this.toThemeProperty("jqx-scrollbar-state-normal"));this.bottomRight[0].id="bottomRight"+this.element.id;this.vScrollBar.css("visibility","inherit");this.hScrollBar.css("visibility","inherit");this.vScrollInstance=a.data(this.vScrollBar[0],"jqxScrollBar").instance;this.hScrollInstance=a.data(this.hScrollBar[0],"jqxScrollBar").instance;var e=this;this.propertyChangeMap.disabled=function(h,j,i,k){e.vScrollBar.jqxScrollBar({disabled:e.disabled});e.hScrollBar.jqxScrollBar({disabled:e.disabled})};this.vScrollBar.jqxScrollBar({disabled:this.disabled});this.hScrollBar.jqxScrollBar({disabled:this.disabled});this._addHandlers();if(this.width==null){this.width=this.content.width()}if(this.height==null){this.height=this.content.height()}this._arrange();this.contentWidth=e.content[0].scrollWidth;this.contentHeight=e.content[0].scrollHeight;if(this.autoUpdate){e._autoUpdate()}this.propertyChangeMap.autoUpdate=function(h,j,i,k){if(e.autoUpdate){e._autoUpdate()}else{clearInterval(e.autoUpdateId);e.autoUpdateId=null}};this.addHandler(a(window),"unload",function(){if(e.autoUpdateId!=null){clearInterval(e.autoUpdateId);e.autoUpdateId=null;e.destroy()}});this._updateTouchScrolling();this._render()},hiddenParent:function(){return a.jqx.isHidden(this.host)},_updateTouchScrolling:function(){var b=this;if(this.touchMode==true){a.jqx.mobile.setMobileSimulator(this.element)}var c=this.isTouchDevice();if(c){a.jqx.mobile.touchScroll(this.element,b.vScrollInstance.max,function(f,e){if(b.vScrollBar.css("visibility")!="hidden"){var d=b.vScrollInstance.value;b.vScrollInstance.setPosition(d+e)}if(b.hScrollBar.css("visibility")!="hidden"){var d=b.hScrollInstance.value;b.hScrollInstance.setPosition(d+f)}},this.element.id,this.hScrollBar,this.vScrollBar);this._arrange()}this.vScrollBar.jqxScrollBar({touchMode:this.touchMode});this.hScrollBar.jqxScrollBar({touchMode:this.touchMode})},isTouchDevice:function(){var b=a.jqx.mobile.isTouchDevice();if(this.touchMode==true){b=true}else{if(this.touchMode==false){b=false}}if(b&&this.touchModeStyle!=false){this.scrollBarSize=a.jqx.utilities.touchScrollBarSize}return b},append:function(b){if(b!=null){this.content.append(b);this._arrange()}},setcontent:function(b){this.content[0].innerHTML=b;this._arrange();var c=this;setTimeout(function(){c._arrange()},100)},prepend:function(b){if(b!=null){this.content.prepend(b);this._arrange()}},clearcontent:function(){this.content.text("");this.content.children().remove();this._arrange()},remove:function(b){if(b!=null){a(b).remove();this._arrange()}},_autoUpdate:function(){var b=this;this.autoUpdateId=setInterval(function(){var d=b.content[0].scrollWidth;var c=b.content[0].scrollHeight;var e=false;if(b.contentWidth!=d){b.contentWidth=d;e=true}if(b.contentHeight!=c){b.contentHeight=c;e=true}if(e){b._arrange()}},this.autoUpdateInterval)},_addHandlers:function(){var b=this;this.addHandler(this.vScrollBar,"valueChanged",function(c){b._render(b)});this.addHandler(this.hScrollBar,"valueChanged",function(c){b._render(b)});this.addHandler(this.host,"mousewheel",function(c){b.wheel(c,b)});this.addHandler(this.wrapper,"scroll",function(c){if(b.wrapper[0].scrollTop!=0){b.wrapper[0].scrollTop=0}if(b.wrapper[0].scrollLeft!=0){b.wrapper[0].scrollLeft=0}});this.addHandler(this.host,"mouseleave",function(c){b.focused=false});this.addHandler(this.host,"focus",function(c){b.focused=true});this.addHandler(this.host,"blur",function(c){b.focused=false});this.addHandler(this.host,"mouseenter",function(c){b.focused=true});a.jqx.utilities.resize(this.host,function(){if(a.jqx.isHidden(b.host)){return}b._arrange(false)})},resize:function(c,b){this.width=c;this.height=b;this._arrange(false)},_removeHandlers:function(){var b=this;this.removeHandler(this.vScrollBar,"valueChanged");this.removeHandler(this.hScrollBar,"valueChanged");this.removeHandler(this.host,"mousewheel");this.removeHandler(this.host,"mouseleave");this.removeHandler(this.host,"focus");this.removeHandler(this.host,"blur");this.removeHandler(this.host,"mouseenter");this.removeHandler(this.wrapper,"scroll");this.removeHandler(a(window),"resize."+this.element.id)},wheel:function(d,c){var e=0;if(d.originalEvent&&a.jqx.browser.msie&&d.originalEvent.wheelDelta){e=d.originalEvent.wheelDelta/120}if(!d){d=window.event}if(d.wheelDelta){e=d.wheelDelta/120}else{if(d.detail){e=-d.detail/3}}if(e){var b=c._handleDelta(e);if(!b){if(d.preventDefault){d.preventDefault()}}if(!b){return b}else{return false}}if(d.preventDefault){d.preventDefault()}d.returnValue=false},scrollDown:function(){if(this.vScrollBar.css("visibility")=="hidden"){return false}var b=this.vScrollInstance;if(b.value+b.largestep<=b.max){b.setPosition(b.value+b.largestep);return true}else{if(b.value+b.largestep!=b.max){b.setPosition(b.max);return true}}return false},scrollUp:function(){if(this.vScrollBar.css("visibility")=="hidden"){return false}var b=this.vScrollInstance;if(b.value-b.largestep>=b.min){b.setPosition(b.value-b.largestep);return true}else{if(b.value-b.largestep!=b.min){b.setPosition(b.min);return true}}return false},_handleDelta:function(d){if(this.focused){var c=this.vScrollInstance.value;if(d<0){this.scrollDown()}else{this.scrollUp()}var b=this.vScrollInstance.value;if(c!=b){return false}}return true},_render:function(c){if(c==undefined){c=this}var b=c.vScrollInstance.value;var d=c.hScrollInstance.value;if(this.rtl){if(this.hScrollBar[0].style.visibility!="hidden"){if(this._rtl==false){d=c.hScrollInstance.max-d}else{d=-c.hScrollInstance.value}}}c.content.css({left:-d+"px",top:-b+"px"})},scrollTo:function(c,b){if(c==undefined||b==undefined){return}this.vScrollInstance.setPosition(b);this.hScrollInstance.setPosition(c)},getScrollHeight:function(){return this.vScrollInstance.max},getVScrollPosition:function(){return this.vScrollInstance.value},getScrollWidth:function(){return this.hScrollInstance.max},getHScrollPosition:function(){return this.hScrollInstance.value},_getScrollSize:function(){var b=this.scrollBarSize;if(isNaN(b)){b=parseInt(b);if(isNaN(b)){b="17px"}else{b=b+"px"}}if(this.isTouchDevice()){b=a.jqx.utilities.touchScrollBarSize}b=parseInt(b);return b},_getScrollArea:function(){var c=0;this.content.css("margin-right","0px");this.content.css("max-width","9999999px");if(a.jqx.browser.msie&&a.jqx.browser.version<10){c=parseInt(this.content.css("left"));this.content.css("left",0)}this.content.css("overflow","auto");if(this.rtl){this.content.css("direction","rtl")}var b=parseInt(this.content[0].scrollWidth);a.each(this.content.children(),function(){b=Math.max(b,this.scrollWidth);b=Math.max(b,a(this).outerWidth())});if(a.jqx.browser.msie&&a.jqx.browser.version<10){this.content.css("left",c)}var d=parseInt(this.content[0].scrollHeight);this.content.css("overflow","visible");if(a.jqx.browser.msie&&a.jqx.browser.version<9){var d=parseInt(this.content[0].scrollHeight);switch(this.sizeMode){case"wrap":var d=parseInt(this.content[0].scrollHeight);var b=parseInt(this.content[0].scrollWidth);break;case"horizontalWrap":case"horizontalwrap":break;case"verticalWrap":case"verticalwrap":var d=parseInt(this.content[0].scrollHeight);break}}if(this.rtl){this.content.css("direction","ltr")}return{width:b,height:d}},_arrange:function(h){if(h!==false){if(this.width!=null){this.host.width(this.width)}if(this.height!=null){this.host.height(this.height)}}var b=this._getScrollSize();var d=this.host.width();var l=this.host.height();var e=this._getScrollArea();var c=e.width;var k=e.height;var i=k-parseInt(Math.round(this.host.height()));var g=c-parseInt(Math.round(this.host.width()));if(this.horizontalScrollBarMax!=undefined){g=this.horizontalScrollBarMax}if(this.verticalScrollBarMax!=undefined){i=this.verticalScrollBarMax}var j=function(o,p){var n=5;if(p>n){o.vScrollBar.jqxScrollBar({max:p});o.vScrollBar.css("visibility","inherit")}else{o.vScrollBar.jqxScrollBar("setPosition",0);o.vScrollBar.css("visibility","hidden")}};var m=function(o,n){if(n>0){if(a.jqx.browser.msie&&a.jqx.browser.version<8){if(n-10<=b){o.hScrollBar.css("visibility","hidden");o.hScrollBar.jqxScrollBar("setPosition",0)}else{o.hScrollBar.jqxScrollBar({max:n+4});o.hScrollBar.css("visibility","inherit")}}else{o.hScrollBar.jqxScrollBar({max:n+4});o.hScrollBar.css("visibility","inherit")}}else{o.hScrollBar.css("visibility","hidden");o.hScrollBar.jqxScrollBar("setPosition",0)}};switch(this.sizeMode){case"wrap":this.host.width(c);this.host.height(k);this.vScrollBar.css("visibility","hidden");this.hScrollBar.css("visibility","hidden");return;case"horizontalWrap":case"horizontalwrap":this.host.width(c);this.hScrollBar.css("visibility","hidden");j(this,i);this._arrangeScrollbars(b,c,l);return;case"verticalWrap":case"verticalwrap":this.host.height(k);this.vScrollBar.css("visibility","hidden");m(this,g);this._arrangeScrollbars(b,d,l);return}j(this,i);var f=2;if(this.vScrollBar.css("visibility")!="hidden"){if(this.horizontalScrollBarMax==undefined){if((!this.isTouchDevice()&&g>0)||(g>0)){g+=b+f}}}m(this,g);if(this.hScrollBar.css("visibility")!="hidden"){this.vScrollBar.jqxScrollBar({max:i+b+f})}this._arrangeScrollbars(b,d,l)},_arrangeScrollbars:function(b,d,j){var i=this.vScrollBar[0].style.visibility!="hidden";var f=this.hScrollBar[0].style.visibility!="hidden";var h=2;var g=2;this.hScrollBar.height(b);this.hScrollBar.css({top:j-b-h-g+"px",left:"0px"});this.hScrollBar.width(d-h+"px");this.vScrollBar.width(b);this.vScrollBar.height(parseInt(j)-h+"px");this.vScrollBar.css({left:parseInt(d)-parseInt(b)-h-g+"px",top:"0px"});if(this.rtl){this.vScrollBar.css({left:"0px"});var c=i?parseInt(b)+"px":0;if(this.content.children().css("direction")!="rtl"){var e=false;if(a.jqx.browser.msie&&a.jqx.browser.version<8){e=true}if(!e){this.content.css("padding-left",c)}}}else{if(this.vScrollBar.css("visibility")!="hidden"){this.content.css("max-width",this.host.width()-this.vScrollBar.outerWidth())}}if((this.vScrollBar.css("visibility")!="hidden")&&(this.hScrollBar.css("visibility")!="hidden")){this.bottomRight.css("visibility","inherit");this.bottomRight.css({left:1+parseInt(this.vScrollBar.css("left")),top:1+parseInt(this.hScrollBar.css("top"))});this.bottomRight.width(parseInt(b)+3);this.bottomRight.height(parseInt(b)+3);if(this.rtl){this.bottomRight.css({left:"0px"});this.hScrollBar.css({left:b+g+"px"})}this.hScrollBar.width(d-(1*b)-h-g+"px");this.vScrollBar.height(parseInt(j)-h-b-g+"px")}else{this.bottomRight.css("visibility","hidden")}this.hScrollInstance.refresh();this.vScrollInstance.refresh()},destroy:function(){clearInterval(this.autoUpdateId);this.autoUpdateId=null;this.autoUpdate=false;a.jqx.utilities.resize(this.host,null,true);this._removeHandlers();this.removeHandler(a(window),"unload");this.vScrollBar.jqxScrollBar("destroy");this.hScrollBar.jqxScrollBar("destroy");this.host.remove()},_raiseevent:function(g,d,f){if(this.isInitialized!=undefined&&this.isInitialized==true){var c=this.events[g];var e=new a.Event(c);e.previousValue=d;e.currentValue=f;e.owner=this;var b=this.host.trigger(e);return b}},beginUpdateLayout:function(){this.updating=true},resumeUpdateLayout:function(){this.updating=false;this.vScrollInstance.value=0;this.hScrollInstance.value=0;this._arrange();this._render()},propertyChangedHandler:function(c,d,b,e){if(!c.isInitialized){return}if(d=="rtl"){this.vScrollBar.jqxScrollBar({rtl:e});this.hScrollBar.jqxScrollBar({rtl:e});c._arrange()}if(!c.updating){if(d=="scrollBarSize"||d=="width"||d=="height"){if(b!=e){c._arrange()}}}if(d=="touchMode"){if(e!="auto"){c._updateTouchScrolling()}}if(d=="theme"){c.host.removeClass();c.host.addClass(this.toThemeProperty("jqx-panel"));c.host.addClass(this.toThemeProperty("jqx-widget"));c.host.addClass(this.toThemeProperty("jqx-widget-content"));c.host.addClass(this.toThemeProperty("jqx-rc-all"));c.vScrollBar.jqxScrollBar({theme:this.theme});c.hScrollBar.jqxScrollBar({theme:this.theme});c.bottomRight.removeClass();c.bottomRight.addClass(this.toThemeProperty("jqx-panel-bottomright"));c.bottomRight.addClass(this.toThemeProperty("jqx-scrollbar-state-normal"));c.content.removeClass();c.content.addClass(this.toThemeProperty("jqx-widget-content"))}},invalidate:function(){if(a.jqx.isHidden(this.host)){return}this.refresh()},refresh:function(b){this._arrange()}})})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxNavigationBar","",{});a.extend(a.jqx._jqxNavigationBar.prototype,{defineInstance:function(){var b={width:"auto",height:"auto",expandAnimationDuration:250,collapseAnimationDuration:250,animationType:"slide",toggleMode:"click",showArrow:true,arrowPosition:"right",disabled:false,initContent:null,rtl:false,easing:"easeInOutSine",expandMode:"singleFitHeight",expandedIndexes:[],_expandModes:["singleFitHeight","single","multiple","toggle","none"],aria:{"aria-disabled":{name:"disabled",type:"boolean"}},events:["expandingItem","expandedItem","collapsingItem","collapsedItem"]};a.extend(true,this,b);return b},createInstance:function(b){this._isTouchDevice=a.jqx.mobile.isTouchDevice();a.jqx.aria(this);this.render()},val:function(b){if(arguments.length==0||typeof(b)=="object"){return this.expandedIndexes}if(typeof b=="string"){this.expandedIndexes.push(parseInt(b));this._applyExpandedIndexes()}else{if(a.isArray(b)){this.expandedIndexes=b}else{this.expandedIndexes=new Array();this.expandedIndexes.push(b)}this._applyExpandedIndexes()}return this.expandedIndexes},expandAt:function(d){var g=this;if(this.expandMode=="single"||this.expandMode=="singleFitHeight"||this.expandMode=="toggle"){a.each(this.items,function(j,k){if(j!=d){g.collapseAt(j)}})}var h=this.items[d];if(h.disabled==false&&h.expanded==false&&h._expandChecker==1){var g=this;h._expandChecker=0;this._raiseEvent("0",{item:d});h._header.removeClass(this.toThemeProperty("jqx-fill-state-normal"));h._header.addClass(this.toThemeProperty("jqx-fill-state-pressed"));h._header.addClass(this.toThemeProperty("jqx-expander-header-expanded"));h._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-down"));h._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-down-hover"));h._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-up-hover"));h._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-down-selected"));h._arrow.removeClass(this.toThemeProperty("jqx-expander-arrow-top"));h._arrow.addClass(this.toThemeProperty("jqx-icon-arrow-up"));h._arrow.addClass(this.toThemeProperty("jqx-icon-arrow-up-selected"));h._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-bottom"));h._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-expanded"));if(this.heightFlag==false){this.host.css({"overflow-x":"hidden","overflow-y":"hidden"})}this.eCFlag=1;switch(this.animationType){case"slide":var f=h._content;var b=f.height();var c={};c.height=c.paddingTop=c.paddingBottom=c.borderTopWidth=c.borderBottomWidth="show";var i=0;var e=f.outerHeight();if(a.jqx.browser.msie&&a.jqx.browser.version<9){var c={};c.height=c.paddingTop=c.paddingBottom="show"}f.animate(c,{duration:this.expandAnimationDuration,easing:this.easing,step:function(j,k){k.now=Math.round(j);if(k.prop!=="height"){i+=k.now}else{if(g._collapseContent){k.now=Math.round(e-g._collapseContent.outerHeight()-i);i=0}else{k.now=Math.round(j)}}},complete:function(){h.expanded=true;a.jqx.aria(h._header,"aria-expanded",true);a.jqx.aria(h._content,"aria-hidden",false);g._updateExpandedIndexes();g._raiseEvent("1",{item:d});g._checkHeight();if(g.heightFlag==true){g.host.css({"overflow-x":"hidden","overflow-y":"auto"})}if(g.initContent&&h._initialized==false){g.initContent(d);h._initialized=true}g.eCFlag=0}});break;case"fade":setTimeout(function(){h._content.fadeIn(this.expandAnimationDuration,function(){h.expanded=true;a.jqx.aria(h._header,"aria-expanded",true);a.jqx.aria(h._content,"aria-hidden",false);g._updateExpandedIndexes();g._raiseEvent("1",{item:d});g._checkHeight();if(g.heightFlag==true){g.host.css({"overflow-x":"hidden","overflow-y":"auto"})}if(g.initContent&&h._initialized==false){g.initContent(d);h._initialized=true}g.eCFlag=0})},this.collapseAnimationDuration);break;case"none":h._content.css("display","inherit");h.expanded=true;a.jqx.aria(h._header,"aria-expanded",true);a.jqx.aria(h._content,"aria-hidden",false);this._updateExpandedIndexes();this._raiseEvent("1",{item:d});this._checkHeight();if(this.heightFlag==true){this.host.css({"overflow-x":"hidden","overflow-y":"auto"})}if(this.initContent&&h._initialized==false){this.initContent(d);h._initialized=true}this.eCFlag=0;break}}},collapseAt:function(b){var f=this.items[b];if(f.disabled==false&&f.expanded==true&&f._expandChecker==0){var d=this;f._expandChecker=1;this._raiseEvent("2",{item:b});f._header.removeClass(this.toThemeProperty("jqx-fill-state-pressed"));f._header.removeClass(this.toThemeProperty("jqx-expander-header-expanded"));f._header.addClass(this.toThemeProperty("jqx-fill-state-normal"));f._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-up"));f._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-up-selected"));f._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-down-selected"));f._arrow.removeClass(this.toThemeProperty("jqx-expander-arrow-bottom"));f._arrow.removeClass(this.toThemeProperty("jqx-expander-arrow-expanded"));f._arrow.addClass(this.toThemeProperty("jqx-icon-arrow-down"));f._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-top"));if(this.heightFlag==false){this.host.css({"overflow-x":"hidden","overflow-y":"hidden"})}this.eCFlag=1;this._collapseContent=f._content;switch(this.animationType){case"slide":var e={};e.height=e.paddingTop=e.paddingBottom=e.borderTopWidth=e.borderBottomWidth="hide";if(a.jqx.browser.msie&&a.jqx.browser.version<9){var e={};e.height=e.paddingTop=e.paddingBottom="hide"}var c=f._content;c.animate(e,{duration:this.collapseAnimationDuration,step:function(g,h){h.now=Math.round(g)},easing:this.easing,complete:function(){f.expanded=false;c.hide();a.jqx.aria(f._header,"aria-expanded",false);a.jqx.aria(f._content,"aria-hidden",true);d._updateExpandedIndexes();d._raiseEvent("3",{item:b});d._checkHeight();if(d.heightFlag==true){d.host.css({"overflow-x":"hidden","overflow-y":"auto"})}d.eCFlag=0;d._collapseContent=null}});break;case"fade":f._content.fadeOut(this.collapseAnimationDuration,function(){f.expanded=false;a.jqx.aria(f._header,"aria-expanded",false);a.jqx.aria(f._content,"aria-hidden",true);d._updateExpandedIndexes();d._raiseEvent("3",{item:b});d._checkHeight();if(d.heightFlag==true){d.host.css({"overflow-x":"hidden","overflow-y":"auto"})}d.eCFlag=0});break;case"none":f._content.css("display","none");f.expanded=false;a.jqx.aria(f._header,"aria-expanded",false);a.jqx.aria(f._content,"aria-hidden",true);this._updateExpandedIndexes();this._raiseEvent("3",{item:b});this._checkHeight();if(this.heightFlag==true){this.host.css({"overflow-x":"hidden","overflow-y":"auto"})}this.eCFlag=0;break}}},setHeaderContentAt:function(b,c){this.items[b]._header_text.html(c)},getHeaderContentAt:function(b){return this.items[b]._header_text.html()},setContentAt:function(b,c){this.items[b]._content.html(c);this._checkContent(b)},getContentAt:function(b){return this.items[b]._content.html()},showArrowAt:function(b){this.items[b]._arrow.css("display","block")},hideArrowAt:function(b){this.items[b]._arrow.css("display","none")},enable:function(){this.disabled=false;a.each(this.items,function(b,c){this.disabled=false});this._enabledDisabledCheck();this.refresh();a.jqx.aria(this,"aria-disabled",false)},disable:function(){this.disabled=true;a.each(this.items,function(b,c){this.disabled=true});this._enabledDisabledCheck();this.refresh();a.jqx.aria(this,"aria-disabled",true)},enableAt:function(b){this.items[b].disabled=false;this.refresh()},disableAt:function(b){this.items[b].disabled=true;this.refresh()},invalidate:function(){this.refresh()},refresh:function(b){if(b==true){return}this._removeHandlers();if(this.showArrow==true){a.each(this.items,function(c,e){var d=this;d._arrow.css("display","block")})}else{a.each(this.items,function(c,e){var d=this;d._arrow.css("display","none")})}this._updateExpandedIndexes();this._setTheme();this._setSize();this._toggle();this._keyBoard()},render:function(){this.widgetID=this.element.id;var m=this;if(this._expandModes.indexOf(this.expandMode)==-1){this.expandMode="singleFitHeight"}a.jqx.utilities.resize(this.host,function(){m._setSize()});this.host.attr("role","tablist");if(this.items){this._removeHandlers();a.each(this.items,function(){this._header.removeClass();this._header.attr("tabindex",null);this._content.attr("tabindex",null);this._header[0].className="";this._header_text.removeClass();this._header_text[0].className="";this._header.css("margin-top",0);this._header[0].innerHTML=this._header_text[0].innerHTML})}this.items=new Array();var h=this.host.children().length;var n="Invalid jqxNavigationBar structure. Please add an even number of child div elements that will represent each item's header and content.";try{if(h%2!=0){throw n}}catch(d){alert(d)}var e="Invalid jqxNavigationBar structure. Please make sure all the children elements of the navigationbar are divs.";try{var c=this.host.children();for(var l=0;l<h;l++){if(c[l].tagName.toLowerCase()!="div"){throw e}}}catch(d){alert(d)}var o;for(var p=0;p<h;p+=2){o=this.host.children("div:eq("+p+")");o.wrap("<div></div>")}var l=0;var f;for(var g=0;g<h/2;g++){f=l+1;this.items[g]=new Object();this.items[g]._header=this.host.children("div:eq("+l+")");this.items[g]._header.attr("role","tab");this.items[g]._content=this.host.children("div:eq("+f+")");this.items[g]._content.attr("role","tabpanel");l+=2}var b=this.expandedIndexes.length;a.each(this.items,function(i,j){this.expandedFlag=false;this.focusedH=false;this.focusedC=false});if(this.items&&this.items.length==0){return}if(this.expandMode=="single"||this.expandMode=="singleFitHeight"||this.expandMode=="toggle"||this.expandMode=="none"){a.each(this.items,function(i,k){var j=this;j.expanded=false});if(b!=0){this.items[this.expandedIndexes[0]].expanded=true}else{if(b==0&&(this.expandMode=="single"||this.expandMode=="singleFitHeight")){this.items[0].expanded=true}}}else{if(this.expandMode=="multiple"){if(b!=0){a.each(this.items,function(j,r){var q=this;for(var k=0;k<b;k++){if(m.expandedIndexes[k]==j){q.expanded=true;break}else{q.expanded=false}}})}else{a.each(this.items,function(i,k){var j=this;j.expanded=false})}}else{if(this.expandMode=="none"){a.each(this.items,function(i,k){var j=this;j.expanded=false})}}}this._enabledDisabledCheck();a.each(this.items,function(i,k){var j=this;j._header_text=j._header.children("div:eq(0)");if(!m.rtl){j._header_text.addClass(m.toThemeProperty("jqx-expander-header-content"))}else{j._header_text.addClass(m.toThemeProperty("jqx-expander-header-content-rtl"))}j._header.append("<div></div>");j._arrow=j._header.children("div:eq(1)");if(m.showArrow==true){j._arrow.css("display","block")}else{j._arrow.css("display","none")}});a.each(this.items,function(i,k){var j=this;if(j.expanded==true){j._arrow.addClass(m.toThemeProperty("jqx-icon-arrow-up"));j._arrow.addClass(m.toThemeProperty("jqx-icon-arrow-up-selected"));j._arrow.addClass(m.toThemeProperty("jqx-expander-arrow-bottom"));j._arrow.addClass(m.toThemeProperty("jqx-expander-arrow-expanded"));if(m.initContent){setTimeout(function(){m.initContent(i)},10)}j._initialized=true;j._expandChecker=0;a.jqx.aria(j._header,"aria-expanded",true);a.jqx.aria(j._content,"aria-hidden",false)}else{if(j.expanded==false){j._arrow.addClass(m.toThemeProperty("jqx-icon-arrow-down"));j._arrow.addClass(m.toThemeProperty("jqx-expander-arrow-top"));j._initialized=false;j._expandChecker=1;j._content.css("display","none");a.jqx.aria(j._header,"aria-expanded",false);a.jqx.aria(j._content,"aria-hidden",true)}}});this.tI=0;a.each(this.items,function(i,k){var j=this;if(j._header.attr("tabindex")==undefined){m.tI++;j._header.attr("tabindex",m.tI)}if(j._content.attr("tabindex")==undefined){m.tI++;j._content.attr("tabindex",m.tI)}});this._setTheme();a.each(this.items,function(i,k){var j=this;m._checkContent(i)});this._setSize();this._toggle();this._keyBoard()},insert:function(c,f,d){var b="<div>"+f+"</div><div>"+d+"</div>";if(c!=-1){a(b).insertBefore(this.items[c]._header)}else{var e=this.items.length-1;a(b).insertAfter(this.items[e]._content)}this.render()},add:function(c,b){this.insert(-1,c,b)},update:function(b,d,c){this.setHeaderContentAt(b,d);this.setContentAt(b,c)},remove:function(b){if(isNaN(b)){b=this.items.length-1}if(!this.items[b]){return}this.items[b]._header.remove();this.items[b]._content.remove();this.items.splice(b,1);var c=this.expandedIndexes.indexOf(b);if(c>-1){this.expandedIndexes.splice(c,1)}this.render()},destroy:function(){this._removeHandlers();this.host.remove()},focus:function(){try{a.each(this.items,function(c,e){var d=this;if(d.disabled==false){d._header.focus();return false}})}catch(b){}},_applyExpandedIndexes:function(){var d=this;var c=this.expandedIndexes.length;for(var b=0;b<c;b++){var e=d.expandedIndexes[b];a.each(this.items,function(f,h){var g=this;if(f==e){g.expandedFlag=true;if(g.expanded==false){d.expandAt(f)}if(d.expandMode=="single"||d.expandMode=="singleFitHeight"||d.expandMode=="toggle"||d.expandMode=="none"){return false}}});a.each(this.items,function(f,h){var g=this;if(f!=e&&g.expandedFlag==false){d.collapseAt(f)}})}a.each(this.items,function(f,g){this.expandedFlag=false})},propertyChangedHandler:function(c,d,g,f){var e=c;var b=f;if(d=="disabled"){c._enabledDisabledCheck()}else{if(d=="expandedIndexes"){c._applyExpandedIndexes()}else{c.refresh()}}},_raiseEvent:function(g,e){var c=this.events[g];var f=new a.Event(c);f.owner=this;f.args=e;f.item=f.args.item;try{var b=this.host.trigger(f)}catch(d){}return b},resize:function(c,b){this.width=c;this.height=b;this._setSize()},_setSize:function(){var e=this;this.headersHeight=0;var d=this.items&&this.items.length>0?parseInt(this.items[0]._header.css("padding-left")):0;var f=this.items&&this.items.length>0?parseInt(this.items[0]._header.css("padding-right")):0;var b=2;var c=d+f+b;if(isNaN(c)){c=12}if(this.width=="auto"){this.host.width(this.width)}else{if(this.width!=null&&this.width.toString().indexOf("%")!=-1){this.host.width(this.width)}else{this.host.width(parseInt(this.width)+c)}}this.host.height(this.height);a.each(this.items,function(g,j){var i=this;var h=e.arrowPosition;if(e.rtl){switch(h){case"left":h="right";break;case"right":h="left";break}}if(h=="right"){i._header_text.css({"float":"left","margin-left":"0px"});i._arrow.css({"float":"right",position:"relative"})}else{if(h=="left"){if(e.width=="auto"){i._header_text.css({"float":"left","margin-left":"17px"});i._arrow.css({"float":"left",position:"absolute"})}else{i._header_text.css({"float":"right","margin-left":"0px"});i._arrow.css({"float":"left",position:"relative"})}}}i._header.height("auto");i._header_text.css("min-height",i._arrow.height());e.headersHeight+=i._header.outerHeight();i._arrow.css("margin-top",i._header_text.height()/2-i._arrow.height()/2)});a.each(this.items,function(g,i){var h=this;if(e.height!="auto"){if(e.expandMode=="single"||e.expandMode=="toggle"||e.expandMode=="multiple"){e.host.css({"overflow-x":"hidden","overflow-y":"auto"})}else{if(e.expandMode=="singleFitHeight"){var j=parseInt(h._content.css("padding-top"))+parseInt(h._content.css("padding-bottom"));if(e.height&&e.height.toString().indexOf("%")>=0){h._content.height(e.host.height()-e.headersHeight-j+2)}else{h._content.height(e.host.height()-e.headersHeight-j)}}}}});e._checkHeight()},_toggle:function(){var b=this;if(this._isTouchDevice==false){switch(this.toggleMode){case"click":a.each(this.items,function(c,e){var d=this;if(d.disabled==false){b.addHandler(d._header,"click.navigationbar"+b.widgetID,function(){b.focusedH=true;b._animate(c)})}});break;case"dblclick":a.each(this.items,function(c,e){var d=this;if(d.disabled==false){b.addHandler(d._header,"dblclick.navigationbar"+b.widgetID,function(){b.focusedH=true;b._animate(c)})}});break;case"none":break}}else{if(this.toggleMode!="none"){a.each(this.items,function(c,e){var d=this;if(d.disabled==false){b.addHandler(d._header,a.jqx.mobile.getTouchEventName("touchstart")+"."+b.widgetID,function(){b._animate(c)})}})}else{return}}},_animate:function(c,b){var d=this;this.eCFlag;var e=this.items[c];if(this.expandMode!="none"&&this.eCFlag!=1){if(this.items[c].expanded==true){if(this.expandMode=="multiple"||this.expandMode=="toggle"){this.collapseAt(c)}}else{this.expandAt(c)}if(!d._isTouchDevice){if(b!=true){e._header.addClass(this.toThemeProperty("jqx-fill-state-hover"));e._header.addClass(this.toThemeProperty("jqx-expander-header-hover"));e._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-top-hover"));e._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-down-hover"))}else{e._header.removeClass(this.toThemeProperty("jqx-fill-state-hover"));e._header.removeClass(this.toThemeProperty("jqx-expander-header-hover"));e._arrow.removeClass(this.toThemeProperty("jqx-expander-arrow-top-hover"));e._arrow.removeClass(this.toThemeProperty("jqx-expander-arrow-down-hover"))}}}},_removeHandlers:function(){var b=this;this.removeHandler(this.host,"keydown.navigationbar"+this.widgetID);a.each(this.items,function(c,e){var d=this;b.removeHandler(d._header,"click.navigationbar"+b.widgetID);b.removeHandler(d._header,"dblclick.navigationbar"+b.widgetID);b.removeHandler(d._header,"mouseenter.navigationbar"+b.widgetID);b.removeHandler(d._header,"mouseleave.navigationbar"+b.widgetID);b.removeHandler(d._header,"focus.navigationbar"+b.widgetID);b.removeHandler(d._header,"blur.navigationbar"+b.widgetID);b.removeHandler(d._content,"focus.navigationbar"+b.widgetID);b.removeHandler(d._content,"blur.navigationbar"+b.widgetID);b.removeHandler(d._header_text,"focus.navigationbar"+b.widgetID);b.removeHandler(d._arrow,"focus.navigationbar"+b.widgetID)})},_setTheme:function(){var b=this;this.host.addClass(this.toThemeProperty("jqx-reset"));this.host.addClass(this.toThemeProperty("jqx-widget"));if(this.rtl==true){this.host.addClass(this.toThemeProperty("jqx-rtl"))}a.each(this.items,function(c,e){var d=this;d._header.css("position","relative");d._content.css("position","relative");d._header.addClass(b.toThemeProperty("jqx-widget-header"));d._header.addClass(b.toThemeProperty("jqx-item"));d._content.addClass(b.toThemeProperty("jqx-widget-content"));if(d.disabled==false){d._header.removeClass(b.toThemeProperty("jqx-fill-state-disabled"));d._content.removeClass(b.toThemeProperty("jqx-fill-state-disabled"));if(d.expanded==true){d._header.addClass(b.toThemeProperty("jqx-fill-state-pressed"));d._header.addClass(b.toThemeProperty("jqx-expander-header-expanded"))}else{d._header.addClass(b.toThemeProperty("jqx-fill-state-normal"));d._header.removeClass(b.toThemeProperty("jqx-expander-header-expanded"))}if(!b._isTouchDevice){b.addHandler(d._header,"mouseenter.navigationbar"+b.widgetID,function(){if(d._expandChecker==1){if(!d.focusedH){d._header.css("z-index",5)}d._header.removeClass(b.toThemeProperty("jqx-fill-state-normal"));d._header.removeClass(b.toThemeProperty("jqx-fill-state-pressed"));d._header.addClass(b.toThemeProperty("jqx-fill-state-hover"));d._header.addClass(b.toThemeProperty("jqx-expander-header-hover"));d._arrow.addClass(b.toThemeProperty("jqx-expander-arrow-top-hover"));d._arrow.addClass(b.toThemeProperty("jqx-expander-arrow-down-hover"));if(d.expanded){d._arrow.addClass(b.toThemeProperty("jqx-icon-arrow-up-hover"))}else{d._arrow.addClass(b.toThemeProperty("jqx-icon-arrow-down-hover"))}}});b.addHandler(d._header,"mouseleave.navigationbar"+b.widgetID,function(){if(!d.focusedH){d._header.css("z-index",0)}d._header.removeClass(b.toThemeProperty("jqx-fill-state-hover"));d._header.removeClass(b.toThemeProperty("jqx-expander-header-hover"));d._arrow.removeClass(b.toThemeProperty("jqx-expander-arrow-top-hover"));d._arrow.removeClass(b.toThemeProperty("jqx-expander-arrow-down-hover"));if(d._expandChecker==1){d._header.addClass(b.toThemeProperty("jqx-fill-state-normal"))}else{d._header.addClass(b.toThemeProperty("jqx-fill-state-pressed"))}d._arrow.removeClass(b.toThemeProperty("jqx-icon-arrow-up-hover"));d._arrow.removeClass(b.toThemeProperty("jqx-icon-arrow-down-hover"))})}}else{d._header.addClass(b.toThemeProperty("jqx-fill-state-disabled"));d._content.addClass(b.toThemeProperty("jqx-fill-state-disabled"))}b.host.addClass(b.toThemeProperty("jqx-navigationbar"));d._header.addClass(b.toThemeProperty("jqx-expander-header"));d._content.addClass(b.toThemeProperty("jqx-expander-content"));d._content.addClass(b.toThemeProperty("jqx-expander-content-bottom"));if(c!=0){d._header.css("margin-top",-1)}d._arrow.addClass(b.toThemeProperty("jqx-expander-arrow"))})},_checkContent:function(b){var d=this.items[b];var c=d._content;this._cntntEmpty=/^\s*$/.test(this.items[b]._content.html());if(this._cntntEmpty==true){c.css("display","none");c.height(0);c.addClass(this.toThemeProperty("jqx-expander-content-empty"))}else{if(d.expanded){c.css("display","block")}if(this.expandMode=="singleFitHeight"){var e=1;if(b!=0){e=2}c.height(this.host.height()-this.headersHeight+e)}else{c.height("auto")}c.removeClass(this.toThemeProperty("jqx-expander-content-empty"))}},_checkHeight:function(){var f=this;this.totalHeight=0;this.heightFlag;var e=this.items&&this.items.length>0?parseInt(this.items[0]._header.css("padding-left")):0;var g=this.items&&this.items.length>0?parseInt(this.items[0]._header.css("padding-right")):0;var b=2;var c=e+g+b;if(isNaN(c)){c=12}var d=17;a.each(this.items,function(h,j){var i=this;f.totalHeight+=(i.expanded?i._content.outerHeight():0)+i._header.outerHeight()});if(this.width!="auto"&&this.height!="auto"&&this.expandMode!="singleFitHeight"){if(this.totalHeight>this.host.height()){this.host.width(this.width+c+d);this.heightFlag=true}else{this.host.width(this.width+c);this.heightFlag=false}}},_enabledDisabledCheck:function(){var b=this;if(this.disabled==true){a.each(this.items,function(c,e){var d=this;d.disabled=true})}else{a.each(this.items,function(c,e){var d=this;d.disabled=false})}},_updateExpandedIndexes:function(){var b=this;this.expandedIndexes=[];a.each(this.items,function(c,e){var d=this;if(d.expanded==true){b.expandedIndexes.push(c);if(b.expandMode=="single"||b.expandMode=="singleFitHeight"||b.expandMode=="toggle"||b.expandMode=="none"){return false}}})},_keyBoard:function(){var b=this;this._focus();this.addHandler(this.host,"keydown.navigationbar"+this.widgetID,function(c){var d=false;a.each(b.items,function(e,h){var g=this;var f=b.items.length;if((g.focusedH==true||g.focusedC==true)&&g.disabled==false){switch(c.keyCode){case 13:case 32:if(b.toggleMode!="none"){if(g.focusedH==true){b._animate(e,true)}d=true}break;case 37:if(e!=0){b.items[e-1]._header.focus()}else{var f=b.items.length;b.items[f-1]._header.focus()}d=true;break;case 38:if(c.ctrlKey==false){if(e!=0){b.items[e-1]._header.focus()}else{var f=b.items.length;b.items[f-1]._header.focus()}}else{if(g.focusedC==true){g._header.focus()}}d=true;break;case 39:if(e!=f-1){b.items[e+1]._header.focus()}else{b.items[0]._header.focus()}d=true;break;case 40:if(c.ctrlKey==false){if(e!=f-1){b.items[e+1]._header.focus()}else{b.items[0]._header.focus()}}else{if(g.expanded==true){g._content.focus()}}d=true;break;case 35:if(e!=f-1){b.items[f-1]._header.focus()}d=true;break;case 36:if(e!=0){b.items[0]._header.focus()}d=true;break}return false}});if(d&&c.preventDefault){c.preventDefault()}return !d})},_focus:function(){var b=this;if(this.disabled){return}a.each(this.items,function(c,e){var d=this;b.addHandler(d._header,"focus.navigationbar"+this.widgetID,function(){d.focusedH=true;a.jqx.aria(d._header,"aria-selected",true);d._header.addClass(b.toThemeProperty("jqx-fill-state-focus"));d._header.css("z-index",10)});b.addHandler(d._header,"blur.navigationbar"+this.widgetID,function(){d.focusedH=false;a.jqx.aria(d._header,"aria-selected",false);if(d._header.hasClass("jqx-expander-header-hover")){d._header.css("z-index",5)}else{d._header.css("z-index",0)}d._header.removeClass(b.toThemeProperty("jqx-fill-state-focus"))});b.addHandler(d._header_text,"focus.navigationbar"+this.widgetID,function(){d._header.focus()});b.addHandler(d._arrow,"focus.navigationbar"+this.widgetID,function(){d._header.focus()});b.addHandler(d._content,"focus.navigationbar"+this.widgetID,function(){d.focusedC=true;d._content.addClass(b.toThemeProperty("jqx-fill-state-focus"))});b.addHandler(d._content,"blur.navigationbar"+this.widgetID,function(){d.focusedC=false;d._content.removeClass(b.toThemeProperty("jqx-fill-state-focus"))})})}})})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxExpander","",{});a.extend(a.jqx._jqxExpander.prototype,{defineInstance:function(){var b={width:"auto",height:"auto",expanded:true,expandAnimationDuration:259,collapseAnimationDuration:250,animationType:"slide",toggleMode:"click",showArrow:true,arrowPosition:"right",headerPosition:"top",disabled:false,initContent:null,rtl:false,easing:"easeInOutSine",aria:{"aria-disabled":{name:"disabled",type:"boolean"}},events:["expanding","expanded","collapsing","collapsed","resize"]};a.extend(true,this,b);return b},createInstance:function(b){this._isTouchDevice=a.jqx.mobile.isTouchDevice();a.jqx.aria(this);this._cachedHTMLStructure=this.host.html();this.render()},expand:function(){if(this.disabled==false&&this.expanded==false&&this._expandChecker==1){var b=this;this._expandChecker=0;this._raiseEvent("0");this._header.removeClass(this.toThemeProperty("jqx-fill-state-normal"));this._header.addClass(this.toThemeProperty("jqx-fill-state-pressed"));this._header.addClass(this.toThemeProperty("jqx-expander-header-expanded"));if(this.headerPosition=="top"){this._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-down"));this._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-down-hover"));this._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-up-hover"));this._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-down-selected"));this._arrow.removeClass(this.toThemeProperty("jqx-expander-arrow-top"));this._arrow.addClass(this.toThemeProperty("jqx-icon-arrow-up"));this._arrow.addClass(this.toThemeProperty("jqx-icon-arrow-up-selected"));this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-bottom"));this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-expanded"))}else{if(this.headerPosition=="bottom"){this._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-up"));this._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-up-selected"));this._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-down-hover"));this._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-up-hover"));this._arrow.removeClass(this.toThemeProperty("jqx-expander-arrow-bottom"));this._arrow.addClass(this.toThemeProperty("jqx-icon-arrow-down"));this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-top"));this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-expanded-top"))}}switch(this.animationType){case"slide":if(this.headerPosition=="top"){this._content.slideDown(this.expandAnimationDuration,this.easing,function(){b.expanded=true;a.jqx.aria(b._header,"aria-expanded",true);a.jqx.aria(b._content,"aria-hidden",false);b._raiseEvent("1");if(b.initContent&&b._initialized==false){b.initContent();b._initialized=true}})}else{if(this.headerPosition=="bottom"){this._content.css({display:"inherit",height:0});if(a.jqx.browser.msie&&a.jqx.browser.version<8){this._content.css("display","block")}if(this._cntntEmpty==true){this._content.animate({height:0},this.expandAnimationDuration,this.easing,function(){b.expanded=true;a.jqx.aria(b._header,"aria-expanded",true);a.jqx.aria(b._content,"aria-hidden",false);b._raiseEvent("1");if(b.initContent&&b._initialized==false){b.initContent();b._initialized=true}})}else{this._content.animate({height:this._contentHeight},this.expandAnimationDuration,this.easing,function(){b.expanded=true;a.jqx.aria(b._header,"aria-expanded",true);a.jqx.aria(b._content,"aria-hidden",false);b._raiseEvent("1");if(b.initContent&&b._initialized==false){b.initContent();b._initialized=true}})}}}break;case"fade":this._content.fadeIn(this.expandAnimationDuration,this.easing,function(){b.expanded=true;a.jqx.aria(b._header,"aria-expanded",true);a.jqx.aria(b._content,"aria-hidden",false);b._raiseEvent("1");if(b.initContent&&b._initialized==false){b.initContent();b._initialized=true}});break;case"none":this._content.css("display","inherit");this.expanded=true;a.jqx.aria(b._header,"aria-expanded",true);a.jqx.aria(b._content,"aria-hidden",false);this._raiseEvent("1");if(this.initContent&&this._initialized==false){this.initContent();this._initialized=true}break}}},collapse:function(){if(this.disabled==false&&this.expanded==true&&this._expandChecker==0){var b=this;this._expandChecker=1;this._raiseEvent("2");this._header.removeClass(this.toThemeProperty("jqx-fill-state-pressed"));this._header.removeClass(this.toThemeProperty("jqx-expander-header-expanded"));this._header.addClass(this.toThemeProperty("jqx-fill-state-normal"));if(this.headerPosition=="top"){this._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-up"));this._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-up-selected"));this._arrow.removeClass(this.toThemeProperty("jqx-expander-arrow-bottom"));this._arrow.removeClass(this.toThemeProperty("jqx-expander-arrow-expanded"));this._arrow.addClass(this.toThemeProperty("jqx-icon-arrow-down"));if(b._hovered){this._arrow.addClass(this.toThemeProperty("jqx-icon-arrow-down-hover"))}this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-top"))}else{if(this.headerPosition=="bottom"){this._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-down"));this._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-down-selected"));this._arrow.removeClass(this.toThemeProperty("jqx-expander-arrow-top"));this._arrow.removeClass(this.toThemeProperty("jqx-expander-arrow-expanded-top"));this._arrow.addClass(this.toThemeProperty("jqx-icon-arrow-up"));this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-bottom"));if(b._hovered){this._arrow.addClass(this.toThemeProperty("jqx-icon-arrow-up-hover"))}}}switch(this.animationType){case"slide":if(this.headerPosition=="top"){this._content.slideUp(this.collapseAnimationDuration,this.easing,function(){b.expanded=false;a.jqx.aria(b._header,"aria-expanded",false);a.jqx.aria(b._content,"aria-hidden",true);b._raiseEvent("3")})}else{if(this.headerPosition=="bottom"){this._content.animate({height:0},this.expandAnimationDuration,function(){b._content.css("display","none");b.expanded=false;a.jqx.aria(b._header,"aria-expanded",false);a.jqx.aria(b._content,"aria-hidden",true);b._raiseEvent("3")})}}break;case"fade":this._content.fadeOut(this.collapseAnimationDuration,this.easing,function(){b.expanded=false;a.jqx.aria(b._header,"aria-expanded",false);a.jqx.aria(b._content,"aria-hidden",true);b._raiseEvent("3")});break;case"none":this._content.css("display","none");this.expanded=false;a.jqx.aria(b._header,"aria-expanded",false);a.jqx.aria(b._content,"aria-hidden",true);this._raiseEvent("3");break}}},setHeaderContent:function(b){this._header_text.html(b);this.invalidate()},getHeaderContent:function(){return this._header_text.html()},setContent:function(b){this._content.html(b);this._checkContent();this.invalidate()},getContent:function(){return this._content.html()},enable:function(){this.disabled=false;this.refresh();a.jqx.aria(this,"aria-disabled",false)},disable:function(){this.disabled=true;this.refresh();a.jqx.aria(this,"aria-disabled",true)},invalidate:function(){if(a.jqx.isHidden(this.host)){return}this._setSize()},refresh:function(b){if(b==true){return}this._removeHandlers();if(this.showArrow==true){this._arrow.css("display","inherit")}else{this._arrow.css("display","none")}this._setTheme();this._setSize();if(this.disabled==false){this._toggle()}this._keyBoard()},render:function(){this.widgetID=this.element.id;if(this._header){this._header.removeClass(this.toThemeProperty("jqx-expander-header-content"));this._header.removeClass(this.toThemeProperty("jqx-expander-header"));this._header.removeClass(this.toThemeProperty("jqx-expander-header-expanded"));this._header.removeClass(this.toThemeProperty("jqx-widget-header"));this._header_text.removeClass(this.toThemeProperty("jqx-expander-header-content"));this._header_text.removeClass(this.toThemeProperty("jqx-expander-header"));this._header_text.removeClass(this.toThemeProperty("jqx-widget-header"));this._header_text.removeClass(this.toThemeProperty("jqx-expander-header-expanded"));this._header.attr("tabindex",null);this._content.attr("tabindex",null);this._header.css("margin-top",0);this._header[0].innerHTML=this._header_text[0].innerHTML;if(this.headerPosition=="bottom"){this._header.detach();this.host.prepend(this._header)}}this._header_temp=this.host.children("div:eq(0)");this._header_temp.wrap("<div></div>");this._header=this.host.children("div:eq(0)");this._content=this.host.children("div:eq(1)");if(this.headerPosition=="bottom"){this._header.detach();this.host.append(this._header)}this._header_text=this._header.children("div:eq(0)");var d=this._header_text[0].className;this._header.addClass(d);this._header_text.removeClass();if(!this.rtl){this._header_text.addClass(this.toThemeProperty("jqx-expander-header-content"))}else{this._header_text.addClass(this.toThemeProperty("jqx-expander-header-content-rtl"))}this._header.append("<div></div>");this._arrow=this._header.children("div:eq(1)");if(this.showArrow==true){this._arrow.css("display","inherit")}else{this._arrow.css("display","none")}this.tI=-1;if(this._header.attr("tabindex")==undefined){this.tI++;this._header.attr("tabindex",this.tI)}if(this._content.attr("tabindex")==undefined){this.tI++;this._content.attr("tabindex",this.tI)}this._setTheme();this._checkContent();var b="Invalid jqxExpander structure. Please add only two child div elements to your jqxExpander div that will represent the expander's header and content.";try{if(this._header.length==0||this._content.length==0||this.host.children().length<2||this.host.children().length>2){throw b}}catch(c){alert(c)}this._expandChecker;this._initialized;if(this.expanded==true){if(this.headerPosition=="top"){this._arrow.addClass(this.toThemeProperty("jqx-icon-arrow-up"));this._arrow.addClass(this.toThemeProperty("jqx-icon-arrow-up-selected"));this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-bottom"));this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-expanded"))}else{if(this.headerPosition=="bottom"){this._arrow.addClass(this.toThemeProperty("jqx-icon-arrow-down"));this._arrow.addClass(this.toThemeProperty("jqx-icon-arrow-down-selected"));this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-top"));this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-expanded-top"))}}if(this.initContent){this._setSize();this.initContent()}this._initialized=true;this._expandChecker=0}else{if(this.expanded==false){this._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-down-selected"));this._arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-up-selected"));if(this.headerPosition=="top"){this._arrow.addClass(this.toThemeProperty("jqx-icon-arrow-down"));this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-top"))}else{if(this.headerPosition=="bottom"){this._arrow.addClass(this.toThemeProperty("jqx-icon-arrow-up"));this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-bottom"))}}this._initialized=false;this._expandChecker=1;this._content.css("display","none")}}this._setSize();if(this.disabled==false){this._toggle()}this._keyBoard();var e=this;a.jqx.utilities.resize(this.host,function(){e.invalidate()})},destroy:function(){this.removeHandler(a(window),"resize.expander"+this.widgetID);this.host.remove();a(this.element).removeData("jqxExpander")},focus:function(){try{if(this.disabled==false){this._header.focus()}}catch(b){}},propertyChangedHandler:function(b,c,e,d){if(c=="expanded"){if(d==true&&e==false){this.expanded=false;this.expand()}else{if(d==false&&e==true){this.expanded=true;this.collapse()}}}else{this.refresh()}},_raiseEvent:function(g,e){var c=this.events[g];var f=new a.Event(c);f.owner=this;f.args=e;try{var b=this.host.trigger(f)}catch(d){}return b},resize:function(c,b){this.width=c;this.height=b;this._setSize()},_setSize:function(){this.host.width(this.width);this.host.height(this.height);this._header.height("auto");this._header.css("min-height",this._arrow.height());var c=this.arrowPosition;if(this.rtl){switch(c){case"left":c="right";break;case"right":c="left";break}}if(c=="right"){this._header_text.css({"float":"left","margin-left":"0px"});this._arrow.css({"float":"right",position:"relative"})}else{if(c=="left"){if(this.width=="auto"){this._header_text.css({"float":"left","margin-left":"17px"});this._arrow.css({"float":"left",position:"absolute"})}else{this._header_text.css({"float":"right","margin-left":"0px"});this._arrow.css({"float":"left",position:"relative"})}}}this._arrow.css("margin-top",this._header_text.height()/2-this._arrow.height()/2);if(this.height=="auto"){this._content.height("auto");this._contentHeight=this._content.height()}else{this._content.height("auto");var b=Math.round(this.host.height())-Math.round(this._header.outerHeight())-1;if(b<0){b=0}if(!this._contentHeight){this._contentHeight=this._content.height()}if(b!=this._contentHeight){this._content.height(b);this._contentHeight=Math.round(this._content.outerHeight())}else{this._content.height(this._contentHeight)}}},_toggle:function(){var b=this;if(this._isTouchDevice==false){this._header.removeClass(this.toThemeProperty("jqx-expander-header-disabled"));switch(this.toggleMode){case"click":this.addHandler(this._header,"click.expander"+this.widgetID,function(){b._animate()});break;case"dblclick":this.addHandler(this._header,"dblclick.expander"+this.widgetID,function(){b._animate()});break;case"none":this._header.addClass(this.toThemeProperty("jqx-expander-header-disabled"));break}}else{if(this.toggleMode!="none"){this.addHandler(this._header,a.jqx.mobile.getTouchEventName("touchstart")+"."+this.widgetID,function(){b._animate()})}else{return}}},_animate:function(){if(this.expanded==true){this.collapse();this._header.addClass(this.toThemeProperty("jqx-fill-state-hover"));this._header.addClass(this.toThemeProperty("jqx-expander-header-hover"));if(this.headerPosition=="top"){this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-top-hover"));this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-down-hover"))}else{if(this.headerPosition=="bottom"){this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-bottom-hover"));this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow-up-hover"))}}}else{this.expand();this._header.removeClass(this.toThemeProperty("jqx-fill-state-hover"));this._header.removeClass(this.toThemeProperty("jqx-expander-header-hover"));if(this.headerPosition=="top"){this._arrow.removeClass(this.toThemeProperty("jqx-expander-arrow-top-hover"));this._arrow.removeClass(this.toThemeProperty("jqx-expander-arrow-down-hover"))}else{if(this.headerPosition=="bottom"){this._arrow.removeClass(this.toThemeProperty("jqx-expander-arrow-bottom-hover"));this._arrow.removeClass(this.toThemeProperty("jqx-expander-arrow-up-hover"))}}}},_removeHandlers:function(){this.removeHandler(this._header,"click.expander"+this.widgetID);this.removeHandler(this._header,"dblclick.expander"+this.widgetID);this.removeHandler(this._header,"mouseenter.expander"+this.widgetID);this.removeHandler(this._header,"mouseleave.expander"+this.widgetID)},_setTheme:function(){var b=this;this.host.addClass(this.toThemeProperty("jqx-widget"));this._header.addClass(this.toThemeProperty("jqx-widget-header"));this._content.addClass(this.toThemeProperty("jqx-widget-content"));if(this.rtl==true){this.host.addClass(this.toThemeProperty("jqx-rtl"))}if(this.disabled==false){this._header.removeClass(this.toThemeProperty("jqx-expander-header-disabled"));this.host.removeClass(this.toThemeProperty("jqx-fill-state-disabled"));if(this.expanded==true){this._header.addClass(this.toThemeProperty("jqx-fill-state-pressed"));this._header.addClass(this.toThemeProperty("jqx-expander-header-expanded"))}else{this._header.addClass(this.toThemeProperty("jqx-fill-state-normal"));this._header.removeClass(this.toThemeProperty("jqx-expander-header-expanded"))}this._hovered=false;if(!b._isTouchDevice){this.addHandler(this._header,"mouseenter.expander"+this.widgetID,function(){b._hovered=true;if(b._expandChecker==1){b._header.removeClass(b.toThemeProperty("jqx-fill-state-normal"));b._header.removeClass(b.toThemeProperty("jqx-fill-state-pressed"));b._header.addClass(b.toThemeProperty("jqx-fill-state-hover"));b._header.addClass(b.toThemeProperty("jqx-expander-header-hover"));if(b.headerPosition=="top"){if(b.expanded){b._arrow.addClass(b.toThemeProperty("jqx-icon-arrow-up-hover"))}else{b._arrow.addClass(b.toThemeProperty("jqx-icon-arrow-down-hover"))}b._arrow.addClass(b.toThemeProperty("jqx-expander-arrow-top-hover"));b._arrow.addClass(b.toThemeProperty("jqx-expander-arrow-down-hover"))}else{if(b.headerPosition=="bottom"){if(b.expanded){b._arrow.addClass(b.toThemeProperty("jqx-icon-arrow-down-hover"))}b._arrow.addClass(b.toThemeProperty("jqx-expander-arrow-bottom-hover"));b._arrow.addClass(b.toThemeProperty("jqx-expander-arrow-up-hover"))}}}});this.addHandler(this._header,"mouseleave.expander"+this.widgetID,function(){b._hovered=false;b._header.removeClass(b.toThemeProperty("jqx-fill-state-hover"));b._arrow.removeClass(b.toThemeProperty("jqx-icon-arrow-up-hover"));b._arrow.removeClass(b.toThemeProperty("jqx-icon-arrow-down-hover"));b._header.removeClass(b.toThemeProperty("jqx-expander-header-hover"));if(b.headerPosition=="top"){b._arrow.removeClass(b.toThemeProperty("jqx-expander-arrow-top-hover"));b._arrow.removeClass(b.toThemeProperty("jqx-expander-arrow-down-hover"))}else{if(b.headerPosition=="bottom"){b._arrow.removeClass(b.toThemeProperty("jqx-expander-arrow-bottom-hover"));b._arrow.removeClass(b.toThemeProperty("jqx-expander-arrow-up-hover"))}}if(b._expandChecker==1){b._header.addClass(b.toThemeProperty("jqx-fill-state-normal"))}else{b._header.addClass(b.toThemeProperty("jqx-fill-state-pressed"))}})}}else{this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled"));this._header.addClass(this.toThemeProperty("jqx-expander-header-disabled"))}this.host.addClass(this.toThemeProperty("jqx-expander"));this._header.addClass(this.toThemeProperty("jqx-expander-header"));this._content.addClass(this.toThemeProperty("jqx-expander-content"));if(this.headerPosition=="top"){this._content.addClass(this.toThemeProperty("jqx-expander-content-bottom"))}else{if(this.headerPosition=="bottom"){this._content.addClass(this.toThemeProperty("jqx-expander-content-top"))}}this._arrow.addClass(this.toThemeProperty("jqx-expander-arrow"))},_checkContent:function(){this._cntntEmpty=/^\s*$/.test(this._content.html());if(this._cntntEmpty==true){this._content.height(0);this._content.addClass(this.toThemeProperty("jqx-expander-content-empty"))}else{this._content.height(this._contentHeight);this._content.removeClass(this.toThemeProperty("jqx-expander-content-empty"))}},_keyBoard:function(){var b=this;this._focus();this.addHandler(this.host,"keydown.expander"+this.widgetID,function(c){var d=false;if((b.focusedH==true||b.focusedC==true)&&b.disabled==false){switch(c.keyCode){case 13:case 32:if(b.toggleMode!="none"){if(b.focusedH==true){b._animate()}d=true}break;case 38:if(c.ctrlKey==true&&b.focusedC==true){b._header.focus()}d=true;break;case 40:if(c.ctrlKey==true&&b.focusedH==true){b._content.focus()}d=true;break}return true}if(d&&c.preventDefault){c.preventDefault()}return !d})},_focus:function(){var b=this;this.addHandler(this._header,"focus.expander"+this.widgetID,function(){b.focusedH=true;a.jqx.aria(b._header,"aria-selected",true);b._header.addClass(b.toThemeProperty("jqx-fill-state-focus"))});this.addHandler(this._header,"blur.expander"+this.widgetID,function(){b.focusedH=false;a.jqx.aria(b._header,"aria-selected",false);b._header.removeClass(b.toThemeProperty("jqx-fill-state-focus"))});this.addHandler(this._header_text,"focus.expander"+this.widgetID,function(){b._header.focus()});this.addHandler(this._arrow,"focus.expander"+this.widgetID,function(){b._header.focus()});this.addHandler(this._content,"focus.expander"+this.widgetID,function(){b.focusedC=true;b._content.addClass(b.toThemeProperty("jqx-fill-state-focus"))});this.addHandler(this._content,"blur.expander"+this.widgetID,function(){b.focusedC=false;b._content.removeClass(b.toThemeProperty("jqx-fill-state-focus"))})}})})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxValidator","",{});a.extend(a.jqx._jqxValidator.prototype,{defineInstance:function(){var b={rules:null,scroll:true,focus:true,scrollDuration:300,scrollCallback:null,position:"right",arrow:true,animation:"fade",animationDuration:150,closeOnClick:true,onError:null,onSuccess:null,ownerElement:null,_events:["validationError","validationSuccess"],hintPositionOffset:5,_inputHint:[],rtl:false,hintType:"tooltip"};a.extend(true,this,b);return b},createInstance:function(){if(this.hintType=="label"&&this.animationDuration==150){this.animationDuration=0}this._configureInputs();this._removeEventListeners();this._addEventListeners()},destroy:function(){this._removeEventListeners();this.hide()},validate:function(q){var b=true,p,f=Infinity,j,h,c,k=[],o;this.updatePosition();var l=this;var d=0;for(var g=0;g<this.rules.length;g+=1){if(typeof this.rules[g].rule==="function"){d++}}this.positions=new Array();for(var g=0;g<this.rules.length;g+=1){var n=a(this.rules[g].input);if(typeof this.rules[g].rule==="function"){var m=function(s,r){p=s;if(false==p){b=false;var i=a(r.input);c=a(r.input);k.push(c);var t=c.offset();if(t){j=t.top;if(f>j){f=j;h=c}}}d--;if(d==0){if(typeof q==="function"){l._handleValidation(b,f,h,k);if(q){q(b)}}}};this._validateRule(this.rules[g],m)}else{p=this._validateRule(this.rules[g])}if(false==p){b=false;c=a(this.rules[g].input);k.push(c);var e=c.offset();if(e){j=e.top;if(f>j){f=j;h=c}}}}if(d==0){this._handleValidation(b,f,h,k);return b}else{return undefined}},validateInput:function(b){var e=this._getRulesForInput(b),d=true;for(var c=0;c<e.length;c+=1){if(!this._validateRule(e[c])){d=false}}return d},hideHint:function(b){var d=this._getRulesForInput(b);for(var c=0;c<d.length;c+=1){this._hideHintByRule(d[c])}},hide:function(){var c;for(var b=0;b<this.rules.length;b+=1){c=this.rules[b];this._hideHintByRule(this.rules[b])}},updatePosition:function(){var c;this.positions=new Array();for(var b=0;b<this.rules.length;b+=1){c=this.rules[b];if(c.hint){this._hintLayout(c.hint,a(c.input),c.position,c)}}},_getRulesForInput:function(b){var d=[];for(var c=0;c<this.rules.length;c+=1){if(this.rules[c].input===b){d.push(this.rules[c])}}return d},_validateRule:function(f,i){var b=a(f.input),h,e=true;var d=this;var g=function(k){if(!k){var j=d.animation;d.animation=null;if(f.hint){d._hideHintByRule(f)}if(a(b).css("display")=="none"){d._hideHintByRule(f);return}if(a(b).parents().length==0){d._hideHintByRule(f);return}h=f.hintRender.apply(d,[f.message,b]);d._hintLayout(h,b,f.position,f);d._showHint(h);f.hint=h;d._removeLowPriorityHints(f);if(i){i(false,f)}d.animation=j}else{d._hideHintByRule(f);if(i){i(true,f)}}};var c=false;if(typeof f.rule==="function"){c=f.rule.call(this,b,g);if(c==true&&i){i(true,f)}}if(typeof f.rule==="function"&&c==false){if(typeof f.hintRender==="function"&&!f.hint&&!this._higherPriorityActive(f)&&b.is(":visible")){h=f.hintRender.apply(this,[f.message,b]);this._removeLowPriorityHints(f);this._hintLayout(h,b,f.position,f);this._showHint(h);f.hint=h}e=false;if(i){i(false,f)}}else{this._hideHintByRule(f)}return e},_hideHintByRule:function(e){var c=a(e.input);var b=this,f;var d=function(){if(b.hintType!="label"){return}var g=b;if(g.position=="top"||g.position=="left"){if(c.prev().hasClass(".jqx-validator-error-label")){return}}else{if(c.next().hasClass(".jqx-validator-error-label")){return}}if(c[0].nodeName.toLowerCase()!="input"){if(c.find("input").length>0){if(c.find(".jqx-input").length>0){c.find(".jqx-input").removeClass(g.toThemeProperty("jqx-validator-error-element"))}else{if(c.is(".jqx-checkbox")){c.find(".jqx-checkbox-default").removeClass(g.toThemeProperty("jqx-validator-error-element"))}}if(c.is(".jqx-radiobutton")){c.find(".jqx-radiobutton-default").removeClass(g.toThemeProperty("jqx-validator-error-element"))}else{c.removeClass(g.toThemeProperty("jqx-validator-error-element"))}}}else{c.removeClass(g.toThemeProperty("jqx-validator-error-element"))}};if(e){f=e.hint;if(f){if(this.positions){if(this.positions[Math.round(f.offset().top)+"_"+Math.round(f.offset().left)]){this.positions[Math.round(f.offset().top)+"_"+Math.round(f.offset().left)]=null}}if(this.animation==="fade"){f.fadeOut(this.animationDuration,function(){f.remove();d()})}else{f.remove();d()}}e.hint=null}},_handleValidation:function(b,e,d,c){if(!b){this._scrollHandler(e);if(this.focus){d.focus()}this._raiseEvent(0,{invalidInputs:c});if(typeof this.onError==="function"){this.onError(c)}}else{this._raiseEvent(1);if(typeof this.onSuccess==="function"){this.onSuccess()}}},_scrollHandler:function(c){if(this.scroll){var b=this;a("html,body").animate({scrollTop:c},this.scrollDuration,function(){if(typeof b.scrollCallback==="function"){b.scrollCallback.call(b)}})}},_higherPriorityActive:function(d){var e=false,c;for(var b=this.rules.length-1;b>=0;b-=1){c=this.rules[b];if(e&&c.input===d.input&&c.hint){return true}if(c===d){e=true}}return false},_removeLowPriorityHints:function(d){var e=false,c;for(var b=0;b<this.rules.length;b+=1){c=this.rules[b];if(e&&c.input===d.input){this._hideHintByRule(c)}if(c===d){e=true}}},_getHintRuleByInput:function(b){var d;for(var c=0;c<this.rules.length;c+=1){d=this.rules[c];if(a(d.input)[0]===b[0]&&d.hint){return d}}return null},_removeEventListeners:function(){var f,b,e;for(var d=0;d<this.rules.length;d+=1){f=this.rules[d];e=f.action.split(",");b=a(f.input);for(var c=0;c<e.length;c+=1){this.removeHandler(b,a.trim(e[c])+".jqx-validator")}}},_addEventListeners:function(){var f,c;if(this.host.parents(".jqx-window").length>0){var b=this;var g=function(){b.updatePosition()};var e=this.host.parents(".jqx-window");this.addHandler(e,"closed",function(){b.hide()});this.addHandler(e,"moved",g);this.addHandler(e,"moving",g);this.addHandler(e,"resized",g);this.addHandler(e,"resizing",g);this.addHandler(a(document.parentWindow),"scroll",function(){if(b.scroll){g()}})}for(var d=0;d<this.rules.length;d+=1){f=this.rules[d];c=a(f.input);this._addListenerTo(c,f)}},_addListenerTo:function(c,h){var b=this,f=h.action.split(",");var e=false;if(this._isjQWidget(c)){e=true}for(var d=0;d<f.length;d+=1){var g=a.trim(f[d]);if(e&&(g=="blur"||g=="focus")){if(c&&c[0].nodeName.toLowerCase()!="input"){c=c.find("input")}}this.addHandler(c,g+".jqx-validator",function(i){b._validateRule(h)})}},_configureInputs:function(){var b,d;this.rules=this.rules||[];for(var c=0;c<this.rules.length;c+=1){this._handleInput(c)}},_handleInput:function(b){var c=this.rules[b];if(!c.position){c.position=this.position}if(!c.message){c.message="Validation Failed!"}if(!c.action){c.action="blur"}if(!c.hintRender){c.hintRender=this._hintRender}if(!c.rule){c.rule=null}else{this._handleRule(c)}},_handleRule:function(f){var c=f.rule,e,d,b=false;if(typeof c==="string"){if(c.indexOf("=")>=0){c=c.split("=");d=c[1].split(",");c=c[0]}e=this["_"+c];if(e){f.rule=function(g,h){return e.apply(this,[g].concat(d))}}else{b=true}}else{if(typeof c!=="function"){b=true}else{f.rule=c}}if(b){throw new Error("Wrong parameter!")}},_required:function(b){switch(this._getType(b)){case"textarea":case"password":case"jqx-input":case"text":var d=a.data(b[0]);if(d.jqxMaskedInput){var e=b.jqxMaskedInput("promptChar"),c=b.jqxMaskedInput("value");return c&&c.indexOf(e)<0}else{if(d.jqxNumberInput){return b.jqxNumberInput("inputValue")!==""}else{if(d.jqxDateTimeInput){return true}else{return a.trim(b.val())!==""}}}case"checkbox":return b.is(":checked");case"radio":return b.is(":checked");case"div":if(b.is(".jqx-checkbox")){return b.jqxCheckBox("checked")}if(b.is(".jqx-radiobutton")){return b.jqxRadioButton("checked")}return false}return false},_notNumber:function(b){return this._validateText(b,function(d){if(d==""){return true}var c=/\d/;return !c.test(d)})},_startWithLetter:function(b){return this._validateText(b,function(d){if(d==""){return true}var c=/\d/;return !c.test(d.substring(0,1))})},_number:function(b){return this._validateText(b,function(d){if(d==""){return true}var c=new Number(d);return !isNaN(c)&&isFinite(c)})},_phone:function(b){return this._validateText(b,function(d){if(d==""){return true}var c=/^\(\d{3}\)(\d){3}-(\d){4}$/;return c.test(d)})},_length:function(c,d,b){return this._minLength(c,d)&&this._maxLength(c,b)},_maxLength:function(c,b){b=parseInt(b,10);return this._validateText(c,function(d){return d.length<=b})},_minLength:function(c,b){b=parseInt(b,10);return this._validateText(c,function(d){return d.length>=b})},_email:function(b){return this._validateText(b,function(d){if(d==""){return true}var c=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return c.test(d)})},_zipCode:function(b){return this._validateText(b,function(d){if(d==""){return true}var c=/^(^\d{5}$)|(^\d{5}-\d{4}$)|(\d{3}-\d{2}-\d{4})$/;return c.test(d)})},_ssn:function(b){return this._validateText(b,function(d){if(d==""){return true}var c=/\d{3}-\d{2}-\d{4}/;return c.test(d)})},_validateText:function(b,d){var c;if(this._isTextInput(b)){if(this._isjQWidget(b)){if(b.find("input").length>0){c=b.find("input").val()}else{c=b.val()}}else{c=b.val()}return d(c)}return false},_isjQWidget:function(b){var c=a.data(b[0]);if(c.jqxMaskedInput||c.jqxNumberInput||c.jqxDateTimeInput){return true}return false},_isTextInput:function(b){var c=this._getType(b);return c==="text"||c==="textarea"||c==="password"||b.is(".jqx-input")},_getType:function(c){if(!c[0]){return}var b=c[0].tagName.toLowerCase(),d;if(b==="textarea"){return"textarea"}else{if(c.is(".jqx-input")){return"jqx-input"}else{if(b==="input"){d=a(c).attr("type")?a(c).attr("type").toLowerCase():"text";return d}}}return b},_hintRender:function(e,c){if(this.hintType=="label"){var f=a('<label class="'+this.toThemeProperty("jqx-validator-error-label")+'"></label>');f.html(e);var d=this;if(this.closeOnClick){f.click(function(){d.hideHint(c.selector)})}if(this.position=="left"||this.position=="top"){f.insertBefore(a(c))}else{f.insertAfter(a(c))}return f}var f=a('<div class="'+this.toThemeProperty("jqx-validator-hint")+' jqx-rc-all"></div>'),b=this;f.html(e);if(this.closeOnClick){f.click(function(){b.hideHint(c.selector)})}if(this.ownerElement==null){f.appendTo(document.body)}else{if(this.ownerElement.innerHTML){f.appendTo(a(this.ownerElement))}else{f.appendTo(this.ownerElement)}}return f},_hintLayout:function(h,c,b,f){if(this._hintRender===f.hintRender){var i;i=this._getPosition(c,b,h,f);if(this.hintType=="label"){var e="2px";if(this.position=="left"||this.position=="top"){e="-2px"}if(c[0].nodeName.toLowerCase()!="input"){if(c.find("input").length>0){if(c.find(".jqx-input").length>0){c.find(".jqx-input").addClass(this.toThemeProperty("jqx-validator-error-element"))}else{if(c.is(".jqx-checkbox")){c.find(".jqx-checkbox-default").addClass(this.toThemeProperty("jqx-validator-error-element"))}}if(c.is(".jqx-radiobutton")){c.find(".jqx-radiobutton-default").addClass(this.toThemeProperty("jqx-validator-error-element"))}else{c.addClass(this.toThemeProperty("jqx-validator-error-element"))}}}else{c.addClass(this.toThemeProperty("jqx-validator-error-element"))}var d=a("<span></span>");d.addClass(this.toThemeProperty("jqx-validator-hint"));d.html(h.text());d.appendTo(a(document.body));var g=d.outerWidth();d.remove();h.css({position:"relative",left:a(c).css("margin-left"),width:a(c).width(),top:e});if(b=="center"){h.css("width",g);h.css("left","0px");h.css("margin-left","auto");h.css("margin-right","auto")}return}h.css({position:"absolute",left:i.left,top:i.top});if(this.arrow){this._addArrow(c,h,b,i)}}},_showHint:function(b){if(b){if(this.animation==="fade"){b.fadeOut(0);b.fadeIn(this.animationDuration)}}},_getPosition:function(i,f,d,g){var e=i.offset(),h,c;var b=i.outerWidth();var j=i.outerHeight();if(this.rtl&&f.indexOf("left")>=0){f="right"}if(this.rtl&&f.indexOf("right")>=0){f="left"}if(this.ownerElement!=null){e={left:0,top:0};e.top=parseInt(e.top)+i.position().top;e.left=parseInt(e.left)+i.position().left}if(g&&g.hintPositionRelativeElement){var k=a(g.hintPositionRelativeElement);e=k.offset();b=k.width();j=k.height()}if(f.indexOf("top")>=0){h=e.top-j}else{if(f.indexOf("bottom")>=0){h=e.top+d.outerHeight()+this.hintPositionOffset+5}else{h=e.top}}if(f.indexOf("center")>=0){c=e.left+this.hintPositionOffset+(b-d.outerWidth())/2}else{if(f.indexOf("left")>=0){c=e.left-d.outerWidth()-this.hintPositionOffset}else{if(f.indexOf("right")>=0){c=e.left+b+this.hintPositionOffset}else{c=e.left+this.hintPositionOffset}}}if(f.indexOf(":")>=0){f=f.split(":")[1].split(",");c+=parseInt(f[0],10);h+=parseInt(f[1],10)}if(!this.positions){this.positions=new Array()}if(this.positions[Math.round(h)+"_"+Math.round(c)]){if(this.positions[Math.round(h)+"_"+Math.round(c)].top==h){h+=i.outerHeight()}}this.positions[Math.round(h)+"_"+Math.round(c)]={left:c,top:h};return{left:c,top:h}},_addArrow:function(j,e,g,k){var l=a('<div class="'+this.toThemeProperty("jqx-validator-hint-arrow")+'"></div>'),d,i;if(this.rtl&&g.indexOf("left")>=0){g="right"}if(this.rtl&&g.indexOf("right")>=0){g="left"}e.children(".jqx-validator-hint-arrow").remove();e.append(l);var c=l.outerHeight(),f=l.outerWidth(),h=e.outerHeight(),b=e.outerWidth();this._addImage(l);if(g.indexOf("top")>=0){i=h-c}else{if(g.indexOf("bottom")>=0){i=-c}else{i=(h-c)/2-c/2}}if(g.indexOf("center")>=0){d=(b-f)/2}else{if(g.indexOf("left")>=0){d=b-f/2-1}else{if(g.indexOf("right")>=0){d=-f/2}}}if(g.indexOf("topright")>=0||g.indexOf("bottomright")>=0){d=0}if(g.indexOf("topleft")>=0||g.indexOf("bottomleft")>=0){d=b-f}l.css({position:"absolute",left:d,top:i})},_addImage:function(b){var c=b.css("background-image");c=c.replace('url("',"");c=c.replace('")',"");c=c.replace("url(","");c=c.replace(")","");b.css("background-image","none");b.append('<img src="'+c+'" alt="Arrow" style="position: relative; top: 0px; left: 0px; width: '+b.width()+"px; height: "+b.height()+'px;" />')},_raiseEvent:function(b,d){var c=a.Event(this._events[b]);c.args=d;return this.host.trigger(c)},propertyChangedHandler:function(b,c,e,d){if(c==="rules"){this._configureInputs();this._removeEventListeners();this._addEventListeners()}}})})(jqxBaseFramework);
/*!
 * Globalize
 *
 * http://github.com/jquery/globalize
 *
 * Copyright Software Freedom Conservancy, Inc.
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 */
(function(j,g){var r,w,l,x,p,v,u,t,m,a,k,y,q,c,n,s,z,o,i,h,d,f,e,b;r=function(A){return new r.prototype.init(A)};if(typeof require!=="undefined"&&typeof exports!=="undefined"&&typeof module!=="undefined"){module.exports=r}else{j.Globalize=r}r.cultures={};r.prototype={constructor:r,init:function(A){this.cultures=r.cultures;this.cultureSelector=A;return this}};r.prototype.init.prototype=r.prototype;r.cultures["default"]={name:"en",englishName:"English",nativeName:"English",isRTL:false,language:"en",numberFormat:{pattern:["-n"],decimals:2,",":",",".":".",groupSizes:[3],"+":"+","-":"-","NaN":"NaN",negativeInfinity:"-Infinity",positiveInfinity:"Infinity",percent:{pattern:["-n %","n %"],decimals:2,groupSizes:[3],",":",",".":".",symbol:"%"},currency:{pattern:["($n)","$n"],decimals:2,groupSizes:[3],",":",",".":".",symbol:"$"}},calendars:{standard:{name:"Gregorian_USEnglish","/":"/",":":":",firstDay:0,days:{names:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],namesAbbr:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],namesShort:["Su","Mo","Tu","We","Th","Fr","Sa"]},months:{names:["January","February","March","April","May","June","July","August","September","October","November","December",""],namesAbbr:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""]},AM:["AM","am","AM"],PM:["PM","pm","PM"],eras:[{name:"A.D.",start:null,offset:0}],twoDigitYearMax:2029,patterns:{d:"M/d/yyyy",D:"dddd, MMMM dd, yyyy",t:"h:mm tt",T:"h:mm:ss tt",f:"dddd, MMMM dd, yyyy h:mm tt",F:"dddd, MMMM dd, yyyy h:mm:ss tt",M:"MMMM dd",Y:"yyyy MMMM",S:"yyyy\u0027-\u0027MM\u0027-\u0027dd\u0027T\u0027HH\u0027:\u0027mm\u0027:\u0027ss"}}},messages:{}};r.cultures["default"].calendar=r.cultures["default"].calendars.standard;r.cultures.en=r.cultures["default"];r.cultureSelector="en";w=/^0x[a-f0-9]+$/i;l=/^[+\-]?infinity$/i;x=/^[+\-]?\d*\.?\d*(e[+\-]?\d+)?$/;p=/^\s+|\s+$/g;v=function(D,C){if(D.indexOf){return D.indexOf(C)}for(var A=0,B=D.length;A<B;A++){if(D[A]===C){return A}}return -1};u=function(B,A){return B.substr(B.length-A.length)===A};t=function(){var J,C,A,B,G,H,F=arguments[0]||{},E=1,D=arguments.length,I=false;if(typeof F==="boolean"){I=F;F=arguments[1]||{};E=2}if(typeof F!=="object"&&!a(F)){F={}}for(;E<D;E++){if((J=arguments[E])!=null){for(C in J){A=F[C];B=J[C];if(F===B){continue}if(I&&B&&(k(B)||(G=m(B)))){if(G){G=false;H=A&&m(A)?A:[]}else{H=A&&k(A)?A:{}}F[C]=t(I,H,B)}else{if(B!==g){F[C]=B}}}}}return F};m=Array.isArray||function(A){return Object.prototype.toString.call(A)==="[object Array]"};a=function(A){return Object.prototype.toString.call(A)==="[object Function]"};k=function(A){return Object.prototype.toString.call(A)==="[object Object]"};y=function(B,A){return B.indexOf(A)===0};q=function(A){return(A+"").replace(p,"")};c=function(A){if(isNaN(A)){return NaN}return Math[A<0?"ceil":"floor"](A)};n=function(D,B,C){var A;for(A=D.length;A<B;A+=1){D=(C?("0"+D):(D+"0"))}return D};s=function(D,A){var C=0,F=false;for(var E=0,B=D.length;E<B;E++){var G=D.charAt(E);switch(G){case"'":if(F){A.push("'")}else{C++}F=false;break;case"\\":if(F){A.push("\\")}F=!F;break;default:A.push(G);F=false;break}}return C};z=function(E,D){D=D||"F";var C,B=E.patterns,A=D.length;if(A===1){C=B[D];if(!C){throw"Invalid date format string '"+D+"'."}D=C}else{if(A===2&&D.charAt(0)==="%"){D=D.charAt(1)}}return D};o=function(U,Y,Z){var M=Z.calendar,I=M.convert,ab;if(!Y||!Y.length||Y==="i"){if(Z&&Z.name.length){if(I){ab=o(U,M.patterns.F,Z)}else{var J=new Date(U.getTime()),Q=d(U,M.eras);J.setFullYear(f(U,M,Q));ab=J.toLocaleString()}}else{ab=U.toString()}return ab}var V=M.eras,B=Y==="s";Y=z(M,Y);ab=[];var F,W=["0","00","000"],K,L,A=/([^d]|^)(d|dd)([^d]|$)/g,aa=0,R=h(),C;function H(ac,af){var ae,ad=ac+"";if(af>1&&ad.length<af){ae=(W[af-2]+ad);return ae.substr(ae.length-af,af)}else{ae=ad}return ae}function X(){if(K||L){return K}K=A.test(Y);L=true;return K}function D(ad,ac){if(C){return C[ac]}switch(ac){case 0:return ad.getFullYear();case 1:return ad.getMonth();case 2:return ad.getDate();default:throw"Invalid part value "+ac}}if(!B&&I){C=I.fromGregorian(U)}for(;;){var G=R.lastIndex,P=R.exec(Y);var N=Y.slice(G,P?P.index:Y.length);aa+=s(N,ab);if(!P){break}if(aa%2){ab.push(P[0]);continue}var S=P[0],E=S.length;switch(S){case"ddd":case"dddd":var O=(E===3)?M.days.namesAbbr:M.days.names;ab.push(O[U.getDay()]);break;case"d":case"dd":K=true;ab.push(H(D(U,2),E));break;case"MMM":case"MMMM":var T=D(U,1);ab.push((M.monthsGenitive&&X())?(M.monthsGenitive[E===3?"namesAbbr":"names"][T]):(M.months[E===3?"namesAbbr":"names"][T]));break;case"M":case"MM":ab.push(H(D(U,1)+1,E));break;case"y":case"yy":case"yyyy":T=C?C[0]:f(U,M,d(U,V),B);if(E<4){T=T%100}ab.push(H(T,E));break;case"h":case"hh":F=U.getHours()%12;if(F===0){F=12}ab.push(H(F,E));break;case"H":case"HH":ab.push(H(U.getHours(),E));break;case"m":case"mm":ab.push(H(U.getMinutes(),E));break;case"s":case"ss":ab.push(H(U.getSeconds(),E));break;case"t":case"tt":T=U.getHours()<12?(M.AM?M.AM[0]:" "):(M.PM?M.PM[0]:" ");ab.push(E===1?T.charAt(0):T);break;case"f":case"ff":case"fff":ab.push(H(U.getMilliseconds(),3).substr(0,E));break;case"z":case"zz":F=U.getTimezoneOffset()/60;ab.push((F<=0?"+":"-")+H(Math.floor(Math.abs(F)),E));break;case"zzz":F=U.getTimezoneOffset()/60;ab.push((F<=0?"+":"-")+H(Math.floor(Math.abs(F)),2)+":"+H(Math.abs(U.getTimezoneOffset()%60),2));break;case"g":case"gg":if(M.eras){ab.push(M.eras[d(U,V)].name)}break;case"/":ab.push(M["/"]);break;default:throw"Invalid date format pattern '"+S+"'."}}return ab.join("")};(function(){var A;A=function(H,I,P){var F=P.groupSizes,B=F[0],C=1,M=Math.pow(10,I),D=Math.round(H*M)/M;if(!isFinite(D)){D=H}H=D;var G=H+"",O="",L=G.split(/e/i),N=L.length>1?parseInt(L[1],10):0;G=L[0];L=G.split(".");G=L[0];O=L.length>1?L[1]:"";var E;if(N>0){O=n(O,N,false);G+=O.slice(0,N);O=O.substr(N)}else{if(N<0){N=-N;G=n(G,N+1,true);O=G.slice(-N,G.length)+O;G=G.slice(0,-N)}}if(I>0){O=P["."]+((O.length>I)?O.slice(0,I):n(O,I))}else{O=""}var K=G.length-1,Q=P[","],J="";while(K>=0){if(B===0||B>K){return G.slice(0,K+1)+(J.length?(Q+J+O):O)}J=G.slice(K-B+1,K+1)+(J.length?(Q+J):"");K-=B;if(C<F.length){B=F[C];C++}}return G.slice(0,K+1)+Q+J+O};i=function(M,L,F){if(!isFinite(M)){if(M===Infinity){return F.numberFormat.positiveInfinity}if(M===-Infinity){return F.numberFormat.negativeInfinity}return F.numberFormat.NaN}if(!L||L==="i"){return F.name.length?M.toLocaleString():M.toString()}L=L||"D";var D=F.numberFormat,E=Math.abs(M),G=-1,K;if(L.length>1){G=parseInt(L.slice(1),10)}var J=L.charAt(0).toUpperCase(),N;switch(J){case"D":K="n";E=c(E);if(G!==-1){E=n(""+E,G,true)}if(M<0){E="-"+E}break;case"N":N=D;case"C":N=N||D.currency;case"P":N=N||D.percent;K=M<0?N.pattern[0]:(N.pattern[1]||"n");if(G===-1){G=N.decimals}E=A(E*(J==="P"?100:1),G,N);break;default:throw"Bad number format specifier: "+J}var B=/n|\$|-|%/g,I="";for(;;){var H=B.lastIndex,C=B.exec(K);I+=K.slice(H,C?C.index:K.length);if(!C){break}switch(C[0]){case"n":I+=E;break;case"$":I+=D.currency.symbol;break;case"-":if(/[1-9]/.test(E)){I+=D["-"]}break;case"%":I+=D.percent.symbol;break}}return I}}());h=function(){return(/\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z|gg|g/g)};d=function(C,B){if(!B){return 0}var F,E=C.getTime();for(var D=0,A=B.length;D<A;D++){F=B[D].start;if(F===null||E>=F){return D}}return 0};f=function(B,D,A,E){var C=B.getFullYear();if(!E&&D.eras){C-=D.eras[A].offset}return C};(function(){var B,A,D,C,G,F,E;B=function(M,K){if(K<100){var I=new Date(),H=d(I),L=f(I,M,H),J=M.twoDigitYearMax;J=typeof J==="string"?new Date().getFullYear()%100+parseInt(J,10):J;K+=L-(L%100);if(K>J){K-=100}}return K};A=function(L,K,I){var H,M=L.days,J=L._upperDays;if(!J){L._upperDays=J=[E(M.names),E(M.namesAbbr),E(M.namesShort)]}K=F(K);if(I){H=v(J[1],K);if(H===-1){H=v(J[2],K)}}else{H=v(J[0],K)}return H};D=function(O,N,J){var H=O.months,I=O.monthsGenitive||O.months,L=O._upperMonths,M=O._upperMonthsGen;if(!L){O._upperMonths=L=[E(H.names),E(H.namesAbbr)];O._upperMonthsGen=M=[E(I.names),E(I.namesAbbr)]}N=F(N);var K=v(J?L[1]:L[0],N);if(K<0){K=v(J?M[1]:M[0],N)}return K};C=function(H,S){var U=H._parseRegExp;if(!U){H._parseRegExp=U={}}else{var L=U[S];if(L){return L}}var R=z(H,S).replace(/([\^\$\.\*\+\?\|\[\]\(\)\{\}])/g,"\\\\$1"),P=["^"],I=[],O=0,K=0,X=h(),M;while((M=X.exec(R))!==null){var W=R.slice(O,M.index);O=X.lastIndex;K+=s(W,P);if(K%2){P.push(M[0]);continue}var J=M[0],N=J.length,T;switch(J){case"dddd":case"ddd":case"MMMM":case"MMM":case"gg":case"g":T="(\\D+)";break;case"tt":case"t":T="(\\D*)";break;case"yyyy":case"fff":case"ff":case"f":T="(\\d{"+N+"})";break;case"dd":case"d":case"MM":case"M":case"yy":case"y":case"HH":case"H":case"hh":case"h":case"mm":case"m":case"ss":case"s":T="(\\d\\d?)";break;case"zzz":T="([+-]?\\d\\d?:\\d{2})";break;case"zz":case"z":T="([+-]?\\d\\d?)";break;case"/":T="(\\/)";break;default:throw"Invalid date format pattern '"+J+"'."}if(T){P.push(T)}I.push(M[0])}s(R.slice(O),P);P.push("$");var V=P.join("").replace(/\s+/g,"\\s+"),Q={regExp:V,groups:I};return U[S]=Q};G=function(J,H,I){return J<H||J>I};F=function(H){return H.split("\u00A0").join(" ").toUpperCase()};E=function(H){var K=[];for(var J=0,I=H.length;J<I;J++){K[J]=F(H[J])}return K};e=function(ab,ai,aj){ab=q(ab);var U=aj.calendar,ao=C(U,ai),O=new RegExp(ao.regExp).exec(ab);if(O===null){return null}var ak=ao.groups,Z=null,S=null,an=null,am=null,T=null,M=0,ae,ad=0,al=0,H=0,J=null,V=false;for(var af=0,ah=ak.length;af<ah;af++){var I=O[af+1];if(I){var aa=ak[af],L=aa.length,N=parseInt(I,10);switch(aa){case"dd":case"d":am=N;if(G(am,1,31)){return null}break;case"MMM":case"MMMM":an=D(U,I,L===3);if(G(an,0,11)){return null}break;case"M":case"MM":an=N-1;if(G(an,0,11)){return null}break;case"y":case"yy":case"yyyy":S=L<4?B(U,N):N;if(G(S,0,9999)){return null}break;case"h":case"hh":M=N;if(M===12){M=0}if(G(M,0,11)){return null}break;case"H":case"HH":M=N;if(G(M,0,23)){return null}break;case"m":case"mm":ad=N;if(G(ad,0,59)){return null}break;case"s":case"ss":al=N;if(G(al,0,59)){return null}break;case"tt":case"t":V=U.PM&&(I===U.PM[0]||I===U.PM[1]||I===U.PM[2]);if(!V&&(!U.AM||(I!==U.AM[0]&&I!==U.AM[1]&&I!==U.AM[2]))){return null}break;case"f":case"ff":case"fff":H=N*Math.pow(10,3-L);if(G(H,0,999)){return null}break;case"ddd":case"dddd":T=A(U,I,L===3);if(G(T,0,6)){return null}break;case"zzz":var K=I.split(/:/);if(K.length!==2){return null}ae=parseInt(K[0],10);if(G(ae,-12,13)){return null}var Q=parseInt(K[1],10);if(G(Q,0,59)){return null}J=(ae*60)+(y(I,"-")?-Q:Q);break;case"z":case"zz":ae=N;if(G(ae,-12,13)){return null}J=ae*60;break;case"g":case"gg":var W=I;if(!W||!U.eras){return null}W=q(W.toLowerCase());for(var ag=0,ac=U.eras.length;ag<ac;ag++){if(W===U.eras[ag].name.toLowerCase()){Z=ag;break}}if(Z===null){return null}break}}}var R=new Date(),Y,P=U.convert;Y=P?P.fromGregorian(R)[0]:R.getFullYear();if(S===null){S=Y}else{if(U.eras){S+=U.eras[(Z||0)].offset}}if(an===null){an=0}if(am===null){am=1}if(P){R=P.toGregorian(S,an,am);if(R===null){return null}}else{R.setFullYear(S,an,am);if(R.getDate()!==am){return null}if(T!==null&&R.getDay()!==T){return null}}if(V&&M<12){M+=12}R.setHours(M,ad,al,H);if(J!==null){var X=R.getMinutes()-(J+R.getTimezoneOffset());R.setHours(R.getHours()+parseInt(X/60,10),X%60)}return R}}());b=function(D,C,B){var F=C["-"],E=C["+"],A;switch(B){case"n -":F=" "+F;E=" "+E;case"n-":if(u(D,F)){A=["-",D.substr(0,D.length-F.length)]}else{if(u(D,E)){A=["+",D.substr(0,D.length-E.length)]}}break;case"- n":F+=" ";E+=" ";case"-n":if(y(D,F)){A=["-",D.substr(F.length)]}else{if(y(D,E)){A=["+",D.substr(E.length)]}}break;case"(n)":if(y(D,"(")&&u(D,")")){A=["-",D.substr(1,D.length-2)]}break}return A||["",D]};r.prototype.findClosestCulture=function(A){return r.findClosestCulture.call(this,A)};r.prototype.format=function(A,B,C){return r.format.call(this,A,B,C)};r.prototype.localize=function(A,B){return r.localize.call(this,A,B)};r.prototype.parseInt=function(B,A,C){return r.parseInt.call(this,B,A,C)};r.prototype.parseFloat=function(B,A,C){return r.parseFloat.call(this,B,A,C)};r.prototype.culture=function(A){return r.culture.call(this,A)};r.addCultureInfo=function(E,B,D){var C={},A=false;if(typeof E!=="string"){D=E;E=this.culture().name;C=this.cultures[E]}else{if(typeof B!=="string"){D=B;A=(this.cultures[E]==null);C=this.cultures[E]||this.cultures["default"]}else{A=true;C=this.cultures[B]}}this.cultures[E]=t(true,{},C,D);if(A){this.cultures[E].calendar=this.cultures[E].calendars.standard}};r.findClosestCulture=function(A){var I;if(!A){return this.findClosestCulture(this.cultureSelector)||this.cultures["default"]}if(typeof A==="string"){A=A.split(",")}if(m(A)){var C,M=this.cultures,K=A,H,D=K.length,L=[];for(H=0;H<D;H++){A=q(K[H]);var B,G=A.split(";");C=q(G[0]);if(G.length===1){B=1}else{A=q(G[1]);if(A.indexOf("q=")===0){A=A.substr(2);B=parseFloat(A);B=isNaN(B)?0:B}else{B=1}}L.push({lang:C,pri:B})}L.sort(function(O,N){if(O.pri<N.pri){return 1}else{if(O.pri>N.pri){return -1}}return 0});for(H=0;H<D;H++){C=L[H].lang;I=M[C];if(I){return I}}for(H=0;H<D;H++){C=L[H].lang;do{var J=C.lastIndexOf("-");if(J===-1){break}C=C.substr(0,J);I=M[C];if(I){return I}}while(1)}for(H=0;H<D;H++){C=L[H].lang;for(var F in M){var E=M[F];if(E.language==C){return E}}}}else{if(typeof A==="object"){return A}}return I||null};r.format=function(B,C,D){var A=this.findClosestCulture(D);if(B instanceof Date){B=o(B,C,A)}else{if(typeof B==="number"){B=i(B,C,A)}}return B};r.localize=function(A,B){return this.findClosestCulture(B).messages[A]||this.cultures["default"].messages[A]};r.parseDate=function(I,G,E){E=this.findClosestCulture(E);var C,A,B;if(G){if(typeof G==="string"){G=[G]}if(G.length){for(var F=0,D=G.length;F<D;F++){var H=G[F];if(H){C=e(I,H,E);if(C){break}}}}}else{B=E.calendar.patterns;for(A in B){C=e(I,B[A],E);if(C){break}}}return C||null};r.parseInt=function(B,A,C){return c(r.parseFloat(B,A,C))};r.parseFloat=function(O,H,J){if(typeof H!=="number"){J=H;H=10}var Q=this.findClosestCulture(J);var T=NaN,F=Q.numberFormat;if(O.indexOf(Q.numberFormat.currency.symbol)>-1){O=O.replace(Q.numberFormat.currency.symbol,"");O=O.replace(Q.numberFormat.currency["."],Q.numberFormat["."])}if(O.indexOf(Q.numberFormat.percent.symbol)>-1){O=O.replace(Q.numberFormat.percent.symbol,"")}O=O.replace(/ /g,"");if(l.test(O)){T=parseFloat(O)}else{if(!H&&w.test(O)){T=parseInt(O,16)}else{var C=b(O,F,F.pattern[0]),S=C[0],I=C[1];if(S===""&&F.pattern[0]!=="(n)"){C=b(O,F,"(n)");S=C[0];I=C[1]}if(S===""&&F.pattern[0]!=="-n"){C=b(O,F,"-n");S=C[0];I=C[1]}S=S||"+";var N,K,R=I.indexOf("e");if(R<0){R=I.indexOf("E")}if(R<0){K=I;N=null}else{K=I.substr(0,R);N=I.substr(R+1)}var P,G,D=F["."],A=K.indexOf(D);if(A<0){P=K;G=null}else{P=K.substr(0,A);G=K.substr(A+D.length)}var L=F[","];P=P.split(L).join("");var E=L.replace(/\u00A0/g," ");if(L!==E){P=P.split(E).join("")}var M=S+P;if(G!==null){M+="."+G}if(N!==null){var B=b(N,F,"-n");M+="e"+(B[0]||"+")+B[1]}if(x.test(M)){T=parseFloat(M)}}}return T};r.culture=function(A){if(typeof A!=="undefined"){this.cultureSelector=A}return this.findClosestCulture(A)||this.cultures["default"]}}(this));
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxCalendar","",{});a.extend(a.jqx._jqxCalendar.prototype,{defineInstance:function(){var b={disabled:false,multipleMonthRows:1,multipleMonthColumns:1,minDate:a.jqx._jqxDateTimeInput.getDateTime(new Date()),maxDate:a.jqx._jqxDateTimeInput.getDateTime(new Date()),min:new Date(1900,0,1),max:new Date(2100,0,1),navigationDelay:400,stepMonths:1,width:null,height:null,value:a.jqx._jqxDateTimeInput.getDateTime(new Date()),firstDayOfWeek:0,showWeekNumbers:false,showDayNames:true,enableWeekend:false,enableOtherMonthDays:true,showOtherMonthDays:true,rowHeaderWidth:25,columnHeaderHeight:20,titleHeight:25,dayNameFormat:"firstTwoLetters",monthNameFormat:"default",titleFormat:["MMMM yyyy","yyyy","yyyy","yyyy"],enableViews:true,readOnly:false,culture:"default",enableFastNavigation:true,enableHover:true,enableAutoNavigation:true,enableTooltips:false,backText:"Back",forwardText:"Forward",specialDates:new Array(),keyboardNavigation:true,selectionMode:"default",selectableDays:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],todayString:"Today",clearString:"Clear",showFooter:false,selection:{from:null,to:null},canRender:true,_checkForHiddenParent:true,height:null,rtl:false,view:"month",views:["month","year","decade"],changing:null,change:null,localization:{backString:"Back",forwardString:"Forward",todayString:"Today",clearString:"Clear",calendar:{name:"Gregorian_USEnglish","/":"/",":":":",firstDay:0,days:{names:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],namesAbbr:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],namesShort:["Su","Mo","Tu","We","Th","Fr","Sa"]},months:{names:["January","February","March","April","May","June","July","August","September","October","November","December",""],namesAbbr:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""]},AM:["AM","am","AM"],PM:["PM","pm","PM"],eras:[{name:"A.D.",start:null,offset:0}],twoDigitYearMax:2029,patterns:{d:"M/d/yyyy",D:"dddd, MMMM dd, yyyy",t:"h:mm tt",T:"h:mm:ss tt",f:"dddd, MMMM dd, yyyy h:mm tt",F:"dddd, MMMM dd, yyyy h:mm:ss tt",M:"MMMM dd",Y:"yyyy MMMM",S:"yyyy\u0027-\u0027MM\u0027-\u0027dd\u0027T\u0027HH\u0027:\u0027mm\u0027:\u0027ss",ISO:"yyyy-MM-dd hh:mm:ss"}}},events:["backButtonClick","nextButtonClick","valuechanged","cellMouseDown","cellMouseUp","cellSelected","cellUnselected","change","viewChange"]};a.extend(true,this,b);this.minDate._setYear(1900);this.minDate._setMonth(1);this.minDate._setDay(1);this.minDate._setHours(0);this.minDate._setMinutes(0);this.minDate._setSeconds(0);this.minDate._setMilliseconds(0);this.maxDate._setYear(2100);this.maxDate._setMonth(1);this.maxDate._setDay(1);this.maxDate._setHours(0);this.maxDate._setMinutes(0);this.maxDate._setSeconds(0);this.maxDate._setMilliseconds(0);this.value._setHours(0);this.value._setMinutes(0);this.value._setSeconds(0);this.value._setMilliseconds(0);return b},createInstance:function(e){this.setCalendarSize();if(this.element.id===""){this.element.id=a.jqx.utilities.createId()}this.element.innerHTML="";this.host.attr("data-role","calendar");var i=this.element.id;var h=this;this.propertyChangeMap.width=function(j,l,k,m){h.setCalendarSize()};this.propertyChangeMap.height=function(j,l,k,m){h.setCalendarSize()};if(a.global){a.global.preferCulture(this.culture)}if(this.culture!="default"){if(a.global){a.global.preferCulture(this.culture);this.localization.calendar=a.global.culture.calendar}else{if(Globalize){var c=Globalize.culture(this.culture);this.localization.calendar=c.calendar}}this.firstDayOfWeek=this.localization.calendar.firstDay}if(this.localization.backString!="Back"){this.backText=this.localization.backString}if(this.localization.forwardString!="Forward"){this.forwardText=this.localization.forwardString}if(this.localization.todayString!="Today"&&this.localization.todayString){this.todayString=this.localization.todayString}if(this.localization.clearString!="Clear"&&this.localization.clearString){this.clearString=this.localization.clearString}this.setMaxDate(this.max,false);this.setMinDate(this.min,false);if(!this.host.attr("tabIndex")){this.host.attr("tabIndex",0)}this.host.css("outline","none");this.host.addClass(this.toThemeProperty("jqx-calendar"));this.host.addClass(this.toThemeProperty("jqx-widget"));this.host.addClass(this.toThemeProperty("jqx-widget-content"));this.host.addClass(this.toThemeProperty("jqx-rc-all"));this._addInput();if(this.views.indexOf("month")==-1){this.view="year"}if(this.views.indexOf("year")==-1&&this.views.indexOf("month")==-1){this.view="decade"}this.addHandler(this.host,"keydown",function(k){var j=true;if(h.keyboardNavigation){if(h._handleKey!=undefined){j=h._handleKey(k);if(!j){if(k.stopPropagation){k.stopPropagation()}if(k.preventDefault){k.preventDefault()}}}}return j});var d=false;var g=this;var b=false;if(h.width!=null&&h.width.toString().indexOf("%")!=-1){b=true}if(h.height!=null&&h.height.toString().indexOf("%")!=-1){b=true}a.jqx.utilities.resize(this.host,function(){var j=g.host.find("#View"+h.element.id);if(!d){d=true;g.render()}else{g.refreshTitle(j)}if(b){if(h.refreshTimer){clearTimeout(h.refreshTimer)}h.refreshTimer=setTimeout(function(){h.refreshControl()},1)}},false,this._checkForHiddenParent);var f="View";this.propertyChangeMap.disabled=function(j,l,k,m){if(m){j.host.addClass(h.toThemeProperty("jqx-fill-state-disabled"))}else{j.host.removeClass(h.toThemeProperty("jqx-fill-state-disabled"))}h.refreshControl()}},_addInput:function(){var b=this.host.attr("name");this.input=a("<input type='hidden'/>");this.host.append(this.input);if(b){this.input.attr("name",b)}this.input.val(this.getDate().toString())},setCalendarSize:function(){if(this.width!=null&&this.width.toString().indexOf("px")!=-1){this.host.width(this.width)}else{if(this.width!=undefined&&!isNaN(this.width)){this.host.width(this.width)}}if(this.width!=null&&this.width.toString().indexOf("%")!=-1){this.host.css("width",this.width)}if(this.height!=null&&this.height.toString().indexOf("px")!=-1){this.host.height(this.height)}else{if(this.height!=undefined&&!isNaN(this.height)){this.host.height(this.height)}}if(this.height!=null&&this.height.toString().indexOf("%")!=-1){this.host.css("height",this.height)}},_getYearAndMonthPart:function(c){if(!c){return new Date(1900,0,1)}var b=new Date(c.getFullYear(),c.getMonth(),1);return b},_handleKey:function(p){if(this.readOnly){return true}var A=p.keyCode;var y=this;var b=this._getSelectedDate();if(b==undefined){return true}if(p.altKey){return true}if(this._animating){return false}if(this.view!="month"&&A==13){var d=this._getSelectedCell();this._setDateAndSwitchViews(d,p,"keyboard")}if(this.view=="year"){var w=b.getMonth();var j=this._getYearAndMonthPart(this.getMinDate());var m=this._getYearAndMonthPart(this.getMaxDate());switch(A){case 37:if(w==0){var h=new Date(b.getFullYear()-1,11,1);if(h>=j){this.selectedDate=h;this.navigateBackward()}else{if(this.selectedDate!=j){this.selectedDate=j;this.navigateBackward()}}}else{var h=new Date(b.getFullYear(),w-1,1);if(h>=j){this._selectDate(h,"key")}}return false;case 38:var h=new Date(b.getFullYear(),w-4,1);if(h<j){h=j}if(w-4<0){this.selectedDate=h;this.navigateBackward()}else{this._selectDate(h,"key")}return false;case 40:var h=new Date(b.getFullYear(),w+4,1);if(h>m){h=m}if(w+4>11){this.selectedDate=h;this.navigateForward()}else{this._selectDate(h,"key")}return false;case 39:if(w==11){var h=new Date(b.getFullYear()+1,0,1);if(h<=m){this.selectedDate=h;this.navigateForward()}else{if(this.selectedDate!=m){this.selectedDate=m;this.navigateForward()}}}else{var h=new Date(b.getFullYear(),w+1,1);if(h<=m){this._selectDate(h,"key")}}return false}return true}if(this.view=="decade"){var o=this._renderStartDate.getFullYear();var k=this._renderEndDate.getFullYear();var n=b.getFullYear();var v=this.getMinDate().getFullYear();var c=this.getMaxDate().getFullYear();switch(A){case 37:if(n-1>=v){if(n<=o){this.selectedDate=new Date(n-1,b.getMonth(),1);this.navigateBackward()}else{this._selectDate(new Date(n-1,b.getMonth(),1),"key")}}return false;case 38:var x=n-4;if(n-4<v){x=v}if(x<o){this.selectedDate=new Date(x,b.getMonth(),1);this.navigateBackward()}else{this._selectDate(new Date(x,b.getMonth(),1),"key")}return false;case 40:var x=n+4;if(x>c){x=c}if(x>k){this.selectedDate=new Date(x,b.getMonth(),1);this.navigateForward()}else{this._selectDate(new Date(x,b.getMonth(),1),"key")}return false;case 39:if(n+1<=c){if(n==k){this.selectedDate=new Date(n+1,b.getMonth(),1);this.navigateForward()}else{this._selectDate(new Date(n+1,b.getMonth(),1),"key")}}return false}return true}var u=new a.jqx._jqxDateTimeInput.getDateTime(b);var f=this.getViewStart();var e=this.getViewEnd();var t=u;var s=a.data(this.element,"View"+this.element.id);if(s==undefined||s==null){return true}if(A==36){u._setDay(1);if(this._isDisabled(u.dateTime)){return false}this._selectDate(u.dateTime,"key");return false}if(A==35){var r=this.value._daysInMonth(this.value.year,this.value.month);u._setDay(r);if(this._isDisabled(u.dateTime)){return false}this._selectDate(u.dateTime,"key");return false}var g=1;if(p.ctrlKey){g=12}if(A==34){var z=this.navigateForward(g);if(z){u._addMonths(g);if(this._isDisabled(u.dateTime)){return false}this._selectDate(u.dateTime,"key")}return false}if(A==33){var z=this.navigateBackward(g);if(z){u._addMonths(-g);if(this._isDisabled(u.dateTime)){return false}this._selectDate(u.dateTime,"key")}return false}if(A==38){u._addDays(-7);if(u.dateTime<this.getMinDate()){return false}if(u.dateTime<f){var z=this.navigateBackward();if(!z){return false}}if(this._isDisabled(u.dateTime)){return false}this._selectDate(u.dateTime,"key");for(var q=0;q<s.cells.length;q++){var d=s.cells[q];var l=d.getDate();if(d.isOtherMonth&&d.isSelected&&l<=u.dateTime){this.value.day=l.getDate();this.navigateBackward();this._selectDate(u.dateTime,"key");break}}return false}else{if(A==40){u._addDays(7);if(u.dateTime>this.getMaxDate()){return false}if(u.dateTime>e){var z=this.navigateForward();if(!z){return false}}if(this._isDisabled(u.dateTime)){return false}this._selectDate(u.dateTime,"key");for(var q=0;q<s.cells.length;q++){var d=s.cells[q];var l=d.getDate();if(d.isOtherMonth&&d.isSelected&&l>=u.dateTime){this.value.day=l.getDate();this.navigateForward();this._selectDate(u.dateTime,"key");break}}return false}}if(A==37){u._addDays(-1);if(u.dateTime<this.getMinDate()){return false}if(u.dateTime<f){var z=this.navigateBackward();if(!z){return false}}if(this._isDisabled(u.dateTime)){return false}this._selectDate(u.dateTime,"key");for(var q=0;q<s.cells.length;q++){var d=s.cells[q];var l=d.getDate();if(d.isOtherMonth&&d.isSelected&&l<=u.dateTime){if(u.dateTime<this.getMinDate()||u.dateTime>this.getMaxDate()){return false}if(this._isDisabled(u.dateTime)){return false}this.navigateBackward();this._selectDate(u.dateTime,"key");break}}return false}else{if(A==39){u._addDays(1);if(u.dateTime>this.getMaxDate()){return false}if(u.dateTime>e){var z=this.navigateForward();if(!z){return false}}if(this._isDisabled(u.dateTime)){return false}this._selectDate(u.dateTime,"key");for(var q=0;q<s.cells.length;q++){var d=s.cells[q];var l=d.getDate();if(d.isOtherMonth&&d.isSelected&&l>=u.dateTime){if(u.dateTime<this.getMinDate()||u.dateTime>this.getMaxDate()){return false}this.navigateForward();this._selectDate(u.dateTime,"key");break}}return false}}return true},render:function(){if(!this.canRender){return}this.host.children().remove();var c=this._renderSingleCalendar("View"+this.element.id);var b=this;this.host.append(c)},addSpecialDate:function(b,c,d){if(this.multipleMonthRows==1&&this.multipleMonthColumns==1){var e=this.specialDates.length;this.specialDates[e]={Date:b,Class:c,Tooltip:d};this.refreshControl()}},refresh:function(b){this.render()},invalidate:function(){this.refreshControl()},refreshControl:function(){if(this.multipleMonthRows==1&&this.multipleMonthColumns==1){this.refreshSingleCalendar("View"+this.element.id,null)}},getViewStart:function(){var c=this.getVisibleDate();var b=this.getFirstDayOfWeek(c);return b.dateTime},getViewEnd:function(){var c=this.getViewStart();var b=new a.jqx._jqxDateTimeInput.getDateTime(c);b._addDays(41);return b.dateTime},refreshSingleCalendar:function(f,e){if(!this.canRender){return}var h=this.host.find("#"+f);var d=this.getVisibleDate();var b=this.getFirstDayOfWeek(d);this.refreshCalendarCells(h,b,f);this.refreshTitle(h);this.refreshRowHeader(h,f);if(this.selectedDate!=undefined){this._selectDate(this.selectedDate)}var g=this.host.height()-this.titleHeight-this.columnHeaderHeight;if(!this.showDayNames){g=this.host.height()-this.titleHeight}if(this.showFooter){g-=20}var c=h.find("#cellsTable"+f);var i=h.find("#calendarRowHeader"+f);c.height(g);i.height(g)},refreshRowHeader:function(s,m){if(!this.showWeekNumbers){return}var c=this.getVisibleDate();var h=this.getFirstDayOfWeek(c);var n=h.dayOfWeek;var t=this.getWeekOfYear(h);var f=new a.jqx._jqxDateTimeInput.getDateTime(new Date(h.dateTime));f._addDays(5);f.dayOfWeek=f.dateTime.getDay();var k=this.getWeekOfYear(f);var e=this.rowHeader.find("table");e.width(this.rowHeaderWidth);var g=h;var q=new Array();for(var p=0;p<6;p++){var o=t.toString();var b=new a.jqx._jqxCalendar.cell(g.dateTime);var l=p+1+this.element.id;var j=a(e[0].rows[p].cells[0]);b.element=j;b.row=p;b.column=0;var d=j.find("#headerCellContent"+l);d.addClass(this.toThemeProperty("jqx-calendar-row-cell"));d[0].innerHTML=t;q[p]=b;g=new a.jqx._jqxDateTimeInput.getDateTime(new Date(g._addWeeks(1)));t=this.getWeekOfYear(g)}var r=a.data(this.element,s[0].id);r.rowCells=q;this._refreshOtherMonthRows(r,m)},_refreshOtherMonthRows:function(f,e){if(this.showOtherMonthDays){return}this._displayLastRow(true,e);this._displayFirstRow(true,e);var d=false;var g=false;for(var c=0;c<f.cells.length;c++){var b=f.cells[c];if(b.isVisible&&c<7){d=true}else{if(b.isVisible&&c>=f.cells.length-7){g=true}}}if(!d){this._displayFirstRow(false,e)}if(!g){this._displayLastRow(false,e)}},_displayLastRow:function(b,c){var g=this.host.find("#"+c);var f=g.find("#calendarRowHeader"+g[0].id).find("table");var d=null;if(this.showWeekNumbers){if(f[0].cells){var d=a(f[0].rows[5])}}var e=a(g.find("#cellTable"+g[0].id)[0].rows[5]);if(b){if(this.showWeekNumbers&&d){d.css("display","table-row")}e.css("display","table-row")}else{if(this.showWeekNumbers&&d){d.css("display","none")}e.css("display","none")}},_displayFirstRow:function(b,c){var e=this.host.find("#"+c);var d=e.find("#calendarRowHeader"+e[0].id).find("table");var f=null;if(this.showWeekNumbers){if(d[0].cells){var f=a(d[0].rows[0])}}var g=a(e.find("#cellTable"+e[0].id)[0].rows[0]);if(b){if(this.showWeekNumbers&&f){f.css("display","table-row")}g.css("display","table-row")}else{if(this.showWeekNumbers&&f){f.css("display","none")}g.css("display","none")}},_renderSingleCalendar:function(p,k){if(!this.canRender){return}var m=this.host.find("#"+p.toString());if(m!=null){m.remove()}var s=a("<div id='"+p.toString()+"'></div>");var b=this.getVisibleDate();var l=this.getFirstDayOfWeek(b);var e=new a.jqx._jqxDateTimeInput.getDateTime(l.dateTime);e._addMonths(1);var r=a.jqx._jqxCalendar.monthView(l,e,null,null,null,s);if(k==undefined||k==null){this.host.append(s);if(this.height!=undefined&&!isNaN(this.height)){s.height(this.height)}else{if(this.height!=null&&this.height.toString().indexOf("px")!=-1){s.height(this.height)}}if(this.width!=undefined&&!isNaN(this.width)){s.width(this.width)}else{if(this.width!=null&&this.width.toString().indexOf("px")!=-1){s.width(this.width)}}if(this.width!=null&&this.width.toString().indexOf("%")!=-1){s.width("100%")}if(this.height!=null&&this.height.toString().indexOf("%")!=-1){s.height("100%")}}else{k.append(s)}a.data(this.element,p,r);var q=this.host.height()-this.titleHeight-this.columnHeaderHeight;if(!this.showDayNames){q=this.host.height()-this.titleHeight}if(this.showFooter){q-=20}if(this.rowHeaderWidth<0){this.rowHeaderWidth=0}if(this.columnHeaderHeight<0){this.columnHeaderHeight=0}if(this.titleHeight<0){this.titleHeight=0}var g=this.rowHeaderWidth;var j=this.columnHeaderHeight;if(!this.showWeekNumbers){g=0}if(!this.showDayNames){j=0}var u="<div style='height:"+this.titleHeight+"px;'><table role='grid' style='margin: 0px; width: 100%; height: 100%; border-spacing: 0px;' cellspacing='0' cellpadding='0'><tr role='row' id='calendarTitle' width='100%'><td role='gridcell' NOWRAP id='leftNavigationArrow'></td><td aria-live='assertive' aria-atomic='true' role='gridcell' align='center' NOWRAP id='calendarTitleHeader'></td><td role='gridcell' NOWRAP id='rightNavigationArrow'></td></tr></table></div>";var c="<table role='grid' class='"+this.toThemeProperty("jqx-calendar-month")+"' style='margin: 0px; border-spacing: 0px;' cellspacing='0' cellpadding='0'><tr role='row' id='calendarHeader' height='"+j+"'><td role='gridcell' id='selectCell' width='"+g+"'></td><td role='gridcell' colspan='2' style='border: none; padding-left: 2px; padding-right: 2px' id='calendarColumnHeader'></td></tr><tr role='row' id='calendarContent'><td role='gridcell' id='calendarRowHeader' valign='top' height='"+q+"' width='"+g+"'></td><td role='gridcell' valign='top' colspan='2' style='padding-left: 2px; padding-right: 2px' id='cellsTable' height='"+q+"'></td></tr></table>";var o="<div id='footer' style='margin: 0px; display: none; height:"+d+"px;'><table style='width: 100%; height: 100%; border-spacing: 0px;' cellspacing='0' cellpadding='0'><tr id='calendarFooter'><td align='right' id='todayButton'></td><td align='left' colspan='2' id=doneButton></td></tr></table></div>";s[0].innerHTML=u+c+o;this.header=s.find("#calendarHeader");this.header[0].id="calendarHeader"+p;this.header.addClass(this.toThemeProperty("calendar-header"));this.columnHeader=s.find("#calendarColumnHeader");this.columnHeader[0].id="calendarColumnHeader"+p;this.table=s.find("#cellsTable");this.table[0].id="cellsTable"+p;this.rowHeader=s.find("#calendarRowHeader");this.rowHeader[0].id="calendarRowHeader"+p;this.selectCell=s.find("#selectCell");this.selectCell[0].id="selectCell"+p;this.title=s.find("#calendarTitle");this.title[0].id="calendarTitle"+p;this.leftButton=s.find("#leftNavigationArrow");this.leftButton[0].id="leftNavigationArrow"+p;this.titleHeader=s.find("#calendarTitleHeader");this.titleHeader[0].id="calendarTitleHeader"+p;this.rightButton=s.find("#rightNavigationArrow");this.rightButton[0].id="rightNavigationArrow"+p;this.footer=s.find("#calendarFooter");this._footer=s.find("#footer");this._footer[0].id="footer"+p;this.footer[0].id="calendarFooter"+p;this.todayButton=s.find("#todayButton");this.todayButton[0].id="todayButton"+p;this.doneButton=s.find("#doneButton");this.doneButton[0].id="doneButton"+p;this.title.addClass(this.toThemeProperty("jqx-calendar-title-container"));var d=20;if(this.showFooter){this._footer.css("display","block")}s.find("tr").addClass(this.toThemeProperty("jqx-reset"));s.addClass(this.toThemeProperty("jqx-widget-content"));s.addClass(this.toThemeProperty("jqx-calendar-month-container"));this.month=s;this.selectCell.addClass(this.toThemeProperty("jqx-reset"));this.selectCell.addClass(this.toThemeProperty("jqx-calendar-top-left-header"));if(this.showWeekNumbers){this._renderRowHeader(s)}else{this.table[0].colSpan=3;this.columnHeader[0].colSpan=3;this.rowHeader.css("display","none");this.selectCell.css("display","none")}if(this.showFooter){this.footer.height(20);var i=a("<a href='javascript:;'>"+this.todayString+"</a>");i.appendTo(this.todayButton);var h=a("<a href='javascript:;'>"+this.clearString+"</a>");h.appendTo(this.doneButton);h.addClass(this.toThemeProperty("jqx-calendar-footer"));i.addClass(this.toThemeProperty("jqx-calendar-footer"));var n=this;var f="mousedown";if(a.jqx.mobile.isTouchDevice()){f=a.jqx.mobile.getTouchEventName("touchstart")}this.addHandler(i,f,function(){if(n.today){n.today()}else{n.setDate(new Date(),"mouse")}return false});this.addHandler(h,f,function(){if(n.clear){n.clear()}else{n.setDate(null,"mouse")}return false})}if(this.view!="month"){this.header.hide()}if(this.showDayNames&&this.view=="month"){this.renderColumnHeader(s)}this.oldView=this.view;this.renderCalendarCells(s,l,p);if(k==undefined||k==null){this.renderTitle(s)}this._refreshOtherMonthRows(r,p);s.find("tbody").css({border:"none",background:"transparent"});if(this.selectedDate!=undefined){this._selectDate(this.selectedDate)}var t=this;this.addHandler(this.host,"focus",function(){t.focus()});return s},_getTitleFormat:function(){switch(this.view){case"month":return this.titleFormat[0];case"year":return this.titleFormat[1];case"decade":return this.titleFormat[2];case"centuries":return this.titleFormat[3]}},renderTitle:function(t){var k=a("<div role='button' style='float: left;'></div>");var l=a("<div role='button' style='float: right;'></div>");var o=this.title;o.addClass(this.toThemeProperty("jqx-reset"));o.addClass(this.toThemeProperty("jqx-widget-header"));o.addClass(this.toThemeProperty("jqx-calendar-title-header"));var e=o.find("td");if(a.jqx.browser.msie&&a.jqx.browser.version<8){if(e.css("background-color")!="transparent"){var g=o.css("background-color");e.css("background-color",g)}if(e.css("background-image")!="transparent"){var d=o.css("background-image");var p=o.css("background-repeat");var c=o.css("background-position");e.css("background-image",d);e.css("background-repeat",p);e.css("background-position","left center scroll")}}else{e.css("background-color","transparent")}if(this.disabled){o.addClass(this.toThemeProperty("jqx-calendar-title-header-disabled"))}k.addClass(this.toThemeProperty("jqx-calendar-title-navigation"));k.addClass(this.toThemeProperty("jqx-icon-arrow-left"));k.appendTo(this.leftButton);var m=this.leftButton;l.addClass(this.toThemeProperty("jqx-calendar-title-navigation"));l.addClass(this.toThemeProperty("jqx-icon-arrow-right"));l.appendTo(this.rightButton);var b=this.rightButton;if(this.enableTooltips){if(a(m).jqxTooltip){a(m).jqxTooltip({name:this.element.id,position:"mouse",theme:this.theme,content:this.backText});a(b).jqxTooltip({name:this.element.id,position:"mouse",theme:this.theme,content:this.forwardText})}}var n=this.titleHeader;var v=this._format(this.value.dateTime,this._getTitleFormat(),this.culture);if(this.view=="decade"){var q=this._format(this._renderStartDate,this._getTitleFormat(),this.culture);var j=this._format(this._renderEndDate,this._getTitleFormat(),this.culture);v=q+" - "+j}else{if(this.view=="centuries"){var q=this._format(this._renderCenturyStartDate,this._getTitleFormat(),this.culture);var j=this._format(this._renderCenturyEndDate,this._getTitleFormat(),this.culture);v=q+" - "+j}}var f=a("<div style='background: transparent; margin: 0; padding: 0; border: none;'>"+v+"</div>");n.append(f);f.addClass(this.toThemeProperty("jqx-calendar-title-content"));var s=parseInt(k.width());var i=t.width()-2*s;var r=n.find(".jqx-calendar-title-content").width(i);a.data(k,"navigateLeft",this);a.data(l,"navigateRight",this);var h=a.jqx.mobile.isTouchDevice();if(!this.disabled){var u=this;this.addHandler(n,"mousedown",function(A){if(u.enableViews){if(!u._viewAnimating&&!u._animating){var x=u.view;u.oldView=x;switch(u.view){case"month":u.view="year";break;case"year":u.view="decade";break}if(u.views.indexOf("year")==-1&&u.view=="year"){u.view="decade"}if(u.views.indexOf("decade")==-1&&u.view=="decade"){u.view=x}if(x!=u.view){var z="View"+u.element.id;var B=u.host.find("#"+z);var y=u.getVisibleDate();var w=u.getFirstDayOfWeek(y);u.renderCalendarCells(B,w,z,true);u.refreshTitle(B);u._raiseEvent("8")}}return false}});this.addHandler(k,"mousedown",function(x){if(!u._animating){a.data(k,"navigateLeftRepeat",true);var w=a.data(k,"navigateLeft");if(w.enableFastNavigation&&!h){w.startRepeat(w,k,true,u.navigationDelay+200)}w.navigateBackward(1,"arrow");return w._raiseEvent(0,x)}else{return false}});this.addHandler(k,"mouseup",function(w){a.data(k,"navigateLeftRepeat",false)});this.addHandler(k,"mouseleave",function(w){a.data(k,"navigateLeftRepeat",false)});this.addHandler(l,"mousedown",function(x){if(!u._animating){a.data(l,"navigateRightRepeat",true);var w=a.data(l,"navigateRight");if(w.enableFastNavigation&&!h){w.startRepeat(w,l,false,u.navigationDelay+200)}w.navigateForward(1,"arrow");return w._raiseEvent(1,x)}else{return false}});this.addHandler(l,"mouseup",function(w){a.data(l,"navigateRightRepeat",false)});this.addHandler(l,"mouseleave",function(w){a.data(l,"navigateRightRepeat",false)})}},refreshTitle:function(f){var g=this._format(this.value.dateTime,this._getTitleFormat(),this.culture);if(this.view=="decade"){var d=this._format(this._renderStartDate,this._getTitleFormat(),this.culture);var b=this._format(this._renderEndDate,this._getTitleFormat(),this.culture);g=d+" - "+b}else{if(this.view=="centuries"){var d=this._format(this._renderCenturyStartDate,this._getTitleFormat(),this.culture);var b=this._format(this._renderCenturyEndDate,this._getTitleFormat(),this.culture);g=d+" - "+b}}var e=this.titleHeader;if(this.titleHeader){var c=e.find(".jqx-calendar-title-content");var h=a("<div style='background: transparent; margin: 0; padding: 0; border: none;'>"+g+"</div>");e.append(h);h.addClass(this.toThemeProperty("jqx-calendar-title-content"));if(c!=null){c.remove()}}},startRepeat:function(d,b,f,e){var c=window.setTimeout(function(){var g=a.data(b,"navigateLeftRepeat");if(!f){g=a.data(b,"navigateRightRepeat")}if(g){if(e<25){e=25}if(f){d.navigateBackward(1,"arrow");d.startRepeat(d,b,true,e)}else{d.navigateForward(1,"arrow");c=d.startRepeat(d,b,false,e)}}else{window.clearTimeout(c);return}},e)},navigateForward:function(h,g){if(h==undefined||h==null){h=this.stepMonths}var f=this.value.year;if(this.view=="decade"){f=this._renderStartDate.getFullYear()+12;if(this._renderEndDate.getFullYear()>=this.getMaxDate().getFullYear()){return}}else{if(this.view=="year"){f=this.value.year+1}else{if(this.view=="centuries"){f=this.value.year+100}}}if(this.view!="month"){var b=this.getMaxDate().getFullYear();if(b<f||f>b){f=b}if(this.value.year==f){if(this.view==="decade"){if(this.value.year>this._renderEndDate.getFullYear()){this.value.year=f;this.value.month=1;this.value.day=1}else{return}}else{return}}this.value.year=f;this.value.month=1;this.value.day=1}var c=this.value.day;var i=this.value.month;if(i+h<=12){var e=this.value._daysInMonth(this.value.year,this.value.month+h);if(c>e){c=e}}if(this.view=="month"){var d=new Date(this.value.year,this.value.month-1+h,c);if(g=="arrow"&&this.selectableDays.length==7&&this.selectionMode!="range"){this.selectedDate=new Date(this.value.year,this.value.month-1+h,1)}}else{var d=new Date(this.value.year,this.value.month-1,c)}return this.navigateTo(d)},navigateBackward:function(g,f){if(g==undefined||g==null){g=this.stepMonths}var e=this.value.year;if(this.view=="decade"){e=this._renderStartDate.getFullYear()-12}else{if(this.view=="year"){e=this.value.year-1}else{if(this.view=="centuries"){e=this.value.year-100}}}if(this.view!="month"){var i=this.getMinDate().getFullYear();if(e<i){e=i}if(this.view=="decade"){if(this._renderStartDate){if(this._renderStartDate.getFullYear()==e){return}}}this.value.year=e;this.value.month=1;this.value.day=1}var b=this.value.day;var h=this.value.month;if(h-g>=1){var d=this.value._daysInMonth(this.value.year,this.value.month-g);if(b>d){b=d}}if(this.view=="month"){var c=new Date(this.value.year,this.value.month-1-g,b);if(f=="arrow"&&this.selectableDays.length==7&&this.selectionMode!="range"){this.selectedDate=new Date(this.value.year,this.value.month-1-g,1)}}else{var c=new Date(this.value.year,this.value.month-1,b)}return this.navigateTo(c)},_isDisabled:function(d){var e=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var b=d.getDay();var c=e[b];if(this.selectableDays.indexOf(c)==-1){return true}return false},refreshCalendarCells:function(x,f,m){if(this.view=="year"||this.view=="decade"||this.view=="centuries"){this.refreshViews(x,f,m);return}var s=this.table;var q=s.find("#cellTable"+m.toString());var e=f;var c=new Array();var n=0;var u=new a.jqx._jqxDateTimeInput.getDateTime(new Date());for(var p=0;p<6;p++){for(var o=0;o<7;o++){var d=p+1;var h=o;if(this.rtl){h=6-h}var t=h+1;var l="#cell"+d+t+this.element.id;var w=new Date(e.dateTime.getFullYear(),e.dateTime.getMonth(),e.dateTime.getDate());var b=new a.jqx._jqxCalendar.cell(w);var g=a(q[0].rows[p].cells[t-1]);g[0].id=l.substring(1);b.element=g;b.row=p;b.column=o;b.isVisible=true;b.isOtherMonth=false;b.isToday=false;b.isWeekend=false;b.isHighlighted=false;b.isSelected=false;if(e.month!=this.value.month){b.isOtherMonth=true;b.isVisible=this.showOtherMonthDays}if(w<this.getMinDate()||w>this.getMaxDate()||this._isDisabled(w)){b.isDisabled=true}if(e.month==u.month&&e.day==u.day&&e.year==u.year){b.isToday=true}if(e.isWeekend()){b.isWeekend=true}a.data(this.element,"cellContent"+l.substring(1),b);a.data(this.element,l.substring(1),b);c[n]=b;n++;a.jqx.utilities.html(g,e.day);this._applyCellStyle(b,g,g);e=new a.jqx._jqxDateTimeInput.getDateTime(new Date(e._addDays(1)))}}var v=a.data(this.element,x[0].id);if(v!=undefined&&v!=null){v.cells=c}this.renderedCells=c;this._refreshOtherMonthRows(v,m)},_getDecadeAndCenturiesData:function(){var k=new Array();var p=new Array();var c=this.getMaxDate().getFullYear()-this.getMinDate().getFullYear();if(c<12){c=12}var f=this.getMinDate();var b=this.getMaxDate();var l=this.value.dateTime.getFullYear();if(this.view=="decade"){if(l+12>b.getFullYear()){l=b.getFullYear()-11}if(l<f.getFullYear()){l=f.getFullYear()}for(var h=0;h<c;h++){var d=new Date(f.getFullYear()+h,0,1);if(f.getFullYear()<=l&&l<=d.getFullYear()){var g=new Date(d.getFullYear(),d.getMonth(),1);for(var e=0;e<12;e++){var o=new Date(g.getFullYear()+e,this.value.dateTime.getMonth(),this.value.dateTime.getDate());var m=o.getFullYear();if(f.getFullYear()<=m&&m<=b.getFullYear()){k.push(m);p.push(o);if(e==0){this._renderStartDate=o}this._renderEndDate=o}else{k.push(m);p.push(o)}}break}}}else{if(this.view=="centuries"){for(var h=0;h<c;h+=120){var d=new Date(f.getFullYear()+h+120,0,1);if(f.getFullYear()<=l&&l<=d.getFullYear()){var g=new Date(d.getFullYear()-130,d.getMonth(),1);if(g<f){g=f}for(var e=0;e<12;e++){var n=new Date(g.getFullYear()+e*10,g.getMonth(),1);if(g.getFullYear()>=f.getFullYear()&&n.getFullYear()<=b.getFullYear()){k.push("<span style='visibility: hidden;'>-</span>"+n.getFullYear()+"-"+(n.getFullYear()+9));p.push(n);if(e==0){this._renderCenturyStartDate=n}this._renderCenturyEndDate=new Date(n.getFullYear()+9,0,1)}}break}}}}return{years:k,dates:p}},refreshViews:function(A,m,s){var B=this;var c=new Array();var w=A.find("#cellTable"+s.toString());var D=this._getDecadeAndCenturiesData();var l=D.years;var C=D.dates;var t=0;var f=this.getMinDate();var n=this.getMaxDate();for(var v=0;v<3;v++){for(var u=0;u<4;u++){var d=v+1;var q=u;if(this.rtl){q=3-q}var x=q+1;var z=new Date(this.value.dateTime);z.setDate(1);z.setMonth(v*4+q);var b=new a.jqx._jqxCalendar.cell(z);var e=w[0].rows["row"+(1+v)+this.element.id];var o=a(e.cells[u]);b.isSelected=false;b.isVisible=true;b.element=o;b.row=v;b.column=u;b.index=c.length;var p="";if(this.view=="year"){var h=this.localization.calendar.months.names;var g=h[v*4+q];switch(this.monthNameFormat){case"default":g=this.localization.calendar.months.namesAbbr[v*4+q];break;case"shortest":g=this.localization.calendar.months.namesShort[v*4+q];break;case"firstTwoLetters":g=g.substring(0,2);break;case"firstLetter":g=g.substring(0,1);break}p=g}else{if(this.view=="decade"||this.view=="centuries"){p=l[v*4+q];if(undefined==p){p="<span style='cursor: default; visibility: hidden;'>2013</span>"}b.setDate(C[v*4+q])}}var z=b.getDate();if(this.view=="year"){if(z.getMonth()==this.getDate().getMonth()&&z.getFullYear()==this.getDate().getFullYear()){b.isSelected=true}}else{if(z.getFullYear()==this.getDate().getFullYear()){b.isSelected=true}}if(this.view=="year"){if(this._getYearAndMonthPart(z)<this._getYearAndMonthPart(f)){b.isDisabled=true}if(this._getYearAndMonthPart(z)>this._getYearAndMonthPart(n)){b.isDisabled=true}}else{if(z.getFullYear()<f.getFullYear()){b.isDisabled=true}if(z.getFullYear()>n.getFullYear()){b.isDisabled=true}}a.jqx.utilities.html(o,p);c[t]=b;t++}}var y=a.data(this.element,A[0].id);if(y!=undefined&&y!=null){y.cells=c}this.renderedCells=c;this._applyCellStyles()},_createViewClone:function(){var b=this.host.find(".jqx-calendar-month");var c=b.clone();c.css("position","absolute");c.css("top",b.position().top);return c},_addCellsTable:function(h,g){var e=this;var c=this.showFooter?20:0;if(this.view!="month"){g.height(this.host.height()-this.titleHeight)}else{g.height(this.host.height()-this.titleHeight-this.columnHeaderHeight-c)}this._viewAnimating=true;var b=this.host.find(".jqx-calendar-month-container");b.css("position","relative");var d=this.host.find(".jqx-calendar-month");var f=this._createViewClone();b.append(f);if(this.view!="month"){this.header.fadeOut(0);if(this.showWeekNumbers){this.rowHeader.fadeOut(0)}if(this.showFooter){this._footer.fadeOut(0)}}else{this.header.fadeIn(this.navigationDelay+200);if(this.showWeekNumbers){this.rowHeader.fadeIn(this.navigationDelay+200)}if(this.showFooter){this._footer.fadeIn(this.navigationDelay+200)}}h.children().remove();h.append(g);this._animateViews(f,g,function(){if(!e.selectedDate){e.selectedDate=e.renderedCells[0].getDate()}try{e.renderedCells[0].element.focus();setTimeout(function(){e.renderedCells[0].element.focus()},10)}catch(i){}e._viewAnimating=false});g.addClass(this.toThemeProperty("jqx-calendar-view"))},_animateViews:function(c,b,e){var d=this;d._viewAnimating=true;if(d.oldView==d.view){c.remove();b.fadeOut(0);b.fadeIn(0);e();return}c.fadeOut(this.navigationDelay+100,function(){c.remove()});b.fadeOut(0);b.fadeIn(this.navigationDelay+200,function(){e()})},focus:function(){try{if(this.renderedCells&&this.renderedCells.length>0){var d=this;var c=false;if(!d.selectedDate&&d.selectionMode!="range"){this.setDate(new Date(),"mouse")}this.element.focus()}}catch(b){}},renderViews:function(D,m,u){var E=this;var d=new Array();var y=a("<table role='grid' style='border-color: transparent; width: 100%; height: 100%;' cellspacing='2' cellpadding='0' id=cellTable"+u.toString()+"><tr role='row' id='row1"+this.element.id+"'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row' id='row2"+this.element.id+"'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row' id='row3"+this.element.id+"'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr></table>");var p=this.host.find(".jqx-calendar-month-container");p.css("position","relative");var z=D.find("#cellsTable"+D[0].id);z[0].style.borderColor="transparent";var G=this._getDecadeAndCenturiesData();var l=G.years;var F=G.dates;var v=0;var f=this.getMinDate();var n=this.getMaxDate();var s=new Date(this.value.dateTime);s.setDate(1);for(var x=0;x<3;x++){for(var w=0;w<4;w++){var c=x+1;var t=w;if(this.rtl){t=3-t}var A=t+1;var e=y[0].rows["row"+(1+x)+this.element.id];var C=new Date(s);C.setMonth(x*4+t);var b=new a.jqx._jqxCalendar.cell(C);var o=a(e.cells[w]);b.isVisible=true;b.element=o;b.row=x;b.column=w;b.index=d.length;b.isSelected=false;var q="";if(this.view=="year"){if(C.getMonth()==this.getDate().getMonth()&&C.getFullYear()==this.getDate().getFullYear()){b.isSelected=true}var h=this.localization.calendar.months.names;var g=h[x*4+t];switch(this.monthNameFormat){case"default":g=this.localization.calendar.months.namesAbbr[x*4+t];break;case"shortest":g=this.localization.calendar.months.namesShort[x*4+t];break;case"firstTwoLetters":g=g.substring(0,2);break;case"firstLetter":g=g.substring(0,1);break}q=g}else{if(this.view=="decade"||this.view=="centuries"){q=l[x*4+t];b.setDate(F[x*4+t]);if(b.getDate().getFullYear()==this.getDate().getFullYear()){b.isSelected=true}if(undefined==q){q="<span style='cursor: default; visibility: hidden;'>2013</span>"}}}var C=b.getDate();if(this.view=="year"){if(this._getYearAndMonthPart(C)<this._getYearAndMonthPart(f)){b.isDisabled=true}if(this._getYearAndMonthPart(C)>this._getYearAndMonthPart(n)){b.isDisabled=true}}else{if(C.getFullYear()<f.getFullYear()){b.isDisabled=true}if(C.getFullYear()>n.getFullYear()){b.isDisabled=true}}a.jqx.utilities.html(o,q);d[v]=b;v++}}a.each(d,function(){var j=this.element;var i=this;if(!E.disabled){E.addHandler(j,"mousedown",function(k){E._setDateAndSwitchViews(i,k,"mouse")});E.addHandler(j,"mouseover",function(r){var k=E.renderedCells[i.index];if(E.view!="centuries"&&k.element.html().toLowerCase().indexOf("span")!=-1){return}k.isHighlighted=true;E._applyCellStyle(k,k.element,k.element)});E.addHandler(j,"mouseout",function(r){var k=E.renderedCells[i.index];if(E.view!="centuries"&&k.element.html().toLowerCase().indexOf("span")!=-1){return}k.isHighlighted=false;E._applyCellStyle(k,k.element,k.element)})}});var B=a.data(this.element,D[0].id);if(B!=undefined&&B!=null){B.cells=d}this.renderedCells=d;this._addCellsTable(z,y);this._applyCellStyles()},_setDateAndSwitchViews:function(m,d,j){if(!this._viewAnimating&&!this._animating){var g=this.getDate();var e=this.renderedCells[m.index].getDate();var k=this.value.dateTime.getDate();var l=new Date(e);if(this.views.indexOf("month")!=-1){l.setDate(k)}else{l.setDate(1);e.setDate(1)}if(l.getMonth()==e.getMonth()){e=l}var i=this.getMinDate();var c=this.getMaxDate();if(this.view=="year"){if(this._getYearAndMonthPart(e)<this._getYearAndMonthPart(i)){return}if(this._getYearAndMonthPart(e)>this._getYearAndMonthPart(c)){return}}else{if(e.getFullYear()<i.getFullYear()){return}if(e.getFullYear()>c.getFullYear()){return}}this._selectDate(e);this.oldView=this.view;switch(this.view){case"year":this.view="month";break;case"decade":this.view="year";break}if(this.views.indexOf("month")==-1){this.view="year"}if(this.views.indexOf("year")==-1){this.view="decade"}if(this.view=="year"){if(this._getYearAndMonthPart(e)<this._getYearAndMonthPart(i)){e=i}if(this._getYearAndMonthPart(e)>this._getYearAndMonthPart(c)){e=c}}else{if(e.getFullYear()<i.getFullYear()){e=i}if(e.getFullYear()>c.getFullYear()){e=c}}if(this.changing&&(this.selectedDate&&(this.selectedDate.getFullYear()!=e.getFullYear()||this.selectedDate.getMonth()!=e.getMonth()||this.selectedDate.getDate()!=e.getDate()))){e=this.selectedDate}this.value._setYear(e.getFullYear());this.value._setDay(e.getDate());this.value._setMonth(e.getMonth()+1);this.value._setDay(e.getDate());var h=this.getVisibleDate();var b=this.getFirstDayOfWeek(h);var f="View"+this.element.id;this.renderCalendarCells(this.month,b,f,true);this.refreshTitle(this.month);if(this.showWeekNumbers){this.refreshRowHeader(this.month,f)}if(this.views.length==3){if(this.view=="month"){this._selectDate(this.selectedDate,"view")}}if(this.view!="month"){if(this.oldView=="year"||(this.views.indexOf("year")==-1&&this.view=="decade")){if(j!="keyboard"){this._raiseEvent("3")}this._raiseEvent("5",{selectionType:"mouse"})}}this._raiseEvent("8")}},renderCalendarCells:function(D,m,s,q){if(this.view=="year"||this.view=="decade"||this.view=="centuries"){this.renderViews(D,m,s);return}var x=a("<table role='grid' style='width: 100%; height: 100%; border-color: transparent;' cellspacing='2' cellpadding='1' id=cellTable"+s.toString()+"><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr></table>");var y=this.table;y[0].style.borderColor="transparent";if(q==undefined){var g=y.find("#cellTable"+s.toString());if(g!=null){g.remove()}y.append(x)}var l=m;var b=this.showDayNames?1:0;var f=this.showWeekNumbers?1:0;var d=new Array();var t=0;var v=(D.width()-this.rowHeaderWidth-2)/7;if(!this.showWeekNumbers){v=(D.width()-2)/7}v=parseInt(v);var A=new a.jqx._jqxDateTimeInput.getDateTime(new Date());for(var w=0;w<6;w++){for(var u=0;u<7;u++){var e=w+1;var o=u;if(this.rtl){o=6-o}var z=o+1;var p="#cell"+e+z+this.element.id;var C=new Date(l.dateTime.getFullYear(),l.dateTime.getMonth(),l.dateTime.getDate());var c=new a.jqx._jqxCalendar.cell(C);var n=a(x[0].rows[w].cells[z-1]);n[0].id=p.substring(1);c.isVisible=true;c.isDisabled=false;if(l.month!=this.value.month){c.isOtherMonth=true;c.isVisible=this.showOtherMonthDays}if(C<this.getMinDate()||C>this.getMaxDate()||this._isDisabled(C)){c.isDisabled=true}if(l.month==A.month&&l.day==A.day&&l.year==A.year){c.isToday=true}if(l.isWeekend()){c.isWeekend=true}c.element=n;c.row=b;c.column=f;a.jqx.utilities.html(n,l.day);l=new a.jqx._jqxDateTimeInput.getDateTime(new Date(l._addDays(1)));a.data(this.element,"cellContent"+p.substring(1),c);a.data(this.element,""+p.substring(1),c);var E=this;this.addHandler(n,"mousedown",function(I){if(!E.readOnly&&!E.disabled){var H=a(I.target);var j=a.data(E.element,H[0].id);var i=E._raiseEvent(3,I);if(j!=null&&j!=undefined){var r=j.getDate();if(E.getMinDate()<=r&&r<=E.getMaxDate()){if(!j.isDisabled){if(j.isOtherMonth&&E.enableAutoNavigation){if(j.row<2){E.navigateBackward()}else{E.navigateForward()}E._selectDate(j.getDate(),"mouse",I.shiftKey)}else{var F=new Date(E.getDate());E._selectDate(j.getDate(),"mouse",I.shiftKey);E.value._setYear(r.getFullYear());E.value._setDay(1);E.value._setMonth(r.getMonth()+1);E.value._setDay(r.getDate());var G=E.host.find(".jqx-calendar-month");G.stop();G.css("margin-left","0px");var k=E.getDate();E._raiseEvent("2");if(j.isOtherMonth){E._raiseEvent("5",{selectionType:"mouse"})}}}}}return false}});if(!E.disabled){var h=function(F,j){if(!E.readOnly){var r=a(F.target);var i=a.data(E.element,r[0].id);if(i!=null&&i!=undefined){var k=i.getDate();if(E.getMinDate()<=k&&k<=E.getMaxDate()){i.isHighlighted=j;E._applyCellStyle(i,i.element,r)}}}};this.addHandler(n,"mouseenter",function(i){h(i,true);return false});this.addHandler(n,"mouseleave",function(i){h(i,false);return false})}f++;d[t]=c;t++}f=0;b++}var B=a.data(this.element,D[0].id);if(B!=undefined&&B!=null){B.cells=d}this.renderedCells=d;if(q!=undefined){this._addCellsTable(y,x)}this._applyCellStyles();this._refreshOtherMonthRows(B,s)},setMaxDate:function(b,c){if(b!=null&&typeof(b)=="string"){b=new Date(b);if(b=="Invalid Date"){return}}this.maxDate=a.jqx._jqxDateTimeInput.getDateTime(b);if(c!==false){this.render()}},getMaxDate:function(){if(this.maxDate!=null&&this.maxDate!=undefined){return this.maxDate.dateTime}return null},setMinDate:function(b,c){if(b!=null&&typeof(b)=="string"){b=new Date(b);if(b=="Invalid Date"){return}}this.minDate=a.jqx._jqxDateTimeInput.getDateTime(b);if(c!==false){this.render()}},getMinDate:function(){if(this.minDate!=null&&this.minDate!=undefined){return this.minDate.dateTime}return null},navigateTo:function(f,h){if(this.view=="month"){var g=this.getMinDate();var c=new Date(this.getMaxDate().getFullYear(),this.getMaxDate().getMonth()+1,this.getMaxDate().getDate());if((f<this._getYearAndMonthPart(g))||(f>this._getYearAndMonthPart(c))){return false}}else{if(f&&(f.getFullYear()<this.getMinDate().getFullYear()||f.getFullYear()>this.getMaxDate().getFullYear())){return false}}if(f==null){return false}if(h==undefined){var i=this;if(this._animating){return}this._animating=true;var d=this.host.find(".jqx-calendar-month-container");if(this._viewClone){this._viewClone.stop();this._viewClone.remove()}if(this._newViewClone){this._newViewClone.stop();this._newViewClone.remove()}var k=this.host.find(".jqx-calendar-month");k.stop();k.css("margin-left","0px");var b=k.clone();this._viewClone=b;var j=new Date(this.value.dateTime);this.value._setYear(f.getFullYear());this.value._setDay(f.getDate());this.value._setMonth(f.getMonth()+1);i.refreshControl();d.css("position","relative");b.css("position","absolute");b.css("top",k.position().top);d.append(b);if(a.jqx.browser.msie&&a.jqx.browser.version<8){this.month.css("position","relative");this.month.css("overflow","hidden");this.table.css("position","relative");this.table.css("overflow","hidden")}var e=-this.host.width();if(f<j){if(this.view=="month"&&f.getMonth()!=j.getMonth()){e=this.host.width()}else{if(f.getFullYear()!=j.getFullYear()){e=this.host.width()}}}b.animate({marginLeft:parseInt(e)+"px"},this.navigationDelay,function(){b.remove()});var l=k.clone();this._newViewClone=l;l.css("position","absolute");l.css("top",k.position().top);d.append(l);l.css("margin-left",-e);k.css("visibility","hidden");l.animate({marginLeft:"0px"},this.navigationDelay,function(){l.remove();k.css("visibility","visible");i._animating=false})}else{this.value._setYear(f.getFullYear());this.value._setDay(f.getDate());this.value._setMonth(f.getMonth()+1);var k=this.host.find(".jqx-calendar-month");k.stop();k.css("margin-left","0px");this.refreshControl()}this._raiseEvent("2");this._raiseEvent("8");return true},setDate:function(b){if(b!=null&&typeof(b)=="string"){b=new Date(b)}if(this.canRender==false){this.canRender=true;this.render()}this.navigateTo(b,"api");this._selectDate(b);if(this.selectionMode=="range"){this._selectDate(b,"mouse")}return true},val:function(b){if(arguments.length!=0){if(b==null){this.setDate(null)}if(b instanceof Date){this.setDate(b)}if(typeof(b)=="string"){this.setDate(b)}}return this.getDate()},getDate:function(){if(this.selectedDate==undefined){return new Date()}return this.selectedDate},getValue:function(){if(this.value==undefined){return new Date()}return this.value.dateTime},setRange:function(c,b){if(this.canRender==false){this.canRender=true;this.render()}this.navigateTo(c,"api");this._selectDate(c,"mouse");this._selectDate(b,"mouse")},getRange:function(){return this.selection},_selectDate:function(d,g,c){if(this.selectionMode=="none"){return}if(g==null||g==undefined){g="none"}if(c==null||c==undefined){c=false}var h=a.data(this.element,"View"+this.element.id);if(h==undefined||h==null){return}if(this.changing){if(d&&this.selectedDate){if(this.selectedDate.getFullYear()!=d.getFullYear()||this.selectedDate.getDate()!=d.getDate()||this.selectedDate.getMonth()!=d.getMonth()){var i=this.changing(this.selectedDate,d)}if(i){d=i}}}var j=this;if(this.input){if(d!=null){this.input.val(d.toString())}else{this.input.val("")}}var e=this.selectedDate;this.selectedDate=d;if(this.view!="month"){if(e!=d){this._raiseEvent(7)}a.each(this.renderedCells,function(o){var k=this;var p=k.getDate();var l=a(k.element);var n=l.find("#cellContent"+l[0].id);if(d==null){k.isSelected=false;k.isDisabled=false}else{k.isSelected=false;if(p){if((p.getMonth()==d.getMonth()&&j.view=="year"&&p.getFullYear()==d.getFullYear())||(j.view=="decade"&&p.getFullYear()==d.getFullYear())){k.isSelected=true;try{k.element.focus()}catch(m){}}}}j._applyCellStyle(k,l,l)});if(this.change){this.change(d)}return}if(this.view=="month"){if(this.selectionMode=="range"&&g=="key"){var f=this.getVisibleDate();var b=this.getFirstDayOfWeek(f);this.refreshCalendarCells(this.month,b,"View"+this.element.id)}}a.each(this.renderedCells,function(q){var v=this;var n=v.getDate();var u=a(v.element);var k=u;if(u.length==0){return false}if(d==null){v.isSelected=false;v.isDisabled=false;if(q==0){j.selection={from:null,to:null};j._raiseEvent("2");j._raiseEvent("5",{selectionType:g})}}else{if(j.selectionMode!="range"||g=="key"){if(n.getDate()==d.getDate()&&n.getMonth()==d.getMonth()&&n.getFullYear()==d.getFullYear()&&v.isSelected){j._applyCellStyle(v,u,k);j._raiseEvent("5",{selectionType:g});return}if(v.isSelected){j._raiseEvent("6",{selectionType:g})}v.isSelected=false;if(n.getDate()==d.getDate()&&n.getMonth()==d.getMonth()&&n.getFullYear()==d.getFullYear()){v.isSelected=true;if(q==0){j.selection={date:d}}try{v.element.focus();j.host.focus()}catch(r){}if(!v.isOtherMonth){j.value._setMonth(d.getMonth()+1);j.value._setDay(d.getDate());j.value._setYear(d.getFullYear());j._raiseEvent("2");j._raiseEvent("5",{selectionType:g})}}if(j.selectionMode=="range"){j._clicks=0;j.selection={from:d,to:d}}}else{if(j.selectionMode=="range"){if(g=="view"){v.isSelected=false;v.isDisabled=false;if(j.getMaxDate()<n){v.isDisabled=true}if(j.getMinDate()>n){v.isDisabled=true}if(j._isDisabled(n)){v.isDisabled=true}j._applyCellStyle(v,u,k);return true}if(q==0){if(g!="none"){if(j._clicks==undefined){j._clicks=0}j._clicks++;if(c){j._clicks++}if(j._clicks==1){j.selection={from:d,to:d}}else{var t=j.selection.from;var p=t<=d?t:d;var s=t<=d?d:t;if(p){var l=new Date(p.getFullYear(),p.getMonth(),p.getDate())}if(s){var m=new Date(s.getFullYear(),s.getMonth(),s.getDate(),23,59,59)}j.selection={from:l,to:m};j._clicks=0}}else{if(j.selection==null||j.selection.from==null){j.selection={from:d,to:d};if(j._clicks==undefined){j._clicks=0}j._clicks++;if(j._clicks==2){j._clicks=0}}}}var o=function(x){if(x==null){return new Date()}var w=new Date();w.setHours(0,0,0,0);w.setFullYear(x.getFullYear(),x.getMonth(),x.getDate());return w};if(!v.isOtherMonth&&o(n).toString()==o(d).toString()){j.value._setMonth(d.getMonth()+1);j.value._setDay(d.getDate());j.value._setYear(d.getFullYear());j._raiseEvent("2");j._raiseEvent("5",{selectionType:g})}v.isSelected=false;v.isDisabled=false;if(o(n)<o(j.selection.from)&&j._clicks==1){v.isDisabled=true}if(j.getMaxDate()<n){v.isDisabled=true}if(j.getMinDate()>n){v.isDisabled=true}if(j._isDisabled(n)){v.isDisabled=true}if(!v.isDisabled){if(o(n)>=o(j.selection.from)&&o(n)<=o(j.selection.to)){v.isSelected=true}}}}}j._applyCellStyle(v,u,k)});if(j.selectionMode=="range"&&j._clicks==0){j._raiseEvent(7);return}else{if(j.selectionMode=="range"){return}}if(e!=d){j._raiseEvent(7);if(this.change){this.change(d)}}},_getSelectedDate:function(){var d=a.data(this.element,"View"+this.element.id);if(d==undefined||d==null){return}if(this.view!="month"){return this.selectedDate}for(var c=0;c<d.cells.length;c++){var b=d.cells[c];var e=b.getDate();if(b.isSelected){return e}}if(this.selectedDate){return this.selectedDate}},_getSelectedCell:function(){var d=a.data(this.element,"View"+this.element.id);if(d==undefined||d==null){return}for(var c=0;c<d.cells.length;c++){var b=d.cells[c];var e=b.getDate();if(b.isSelected){return b}}},_applyCellStyle:function(c,d,g){var e=this;if(g==null||(g!=null&&g.length==0)){g=d}var b="";b=this.toThemeProperty("jqx-rc-all");b+=" "+this.toThemeProperty("jqx-item");if(this.disabled||c.isDisabled){b+=" "+this.toThemeProperty("jqx-calendar-cell-disabled");b+=" "+this.toThemeProperty("jqx-fill-state-disabled")}if(c.isOtherMonth&&this.enableOtherMonthDays&&c.isVisible){b+=" "+this.toThemeProperty("jqx-calendar-cell-othermonth")}if(c.isWeekend&&this.enableWeekend&&c.isVisible&&c.isVisible){b+=" "+this.toThemeProperty("jqx-calendar-cell-weekend")}if(!c.isVisible){b+=" "+this.toThemeProperty("jqx-calendar-cell-hidden")}else{b+=" "+this.toThemeProperty("jqx-calendar-cell");if(this.view!="month"){if(g.length>0&&g.html().toLowerCase().indexOf("span")!=-1){g.css("cursor","default")}}}g.removeAttr("aria-selected");if(c.isSelected&&c.isVisible){b+=" "+this.toThemeProperty("jqx-calendar-cell-selected");b+=" "+this.toThemeProperty("jqx-fill-state-pressed");g.attr("aria-selected",true);this.host.removeAttr("aria-activedescendant").attr("aria-activedescendant",g[0].id);var f=c.getDate();if(this._isDisabled(f)){b+=" "+this.toThemeProperty("jqx-calendar-cell-selected-invalid")}}if(c.isHighlighted&&c.isVisible&&this.enableHover){if(!c.isDisabled){b+=" "+this.toThemeProperty("jqx-calendar-cell-hover");b+=" "+this.toThemeProperty("jqx-fill-state-hover")}}b+=" "+this.toThemeProperty("jqx-calendar-cell-"+this.view);if(c.isToday&&c.isVisible){b+=" "+this.toThemeProperty("jqx-calendar-cell-today")}g[0].className=b;if(this.specialDates.length>0){var h=this;a.each(this.specialDates,function(){if(this.Class!=undefined&&this.Class!=null&&this.Class!=""){g.removeClass(this.Class)}else{g.removeClass(e.toThemeProperty("jqx-calendar-cell-specialDate"))}var i=c.getDate();if(i.getFullYear()==this.Date.getFullYear()&&i.getMonth()==this.Date.getMonth()&&i.getDate()==this.Date.getDate()){if(c.tooltip==null&&this.Tooltip!=null){c.tooltip=this.Tooltip;if(a(g).jqxTooltip){var j=this.Class;a(g).jqxTooltip({value:{cell:c,specialDate:this.Date},name:h.element.id,content:this.Tooltip,position:"mouse",theme:h.theme,opening:function(k){if(g.hasClass(e.toThemeProperty("jqx-calendar-cell-specialDate"))){return true}if(g.hasClass(j)){return true}return false}})}}g.removeClass(e.toThemeProperty("jqx-calendar-cell-othermonth"));g.removeClass(e.toThemeProperty("jqx-calendar-cell-weekend"));if(this.Class==undefined||this.Class==""){g.addClass(e.toThemeProperty("jqx-calendar-cell-specialDate"));return false}else{g.addClass(this.Class);return false}}})}},_applyCellStyles:function(){var f=a.data(this.element,"View"+this.element.id);if(f==undefined||f==null){return}for(var e=0;e<f.cells.length;e++){var b=f.cells[e];var c=a(b.element);var d=c.find("#cellContent"+c[0].id);if(d.length==0){d=c}this._applyCellStyle(b,c,d)}},getWeekOfYear:function(f){var b=new Date(f.dateTime);dowOffset=this.firstDayOfWeek;var e=new Date(b.getFullYear(),0,1);var c=e.getDay()-dowOffset;c=(c>=0?c:c+7);var d=Math.floor((b.getTime()-e.getTime()-(b.getTimezoneOffset()-e.getTimezoneOffset())*60000)/86400000)+1;var g;if(c<4){g=Math.floor((d+c-1)/7)+1;if(g>52){nYear=new Date(b.getFullYear()+1,0,1);nday=nYear.getDay()-dowOffset;nday=nday>=0?nday:nday+7;g=nday<4?1:53}}else{g=Math.floor((d+c-1)/7)}return g},renderColumnHeader:function(w){if(!this.showDayNames){return}var t=a("<table role='grid' style='border-spacing: 0px; border-collapse: collapse; width: 100%; height: 100%;' cellspacing='0' cellpadding='1'><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr></table>");t.find("table").addClass(this.toThemeProperty("jqx-reset"));t.find("tr").addClass(this.toThemeProperty("jqx-reset"));t.find("td").css({background:"transparent",padding:1,margin:0,border:"none"});t.addClass(this.toThemeProperty("jqx-reset"));t.addClass(this.toThemeProperty("jqx-widget-content"));t.addClass(this.toThemeProperty("jqx-calendar-column-header"));this.columnHeader.append(t);var d=this.getVisibleDate();var h=this.getFirstDayOfWeek(d);var m=h.dayOfWeek;var x=this.getWeekOfYear(h);var q=this.firstDayOfWeek;var v=this.localization.calendar.days.names;var n=new Array();var g=h;var o=(w.width()-this.rowHeaderWidth-2)/7;if(!this.showWeekNumbers){o=(w.width()-2)/7}for(var s=0;s<7;s++){var f=v[q];if(this.rtl){f=v[6-q]}switch(this.dayNameFormat){case"default":f=this.localization.calendar.days.namesAbbr[q];if(this.rtl){f=this.localization.calendar.days.namesAbbr[6-q]}break;case"shortest":f=this.localization.calendar.days.namesShort[q];if(this.rtl){f=this.localization.calendar.days.namesShort[6-q]}break;case"firstTwoLetters":f=f.substring(0,2);break;case"firstLetter":f=f.substring(0,1);break}var b=new a.jqx._jqxCalendar.cell(g.dateTime);var k=s+1;var l=k+this.element.id;var j=a(t[0].rows[0].cells[s]);var p=s;if(this.enableTooltips){if(a(j).jqxTooltip){a(j).jqxTooltip({name:this.element.id,content:v[q],theme:this.theme,position:"mouse"})}}if(q>=6){q=0}else{q++}s=p;b.element=j;b.row=0;b.column=s+1;var e=this._textwidth(f);var c="<div style='padding: 0; margin: 0; border: none; background: transparent;' id='columnCell"+l+"'>"+f+"</div>";j.append(c);j.find("#columnCell"+l).addClass(this.toThemeProperty("jqx-calendar-column-cell"));j.width(o);if(this.disabled){j.find("#columnCell"+l).addClass(this.toThemeProperty("jqx-calendar-column-cell-disabled"))}if(e>0&&o>0){while(e>j.width()){if(f.length==0){break}f=f.substring(0,f.length-1);a.jqx.utilities.html(j.find("#columnCell"+l),f);e=this._textwidth(f)}}n[s]=b;g=new a.jqx._jqxDateTimeInput.getDateTime(new Date(g._addDays(1)))}if(parseInt(this.columnHeader.width())>parseInt(this.host.width())){this.columnHeader.width(this.host.width())}var u=a.data(this.element,w[0].id);u.columnCells=n},_format:function(d,e,b){var f=false;try{if(Globalize!=undefined){f=true}}catch(c){}if(a.global){a.global.culture.calendar=this.localization.calendar;return a.global.format(d,e,this.culture)}else{if(f){try{if(Globalize.cultures[this.culture]){Globalize.cultures[this.culture].calendar=this.localization.calendar;return Globalize.format(d,e,this.culture)}else{return Globalize.format(d,e,this.culture)}}catch(c){return Globalize.format(d,e)}}else{if(a.jqx.dataFormat){return a.jqx.dataFormat.formatdate(d,e,this.localization.calendar)}}}},_textwidth:function(d){var c=a("<span>"+d+"</span>");c.addClass(this.toThemeProperty("jqx-calendar-column-cell"));a(this.host).append(c);var b=c.width();c.remove();return b},_textheight:function(d){var c=a("<span>"+d+"</span>");a(this.host).append(c);var b=c.height();c.remove();return b},_renderRowHeader:function(k){var g=this.getVisibleDate();var c=this.getFirstDayOfWeek(g);var f=c.dayOfWeek;var s=this.getWeekOfYear(c);var o=new a.jqx._jqxDateTimeInput.getDateTime(new Date(c.dateTime));o._addDays(5);o.dayOfWeek=o.dateTime.getDay();var m=this.getWeekOfYear(o);if(53==s&&o.dateTime.getMonth()==0){s=1}var l=a("<table style='overflow: hidden; width: 100%; height: 100%;' cellspacing='0' cellpadding='1'><tr><td></td></tr><tr><td/></tr><tr><td/></tr><tr><td/></tr><tr><td/></tr><tr><td/></tr></table>");l.find("table").addClass(this.toThemeProperty("jqx-reset"));l.find("td").addClass(this.toThemeProperty("jqx-reset"));l.find("tr").addClass(this.toThemeProperty("jqx-reset"));l.addClass(this.toThemeProperty("jqx-calendar-row-header"));l.width(this.rowHeaderWidth);this.rowHeader.append(l);var d=c;var r=new Array();for(var h=0;h<6;h++){var e=s.toString();var q=new a.jqx._jqxCalendar.cell(d.dateTime);var j=h+1+this.element.id;var p=a(l[0].rows[h].cells[0]);q.element=p;q.row=h;q.column=0;var b="<div style='background: transparent; border: none; padding: 0; margin: 0;' id ='headerCellContent"+j+"'>"+e+"</div>";p.append(b);p.find("#headerCellContent"+j).addClass(this.toThemeProperty("jqx-calendar-row-cell"));r[h]=q;d=new a.jqx._jqxDateTimeInput.getDateTime(new Date(d._addWeeks(1)));s=this.getWeekOfYear(d)}var n=a.data(this.element,k[0].id);n.rowCells=r},getFirstDayOfWeek:function(e){var d=e;if(this.firstDayOfWeek<0||this.firstDayOfWeek>6){this.firstDayOfWeek=6}var c=d.dayOfWeek-this.firstDayOfWeek;if(c<=0){c+=7}var b=a.jqx._jqxDateTimeInput.getDateTime(d._addDays(-c));return b},getVisibleDate:function(){var c=new a.jqx._jqxDateTimeInput.getDateTime(new Date(this.value.dateTime));if(c<this.minDate){c=this.minDate}if(c>this.maxDate){this.visibleDate=this.maxDate}c.dateTime.setHours(0);var d=c.day;var b=a.jqx._jqxDateTimeInput.getDateTime(c._addDays(-d+1));c=b;return c},destroy:function(b){this.host.removeClass();if(b!=false){this.host.remove()}},_raiseEvent:function(i,c){if(c==undefined){c={owner:null}}var e=this.events[i];var f=c?c:{};f.owner=this;var g=new a.Event(e);g.owner=this;g.args=f;if(i==0||i==1||i==2||i==3||i==4||i==5||i==6||i==7||i==8){g.args.date=g.args.selectedDate=this.getDate();g.args.range=this.getRange();var h=this.getViewStart();var d=this.getViewEnd();g.args.view={from:h,to:d}}var b=this.host.trigger(g);if(i==0||i==1){b=false}return b},propertyMap:function(b){if(b=="value"){if(this.selectionMode!="range"){return this.getDate()}else{return this.getRange()}}return null},updateSize:function(){var d=this.host.find("#View"+this.element.id);if(d.length>0){this.setCalendarSize();if(this.height!=undefined&&!isNaN(this.height)){d.height(this.height)}else{if(this.height!=null&&this.height.toString().indexOf("px")!=-1){d.height(this.height)}}if(this.width!=undefined&&!isNaN(this.width)){d.width(this.width)}else{if(this.width!=null&&this.width.toString().indexOf("px")!=-1){d.width(this.width)}}var c=this.host.height()-this.titleHeight-this.columnHeaderHeight;var b="View"+this.element.id;d.find("#cellsTable"+b).height(c);d.find("#calendarRowHeader"+b).height(c);this.refreshControl()}},resize:function(){this.updateSize()},clear:function(){if(this.selectionMode=="range"){this._clicks=1;this.setRange(null,null);this._raiseEvent(7)}else{this.setDate(null,"mouse")}this._clicks=0;this.selection={from:null,to:null}},today:function(){if(this.selectionMode=="range"){this.setRange(new Date(),new Date())}else{this.setDate(new Date(),"mouse")}},propertyChangedHandler:function(d,e,g,f){if(this.isInitialized==undefined||this.isInitialized==false){return}if(e=="enableHover"){return}if(e=="keyboardNavigation"){return}if(e=="localization"){if(this.localization){if(this.localization.backString){this.backText=this.localization.backString}if(this.localization.forwardString){this.forwardText=this.localization.forwardString}if(this.localization.todayString){this.todayString=this.localization.todayString}if(this.localization.clearString){this.clearString=this.localization.clearString}this.firstDayOfWeek=this.localization.calendar.firstDay}}if(e=="culture"){try{if(a.global){a.global.preferCulture(d.culture);d.localization.calendar=a.global.culture.calendar}else{if(Globalize){var b=Globalize.culture(d.culture);d.localization.calendar=b.calendar}}}catch(c){}}if(e=="views"){if(d.views.indexOf("month")==-1){d.view="year"}if(d.views.indexOf("year")==-1&&d.views.indexOf("month")==-1){d.view="decade"}d.render();return}if(e=="showFooter"){d.render()}if(e=="width"||e=="height"){d.updateSize();return}else{if(e=="theme"){a.jqx.utilities.setTheme(g,f,d.host)}else{if(e=="rowHeaderWidth"||e=="showWeekNumbers"){d.render()}else{d.view="month";d.render()}}}}})})(jqxBaseFramework);(function(a){a.jqx._jqxCalendar.cell=function(c){var b={dateTime:new a.jqx._jqxDateTimeInput.getDateTime(c),_date:c,getDate:function(){return this._date},setDate:function(d){this.dateTime=new a.jqx._jqxDateTimeInput.getDateTime(d);this._date=d},isToday:false,isWeekend:false,isOtherMonth:false,isVisible:true,isSelected:false,isHighlighted:false,element:null,row:-1,column:-1,tooltip:null};return b};a.jqx._jqxCalendar.monthView=function(c,h,d,b,f,e){var g={start:c,end:h,cells:d,rowCells:b,columnCells:f,element:e};return g}})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxDateTimeInput","",{});a.extend(a.jqx._jqxDateTimeInput.prototype,{defineInstance:function(){var b={value:a.jqx._jqxDateTimeInput.getDateTime(new Date()),minDate:a.jqx._jqxDateTimeInput.getDateTime(new Date()),maxDate:a.jqx._jqxDateTimeInput.getDateTime(new Date()),min:new Date(1900,0,1),max:new Date(2100,0,1),rowHeaderWidth:25,enableViews:true,views:["month","year","decade"],selectableDays:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],change:null,changing:null,columnHeaderHeight:20,placeHolder:"",titleHeight:25,firstDayOfWeek:0,showWeekNumbers:false,showTimeButton:false,cookies:false,cookieoptions:null,showFooter:false,formatString:"dd/MM/yyyy",width:200,height:25,dayNameFormat:"firstTwoLetters",textAlign:"left",readonly:false,culture:"default",activeEditor:null,showCalendarButton:true,openDelay:250,closeDelay:300,closeCalendarAfterSelection:true,isEditing:false,enableBrowserBoundsDetection:false,dropDownHorizontalAlignment:"left",enableAbsoluteSelection:false,disabled:false,buttonSize:18,animationType:"slide",dropDownWidth:"200px",dropDownHeight:"205px",selectionMode:"default",renderMode:"full",rtl:false,_editor:false,todayString:"Today",clearString:"Clear",popupZIndex:9999999999999,allowNullDate:true,enableHover:true,allowKeyboardDelete:true,localization:{backString:"Back",forwardString:"Forward",todayString:"Today",clearString:"Clear",calendar:{name:"Gregorian_USEnglish","/":"/",":":":",firstDay:0,days:{names:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],namesAbbr:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],namesShort:["Su","Mo","Tu","We","Th","Fr","Sa"]},months:{names:["January","February","March","April","May","June","July","August","September","October","November","December",""],namesAbbr:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""]},AM:["AM","am","AM"],PM:["PM","pm","PM"],eras:[{name:"A.D.",start:null,offset:0}],twoDigitYearMax:2029,patterns:{d:"M/d/yyyy",D:"dddd, MMMM dd, yyyy",t:"h:mm tt",T:"h:mm:ss tt",f:"dddd, MMMM dd, yyyy h:mm tt",F:"dddd, MMMM dd, yyyy h:mm:ss tt",M:"MMMM dd",Y:"yyyy MMMM",S:"yyyy\u0027-\u0027MM\u0027-\u0027dd\u0027T\u0027HH\u0027:\u0027mm\u0027:\u0027ss",ISO:"yyyy-MM-dd hh:mm:ss"}}},events:["valueChanged","textchanged","mousedown","mouseup","keydown","keyup","keypress","open","close","change"],aria:{"aria-valuenow":{name:"getDate",type:"date"},"aria-valuetext":{name:"getText",type:"string"},"aria-valuemin":{name:"min",type:"date"},"aria-valuemax":{name:"max",type:"date"},"aria-disabled":{name:"disabled",type:"boolean"}}};a.extend(true,this,b);this.value._setHours(0);this.value._setMinutes(0);this.value._setSeconds(0);this.value._setMilliseconds(0);this.minDate._setYear(1900);this.minDate._setMonth(1);this.minDate._setDay(1);this.minDate._setHours(1);this.minDate._setMinutes(1);this.minDate._setSeconds(1);this.minDate._setMilliseconds(1);this.maxDate._setYear(2100);this.maxDate._setMonth(1);this.maxDate._setDay(1);this.maxDate._setHours(1);this.maxDate._setMinutes(1);this.maxDate._setSeconds(1);this.maxDate._setMilliseconds(1);this.defaultMinDate=this.minDate;this.defaultMaxDate=this.maxDate;return b},createInstance:function(h){var b="";var e=this;if(!e.host.jqxCalendar){throw new Error("jqxDateTimeInput: Missing reference to jqxcalendar.js.")}if(e.host.attr("value")){b=true;var c=e.host.attr("value");if(e.selectionMode!="range"){var d=new Date(c);if(d!=undefined&&!isNaN(d)){e.value=a.jqx._jqxDateTimeInput.getDateTime(d)}}}if(e.value!=null&&e.value instanceof Date){e.value=a.jqx._jqxDateTimeInput.getDateTime(e.value)}else{if(e.value!=null&&typeof(e.value)=="string"){var d=new Date(e.value);if(d!=undefined&&!isNaN(d)){e.value=a.jqx._jqxDateTimeInput.getDateTime(d)}else{if(e.value.indexOf(",")>=0){e.value=e.value.replace(/\,/g,"/");var d=new Date(e.value);if(d!=undefined&&!isNaN(d)){e.value=a.jqx._jqxDateTimeInput.getDateTime(d)}}}}}e.host.attr("data-role","input");e.render();a.jqx.aria(this);if(e.getDate()!=null){a.jqx.aria(this,"aria-label","Current focused date is "+e.getDate().toLocaleString())}else{a.jqx.aria(this,"aria-label","Current focused date is Null")}if(e.minDate!==e.defaultMinDate){e.min=e.minDate}if(e.maxDate!==e.defaultMaxDate){e.max=e.maxDate}e.setMaxDate(e.max,false);e.setMinDate(e.min,false);if(e.selectionMode=="range"){if(b){var c=e.host.attr("value");var g=c.substring(0,c.indexOf("-"));var f=c.substring(c.indexOf("-")+1);var k=new Date(g);var j=new Date(f);if(k!=undefined&&!isNaN(k)){if(j!=undefined&&!isNaN(j)){e.setRange(k,j)}}}else{if(e.getDate()!=null){e.setRange(e.getDate(),e.getDate())}}}},_format:function(d,e,b){var f=false;try{if(Globalize!=undefined){f=true}}catch(c){}if(a.global){return a.global.format(d,e,this.culture)}else{if(f){try{var e=Globalize.format(d,e,this.culture);return e}catch(c){return Globalize.format(d,e)}}else{if(a.jqx.dataFormat){if(d instanceof Date){return a.jqx.dataFormat.formatdate(d,e,this.localization.calendar)}else{if(typeof d==="number"){return a.jqx.dataFormat.formatnumber(d,e,this.localization.calendar)}else{return a.jqx.dataFormat.formatdate(d,e,this.localization.calendar)}}}else{throw new Error("jqxDateTimeInput: Missing reference to globalize.js.")}}}},render:function(){var l=this;l._removeHandlers();l.element.innerHTML="";l.host.attr({role:"textbox"});l.id=a.jqx.utilities.createId();var f=a.jqx.utilities.createId();var k=a.jqx.utilities.createId();l._setSize();if(l.width==null){l.width=l.host.width();l.host.width(l.width)}l.touch=a.jqx.mobile.isTouchDevice();var c=a("<div class='jqx-max-size jqx-position-relative'></div>").appendTo(l.host);l.dateTimeInput=a("<input class='jqx-position-absolute' id='input"+l.element.id+"' autocomplete='off' type='textarea'/>").appendTo(c);l.dateTimeInput.addClass(l.toThemeProperty("jqx-reset"));l.dateTimeInput.addClass(l.toThemeProperty("jqx-clear"));l.dateTimeInput.addClass(l.toThemeProperty("jqx-input-content"));l.dateTimeInput.addClass(l.toThemeProperty("jqx-widget-content"));l.dateTimeInput.addClass(l.toThemeProperty("jqx-rc-all"));l.dateTimeInput.attr("placeHolder",l.placeHolder);if(l.renderMode!="full"){l.dateTimeInput.remove()}var d=l.host.attr("name");if(d){l.dateTimeInput.attr("name",d)}if(l.host.attr("tabindex")){l.dateTimeInput.attr("tabindex",l.host.attr("tabindex"));l.host.removeAttr("tabindex")}if(l.rtl){l.dateTimeInput.css("direction","rtl");l.dateTimeInput.addClass("jqx-rtl")}l.calendarButton=a("<div style='height: 100%;' class='jqx-position-absolute'><div></div></div>").appendTo(c);if(!l.rtl){l.calendarButton.addClass(l.toThemeProperty("jqx-action-button"))}else{l.calendarButton.addClass(l.toThemeProperty("jqx-action-button-rtl"))}l.calendarButtonIcon=a(l.calendarButton.children()[0]);l.calendarButtonIcon.addClass(l.toThemeProperty("jqx-icon"));l.calendarButtonIcon.addClass(l.toThemeProperty("jqx-icon-calendar"));l.calendarButton.addClass(l.toThemeProperty("jqx-fill-state-normal"));if(!l.rtl){l.calendarButton.addClass(l.toThemeProperty("jqx-rc-r"))}else{l.calendarButton.addClass(l.toThemeProperty("jqx-rc-l"))}l.timeButton=a("<div style='height: 100%;' class='jqx-position-absolute'><div></div></div>").appendTo(c);if(!l.rtl){l.timeButton.addClass(l.toThemeProperty("jqx-action-button"))}else{l.timeButton.addClass(l.toThemeProperty("jqx-action-button-rtl"))}l.timeButtonIcon=a(l.timeButton.children()[0]);l.timeButtonIcon.addClass(l.toThemeProperty("jqx-icon"));l.timeButtonIcon.addClass(l.toThemeProperty("jqx-icon-time"));l.timeButton.addClass(l.toThemeProperty("jqx-fill-state-normal"));if(!l.rtl){l.timeButton.addClass(l.toThemeProperty("jqx-rc-r"))}else{l.timeButton.addClass(l.toThemeProperty("jqx-rc-l"))}var n=this;l._arrange();if(a.jqx._jqxCalendar!=null&&a.jqx._jqxCalendar!=undefined){try{var j="calendar"+l.id;var h=a(a.find("#"+j));if(h.length>0){h.remove()}a.jqx.aria(this,"aria-owns",j);a.jqx.aria(this,"aria-haspopup",true);a.jqx.aria(this,"aria-readonly",l.selectionMode=="range"?true:false);var b=a("<div style='overflow: hidden; background: transparent; position: absolute;' id='calendar"+l.id+"'><div id='innerCalendar"+l.id+"'></div><div id='innerTime"+l.id+"'></div></div>");if(a.jqx.utilities.getBrowser().browser=="opera"){b.hide()}b.appendTo(document.body);l.container=b;l.calendarContainer=a(a.find("#innerCalendar"+l.id)).jqxCalendar({changing:l.changing,change:l.change,enableViews:l.enableViews,selectableDays:l.selectableDays,views:l.views,rowHeaderWidth:l.rowHeaderWidth,titleHeight:l.titleHeight,columnHeaderHeight:l.columnHeaderHeight,_checkForHiddenParent:false,enableAutoNavigation:false,canRender:false,localization:l.localization,todayString:l.todayString,clearString:l.clearString,dayNameFormat:l.dayNameFormat,rtl:l.rtl,culture:l.culture,showFooter:l.showFooter,selectionMode:l.selectionMode,firstDayOfWeek:l.firstDayOfWeek,showWeekNumbers:l.showWeekNumbers,width:l.dropDownWidth,height:l.dropDownHeight,theme:l.theme});l.calendarContainer.css({position:"absolute",zIndex:l.popupZIndex,top:0,left:0});l.calendarContainer.addClass(l.toThemeProperty("jqx-popup"));if(a.jqx.browser.msie){l.calendarContainer.addClass(l.toThemeProperty("jqx-noshadow"))}l.timeContainer=a(a.find("#innerTime"+l.id));l.timeContainer.css({position:"absolute",zIndex:l.popupZIndex,top:0,left:0});l.timeContainer.addClass(l.toThemeProperty("jqx-popup"));if(a.jqx.browser.msie){l.timeContainer.addClass(l.toThemeProperty("jqx-noshadow"))}l._calendar=a.data(l.calendarContainer[0],"jqxCalendar").instance;var n=this;l._calendar.today=function(){n.today()};l._calendar.clear=function(){n.clear()};if(a.jqx.utilities.getBrowser().browser=="opera"){b.show()}b.height(parseInt(l.calendarContainer.height())+25);b.width(parseInt(l.calendarContainer.width())+25);if(l.selectionMode=="range"){l.readonly=true}if(l.animationType=="none"){l.container.css("display","none")}else{l.container.hide()}}catch(m){}}if(a.global){a.global.preferCulture(l.culture)}l.selectedText="";l._addHandlers();l.self=this;l.oldValue=l.getDate();l.items=new Array();l.editors=new Array();l._loadItems();l.editorText="";if(l.readonly==true){l.dateTimeInput.css("readonly",l.readonly)}l.dateTimeInput.css("text-align",l.textAlign);l.host.addClass(l.toThemeProperty("jqx-widget"));l.host.addClass(l.toThemeProperty("jqx-datetimeinput"));l.host.addClass(l.toThemeProperty("jqx-input"));l.host.addClass(l.toThemeProperty("jqx-overflow-hidden"));l.host.addClass(l.toThemeProperty("jqx-rc-all"));l.host.addClass(l.toThemeProperty("jqx-reset"));l.host.addClass(l.toThemeProperty("jqx-clear"));l.host.addClass(l.toThemeProperty("jqx-widget-content"));l.propertyChangeMap.disabled=function(e,q,p,r){if(r){e.host.addClass(n.toThemeProperty("jqx-input-disabled"));e.host.addClass(n.toThemeProperty("jqx-fill-state-disabled"))}else{e.host.removeClass(n.toThemeProperty("jqx-fill-state-disabled"));e.host.removeClass(n.toThemeProperty("jqx-input-disabled"))}a.jqx.aria(this,"aria-disabled",r)};if(l.disabled){l.host.addClass(l.toThemeProperty("jqx-input-disabled"));l.host.addClass(l.toThemeProperty("jqx-fill-state-disabled"));l.dateTimeInput.attr("disabled",true)}if(l.host.parents("form").length>0){l.addHandler(l.host.parents("form"),"reset",function(){setTimeout(function(){n.setDate(new Date())},10)})}if(l.cookies){var g=a.jqx.cookie.cookie("jqxDateTimeInput"+l.element.id);if(g!=null){l.setDate(new Date(g))}}if(a.jqx.browser.msie&&a.jqx.browser.version<8){if(l.host.parents(".jqx-window").length>0){var o=l.host.parents(".jqx-window").css("z-index");l.container.css("z-index",o+10);l.calendarContainer.css("z-index",o+10)}}if(l.culture!="default"){l._applyCulture()}if(l.value){if(l.calendarContainer.jqxCalendar("_isDisabled",l.value.dateTime)){l.dateTimeInput.addClass(l.toThemeProperty("jqx-input-invalid"))}else{l.dateTimeInput.removeClass(l.toThemeProperty("jqx-input-invalid"))}}},val:function(c){var b=this;if(arguments.length!=0){if(c==null){b.setDate(null)}if(b.selectionMode=="range"){b.setRange(arguments[0],arguments[1]);return b.getText()}if(c instanceof Date){b.setDate(c)}if(typeof(c)=="string"){if(c=="date"){return b.getDate()}b.setDate(c)}}return b.getText()},_setSize:function(){if(this.width!=null&&this.width.toString().indexOf("px")!=-1){this.host.width(this.width)}else{if(this.width!=undefined&&!isNaN(this.width)){this.host.width(this.width)}}if(this.height!=null&&this.height.toString().indexOf("px")!=-1){this.host.height(this.height)}else{if(this.height!=undefined&&!isNaN(this.height)){this.host.height(this.height)}}var e=false;if(this.width!=null&&this.width.toString().indexOf("%")!=-1){e=true;this.host.width(this.width)}if(this.height!=null&&this.height.toString().indexOf("%")!=-1){e=true;this.host.height(this.height)}var c=this;var d=function(){if(c.calendarContainer){c._arrange()}};if(e){if(this.calendarContainer){this._arrange();var b=this.host.width();if(this.dropDownWidth!="auto"){b=this.dropDownWidth}this.calendarContainer.jqxCalendar({width:b});this.container.width(parseInt(b)+25)}}a.jqx.utilities.resize(this.host,function(){d()})},_arrange:function(){if(this.height==null){this.height=27;this.host.height(27)}var d=parseInt(this.host.width());var b=parseInt(this.host.height());var h=this.buttonSize;var g=2;if(!this.showCalendarButton&&!this.showTimeButton){h=0;buttonHeight=0;this.calendarButton.hide();g=0}if(!this.showCalendarButton){this.calendarButton.hide()}else{this.calendarButton.show()}if(!this.showTimeButton){this.timeButton.hide()}else{this.timeButton.show()}var c=d-h-1*g;if(this.showTimeButton&&this.showCalendarButton){var c=d-2*h-1*g}else{if(this.showTimeButton||this.showCalendarButton){var c=d-h-1*g}}if(c>0){this.dateTimeInput[0].style.width=c+"px"}if(this.rtl){this.dateTimeInput[0].style.width=(-1+c+"px")}if(this.showTimeButton&&this.showCalendarButton){this.calendarButton.removeClass(this.toThemeProperty("jqx-rc-r"));this.calendarButton.removeClass(this.toThemeProperty("jqx-rc-l"))}this.dateTimeInput[0].style.left="0px";this.dateTimeInput[0].style.top="0px";this.calendarButton[0].style.width=h+1+"px";this.calendarButton[0].style.left=1+c+"px";this.timeButton[0].style.width=h+1+"px";if(this.showCalendarButton){this.timeButton[0].style.left=1+this.calendarButton.width()+c+"px"}else{this.timeButton[0].style.left=1+c+"px"}if(this.renderMode!="full"){this.calendarButton[0].style.width="100%";this.calendarButton[0].style.left="0px";this.calendarButton.css("border","none");this.timeButton[0].style.width="100%";this.timeButton[0].style.left="0px";this.timeButton.css("border","none")}var e=this.dateTimeInput.height();if(e==0){e=parseInt(this.dateTimeInput.css("font-size"))+3;this.calendarButton.addClass(this.toThemeProperty("jqx-rc-all"));this.timeButton.addClass(this.toThemeProperty("jqx-rc-all"))}if(this.dateTimeInput[0].className.indexOf("jqx-rc-all")==-1){this.dateTimeInput.addClass(this.toThemeProperty("jqx-rc-all"))}var f=parseInt(b)/2-parseInt(e)/2;if(f>0){this.dateTimeInput[0].style.marginTop=parseInt(f)+"px"}if(this.rtl){this.calendarButton[0].style.width=h+"px";this.timeButton[0].style.width=h+"px";this.calendarButton.css("left","0px");if(this.showCalendarButton){this.timeButton.css("left",h+"px")}else{this.timeButton.css("left","0px")}this.dateTimeInput.css("left",this.calendarButton.width());if(this.showTimeButton&&this.showCalendarButton){this.dateTimeInput.css("left",this.timeButton.width()+this.calendarButton.width())}if(a.jqx.browser.msie&&a.jqx.browser.version<=8){this.dateTimeInput.css("left",1+this.calendarButton.width());if(this.showTimeButton&&this.showCalendarButton){this.dateTimeInput.css("left",1+this.timeButton.width()+this.calendarButton.width())}}}},_removeHandlers:function(){var b=this;this.removeHandler(a(document),"mousedown."+this.id);if(this.dateTimeInput){this.removeHandler(this.dateTimeInput,"keydown."+this.id);this.removeHandler(this.dateTimeInput,"blur");this.removeHandler(this.dateTimeInput,"focus");this.removeHandler(this.host,"focus");this.removeHandler(this.dateTimeInput,"mousedown");this.removeHandler(this.dateTimeInput,"mouseup");this.removeHandler(this.dateTimeInput,"keydown");this.removeHandler(this.dateTimeInput,"keyup");this.removeHandler(this.dateTimeInput,"keypress")}if(this.calendarButton!=null){this.removeHandler(this.calendarButton,"mousedown")}if(this.timeButton!=null){this.removeHandler(this.timeButton,"mousedown")}if(this.calendarContainer!=null){this.removeHandler(this.calendarContainer,"cellSelected");this.removeHandler(this.calendarContainer,"cellMouseDown")}this.removeHandler(a(window),"resize."+this.id)},isOpened:function(){var c=this;var b=a.data(document.body,"openedJQXCalendar"+this.id);if(b!=null&&b==c.calendarContainer){return true}return false},wheel:function(d,c){var e=0;if(!d){d=window.event}if(d.originalEvent&&d.originalEvent.wheelDelta){d.wheelDelta=d.originalEvent.wheelDelta}if(d.wheelDelta){e=d.wheelDelta/120}else{if(d.detail){e=-d.detail/3}}if(e){var b=c._handleDelta(e);if(!b){if(d.preventDefault){d.preventDefault()}d.returnValue=false;return b}else{return false}}if(d.preventDefault){d.preventDefault()}d.returnValue=false},_handleDelta:function(b){if(b<0){this.spinDown()}else{this.spinUp()}return false},focus:function(){try{var c=this;this._setSelectionStart(0);this._selectGroup(-1);this.dateTimeInput.focus();setTimeout(function(){c._setSelectionStart(0);c._selectGroup(-1);c.dateTimeInput.focus()},25)}catch(b){}},_addHandlers:function(){var e=this.element.id;var c=this.element;var d=this;if(this.host.parents()){this.addHandler(this.host.parents(),"scroll.datetimeinput"+this.element.id,function(f){var g=d.isOpened();if(g){d.close()}})}this.addHandler(this.host,"mouseenter",function(){if(!d.disabled&&d.enableHover){hovered=true;d.calendarButtonIcon.addClass(d.toThemeProperty("jqx-icon-calendar-hover"));d.calendarButton.addClass(d.toThemeProperty("jqx-fill-state-hover"));d.timeButtonIcon.addClass(d.toThemeProperty("jqx-icon-time-hover"));d.timeButton.addClass(d.toThemeProperty("jqx-fill-state-hover"))}});this.addHandler(this.host,"mouseleave",function(){if(!d.disabled&&d.enableHover){d.calendarButtonIcon.removeClass(d.toThemeProperty("jqx-icon-calendar-hover"));d.calendarButton.removeClass(d.toThemeProperty("jqx-fill-state-hover"));d.timeButtonIcon.removeClass(d.toThemeProperty("jqx-icon-time-hover"));d.timeButton.removeClass(d.toThemeProperty("jqx-fill-state-hover"))}});this.addHandler(this.host,"mousewheel",function(f){d.wheel(f,d)});this.addHandler(a(document),"mousedown."+this.id,this._closeOpenedCalendar,{me:this});if(a.jqx.mobile.isTouchDevice()){this.addHandler(a(document),a.jqx.mobile.getTouchEventName("touchstart")+"."+this.id,this._closeOpenedCalendar,{me:this})}this.addHandler(this.dateTimeInput,"keydown."+this.id,function(h){var g=a.data(document.body,"openedJQXCalendar"+d.id);if(g!=null&&g==d.calendarContainer){var f=d.handleCalendarKey(h,d);return f}});if(this.calendarContainer!=null){this.addHandler(this.calendarContainer,"keydown",function(f){if(f.keyCode==13){if(d.isOpened()){if(!d._calendar._viewAnimating&&d._calendar.view=="month"){d.hideCalendar("selected");d.dateTimeInput.focus();return false}}return true}else{if(f.keyCode==9){if(d.isOpened()){d.hideCalendar("selected");return true}}else{if(f.keyCode==27){if(d.isOpened()){d.hideCalendar();d.dateTimeInput.focus();return false}return true}}}d.timePopup=false;if(f.keyCode==84){d.timePopup=true}if(f.keyCode==115){if(d.isOpened()){d.hideCalendar();d.dateTimeInput.focus();return false}else{if(!d.isOpened()){d.showCalendar();d.dateTimeInput.focus();return false}}}if(f.altKey){if(f.keyCode==38){if(d.isOpened()){d.hideCalendar();d.dateTimeInput.focus();return false}}else{if(f.keyCode==40){if(!d.isOpened()){d.showCalendar();d.dateTimeInput.focus();return false}}}}});this.addHandler(this.calendarContainer,"cellSelected",function(g){if(d.closeCalendarAfterSelection){var f=a.data(document.body,"openedJQXCalendarValue");if(g.args.selectionType=="mouse"){if(d.selectionMode!="range"){d.hideCalendar("selected")}else{if(d._calendar._clicks==0){d.hideCalendar("selected")}}}}});this.addHandler(this.calendarContainer,"cellMouseDown",function(f){if(d.closeCalendarAfterSelection){if(d._calendar.value){a.data(document.body,"openedJQXCalendarValue",new a.jqx._jqxDateTimeInput.getDateTime(d._calendar.value.dateTime))}}})}this.addHandler(this.dateTimeInput,"blur",function(h){if(d.value!=null){d.isEditing=false;var g=d.value.dateTime.getDay();var f=d._oldDT;d._validateValue(true);if(h.stopPropagation){h.stopPropagation()}d._updateText();d._raiseEvent(9,h)}d.host.removeClass(d.toThemeProperty("jqx-fill-state-focus"))});this.addHandler(this.host,"focus",function(f){d.focus()});this.addHandler(this.dateTimeInput,"focus",function(g){if(d.value!=null){if(d.selectionMode!="range"){d._oldDT=new Date(d.value.dateTime)}else{d._oldDT=d.getRange()}var f=d._selection();d.isEditing=true;d._validateValue();d._updateText();d._setSelectionStart(0);d._selectGroup(-1,f);d.host.addClass(d.toThemeProperty("jqx-fill-state-focus"))}else{d._setSelectionStart(0);d._selectGroup(-1);d.host.addClass(d.toThemeProperty("jqx-fill-state-focus"))}if(g.stopPropagation){g.stopPropagation()}if(g.preventDefault){g.preventDefault();return false}});var b="mousedown";if(this.touch){b=a.jqx.mobile.getTouchEventName("touchstart")}this.addHandler(this.calendarButton,b,function(g){var h=d.container;var f=h.css("display")=="block";d.timePopup=false;d.calendarPopup=true;if(!d.disabled){if(!d.isanimating){if(f){d.hideCalendar();return false}else{d.showCalendar();g.preventDefault()}}}});this.addHandler(this.timeButton,b,function(g){var h=d.container;var f=h.css("display")=="block";d.timePopup=true;d.calendarPopup=false;if(!d.disabled){if(!d.isanimating){if(f){d.hideCalendar();return false}else{d.showCalendar();g.preventDefault()}}}});this.addHandler(this.dateTimeInput,"mousedown",function(f){return d._raiseEvent(2,f)});this.addHandler(this.dateTimeInput,"mouseup",function(f){return d._raiseEvent(3,f)});this.addHandler(this.dateTimeInput,"keydown",function(f){return d._raiseEvent(4,f)});this.addHandler(this.dateTimeInput,"keyup",function(f){return d._raiseEvent(5,f)});this.addHandler(this.dateTimeInput,"keypress",function(f){return d._raiseEvent(6,f)})},createID:function(){var b=Math.random()+"";b=b.replace(".","");b="99"+b;b=b/1;return"dateTimeInput"+b},setMaxDate:function(b,c){if(b==null){return}if(b!=null&&typeof(b)=="string"){b=new Date(b);if(b=="Invalid Date"){return}}this.maxDate=a.jqx._jqxDateTimeInput.getDateTime(b);if(this._calendar!=null){this._calendar.setMaxDate(b)}if(c!=false){if(this.getDate()!=null&&this.getDate()>b){this.setDate(b)}a.jqx.aria(this,"aria-valuemax",b);this._refreshValue();this._updateText()}},getMaxDate:function(){if(this.maxDate!=null&&this.maxDate!=undefined){return this.maxDate.dateTime}return null},setMinDate:function(b,c){if(b==null){return}if(b!=null&&typeof(b)=="string"){b=new Date(b);if(b=="Invalid Date"){return}}this.minDate=a.jqx._jqxDateTimeInput.getDateTime(b);if(this._calendar!=null){this._calendar.setMinDate(b)}if(c!=false){if(this.getDate()!=null&&this.getDate()<b){this.setDate(b)}a.jqx.aria(this,"aria-valuemin",b);this._refreshValue();this._updateText()}},getMinDate:function(){if(this.minDate!=null&&this.minDate!=undefined){return this.minDate.dateTime}return null},_applyCulture:function(){var d=false;try{if(Globalize!=undefined){d=true}}catch(c){}try{if(a.global){a.global.preferCulture(this.culture);this.localization.calendar=a.global.culture.calendar}else{if(d){var b=Globalize.culture(this.culture);this.localization.calendar=b.calendar}}this._loadItems();if(this._calendar!=null){this._calendar.culture=this.culture;this._calendar.localization=this.localization;this._calendar.render()}}catch(c){}},propertyMap:function(b){if(b=="value"){if(this.selectionMode!="range"){return this.getDate()}else{return this.getRange()}}return null},propertyChangedHandler:function(c,d,f,e){if(c.isInitialized==undefined||c.isInitialized==false){return}if(d=="popupZIndex"){c.calendarContainer.css({zIndex:e})}if(d=="showCalendarButton"){c._arrange()}if(d=="showTimeButton"){c._arrange();if(c.timePopupElement){c.timePopupElement.remove();c.timePopupElement=null}}if(d=="selectionMode"){c._calendar.selectionMode=e;c.refreshValue()}if(d=="min"){if(typeof(e)=="string"){c.setMinDate(new Date(e))}else{c.setMinDate(e)}}if(d=="max"){if(typeof(e)=="string"){c.setMaxDate(new Date(e))}else{c.setMaxDate(e)}}if(d=="value"){if(e!=null&&e instanceof Date){if(isNaN(e.getFullYear())||isNaN(e.getMonth())||isNaN(e.getDate())){this.value=f;return}e=a.jqx._jqxDateTimeInput.getDateTime(e)}else{if(e!=null&&typeof(e)=="string"){var b=new Date(e);if(b!=undefined&&!isNaN(b)){this.value=a.jqx._jqxDateTimeInput.getDateTime(b)}}}}if(d=="views"){c.calendarContainer.jqxCalendar({views:e})}if(d=="enableViews"){c.calendarContainer.jqxCalendar({enableViews:e})}if(d=="selectableDays"){c.calendarContainer.jqxCalendar({selectableDays:e})}if(d=="showFooter"){c.calendarContainer.jqxCalendar({showFooter:e})}if(d=="rtl"){c.calendarContainer.jqxCalendar({rtl:e});if(e){c.dateTimeInput.css("direction","rtl");c.dateTimeInput.addClass("jqx-rtl")}else{c.dateTimeInput.css("direction","ltr");c.dateTimeInput.removeClass("jqx-rtl")}}if(d=="todayString"||d=="clearString"){c.calendarContainer.jqxCalendar({clearString:c.clearString,todayString:c.todayString})}if(d=="dayNameFormat"){c.calendarContainer.jqxCalendar({dayNameFormat:e})}if(d=="firstDayOfWeek"){c.calendarContainer.jqxCalendar({firstDayOfWeek:e})}if(d=="showWeekNumbers"){c.calendarContainer.jqxCalendar({showWeekNumbers:e})}if(d=="culture"||d=="localization"){c._applyCulture()}else{if(d=="formatString"){c._loadItems()}}if(d=="theme"){a.jqx.utilities.setTheme(f,e,c.host);c.calendarContainer.jqxCalendar({theme:e})}if(d=="width"||d=="height"){c.refresh();return}c._setOption(d,e,f);if(d=="dropDownWidth"||d=="dropDownHeight"){c.calendarContainer.jqxCalendar({width:c.dropDownWidth,height:c.dropDownHeight});c._calendar.render();c.container.height(c.calendarContainer.height());c.container.width(c.calendarContainer.width())}},clear:function(){if(this.allowNullDate){if(this.selectionMode!="range"){this.setDate(null)}else{this._calendar._clicks=1;this.setRange(null,null)}this._calendar._clicks=0}else{if(this.selectionMode!="range"){this.setDate(me.getMinDate())}else{this._calendar._clicks=1;this.setRange(me.getMinDate(),me.getMinDate());this._calendar._clicks=0}}this.hideCalendar()},today:function(){var c=new Date();c.setHours(0,0,0,0);if(this.selectionMode!="range"){this.setDate(c)}else{this._calendar._clicks=0;var b=new Date();b.setHours(23,59,59,0);this.setRange(c,b);this._calendar._clicks=0}this.hideCalendar()},setDate:function(d){var e=this.getDate();if(d!=null&&typeof(d)=="string"){var f=d;if(d.toString().indexOf(",")>=0){d=d.replace(/\,/g,"/");d=new Date(d);if(d=="Invalid Date"){d=f}}if(d.toString().indexOf("-")>=0){d=d.replace(/\-/g,"/");d=new Date(d);if(d=="Invalid Date"){d=f}}if(d!=""){var c=d;if(Globalize!=undefined){d=Globalize.parseDate(c,this.formatString,this.culture)}else{if(a.jqx.dataFormat){d=a.jqx.dataFormat.parsedate(c,this.formatString,this.localization.calendar)}else{d=new Date(d)}}if(d=="Invalid Date"){return}if(d===null&&c!==null){if(c!="Invalid Date"){d=c}}}}if(d==null||d=="null"||d=="undefined"){if(!this.allowNullDate){d=this.min}}if(d=="Invalid Date"){d=null}if(d==null||d=="null"||d=="undefined"||d===""){if(this.value!=null){this.value=null;this._calendar.setDate(null);this._refreshValue();if(this.cookies){if(this.value!=null){a.jqx.cookie.cookie("jqxDateTimeInput"+this.element.id,this.value.dateTime.toString(),this.cookieoptions)}}this._setSelectionStart(0);this._selectGroup(-1);this._raiseEvent("0",d);this._raiseEvent("9",d)}return}if(d<this.getMinDate()||d>this.getMaxDate()){return}if(this.value==null){this.value=new a.jqx._jqxDateTimeInput.getDateTime(new Date());this.value._setHours(0);this.value._setMinutes(0);this.value._setSeconds(0);this.value._setMilliseconds(0)}if(d.getFullYear){this.value._setYear(d.getFullYear());this.value._setDay(1);this.value._setMonth(d.getMonth()+1);this.value._setHours(d.getHours());this.value._setMinutes(d.getMinutes());this.value._setSeconds(d.getSeconds());this.value._setMilliseconds(d.getMilliseconds());this.value._setDay(d.getDate())}this._refreshValue();if(this.cookies){if(this.value!=null){a.jqx.cookie.cookie("jqxDateTimeInput"+this.element.id,this.value.dateTime.toString(),this.cookieoptions)}}var b=this.getDate();var g=(b-e);if(g!=0){this._raiseEvent("0",d);this._raiseEvent("9",d);return true}},getDate:function(){if(this.value==undefined){return null}return new Date(this.value.dateTime)},getText:function(){return this.dateTimeInput.val()},setRange:function(d,c){if(d=="Invalid Date"){d=null}if(c=="Invalid Date"){c=null}if(d!=null&&typeof(d)=="string"){d=new Date(d);if(d=="Invalid Date"){return}}if(c!=null&&typeof(c)=="string"){c=new Date(c);if(c=="Invalid Date"){return}}if(d&&isNaN(d)&&d.toString()=="NaN"&&typeof(d)!="string"){return}if(c&&isNaN(c)&&c.toString()=="NaN"&&typeof(c)!="string"){return}this._calendar.setRange(d,c);if(c&&d&&(c.valueOf()!=d.valueOf())){this._range={from:d,to:c}}else{this._range=this._calendar.getRange()}var b=d;if(b!=null&&b.getFullYear){if(this.value==null){this.value=new a.jqx._jqxDateTimeInput.getDateTime(new Date());this.value._setHours(0);this.value._setMinutes(0);this.value._setSeconds(0);this.value._setMilliseconds(0)}this.value._setYear(b.getFullYear());this.value._setMonth(b.getMonth()+1);this.value._setHours(b.getHours());this.value._setMinutes(b.getMinutes());this.value._setSeconds(b.getSeconds());this.value._setMilliseconds(b.getMilliseconds());this.value._setDay(b.getDate())}this._refreshValue();if(this.value){this._raiseEvent("0",this.value.dateTime)}else{this._raiseEvent("0",null)}},getRange:function(){var b=this._calendar.getRange();if(this._range){var d=this._range.from;var c=this._range.to;if(c&&d&&(c.valueOf()!=d.valueOf())){b.from.setHours(d.getHours(),d.getMinutes(),d.getSeconds(),d.getMilliseconds());b.to.setHours(c.getHours(),c.getMinutes(),c.getSeconds(),c.getMilliseconds())}}return b},_validateValue:function(e){var b=false;for(var d=0;d<this.items.length;d++){var c=this.editors[d].value;switch(this.items[d].type){case"FORMAT_AMPM":if(c<0){c=0}else{if(c>1){c=1}}break;case"Character":break;case"Day":if(c<1){c=1}else{if(c>31){c=31}}break;case"FORMAT_hh":if(c<1){c=1}else{if(c>12){c=12}}break;case"FORMAT_HH":if(c<0){c=0}else{if(c>23){c=23}}break;case"Millisecond":if(c<0){c=0}else{if(c>999){c=999}}break;case"Minute":if(c<0){c=0}else{if(c>59){c=59}}break;case"Month":if(c<1){c=1}else{if(c>12){c=12}}break;case"ReadOnly":break;case"Second":if(c<0){c=0}else{if(c>59){c=59}}break;case"Year":if(c<this.minDate.year){c=this.minDate.year}else{if(c>this.maxDate.year){c=this.maxDate.year}}break}if(this.editors[d].value!=c){this.editors[d].value=c;b=true}}this.updateValue();if(this.value!=null&&e===true){if(this.value.dateTime>this.maxDate.dateTime){this._internalSetValue(this.maxDate);this._updateEditorsValue()}else{if(this.value.dateTime<this.minDate.dateTime){this._internalSetValue(this.minDate);this._updateEditorsValue()}}this._updateText()}},spinUp:function(){var d=this.value;if(d==null){return}if(this.activeEditor!=null){var b=this.editors.indexOf(this.activeEditor);if(b==-1){return}if(this.items[b].type=="Day"){if(this.value!=null){this.activeEditor.maxValue=this.value._daysInMonth(this.value.year,this.value.month)}}var c=this.activeEditor.positions;this.activeEditor.increaseValue(this.enableAbsoluteSelection);this.activeEditor.positions=c}if(this.isEditing){this.isEditing=false}this.updateValue();this.isEditing=true;this._updateText();var e=this.editors.indexOf(this.activeEditor);if(e>=0){this._selectGroup(e)}},spinDown:function(){var d=this.value;if(d==null){return}if(this.activeEditor!=null){var b=this.editors.indexOf(this.activeEditor);if(b==-1){return}if(this.items[b].type=="Day"){if(this.value!=null){this.activeEditor.maxValue=this.value._daysInMonth(this.value.year,this.value.month)}}var c=this.activeEditor.positions;this.activeEditor.decreaseValue(this.enableAbsoluteSelection);this.activeEditor.positions=c}if(this.isEditing){this.isEditing=false}this.updateValue();this.isEditing=true;this._updateText();var e=this.editors.indexOf(this.activeEditor);if(e>=0){this._selectGroup(e)}},_passKeyToCalendar:function(c){if(c.keyCode==13||c.keyCode==9){this.hideCalendar("selected");return true}else{if(c.keyCode==27){var e=this.calendarContainer;var d=this._calendar;var f=this.closeCalendarAfterSelection;this.closeCalendarAfterSelection=false;d.setDate(this.value.dateTime);this.closeCalendarAfterSelection=f;this.hideCalendar()}}var f=this.closeCalendarAfterSelection;this.closeCalendarAfterSelection=false;var b=this._calendar._handleKey(c);this.closeCalendarAfterSelection=f;return b},handleCalendarKey:function(f,e){var c=a(f.target);var d=a.data(document.body,"openedJQXCalendar"+this.id);if(d!=null){if(d.length>0){var b=e._passKeyToCalendar(f);return b}}return true},_findPos:function(c){if(c==null){return}while(c&&(c.type=="hidden"||c.nodeType!=1||a.expr.filters.hidden(c))){c=c.nextSibling}var b=a(c).coord(true);return[b.left,b.top]},testOffset:function(h,f,c){var g=h.outerWidth();var k=h.outerHeight();var j=a(window).width()+a(window).scrollLeft();var e=a(window).height()+a(window).scrollTop();if(f.left+g>j){if(g>this.host.width()){var d=this.host.coord().left;var b=g-this.host.width();f.left=d-b+2}}if(f.left<0){f.left=parseInt(this.host.coord().left)+"px"}f.top-=Math.min(f.top,(f.top+k>e&&e>k)?Math.abs(k+c+23):0);return f},open:function(b){if(b=="time"){this.timePopup=true}else{this.timePopup=false}this.showCalendar()},close:function(b){this.hideCalendar()},_getBodyOffset:function(){var c=0;var b=0;if(a("body").css("border-top-width")!="0px"){c=parseInt(a("body").css("border-top-width"));if(isNaN(c)){c=0}}if(a("body").css("border-left-width")!="0px"){b=parseInt(a("body").css("border-left-width"));if(isNaN(b)){b=0}}return{left:b,top:c}},initTimePopup:function(){this.timePopupElement=a("<div style='border-style: solid; border-width: 1px;'></div>").appendTo(this.timeContainer);this.timePopupElement.addClass(this.toThemeProperty("jqx-widget-content jqx-widget jqx-date-time-input-popup"));var t="";t+="<table><tbody><tr><td><a class='increment-hour-column' href='#' data-action='incrementHour'><div class='jqx-icon-up'></div></a></td><td class='separator'>&nbsp;</td><td><a class='increment-minute-column' href='#' data-action='incrementMinute'><div class='jqx-icon-up'></div></a></td><td class='separator'>&nbsp;</td><td><a class='increment-second-column' href='#' data-action='incrementSecond'><div class='jqx-icon-up'></div></a></td><td class='separator'>&nbsp;</td><td><a class='increment-millisecond-column' href='#' data-action='incrementMSSecond'><div class='jqx-icon-up'></div></a></td><td class='separator'>&nbsp;</td><td class='increment-meridian-column'><a href='#' data-action='toggleMeridian'><div class='jqx-icon-up'></div></a></td></tr><tr><td><input type='text' class='jqx-timepicker-hour' maxlength='2'></td><td class='separator'>:</td><td><input type='text' class='jqx-timepicker-minute' maxlength='2'></td><td class='separator'>:</td><td><input type='text' class='jqx-timepicker-second' maxlength='2'></td><td class='separator'>:</td><td><input type='text' class='jqx-timepicker-millisecond' maxlength='3'></td><td class='separator'>&nbsp;</td><td><input type='text' class='jqx-timepicker-meridian' maxlength='2'></td></tr><tr><td><a class='decrement-hour-column' href='#' data-action='decrementHour'><div class='jqx-icon-down'></div></a></td><td class='separator'></td><td><a class='decrement-minute-column' href='#' data-action='decrementMinute'><div class='jqx-icon-down'></div></a></td><td class='separator'></td><td><a class='decrement-second-column' href='#' data-action='decrementSecond'><div class='jqx-icon-down'></div></a></td><td class='separator'></td><td><a class='decrement-millisecond-column' href='#' data-action='decrementMillisecond'><div class='jqx-icon-down'></div></a></td><td class='separator'>&nbsp;</td><td><a class='decrement-meridian-column' href='#' data-action='toggleMeridian'><div class='jqx-icon-down'></div></a></td></tr></tbody></table>";var m=this._getFormatValue(this.formatString);if(this.selectionMode!="range"){this.timePopupElement[0].innerHTML=t}else{this.timePopupElement[0].innerHTML="<table><tr><td>"+t+"</td><td>-</td><td>"+t+"</td></tr></table>"}this.timePopupElement.find(".jqx-icon-down").addClass(this.toThemeProperty("jqx-icon jqx-icon-arrow-down"));this.timePopupElement.find(".jqx-icon-up").addClass(this.toThemeProperty("jqx-icon jqx-icon-arrow-up"));var g=this.timePopupElement.find("input");g.addClass(this.toThemeProperty("jqx-widget"));g.addClass(this.toThemeProperty("jqx-widget-content"));g.addClass(this.toThemeProperty("jqx-input"));g.addClass(this.toThemeProperty("jqx-rc-all"));this.addHandler(g,"mousedown",function(v){v.stopPropagation()});var e=function(v){if(v.target.className.indexOf("hour")>=0){n._decrementHour(a(v.target))}if(v.target.className.indexOf("minute")>=0){n._decrementMinuteSecond(a(v.target))}if(v.target.className.indexOf("second")>=0){n._decrementMinuteSecond(a(v.target))}if(v.target.className.indexOf("millisecond")>=0){n._decrementMillisecond(a(v.target))}if(v.target.className.indexOf("meridian")>=0){n._decrementMeridian(a(v.target))}};var l=function(v){if(v.target.className.indexOf("hour")>=0){n._incrementHour(a(v.target))}if(v.target.className.indexOf("minute")>=0){n._incrementMinuteSecond(a(v.target))}if(v.target.className.indexOf("second")>=0){n._incrementMinuteSecond(a(v.target))}if(v.target.className.indexOf("millisecond")>=0){n._incrementMillisecond(a(v.target))}if(v.target.className.indexOf("meridian")>=0){n._incrementMeridian(a(v.target))}};var s=function(w,v){var x=0;if(!w){w=window.event}if(w.originalEvent&&w.originalEvent.wheelDelta){w.wheelDelta=w.originalEvent.wheelDelta}if(w.originalEvent&&w.originalEvent.deltaY!=undefined){x=-w.originalEvent.deltaY}if(w.wheelDelta){x=w.wheelDelta/120}else{if(w.detail){x=-w.detail/3}}if(x){if(document.activeElement==w.target&&w.target.nodeName.toLowerCase()=="input"){if(x<0){e(w)}else{l(w)}}if(w.preventDefault){w.preventDefault()}w.returnValue=false}if(w.preventDefault){w.preventDefault()}w.returnValue=false};this.addHandler(g,"wheel",function(v){s(v)});this.addHandler(g,"keydown",function(w){var v=a(w.target);if(w.keyCode==40){e(w);w.preventDefault()}else{if(w.keyCode==38){l(w);w.preventDefault()}else{if(w.keyCode==13){w.preventDefault();n.hideCalendar()}else{if(w.keyCode==27){w.preventDefault();n.hideCalendar("cancel")}}}}});this.hourInput=a(g[0]);this.minuteInput=a(g[1]);this.secondInput=a(g[2]);this.mssecondInput=a(g[3]);this.meridianInput=a(g[4]);this.hourInput2=a(g[5]);this.minuteInput2=a(g[6]);this.secondInput2=a(g[7]);this.mssecondInput2=a(g[8]);this.meridianInput2=a(g[9]);var n=this;var p=this.timePopupElement.find(".increment-hour-column");this.hourIncrement=a(p[0]);this.hourIncrement2=a(p[1]);this.addHandler(g,"change",function(w){var v=a(w.target);if(v.val().length<=1){v.val("0"+a(w.target).val())}if(w.target.className.indexOf("hour")>=0){var x=parseInt(a(w.target).val());if(m.indexOf("HH")>=0){while(x>24){x=x-24}}else{while(x>12){x=x-12}}if(x<10){x="0"+x}if(v.val()!=x){v.val(x)}}if(w.target.className.indexOf("minute")>=0||w.target.className.indexOf("second")>=0){var x=parseInt(a(w.target).val());while(x>59){x--}if(x<10){x="0"+x}if(v.val()!=x){v.val(x)}}});this._incrementHour=function(v){var w=parseInt(v.val());w++;if(m.indexOf("HH")>=0){if(w>24){w=1}}else{if(w>12){w=1}}if(w<10){w="0"+w}v.val(w)};this._incrementMinuteSecond=function(v){var w=parseInt(v.val());w++;if(w>59){w=0}if(w<10){w="0"+w}v.val(w)};this._incrementMillisecond=function(v){var w=parseInt(v.val());w++;if(w>999){w=0}if(w<10){w="0"+w}v.val(w)};this._incrementMeridian=function(v){var w=v.val();if(w.toLowerCase().indexOf("a")>=0){w="PM"}else{w="AM"}v.val(w)};this._decrementHour=function(v){var w=parseInt(v.val());w--;if(m.indexOf("HH")>=0){if(w<0){w=23}}else{if(w<1){w=12}}if(w<10){w="0"+w}v.val(w)};this._decrementMinuteSecond=function(v){var w=parseInt(v.val());w--;if(w<0){w=59}if(w<10){w="0"+w}v.val(w)};this._decrementMillisecond=function(v){var w=parseInt(v.val());w--;if(w<0){w=999}if(w<10){w="0"+w}v.val(w)};this._decrementMeridian=function(v){var w=v.val();if(w.toLowerCase().indexOf("a")>=0){w="PM"}else{w="AM"}v.val(w)};this.addHandler(this.hourIncrement,"mousedown",function(v){v.stopPropagation();n._incrementHour(n.hourInput);return false});this.addHandler(this.hourIncrement2,"mousedown",function(v){v.stopPropagation();n._incrementHour(n.hourInput2);return false});var q=this.timePopupElement.find(".increment-minute-column");this.minuteIncrement=a(q[0]);this.minuteIncrement2=a(q[1]);this.addHandler(this.minuteIncrement,"mousedown",function(v){v.stopPropagation();n._incrementMinuteSecond(n.minuteInput);return false});this.addHandler(this.minuteIncrement2,"mousedown",function(v){v.stopPropagation();n._incrementMinuteSecond(n.minuteInput2);return false});var c=this.timePopupElement.find(".increment-second-column");this.secondIncrement=a(c[0]);this.secondIncrement2=a(c[1]);this.addHandler(this.secondIncrement,"mousedown",function(v){v.stopPropagation();n._incrementMinuteSecond(n.secondInput);return false});this.addHandler(this.secondIncrement2,"mousedown",function(v){v.stopPropagation();n._incrementMinuteSecond(n.secondInput2);return false});var d=this.timePopupElement.find(".increment-millisecond-column");this.millisecondsIncrement=a(d[0]);this.millisecondsIncrement2=a(d[1]);this.addHandler(this.millisecondsIncrement,"mousedown",function(v){v.stopPropagation();n._incrementMillisecond(n.mssecondInput);return false});this.addHandler(this.millisecondsIncrement2,"mousedown",function(v){v.stopPropagation();n._incrementMillisecond(n.mssecondInput2);return false});var j=this.timePopupElement.find(".increment-meridian-column");this.meridianIncrement=a(j[0]);this.meridianIncrement2=a(j[1]);this.addHandler(this.meridianIncrement,"mousedown",function(v){v.stopPropagation();n._incrementMeridian(n.meridianInput);return false});this.addHandler(this.meridianIncrement2,"mousedown",function(v){v.stopPropagation();n._incrementMeridian(n.meridianInput2);return false});var o=this.timePopupElement.find(".decrement-hour-column");this.hourDecrement=a(o[0]);this.hourDecrement2=a(o[1]);this.addHandler(this.hourDecrement,"mousedown",function(v){v.stopPropagation();n._decrementHour(n.hourInput);return false});this.addHandler(this.hourDecrement2,"mousedown",function(v){v.stopPropagation();n._decrementHour(n.hourInput2);return false});var k=this.timePopupElement.find(".decrement-minute-column");this.minuteDecrement=a(k[0]);this.minuteDecrement2=a(k[1]);this.addHandler(this.minuteDecrement,"mousedown",function(v){v.stopPropagation();n._decrementMinuteSecond(n.minuteInput);return false});this.addHandler(this.minuteDecrement2,"mousedown",function(v){v.stopPropagation();n._decrementMinuteSecond(n.minuteInput2);return false});var u=this.timePopupElement.find(".decrement-second-column");this.secondDecrement=a(u[0]);this.secondDecrement2=a(u[1]);this.addHandler(this.secondDecrement,"mousedown",function(v){v.stopPropagation();n._decrementMinuteSecond(n.secondInput);return false});this.addHandler(this.secondDecrement2,"mousedown",function(v){v.stopPropagation();n._decrementMinuteSecond(n.secondInput2);return false});var b=this.timePopupElement.find(".decrement-millisecond-column");this.millisecondsDecrement=a(b[0]);this.millisecondsDecrement2=a(b[1]);this.addHandler(this.millisecondsDecrement,"mousedown",function(v){v.stopPropagation();n._decrementMillisecond(n.mssecondInput);return false});this.addHandler(this.millisecondsDecrement2,"mousedown",function(v){v.stopPropagation();n._decrementMillisecond(n.mssecondInput2);return false});var f=this.timePopupElement.find(".decrement-meridian-column");this.meridianDecrement=a(f[0]);this.meridianDecrement2=a(f[1]);this.addHandler(this.meridianDecrement,"mousedown",function(v){v.stopPropagation();n._decrementMeridian(n.meridianInput);return false});this.addHandler(this.meridianDecrement2,"mousedown",function(v){v.stopPropagation();n._decrementMeridian(n.meridianInput2);return false});var r=this.timePopupElement.find("table");this.addHandler(this.timePopupElement,"mousedown",function(v){v.stopPropagation()});var h=function(v){var w=v.find("tr");if(m.indexOf("ss")==-1){n.secondInput.hide();n.secondInput2.hide();a(a(w[0]).children()[3]).hide();a(a(w[0]).children()[4]).hide();a(a(w[1]).children()[3]).hide();a(a(w[1]).children()[4]).hide();a(a(w[2]).children()[3]).hide();a(a(w[2]).children()[4]).hide()}if(m.indexOf("tt")==-1&&m.indexOf("hh")!=-1){n.meridianInput.hide();n.meridianInput2.hide();a(a(w[0]).children()[7]).hide();a(a(w[0]).children()[8]).hide();a(a(w[1]).children()[7]).hide();a(a(w[1]).children()[8]).hide();a(a(w[2]).children()[7]).hide();a(a(w[2]).children()[8]).hide()}if(m.indexOf("zz")==-1){n.mssecondInput.hide();n.mssecondInput2.hide();a(a(w[0]).children()[5]).hide();a(a(w[0]).children()[6]).hide();a(a(w[1]).children()[5]).hide();a(a(w[1]).children()[6]).hide();a(a(w[2]).children()[5]).hide();a(a(w[2]).children()[6]).hide()}};if(r.length==1){h(r)}else{h(a(a(r)[1]));h(a(a(r)[2]))}},updateTimePopup:function(){var b=this._getFormatValue(this.formatString);if(this.selectionMode!="range"){var f=this.getDate();if(this.hourInput){if(f){var c=f.getHours();var h=f.getMinutes();var g=f.getHours();var e=f.getSeconds();var d=f.getMilliseconds()}else{var c=0;var h=0;var g=0;var e=0;var d=0}if(c>=12){g="PM";if(b.indexOf("HH")==-1){c-=12;if(c==0){c=12}}}else{g="AM"}if(this.meridianInput.css("display")!="none"){if(c==0){c=12}}if(c<10){c="0"+c}if(h<10){h="0"+h}if(e<10){e="0"+e}if(d<10){d="0"+d}this.hourInput.val(c);this.minuteInput.val(h);this.secondInput.val(e);this.mssecondInput.val(d);this.meridianInput.val(g)}}else{var f=this.getRange().from;if(this.hourInput){if(f){var c=f.getHours();var h=f.getMinutes();var g=f.getHours();var e=f.getSeconds();var d=f.getMilliseconds()}else{var c=0;var h=0;var g=0;var e=0;var d=0}if(c>=12){g="PM";if(b.indexOf("HH")==-1){c-=12;if(c==0){c=12}}}else{g="AM"}if(this.meridianInput.css("display")!="none"){if(c==0){c=12}}if(c<10){c="0"+c}if(h<10){h="0"+h}if(e<10){e="0"+e}if(d<10){d="0"+d}this.hourInput.val(c);this.minuteInput.val(h);this.secondInput.val(e);this.mssecondInput.val(d);this.meridianInput.val(g)}var f=this.getRange().to;if(this.hourInput2){if(f){var c=f.getHours();var h=f.getMinutes();var g=f.getHours();var e=f.getSeconds();var d=f.getMilliseconds()}else{var c=0;var h=0;var g=0;var e=0;var d=0}if(c>=12){g="PM";if(b.indexOf("HH")==-1){c-=12;if(c==0){c=12}}}else{g="AM"}if(this.meridianInput.css("display")!="none"){if(c==0){c=12}}if(c<10){c="0"+c}if(h<10){h="0"+h}if(e<10){e="0"+e}if(d<10){d="0"+d}this.hourInput2.val(c);this.minuteInput2.val(h);this.secondInput2.val(e);this.mssecondInput2.val(d);this.meridianInput2.val(g)}}},showCalendar:function(){var m=this.calendarContainer;var q=this._calendar;a.jqx.aria(this,"aria-expanded",true);if(this.showTimeButton){if(this.timePopup){if(!this.timePopupElement){this.initTimePopup()}this.calendarContainer.css("visibility","hidden");this.timeContainer.css("visibility","visible");this.updateTimePopup();var d=this.timeContainer.find("input");var s=0;for(var v=0;v<d.length;v++){if(d[v].style.display!="none"){s+=50}}this.container.width(parseInt(s));setTimeout(function(){d[0].focus();a(d[0]).select()},150+this.openDelay)}else{this.container.width(parseInt(this.calendarContainer.width())+25);this.timeContainer.css("visibility","hidden");this.calendarContainer.css("visibility","visible")}}if(this.value!=null){if(this.selectionMode!="range"){this._oldDT=new Date(this.value.dateTime)}else{this._oldDT=this.getRange()}}else{this._oldDT=null}if(!q.canRender){q.canRender=true;q.render()}var l=this.container;var p=this;var g=a(window).scrollTop();var h=a(window).scrollLeft();var n=parseInt(this._findPos(this.host[0])[1])+parseInt(this.host.outerHeight())-1+"px";var e,r=parseInt(Math.round(this.host.coord(true).left));e=r+"px";var w=a.jqx.mobile.isSafariMobileBrowser()||a.jqx.mobile.isWindowsPhone();if((w!=null&&w)){e=a.jqx.mobile.getLeftPos(this.element);n=a.jqx.mobile.getTopPos(this.element)+parseInt(this.host.outerHeight());if(a("body").css("border-top-width")!="0px"){n=parseInt(n)-this._getBodyOffset().top+"px"}if(a("body").css("border-left-width")!="0px"){e=parseInt(e)-this._getBodyOffset().left+"px"}}this.container.css("left",e);this.container.css("top",n);var c=this.closeCalendarAfterSelection;this.closeCalendarAfterSelection=false;this.isEditing=false;if(p.selectionMode=="default"){this._validateValue();this._updateText();var t=this.value!=null?this.value.dateTime:new Date();q.setDate(t)}this.closeCalendarAfterSelection=c;var b=false;if(this.dropDownHorizontalAlignment=="right"||this.rtl){var k=this.container.outerWidth();var u=Math.abs(k-this.host.outerWidth()+2);if(!this.rtl){u-=2}if(k>this.host.width()){var f=23;this.container.css("left",f+parseInt(Math.round(r))-u+"px")}else{this.container.css("left",25+parseInt(Math.round(r))+u+"px")}}if(this.enableBrowserBoundsDetection){var j=this.testOffset(m,{left:parseInt(this.container.css("left")),top:parseInt(n)},parseInt(this.host.outerHeight()));if(parseInt(this.container.css("top"))!=j.top){b=true;m.css("top",23);m.addClass(this.toThemeProperty("jqx-popup-up"))}else{m.css("top",0)}this.container.css("top",j.top);if(parseInt(this.container.css("left"))!=j.left){this.container.css("left",j.left)}}this._raiseEvent(7,m);if(this.animationType!="none"){this.container.css("display","block");var o=parseInt(m.outerHeight());m.stop();this.isanimating=true;this.opening=true;if(this.animationType=="fade"){m.css("margin-top",0);m.css("opacity",0);m.animate({opacity:1},this.openDelay,function(){p.isanimating=false;p.opening=false;a.data(document.body,"openedJQXCalendar"+p.id,m);p.calendarContainer.focus()});if(this.timePopup){this.timeContainer.css("margin-top",0);this.timeContainer.css("opacity",0);this.timeContainer.animate({opacity:1},this.openDelay,function(){p.isanimating=false;p.opening=false;a.data(document.body,"openedJQXCalendar"+p.id,m);p.timeContainer.focus()})}}else{m.css("opacity",1);if(this.timePopup){this.timeContainer.css("opacity",1)}if(b){m.css("margin-top",o)}else{m.css("margin-top",-o)}if(this.timePopup){if(b){this.timeContainer.css("margin-top",o)}else{this.timeContainer.css("margin-top",-o)}this.timeContainer.animate({"margin-top":0},this.openDelay,function(){p.isanimating=false;p.opening=false;a.data(document.body,"openedJQXCalendar"+p.id,m);p.timeContainer.focus()})}m.animate({"margin-top":0},this.openDelay,function(){p.isanimating=false;p.opening=false;a.data(document.body,"openedJQXCalendar"+p.id,m);p.calendarContainer.focus()})}}else{m.stop();p.isanimating=false;p.opening=false;m.css("opacity",1);m.css("margin-top",0);this.container.css("display","block");a.data(document.body,"openedJQXCalendar"+p.id,m);this.calendarContainer.focus();if(this.timePopup){this.timeContainer.stop();this.timeContainer.css("opacity",1);this.timeContainer.css("margin-top",0);this.timeContainer.focus()}}if(this.value==null){if(this._calendar&&this._calendar._getSelectedCell()){this._calendar._getSelectedCell().isSelected=false}}if(this.timePopup){this.timeButtonIcon.addClass(this.toThemeProperty("jqx-icon-time-pressed"));this.timeButton.addClass(this.toThemeProperty("jqx-fill-state-hover"));this.timeButton.addClass(this.toThemeProperty("jqx-fill-state-pressed"))}else{this.calendarButtonIcon.addClass(this.toThemeProperty("jqx-icon-calendar-pressed"));this.calendarButton.addClass(this.toThemeProperty("jqx-fill-state-hover"));this.calendarButton.addClass(this.toThemeProperty("jqx-fill-state-pressed"))}this.host.addClass(this.toThemeProperty("jqx-fill-state-focus"))},hideCalendar:function(k){var h=this.calendarContainer;var b=this.container;var p=this;a.jqx.aria(this,"aria-expanded",false);if(this.showTimeButton){if(this.timeContainer.css("visibility")!="hidden"&&k!="cancel"){if(this.selectionMode!="range"){var e=this.getDate();var g=parseInt(this.hourInput.val());var f=parseInt(this.minuteInput.val());var c=parseInt(this.secondInput.val());var q=parseInt(this.mssecondInput.val());var d=this.meridianInput.val();if(isNaN(g)){g=0}if(isNaN(f)){f=0}if(isNaN(c)){c=0}if(isNaN(q)){q=0}if(this.meridianInput.css("display")!="none"){if(d.toLowerCase().indexOf("p")>=0){if(g<12){g+=12}}if(d.toLowerCase().indexOf("a")>=0){if(g>=12){g-=12}}}if(!e){e=new Date()}e.setHours(g,f,c,q);this.setDate(e)}else{if(this.hourInput&&k!="selected"){var j=this.getRange();var g=parseInt(this.hourInput.val());var f=parseInt(this.minuteInput.val());var c=parseInt(this.secondInput.val());var q=parseInt(this.mssecondInput.val());var d=this.meridianInput.val();if(isNaN(g)){g=0}if(isNaN(f)){f=0}if(isNaN(c)){c=0}if(isNaN(q)){q=0}if(this.meridianInput.css("display")!="none"){if(d.toLowerCase().indexOf("p")>=0){if(g<12){g+=12}}if(d.toLowerCase().indexOf("a")>=0){if(g>=12){g-=12}}}var m=j.from;if(!m){m=new Date()}m.setHours(g,f,c,q);var g=parseInt(this.hourInput2.val());var f=parseInt(this.minuteInput2.val());var c=parseInt(this.secondInput2.val());var q=parseInt(this.mssecondInput2.val());var d=this.meridianInput2.val();if(f==""){f=0}if(c==""){c=0}if(q==""){q=0}if(this.meridianInput2.css("display")!="none"){if(d.toLowerCase().indexOf("p")>=0){if(g<12){g+=12}}if(d.toLowerCase().indexOf("a")>=0){if(g>=12){g-=12}}}var l=j.to;if(!l){l=new Date()}l.setHours(g,f,c,q);if(l.valueOf()<m.valueOf()){return false}this.setRange(m,l)}else{if(k=="selected"){return}}}}}a.data(document.body,"openedJQXCalendar"+this.id,null);if(this.animationType!="none"){var o=h.outerHeight();h.css("margin-top",0);if(this.showTimeButton){this.timeContainer.css("margin-top",0)}this.isanimating=true;var n=-o;if(parseInt(this.container.coord().top)<parseInt(this.host.coord().top)){n=o}if(this.animationType=="fade"){h.animate({opacity:0},this.closeDelay,function(){b.css("display","none");p.isanimating=false})}else{h.animate({"margin-top":n},this.closeDelay,function(){b.css("display","none");p.isanimating=false})}if(this.showTimeButton){if(this.animationType=="fade"){this.timeContainer.animate({opacity:0},this.closeDelay,function(){b.css("display","none");p.isanimating=false})}else{this.timeContainer.animate({"margin-top":n},this.closeDelay,function(){b.css("display","none");p.isanimating=false})}}}else{b.css("display","none")}if(k!=undefined){this._updateSelectedDate(k)}this.timeButtonIcon.removeClass(this.toThemeProperty("jqx-icon-time-pressed"));this.timeButton.removeClass(this.toThemeProperty("jqx-fill-state-hover"));this.timeButton.removeClass(this.toThemeProperty("jqx-fill-state-pressed"));this.calendarButtonIcon.removeClass(this.toThemeProperty("jqx-icon-calendar-pressed"));this.calendarButton.removeClass(this.toThemeProperty("jqx-fill-state-hover"));this.calendarButton.removeClass(this.toThemeProperty("jqx-fill-state-pressed"));this.host.removeClass(this.toThemeProperty("jqx-fill-state-focus"));this._raiseEvent(8,h)},_updateSelectedDate:function(){var m=this.value;if(m==null){m=new a.jqx._jqxDateTimeInput.getDateTime(new Date());m._setHours(0);m._setMinutes(0);m._setSeconds(0);m._setMilliseconds(0)}var g=m.hour;var f=m.minute;var c=m.second;var b=m.millisecond;if(this.selectionMode=="range"&&this._calendar.getRange().from==null){this.setDate(null);return}var d=new a.jqx._jqxDateTimeInput.getDateTime(this._calendar.value.dateTime);d._setHours(g);d._setMinutes(f);d._setSeconds(c);d._setMilliseconds(b);var n=this.setDate(d.dateTime);if(this.selectionMode=="range"&&!n&&this._oldDT){var h=this.getRange();var j=this._oldDT;var l=false;var k=false;var e=this._oldDT.from;var d=h.from;if(d!=null&&e){if(!(d.getFullYear()!=e.getFullYear()||d.getMonth()!=e.getMonth()||d.getDate()!=e.getDate()||d.getHours()!=e.getHours()||d.getMinutes()!=e.getMinutes()||d.getSeconds()!=e.getSeconds())){l=true}}var d=h.to;if(d!=null){e=this._oldDT.to;if(e){if(!(d.getFullYear()!=e.getFullYear()||d.getMonth()!=e.getMonth()||d.getDate()!=e.getDate()||d.getHours()!=e.getHours()||d.getMinutes()!=e.getMinutes()||d.getSeconds()!=e.getSeconds())){k=true}}}if(l&&k){return true}this._raiseEvent(0,{});this._raiseEvent(9,{})}},_closeOpenedCalendar:function(b){var e=a(b.target);var k=a.data(document.body,"openedJQXCalendar"+b.data.me.id);var d=false;a.each(e.parents(),function(){if(this.className&&this.className.indexOf){if(this.className.indexOf("jqx-calendar")!=-1){return false}if(this.className.indexOf("jqx-input")!=-1){return false}}});if(a(b.target).ischildof(b.data.me.host)){return true}if(b.target!=null&&(b.target.tagName=="B"||b.target.tagName=="b")){var l=b.data.me.host.coord();var n=b.data.me.host.width();var c=b.data.me.host.height();var m=parseInt(l.top);var g=parseInt(l.left);if(m<=b.pageY&&b.pageY<=m+c){if(g<=b.pageX&&b.pageX<=g+n){return true}}}if(k!=null&&!d){if(k.length>0){var h=k[0].id.toString();var f=h.toString().substring(13);var j=a(document).find("#"+f);var o=b.data.me.hideCalendar();if(o!==false){a.data(document.body,"openedJQXCalendar"+b.data.me.id,null)}}}},_loadItems:function(){if(this.value!=null){this.items=new Array();var d=this._getFormatValue(this.formatString);this.items=this._parseFormatValue(d);this.editors=new Array();for(var b=0;b<this.items.length;b++){var c=this.items[b].getDateTimeEditorByItemType(this.value,this);this.editors[b]=c}}this._updateEditorsValue();this._updateText()},_updateText:function(){var d=this;var e="";if(d.items.length==0&&d.value!=null){d._loadItems()}if(d.value!=null){if(d.items.length>=1){e=d.format(d.value,0,d.items.length)}var b=d.dateTimeInput.val();if(b!=e){d._raiseEvent(1,d.value)}}if(d.selectionMode=="range"){var c=d.getRange();fromText=d.format(d.value,0,d.items.length);if(c.to){var g=a.jqx._jqxDateTimeInput.getDateTime(c.from);fromText=d.format(g,0,d.items.length);var f=a.jqx._jqxDateTimeInput.getDateTime(c.to);toText=d.format(f,0,d.items.length);var e=fromText+" - "+toText;if(e==" - "){e=""}}else{e=""}}d.dateTimeInput.val(e)},format:function(g,h,f){var b="";for(var e=h;e<f;++e){var c=this.items[e].dateParser(g,this);if(this.isEditing&&this.items[e].type!="ReadOnly"){if(this.selectionMode!="range"){var d=this.items[e].type=="Day"&&this.items[e].format.length>2;if(this.items[e].type=="FORMAT_AMPM"){d=true;if(this.editors[e].value==0){c=this.editors[e].amString}else{c=this.editors[e].pmString}}if(!d){c=this.items[e].dateParserInEditMode(new Number(this.editors[e].value),"d"+this.editors[e].maxEditPositions,this);while(c.length<this.editors[e].maxEditPositions){c="0"+c}}}}b+=c}return b},_getFormatValueGroupLength:function(b){for(i=1;i<b.toString().length;++i){if(b.substring(i,i+1)!=b.substring(0,1)){return i}}return b.length},_parseFormatValue:function(h){var c=new Array();var f=h.toString();var e=0;while(f.length>0){var d=this._getFormatValueGroupLength(f);var g=null;switch(f.substring(0,1)){case":":case"/":d=1;g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0,1),"ReadOnly",this.culture);break;case'"':case"'":var b=f.indexOf(f[0],1);g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(1,1+Math.max(1,b-1)),"ReadOnly",this.culture);d=Math.max(1,b+1);break;case"\\":if(f.length>=2){g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(1,1),"ReadOnly",this.culture);d=2}break;case"d":case"D":if(d>2){g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0,d),"Day",this.culture)}else{g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0,d),"Day",this.culture)}break;case"f":case"F":if(d>7){d=7}if(d>3){g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0,d),"ReadOnly",this.culture)}else{g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0,d),"Millisecond",this.culture)}break;case"g":g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0,d),"ReadOnly",this.culture);break;case"h":g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0,d),"FORMAT_hh",this.culture);break;case"H":g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0,d),"FORMAT_HH",this.culture);break;case"m":g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0,d),"Minute",this.culture);break;case"M":if(d>4){d=4}g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0,d),"Month",this.culture);break;case"s":case"S":g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0,d),"Second",this.culture);break;case"t":case"T":g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0,d),"FORMAT_AMPM",this.culture);break;case"y":case"Y":if(d>1){g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0,d),"Year",this.culture)}else{d=1;g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0,1),dateTimeFormatInfo,"ReadOnly",this.culture)}break;case"z":g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0,d),"ReadOnly",this.culture);break;default:d=1;g=a.jqx._jqxDateTimeInput.DateTimeFormatItem._create(f.substring(0,1),"ReadOnly",this.culture);break}c[e]=a.extend(true,{},g);f=f.substring(d);e++}return c},_getFormatValue:function(b){if(b==null||b.length==0){b="d"}if(b.length==1){switch(b.substring(0,1)){case"d":return this.localization.calendar.patterns.d;case"D":return this.localization.calendar.patterns.D;case"t":return this.localization.calendar.patterns.t;case"T":return this.localization.calendar.patterns.T;case"f":return this.localization.calendar.patterns.f;case"F":return this.localization.calendar.patterns.F;case"M":return this.localization.calendar.patterns.M;case"Y":return this.localization.calendar.patterns.Y;case"S":return this.localization.calendar.patterns.S}}if(b.length==2&&b.substring(0,1)=="%"){b=b.substring(1)}return b},_updateEditorsValue:function(){var j=this.value;if(j==null){return}var g=j.year;var h=j.day;var d=j.hour;var l=j.millisecond;var b=j.second;var c=j.minute;var f=j.month;if(this.items==null){return}for(var e=0;e<this.items.length;e++){switch(this.items[e].type){case"FORMAT_AMPM":var k=d%12;if(k==0){k=12}if(d>=0&&d<12){this.editors[e].value=0}else{this.editors[e].value=1}break;case"Day":this.editors[e].value=h;break;case"FORMAT_hh":var k=d%12;if(k==0){k=12}this.editors[e].value=k;break;case"FORMAT_HH":this.editors[e].value=d;break;case"Millisecond":this.editors[e].value=l;break;case"Minute":this.editors[e].value=c;break;case"Month":this.editors[e].value=f;break;case"Second":this.editors[e].value=b;break;case"Year":this.editors[e].value=g;break}}},updateValue:function(){if(this.isEditing){return}if(this.items&&this.items.length==0){return}var o=0;var s=1;var B=1;var l=0;var d=0;var I=0;var u=0;var H=1;var h=0;var m=false;var r=false;var C=false;var c=false;var b=false;var q=false;var x=false;var t=new Array();var e=null;var y=0;for(var A=0;A<this.items.length;A++){switch(this.items[A].type){case"FORMAT_AMPM":h=this.editors[A].value;e=this.editors[A];break;case"Character":break;case"Day":if(this.items[A].format.length<3){B=this.editors[A].value;t[y++]=this.editors[A];if(B==0){B=1}C=true}break;case"FORMAT_hh":var E=this.editors[A];l=E.value;c=true;break;case"FORMAT_HH":l=this.editors[A].value;c=true;break;case"Millisecond":d=this.editors[A].value;x=true;break;case"Minute":u=this.editors[A].value;b=true;break;case"Month":H=this.editors[A].value;r=true;if(H==0){H=1}break;case"ReadOnly":break;case"Second":I=this.editors[A].value;q=true;break;case"Year":m=true;s=this.editors[A].value;var G=this.editors[A].getDateTimeItem().format;if(G.length<3){var w="1900";if(w.Length==4){var v=""+w[0]+w[1];var D;D=parseInt(v);s=s+(D*100)}}if(s==0){s=1}break}}var F=this.value!=null?new Date(this.value.dateTime):null;if(s>0&&H>0&&B>0&&u>=0&&l>=0&&I>=0&&d>=0){var J=this.value;if(J!=null){if(!m){s=J.year}if(!r){H=J.month}if(!C){B=J.day}}try{if(H>12){H=12}if(H<1){H=1}if(J._daysInMonth(s,H)<=B){B=J._daysInMonth(s,H);if(t!=null&&t.length>0){for(A=0;A<t.length;A++){t[A].value=B}}}if(e!=null){if(e.value==0){if(l>=12){l-=12}}else{if(l+12<24){l+=12}}}var g=this.value.dateTime.getDate();this.value._setYear(parseInt(s));this.value._setDay(B);this.value._setMonth(H);if(c){this.value._setHours(l)}if(b){this.value._setMinutes(u)}if(q){this.value._setSeconds(I)}if(x){this.value._setMilliseconds(d)}}catch(j){this.value=J}if(F!=null){var z=this.value.dateTime.getFullYear()==F.getFullYear()&&this.value.dateTime.getDate()==F.getDate()&&this.value.dateTime.getMonth()==F.getMonth()&&this.value.dateTime.getHours()==F.getHours()&&this.value.dateTime.getMinutes()==F.getMinutes()&&this.value.dateTime.getSeconds()==F.getSeconds();if(!z){if(this.changing){var n=this.changing(F,this.value.dateTime);if(n){this.value=a.jqx._jqxDateTimeInput.getDateTime(n)}}this._raiseEvent("0",this.value.dateTime);if(this.cookies){if(this.value!=null){a.jqx.cookie.cookie("jqxDateTimeInput"+this.element.id,this.value.dateTime.toString(),this.cookieoptions)}}if(this.change){this.change(this.value.dateTime)}}}}var f=this.editors.indexOf(this.activeEditor);var p=this.items[f];if(this.value){if(this.calendarContainer.jqxCalendar("_isDisabled",this.value.dateTime)){this.dateTimeInput.addClass(this.toThemeProperty("jqx-input-invalid"))}else{this.dateTimeInput.removeClass(this.toThemeProperty("jqx-input-invalid"))}}},_internalSetValue:function(b){this.value._setYear(parseInt(b.year));this.value._setDay(b.day);this.value._setMonth(b.month);this.value._setHours(b.hour);this.value._setMinutes(b.minute);this.value._setSeconds(b.second);this.value._setMilliseconds(b.milisecond)},_raiseEvent:function(c,n){var m=this.events[c];var f={};f.owner=this;if(n==null){n={}}var l=n.charCode?n.charCode:n.keyCode?n.keyCode:0;var o=true;var k=this.readonly;var b=new a.Event(m);b.owner=this;b.args=f;b.args.date=this.getDate();this.element.value=this.dateTimeInput.val();if(c==9&&this.selectionMode!="range"){var d=b.args.date;if(this._oldDT){if(d!=null){if(!(d.getFullYear()!=this._oldDT.getFullYear()||d.getMonth()!=this._oldDT.getMonth()||d.getDate()!=this._oldDT.getDate()||d.getHours()!=this._oldDT.getHours()||d.getMinutes()!=this._oldDT.getMinutes()||d.getSeconds()!=this._oldDT.getSeconds())){return true}}a.jqx.aria(this,"aria-valuenow",this.getDate());a.jqx.aria(this,"aria-valuetext",this.getText());if(this.getDate()!=null){a.jqx.aria(this,"aria-label","Current focused date is "+this.getDate().toLocaleString())}else{a.jqx.aria(this,"aria-label","Current focused date is Null")}}}if(this.selectionMode=="range"){b.args.date=this.getRange();if(this._oldDT){var d=b.args.date.from;if(c==9){var j=false;var h=false;var e=this._oldDT.from;if(d!=null&&e){if(!(d.getFullYear()!=e.getFullYear()||d.getMonth()!=e.getMonth()||d.getDate()!=e.getDate()||d.getHours()!=e.getHours()||d.getMinutes()!=e.getMinutes()||d.getSeconds()!=e.getSeconds())){j=true}}var d=b.args.date.to;if(d!=null){e=this._oldDT.to;if(e){if(!(d.getFullYear()!=e.getFullYear()||d.getMonth()!=e.getMonth()||d.getDate()!=e.getDate()||d.getHours()!=e.getHours()||d.getMinutes()!=e.getMinutes()||d.getSeconds()!=e.getSeconds())){h=true}}}if(j&&h){return true}var j=b.args.date.from;if(j==null){j=""}else{j=j.toString()}var h=b.args.date.to;if(h==null){h=""}else{h=h.toString()}a.jqx.aria(this,"aria-valuenow",j+"-"+h);a.jqx.aria(this,"aria-valuetext",this.getText());if(j&&h){a.jqx.aria(this,"aria-label","Current focused range is "+j.toLocaleString()+"-"+h.toLocaleString())}}}}if(this.host.css("display")=="none"){return true}if(c!=2&&c!=3&&c!=4&&c!=5&&c!=6){o=this.host.trigger(b);if(b.stopPropagation){b.stopPropagation()}}var g=this;if(!k){if(c==2&&!this.disabled){setTimeout(function(){g.isEditing=true;if(this.selectionMode=="range"){g._selectGroup(-1)}else{g._selectGroup(-1)}},25)}}if(c==4){if(k||this.disabled){if(l==8||l==46){this.isEditing=false;if(this.allowKeyboardDelete){if(this.allowNullDate){this.setDate(null)}else{if(this.selectionMode!="range"){this.setDate(this.getMinDate())}else{this.setRange(this.getMinDate(),this.getMinDate())}}}}if(l==9){return true}return false}o=this._handleKeyDown(n,l)}else{if(c==5){if(l==9){return true}if(k||this.disabled){return false}}else{if(c==6){if(l==9){return true}if(k||this.disabled){return false}o=this._handleKeyPress(n,l)}}}return o},_doLeftKey:function(){if(this.activeEditor!=null){if(!this.isEditing){this.isEditing=true}var b=this.activeEditor;var d=false;var e=this.editors.indexOf(this.activeEditor);var c=e;if(this.enableAbsoluteSelection){if(e>=0&&this.activeEditor.positions>0){this.activeEditor.positions--;this._selectGroup(e);return}}while(e>0){this.activeEditor=this.editors[--e];this._selectGroup(e);if(this.items[e].type!="ReadOnly"){d=true;break}}if(!d){if(c>=0){this.activeEditor=this.editors[c]}}if(this.activeEditor!=null&&b!=this.activeEditor){if(this.items[e].type!="ReadOnly"){if(this.enableAbsoluteSelection){this.activeEditor.positions=this.activeEditor.maxEditPositions-1}else{this.activeEditor.positions=0}}}if(this.activeEditor!=b){this._validateValue();this._updateText();this._selectGroup(this.editors.indexOf(this.activeEditor));return true}else{return false}}},_doRightKey:function(){if(this.activeEditor!=null){if(!this.isEditing){this.isEditing=true}var b=this.activeEditor;var d=false;var e=this.editors.indexOf(this.activeEditor);var c=e;if(this.enableAbsoluteSelection){if(e>=0&&this.activeEditor.positions<this.activeEditor.maxEditPositions-1){this.activeEditor.positions++;this._selectGroup(e);return}}while(e<=this.editors.length-2){this.activeEditor=this.editors[++e];this._selectGroup(e);if(this.items[e].type!="ReadOnly"){if(this.items[e].type=="Day"&&this.items[e].format.length>2){break}d=true;break}}if(!d){if(c>=0){this.activeEditor=this.editors[c]}}if(this.activeEditor!=null&&this.activeEditor!=b){if(this.items[e].type!="ReadOnly"){this.activeEditor.positions=0}}if(this.activeEditor!=b){this._validateValue();this._updateText();this._selectGroup(this.editors.indexOf(this.activeEditor));return true}else{return false}}},_saveSelectedText:function(){var b=this._selection();var d="";var c=this.dateTimeInput.val();if(b.start>0||b.length>0){for(i=b.start;i<b.end;i++){d+=c[i]}}if(window.clipboardData){window.clipboardData.setData("Text",d)}return d},_selectWithAdvancePattern:function(){var f=this.editors.indexOf(this.activeEditor);var g=false;if(this.items[f].type!="ReadOnly"){g=true}if(!g){return}var d=this.activeEditor;if(d!=null){var e=d.positions==d.maxEditPositions;if(e){this.editorText="";var c=d.value;var b=false;switch(this.items[f].type){case"FORMAT_AMPM":if(c<0){c=0}else{if(c>1){c=1}}break;case"Character":break;case"Day":if(c<1){c=1}else{if(c>31){c=31}}break;case"FORMAT_hh":if(c<1){c=1}else{if(c>12){c=12}}break;case"FORMAT_HH":if(c<0){c=0}else{if(c>23){c=23}}break;case"Millisecond":if(c<0){c=0}else{if(c>99){c=99}}break;case"Minute":if(c<0){c=0}else{if(c>59){c=59}}break;case"Month":if(c<1){c=1}else{if(c>12){c=12}}break;case"ReadOnly":break;case"Second":if(c<0){c=0}else{if(c>59){c=59}}break;case"Year":if(c<this.minDate.year){c=this.minDate.year}else{if(c>this.maxDate.year){c=this.maxDate.year}}break}if(d.value!=c){b=true}if(!b){this.isEditing=false;this._validateValue();this._updateText();this.isEditing=true;this._doRightKey();return true}return false}}},_handleKeyPress:function(k,o){var n=this._selection();var b=this;var d=k.ctrlKey||k.metaKey;if((d&&o==97)||(d&&o==65)){return true}if(o==8){if(n.start>0){b._setSelectionStart(n.start)}return false}if(o==46){if(n.start<this.items.length){b._setSelectionStart(n.start)}return false}if(n.start>=0){var f=String.fromCharCode(o);var l=parseInt(f);if(f=="p"||f=="a"||f=="A"||f=="P"){if(this.activeEditor.item.type=="FORMAT_AMPM"){if(this.activeEditor.value==0&&(f=="p"||f=="P")){this.spinUp()}else{if(this.activeEditor.value==1&&(f=="a"||f=="A")){this.spinDown()}}}}if(!isNaN(l)){if(this.container.css("display")=="block"){this.hideCalendar()}this.updateValue();this._updateText();var h=false;var j=this.editors.indexOf(this.activeEditor);var c=null;this.isEditing=true;if(j.type!="ReadOnly"){c=this.activeEditor}if(c!=null&&c.positions==0){this.editorText=""}if(this.activeEditor==null){this.activeEditor=this.editors[0]}if(this.activeEditor==null){return false}this.activeEditor.insert(f);if(c!=null&&this.editorText.length>=c.maxEditPositions){this.editorText=""}this.editorText+=f;var p=this._selectWithAdvancePattern();if(this.activeEditor.positions==this.activeEditor.maxEditPositions){var g=this._getLastEditableEditorIndex();if(this.editors.indexOf(this.activeEditor)==g&&p&&this.enableAbsoluteSelection){this.activeEditor.positions=this.activeEditor.maxEditPositions-1}else{this.activeEditor.positions=0}}h=true;this.updateValue();this._updateText();this._selectGroup(this.editors.indexOf(this.activeEditor));return false}}var m=this._isSpecialKey(o);return m},_getLastEditableEditorIndex:function(){var b=0;var c=this;for(itemIndex=this.items.length-1;itemIndex>=0;itemIndex--){if(this.items[itemIndex].type!="ReadOnly"){return itemIndex}}return -1},_handleKeyDown:function(h,o){var g=this;this.timePopup=false;if(o==84){this.timePopup=true}if(h.keyCode==115){if(g.isOpened()){g.hideCalendar();return false}else{if(!g.isOpened()){g.showCalendar();return false}}}if(h.altKey){if(h.keyCode==38){if(g.isOpened()){g.hideCalendar();return false}}else{if(h.keyCode==40){if(!g.isOpened()){g.showCalendar();return false}}}}if(g.isOpened()){if(h.keyCode==9){g.hideCalendar("selected");return true}return}var m=g._selection();var b=h.ctrlKey||h.metaKey;if((b&&o==99)||(b&&o==67)){g._saveSelectedText(h);return true}if((b&&o==122)||(b&&o==90)){return false}if((b&&o==118)||(b&&o==86)||(h.shiftKey&&o==45)){var l=g.val();var j=this;var c=a('<textarea style="position: absolute; left: -1000px; top: -1000px;"/>');a("body").append(c);c.select();setTimeout(function(){var e=c.val();j.setDate(e);c.remove()},100);return true}if(o==8||o==46){if(!h.altKey&&!b&&o==46){g.isEditing=false;if(g.allowKeyboardDelete){if(g.allowNullDate){g.setDate(null)}else{if(g.selectionMode!="range"){g.setDate(g.getMinDate())}else{g.setRange(g.getMinDate(),g.getMinDate())}}}}else{if(g.activeEditor!=null){var f=g.editors.indexOf(g.activeEditor);if(g.activeEditor.positions>=0){var d=g._format(Number(g.activeEditor.value),"d"+g.activeEditor.maxEditPositions,g.culture);tmp=d;tmp=tmp.substring(0,g.activeEditor.positions)+"0"+tmp.substring(g.activeEditor.positions+1);if(parseInt(tmp)<g.activeEditor.minValue){tmp=g._format(Number(g.activeEditor.minValue),"d"+g.activeEditor.maxEditPositions,g.culture)}if(g.enableAbsoluteSelection){g.activeEditor.value=tmp}else{g.activeEditor.value=g.activeEditor.minValue}g._validateValue();g._updateText();if(o==8){var n=this;if(g.enableAbsoluteSelection&&g.activeEditor.positions>0){setTimeout(function(){n.activeEditor.positions=n.activeEditor.positions-1;n._selectGroup(f)},10)}else{setTimeout(function(){n._doLeftKey()},10)}}else{g._selectGroup(f)}}else{g._doLeftKey()}}}return false}if(o==38){this.spinUp();return false}else{if(o==40){this.spinDown();return false}}if(o==37){if(this._editor){var p=this._doLeftKey();if(!p){this.isEditing=false;this._validateValue()}return !p}else{this._doLeftKey();return false}}else{if(o==39||o==191){if(this._editor){var p=this._doRightKey();if(!p){this.isEditing=false;this._validateValue()}return !p}else{this._doRightKey();return false}}}var k=this._isSpecialKey(o);if(this.value==null&&(o>=48&&o<=57||o>=96&&o<=105)){if(new Date()>=this.getMinDate()&&new Date()<=this.getMaxDate()){this.setDate(new Date())}else{this.setDate(this.getMaxDate())}}if(!a.jqx.browser.mozilla){return true}if(a.jqx.browser.mozilla&&a.jqx.browser.version>24){return true}return k},_isSpecialKey:function(b){if(b!=8&&b!=9&&b!=13&&b!=35&&b!=36&&b!=37&&b!=39&&b!=27&&b!=46){return false}return true},_selection:function(){if("selectionStart" in this.dateTimeInput[0]){var f=this.dateTimeInput[0];var g=f.selectionEnd-f.selectionStart;return{start:f.selectionStart,end:f.selectionEnd,length:g,text:f.value}}else{var c=document.selection.createRange();if(c==null){return{start:0,end:f.value.length,length:0}}var b=this.dateTimeInput[0].createTextRange();var d=b.duplicate();b.moveToBookmark(c.getBookmark());d.setEndPoint("EndToStart",b);var g=c.text.length;return{start:d.text.length,end:d.text.length+c.text.length,length:g,text:c.text}}},_selectGroup:function(k,m){if(this.host.css("display")=="none"){return}if(this.readonly){return}if(!m){var m=this._selection()}var f="";var b="";var c=null;for(var d=0;d<this.items.length;d++){b=this.items[d].dateParser(this.value,this);if(this.isEditing&&this.items[d].type!="ReadOnly"){var j=this.items[d].type=="Day"&&this.items[d].format.length>2;if(!j&&this.items[d].type!="FORMAT_AMPM"){b=this.items[d].dateParserInEditMode(new Number(this.editors[d].value),"d"+this.editors[d].maxEditPositions,this);while(b.length<this.editors[d].maxEditPositions){b="0"+b}}}f+=b;if(this.items[d].type=="ReadOnly"){continue}if(this.items[d].type=="Day"&&this.items[d].format.length>2){continue}if(k!=undefined&&k!=-1){if(d>=k){var l=f.length-b.length;var e=b.length;if(this.enableAbsoluteSelection){if(!isNaN(parseInt(b))&&this.isEditing&&k!=-1){e=1;l+=this.editors[d].positions}}if(l==this.dateTimeInput.val().length){l--}this._setSelection(l,l+e);c=this.editors[d];this.activeEditor=c;break}}else{if(f.length>=m.start){c=this.editors[d];this.activeEditor=c;var l=f.length-b.length;var e=1;if(this.enableAbsoluteSelection){if(!isNaN(parseInt(b))&&this.isEditing&&k!=-1){e=1;l+=this.editors[d].positions}}else{e=b.length}this._setSelection(l,l+e);break}}}if(d<this.items.length&&k==-1){if(this.items[d].type!="ReadOnly"){this.activeEditor.positions=0}}var h=this._selection();if(h.length==0){if(h.start>0){var g=this._getLastEditableEditorIndex();if(g>=0){}}}},_getLastEditableEditorIndex:function(){var b=-1;for(i=0;i<this.editors.length;i++){if(this.items[i].type=="ReadOnly"){continue}if(this.items[i].type=="Day"&&this.items[i].format.length>2){continue}b=i}return b},_setSelection:function(e,b){try{if("selectionStart" in this.dateTimeInput[0]){this.dateTimeInput[0].setSelectionRange(e,b)}else{var c=this.dateTimeInput[0].createTextRange();c.collapse(true);c.moveEnd("character",b);c.moveStart("character",e);c.select()}}catch(d){}},_setSelectionStart:function(b){this._setSelection(b,b)},destroy:function(){this.host.removeClass("jqx-rc-all");if(this.timePopupElement){this.timePopupElement.remove()}this._calendar.destroy();this.container.remove();this._removeHandlers();this.dateTimeInput.remove();this.host.remove()},refreshValue:function(){this._refreshValue()},refresh:function(b){if(b!=true){this._setSize();this._arrange()}},resize:function(c,b){this.width=c;this.height=b;this.refresh()},_setOption:function(b,c,d){if(b==="value"){if(this.selectionMode!="range"){this._oldDT=null}else{this._oldDT=null}this.value=c;this._refreshValue();this._raiseEvent(9,{})}if(b=="maxDate"){this._calendar.maxDate=c;this._raiseEvent(9,{})}if(b=="minDate"){this._calendar.minDate=c;this._raiseEvent(9,{})}if(b=="showCalendarButton"){if(c){this.calendarButton.css("display","block")}else{this.calendarButton.css("display","none")}}if(b=="disabled"){this.dateTimeInput.attr("disabled",c)}if(b=="readonly"){this.readonly=c;this.dateTimeInput.css("readonly",c)}if(b=="textAlign"){this.dateTimeInput.css("text-align",c);this.textAlign=c}if(b=="width"){this.width=c;this.width=parseInt(this.width);this._arrange()}else{if(b=="height"){this.height=c;this.height=parseInt(this.height);this._arrange()}}},_refreshValue:function(){this._updateEditorsValue();this.updateValue();this._validateValue();this._updateText()}})})(jqxBaseFramework);(function(a){a.jqx._jqxDateTimeInput.DateTimeFormatItem={};a.extend(a.jqx._jqxDateTimeInput.DateTimeFormatItem,{_create:function(d,c,b){this.format=d;this.type=c;this.culture=b;return this},_itemValue:function(){switch(this.format.length){case 1:return 9;case 2:return 99;case 3:default:return 999}},_maximumValue:function(){switch(this.format.length){case 1:return 9;case 2:return 99;case 3:default:return 999}},dateParser:function(b,c){if(b==null){return""}var d=c._format(b.dateTime,this.format.length==1?"%"+this.format:this.format,this.culture);return d},dateParserInEditMode:function(e,d,b){if(e==null){return""}var c=b._format(e.toString(),d.length==1?"%"+d:d,this.culture);return c},getDateTimeEditorByItemType:function(n,e){switch(this.type){case"FORMAT_AMPM":var f=a.jqx._jqxDateTimeInput.AmPmEditor._createAmPmEditor(this.format,n.hour/12,e.localization.calendar.AM[0],e.localization.calendar.PM[0],this,e);var d=a.extend({},f);return d;case"Character":return null;case"Day":var k=n.year;var s=n.month;var r;if(this.format.length==3){r=e.localization.calendar.days.namesAbbr}else{if(this.format.length>3){r=e.localization.calendar.days.names}else{r=null}}var t=n.day;if(r!=null){t=n.dayOfWeek+1}var g=a.jqx._jqxDateTimeInput.DateEditor._createDayEditor(n,n.day,1,n._daysInMonth(k,s),this.format.length==1?1:2,2,r,this,e);var d=a.extend({},g);return d;case"FORMAT_hh":var c=n.hour%12;if(c==0){c=12}var q=a.jqx._jqxDateTimeInput.NumberEditor._createNumberEditor(c,1,12,this.format.length==1?1:2,2,this,e);var d=a.extend({},q);return d;case"FORMAT_HH":var h=a.jqx._jqxDateTimeInput.NumberEditor._createNumberEditor(n.hour,0,23,this.format.length==1?1:2,2,this,e);var d=a.extend({},h);return d;case"Millisecond":var l=a.jqx._jqxDateTimeInput.NumberEditor._createNumberEditor(n.millisecond/this._itemValue(),0,this._maximumValue(),this.format.length,this.format.length,this,e);var d=a.extend({},l);return d;case"Minute":var o=a.jqx._jqxDateTimeInput.NumberEditor._createNumberEditor(n.minute,0,59,this.format.length==1?1:2,2,this,e);var d=a.extend({},o);return d;case"Month":var j;if(this.format.length==3){j=e.localization.calendar.months.namesAbbr}else{if(this.format.length>3){j=e.localization.calendar.months.names}else{j=null}}var m=a.jqx._jqxDateTimeInput.DateEditor._createMonthEditor(n.month,this.format.length==2?2:1,j,this,e);var d=a.extend({},m);return d;case"ReadOnly":return a.jqx._jqxDateTimeInput.DisabledEditor._create(this.format.length,n.day,this,e);case"Second":var b=a.jqx._jqxDateTimeInput.NumberEditor._createNumberEditor(n.second,0,59,this.format.length==1?1:2,2,this,e);var d=a.extend({},b);return d;case"Year":var p=a.jqx._jqxDateTimeInput.DateEditor._createYearEditor(n.year,4,this,e);var d=a.extend({},p);return d}return null}})})(jqxBaseFramework);(function(a){a.jqx._jqxDateTimeInput.DateEditor=a.extend(a.jqx._jqxDateTimeInput.DateEditor,{formatValueLength:0,handleYears:false,handleDays:false,handleMonths:false,positions:0,value:0,minEditPositions:0,maxEditPositions:0,minValue:0,maxValue:0,item:null,dateTimeFormatInfo:null,days:null,dateTimeMonths:null,lastDayInput:null,minPositions:function(){if(this.handleYears){if(this.formatValueLength==4){if(this.positions<=1){return 1}else{if(this.positions>=4){return 4}}return this.positions}else{return this.minEditPositions}}return this.minEditPositions},initializeFields:function(e,f,b,d,c){this.minValue=e;this.maxValue=f;this.minEditPositions=b;this.maxEditPositions=d;this.updateActiveEditor(e);this.item=c},_createYearEditor:function(e,d,c,b){a.jqx._jqxDateTimeInput.DateEditor=a.extend(true,{},this);this.initializeFields(d<=4?0:0,d<4?99:9999,(d==2)?2:1,d>3?4:2,c);this.initializeYearEditor(e,d,c.culture);this.handleYears=true;this.that=b;return this},initializeYearEditor:function(d,c,e){this.formatValueLength=c;this.dateTimeFormatInfo=e;var b=d;b=Math.min(b,9999);b=Math.max(b,1);b=this.formatValueLength<4?b%100:b;this.updateActiveEditor(b);this.value=b},updateActiveEditor:function(b){this.value=b;this.positions=0},_createDayEditor:function(b,j,h,e,c,f,g,k,d){a.jqx._jqxDateTimeInput.DateEditor=a.extend(true,{},this);this.initializeFields(h,e,1,f,k);this.currentValue=b;this.value=j;this.days=g;this.handleDays=true;this.that=d;return this},getDayOfWeek:function(b){if(typeof this.currentValue==a.jqx._jqxDateTimeInput.DateTime){this.currentValue.dayOfWeek()}return b},defaultTextValue:function(){var d=this.value;var e=this.minEditPositions;var b=e;var c=this.that._format(this.value,"d"+b,"");return c},textValue:function(){if(this.handleDays){if(this.days==null){return this.defaultTextValue()}else{var b=(this.value%7)+1;b=this.getDayOfWeek(b);return this.days[b]}}else{if(this.handleMonths){if(this.dateTimeMonths==null||this.value<1||this.value>12){return this.defaultTextValue()}else{return this.dateTimeMonths[this.value-1]}}}return this.defaultTextValue()},defaultInsertString:function(c){if(c==null){return this.deleteValue()}if(c.length==0){return this.deleteValue()}var g=c.substring(0,1);if(isNaN(g)){return}var e=true;var d;var b=1;var f=this.that._format(Number(this.value),"d"+this.maxEditPositions,this.culture);d=f;if(this.positions>=this.maxEditPositions){this.positions=0}d=d.substring(0,this.positions)+g+d.substring(this.positions+1);d=this.setValueByString(d,b);return true},setValueByString:function(d,b){d=this.fixValueString(d);var c=new Number(d);this.value=c;this.positions+=b;return d},fixValueString:function(b){if(b.length>this.maxEditPositions){b=b.substring(b.length-this.maxEditPositions)}return b},initializeValueString:function(c){var b;b="";if(this.hasDigits()){b=c}return b},deleteValue:function(){if(this.value==this.minValue&&this.hasDigits()==false){return false}this.updateActiveEditor(this.minValue);return true},hasDigits:function(){return this.positions>0},insert:function(b){if(this.handleDays){if(this.days!=null){var c=false;c=this.insertLongString(b,c);if(c){return c}c=this.insertShortString(b,c);if(c){return c}}if(this.value==1&&this.lastDayInput!=null&&this.lastDayInput.toString().length>0&&this.lastDayInput.toString()=="0"){this.value=0}this.lastDayInput=b;return this.defaultInsertString(b)}else{if(this.handleMonths){if(this.dateTimeMonths!=null){var c=false;c=this.insertLongString2(b,c);if(c){return c}c=this.insertShortString2(b,c);if(c){return c}}}}return this.defaultInsertString(b)},insertShortString:function(d,e){if(d.length==1){for(i=0;i<6;++i){var c=(this.value+i)%7+1;var b=this.days[c-1];if(b.substring(0,1)==d){this.updateActiveEditor(c);e=true;return e}}}return e},insertLongString:function(c,d){if(c.length>0){for(i=0;i<6;++i){var b=(this.value+i)%7+1;if(this.days[b-1]==c){this.updateActiveEditor(b);d=true;return d}}}return d},_createMonthEditor:function(d,c,b,f,e){a.jqx._jqxDateTimeInput.DateEditor=a.extend(true,{},this);this.initializeFields(1,12,c,2,f);this.dateTimeMonths=b;this.value=d;if(this.dateTimeMonths!=null&&this.dateTimeMonths[12]!=null&&this.dateTimeMonths[12].length>0){this.dateTimeMonths=null}this.handleMonths=true;this.that=e;return this},insertLongString2:function(b,c){if(b.length>0){for(i=0;i<11;++i){month=(this.value+i)%12+1;if(this.dateTimeMonths[month-1]==b){this.updateActiveEditor(month);c=true;return c}}}return c},insertShortString2:function(c,d){if(c.length==1){for(i=0;i<11;++i){var e=(this.value+i)%12+1;var b=this.dateTimeMonths[e-1];if(b.substring(0,1)==c){this.updateActiveEditor(e);d=true;return d}}}return d},correctMaximumValue:function(b){if(b>this.maxValue){b=this.minValue}return b},correctMinimumValue:function(b){if(b<this.minValue){b=this.maxValue}return b},increaseValue:function(e){var c=this.that._format(Number(this.value),"d"+this.maxEditPositions,this.culture);var f=c.toString()[this.positions];f=parseInt(f)+1;if(f>9){f=0}if(!e){var b=this.value+1;b=this.correctMaximumValue(b);this.updateActiveEditor(b);return true}var d=c.substring(0,this.positions)+f+c.substring(this.positions+1);if(d!=this.value||this.hasDigits()){this.updateActiveEditor(d);return true}else{return false}},decreaseValue:function(e){var c=this.that._format(Number(this.value),"d"+this.maxEditPositions,this.culture);var f=c.toString()[this.positions];f=parseInt(f)-1;if(f<0){f=9}if(!e){var b=this.value-1;b=this.correctMinimumValue(b);this.updateActiveEditor(b);return true}var d=c.substring(0,this.positions)+f+c.substring(this.positions+1);if(d!=this.value||this.hasDigits()){this.updateActiveEditor(d);return true}else{return false}},getDateTimeItem:function(){return this.item}})})(jqxBaseFramework);(function(a){a.jqx._jqxDateTimeInput.NumberEditor={};a.extend(a.jqx._jqxDateTimeInput.NumberEditor,{formatValueLength:0,positions:0,value:0,minEditPositions:0,maxEditPositions:0,minValue:0,maxValue:0,item:null,minPositions:function(){if(this.handleYears){if(this.formatValueLength==4){if(this.positions<=1){return 1}else{if(this.positions>=4){return 4}}return this.positions}else{return this.minEditPositions}}return this.minEditPositions},_createNumberEditor:function(g,f,h,b,e,d,c){a.jqx._jqxDateTimeInput.NumberEditor=a.extend(true,{},this);this.initializeFields(f,h,b,e,d);this.that=c;return this},initializeFields:function(e,f,b,d,c){this.minValue=e;this.maxValue=f;this.minEditPositions=b;this.maxEditPositions=d;this.updateActiveEditor(e);this.item=c},updateActiveEditor:function(b){this.value=b;this.positions=0},getDayOfWeek:function(b){if(typeof this.currentValue==a.jqx._jqxDateTimeInput.DateTime){this.currentValue.dayOfWeek()}return b},textValue:function(){var d=this.value;var e=this.minEditPositions;var b=e;var c=this.that._format(this.value,"d"+b,"");return c},insert:function(c){if(c==null){return this.deleteValue()}if(c.length==0){return this.deleteValue()}var g=c.substring(0,1);if(isNaN(g)){return}var e=true;var d;var b=1;var f=this.that._format(Number(this.value),"d"+this.maxEditPositions,this.culture);d=f;if(this.positions>=this.maxEditPositions){this.positions=0}d=d.substring(0,this.positions)+g+d.substring(this.positions+1);d=this.setValueByString(d,b);return true},setValueByString:function(d,b){d=this.fixValueString(d);var c=new Number(d);this.value=c;this.positions+=b;return d},fixValueString:function(b){if(b.length>this.maxEditPositions){b=b.substring(b.length-this.maxEditPositions)}return b},initializeValueString:function(c){var b;b="";if(this.hasDigits()){b=c}return b},deleteValue:function(){if(this.value==this.minValue&&this.hasDigits()==false){return false}this.updateActiveEditor(this.minValue);return true},hasDigits:function(){return this.positions>0},correctMaximumValue:function(b){if(b>this.maxValue){b=this.minValue}return b},correctMinimumValue:function(b){if(b<this.minValue){b=this.maxValue}return b},increaseValue:function(e){var c=this.that._format(Number(this.value),"d"+this.maxEditPositions,this.culture);var f=c.toString()[this.positions];f=parseInt(f)+1;if(f>9){f=0}if(!e){var b=this.value+1;b=this.correctMaximumValue(b);this.updateActiveEditor(b);return true}var d=c.substring(0,this.positions)+f+c.substring(this.positions+1);if(d!=this.value||this.hasDigits()){this.updateActiveEditor(d);return true}else{return false}},decreaseValue:function(e){var c=this.that._format(Number(this.value),"d"+this.maxEditPositions,this.culture);var f=c.toString()[this.positions];f=parseInt(f)-1;if(f<0){f=9}if(!e){var b=this.value-1;b=this.correctMinimumValue(b);this.updateActiveEditor(b);return true}var d=c.substring(0,this.positions)+f+c.substring(this.positions+1);if(d!=this.value||this.hasDigits()){this.updateActiveEditor(d);return true}else{return false}},getDateTimeItem:function(){return this.item}})})(jqxBaseFramework);(function(a){a.jqx._jqxDateTimeInput.DisabledEditor={};a.extend(a.jqx._jqxDateTimeInput.DisabledEditor,{_create:function(g,c,f,b,e,d){this.format=g;this.value=-1;this.item=e;this.that=d;return this},textValue:function(){return""},insert:function(b){return false},deleteValue:function(){return false},increaseValue:function(){return false},decreaseValue:function(){return false},getDateTimeItem:function(){return this.item}})})(jqxBaseFramework);(function(a){a.jqx._jqxDateTimeInput.AmPmEditor={};a.extend(a.jqx._jqxDateTimeInput.AmPmEditor,{_createAmPmEditor:function(g,c,f,b,e,d){this.format=g;this.value=c;this.amString=f;this.pmString=b;this.item=e;this.that=d;if(f==b){this.amString="<"+f;this.pmString=">"+b}return this},textValue:function(){var b=this.amString;if(this.value!=0){b=this.pmString}if(this.format.length==1&&b.length>1){b=b.substring(0,1)}return b},insert:function(f){var d=f.toString();if(d.Length==0){return this.deleteValue()}var c=false;if(this.amString.Length>0&&this.pmString.Length>0){var g=amString[0];var b=d[0];var e=pmString[0];if(g.toString()==b.toString()){this.value=0;c=true}else{if(e.toString()==b.toString()){this.value=1;c=true}}}else{if(this.pmString.Length>0){this.value=1;c=true}else{if(this.amString.Length>0){this.value=0;c=true}}}return c},deleteValue:function(){var b=true;if(this.amString.Length==0&&this.pmString.Length!=0){if(this.value==0){return false}this.value=0}else{if(this.value==1){return false}this.value=1}return b},increaseValue:function(){this.value=1-this.value;return true},decreaseValue:function(){this.increaseValue();return true},getDateTimeItem:function(){return this.item}})})(jqxBaseFramework);(function(a){a.jqx._jqxDateTimeInput.getDateTime=function(c){var b={dateTime:new Date(c),daysPer4Years:1461,daysPerYear:365,daysToMonth365:{0:0,1:31,2:59,3:90,4:120,5:151,6:181,7:212,8:243,9:273,10:304,11:334,12:365},daysToMonth366:{0:0,1:31,2:60,3:91,4:121,5:152,6:182,7:213,8:244,9:274,10:305,11:335,12:366},maxValue:3155378976000000000,millisPerDay:86400000,millisPerHour:3600000,millisPerMinute:60000,millisPerSecond:1000,minTicks:0,minValue:0,ticksPerDay:864000000000,ticksPerHour:36000000000,ticksPerMillisecond:10000,ticksPerMinute:600000000,ticksPerSecond:10000000,hour:c.getHours(),minute:c.getMinutes(),day:c.getDate(),second:c.getSeconds(),month:1+c.getMonth(),year:c.getFullYear(),millisecond:c.getMilliseconds(),dayOfWeek:c.getDay(),isWeekend:function(d){if(d==undefined||d==null){d=this.dateTime}var e=d.getDay()%6==0;return e},dayOfYear:function(e){if(e==undefined||e==null){e=this.dateTime}var d=new Date(e.getFullYear(),0,1);return Math.ceil((e-d)/86400000)},_setDay:function(d){if(d==undefined||d==null){d=0}this.dateTime.setDate(d);this.day=this.dateTime.getDate()},_setMonth:function(d){if(d==undefined||d==null){d=0}this.dateTime.setMonth(d-1);this.month=1+this.dateTime.getMonth()},_setYear:function(d){if(d==undefined||d==null){d=0}this.dateTime.setFullYear(d);this.year=this.dateTime.getFullYear()},_setHours:function(d){if(d==undefined||d==null){d=0}this.dateTime.setHours(d);this.hour=this.dateTime.getHours()},_setMinutes:function(d){if(d==undefined||d==null){d=0}this.dateTime.setMinutes(d);this.minute=this.dateTime.getMinutes()},_setSeconds:function(d){if(d==undefined||d==null){d=0}this.dateTime.setSeconds(d);this.second=this.dateTime.getSeconds()},_setMilliseconds:function(d){if(d==undefined||d==null){d=0}this.dateTime.setMilliseconds(d);this.millisecond=this.dateTime.getMilliseconds()},_addDays:function(f){var d=this.dateTime;var e=d.getDate();d.setDate(d.getDate()+f);if(e===d.getDate()){d.setHours(d.getHours()+d.getTimezoneOffset()/60)}return d},_addWeeks:function(e){var d=this.dateTime;d.setDate(d.getDate()+7*e);return d},_addMonths:function(e){var d=this.dateTime;d.setMonth(d.getMonth()+e);return d},_addYears:function(e){var d=this.dateTime;d.setFullYear(d.getFullYear()+e);return d},_addHours:function(e){var d=this.dateTime;d.setHours(d.getHours()+e);return d},_addMinutes:function(e){var d=this.dateTime;d.setMinutes(d.getMinutes()+e);return d},_addSeconds:function(e){var d=this.dateTime;d.setSeconds(d.getSeconds()+e);return d},_addMilliseconds:function(e){var d=this.dateTime;d.setMilliseconds(d.getMilliseconds()+e);return d},_isLeapYear:function(d){if((d<1)||(d>9999)){throw"invalid year"}if((d%4)!=0){return false}if((d%100)==0){return((d%400)==0)}return true},_dateToTicks:function(f,h,e){if(((f>=1)&&(f<=9999))&&((h>=1)&&(h<=12))){var d=this._isLeapYear(f)?this.daysToMonth366:this.daysToMonth365;if((e>=1)&&(e<=(d[h]-d[h-1]))){var f=f-1;var g=((((((f*365)+(f/4))-(f/100))+(f/400))+d[h-1])+e)-1;return(g*864000000000)}}},_daysInMonth:function(e,f){if((f<1)||(f>12)){throw ("Invalid month.")}var d=this._isLeapYear(e)?this.daysToMonth366:this.daysToMonth365;return(d[f]-d[f-1])},_timeToTicks:function(d,g,e){var f=((d*3600)+(g*60))+e;return(f*10000000)},_equalDate:function(d){if(this.year==d.getFullYear()&&this.day==d.getDate()&&this.month==d.getMonth()+1){return true}return false}};return b}})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxMaskedInput","",{});a.extend(a.jqx._jqxMaskedInput.prototype,{defineInstance:function(){var b={value:null,mask:"99999",width:null,height:25,textAlign:"left",readOnly:false,cookies:false,promptChar:"_",inputMode:"advanced",rtl:false,disabled:false,events:["valueChanged","textchanged","mousedown","mouseup","keydown","keyup","keypress","change"],aria:{"aria-valuenow":{name:"value",type:"string"},"aria-disabled":{name:"disabled",type:"boolean"}}};a.extend(true,this,b);return b},createInstance:function(b){this.render()},render:function(){var e=this;e.host.attr({role:"textbox"});e.host.attr("data-role","input");var f=e.host.attr("value");if(f!=undefined&&f!=""){e.value=f}a.jqx.aria(this);a.jqx.aria(this,"aria-multiline",false);a.jqx.aria(this,"aria-readonly",e.readOnly);e.host.addClass(e.toThemeProperty("jqx-input"));e.host.addClass(e.toThemeProperty("jqx-rc-all"));e.host.addClass(e.toThemeProperty("jqx-widget"));e.host.addClass(e.toThemeProperty("jqx-widget-content"));maskEditor=this;if(e.element.nodeName.toLowerCase()=="div"){e.element.innerHTML="";e.maskbox=a("<input autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' type='textarea'/>").appendTo(e.host)}else{e.maskbox=e.host;e.maskbox.attr("autocomplete","off");e.maskbox.attr("autocorrect","off");e.maskbox.attr("autocapitalize","off");e.maskbox.attr("spellcheck",false)}e.maskbox.addClass(e.toThemeProperty("jqx-reset"));e.maskbox.addClass(e.toThemeProperty("jqx-input-content"));e.maskbox.addClass(e.toThemeProperty("jqx-widget-content"));var b=e.host.attr("name");if(b){e.maskbox.attr("name",b)}if(e.rtl){e.maskbox.addClass(e.toThemeProperty("jqx-rtl"))}var d=this;e.propertyChangeMap.disabled=function(g,j,h,k){if(k){g.maskbox.addClass(d.toThemeProperty("jqx-input-disabled"))}else{g.maskbox.removeClass(d.toThemeProperty("jqx-input-disabled"))}};if(e.disabled){e.maskbox.addClass(e.toThemeProperty("jqx-input-disabled"));e.maskbox.attr("disabled",true);e.host.addClass(e.toThemeProperty("jqx-fill-state-disabled"))}e.selectedText="";e.self=this;e.oldValue=e._value();e.items=new Array();e._initializeLiterals();e._render();if(e.value!=null){e.inputValue(e.value.toString())}var d=this;if(e.host.parents("form").length>0){e.host.parents("form").on("reset",function(){setTimeout(function(){d.clearValue()},10)})}e.addHandlers();if(e.cookies){var c=a.jqx.cookie.cookie("maskedInput."+e.element.id);if(c){e.val(c)}}},addHandlers:function(){var d=this;if(a.jqx.mobile.isTouchDevice()){this.inputMode="simple"}var b="";var c=function(j,f){var h=String.fromCharCode(f);var k=parseInt(h);var g=true;if(!isNaN(k)){g=true;var e=this.maskbox.val().toString().length;if(e>=this.items.length&&this._selection().length==0){g=false}}if(!j.ctrlKey&&!j.shiftKey&&!j.metaKey){if(f>=65&&f<=90){g=false}}return g};this.addHandler(this.maskbox,"blur",function(e){if(d.inputMode=="simple"){d._exitSimpleInputMode(e,d,false,b);return false}if(d.rtl){d.maskbox.css("direction","ltr")}d.host.removeClass(d.toThemeProperty("jqx-fill-state-focus"));if(d.maskbox.val()!=b){d._raiseEvent(7,e);if(d.cookies){a.jqx.cookie.cookie("maskedInput."+d.element.id,d.maskbox.val())}}});this.addHandler(this.maskbox,"focus",function(e){b=d.maskbox.val();if(d.inputMode=="simple"){d.maskbox[0].value=d._getEditValue();a.data(d.maskbox,"simpleInputMode",true);return false}if(d.rtl){d.maskbox.css("direction","rtl")}d.host.addClass(d.toThemeProperty("jqx-fill-state-focus"))});this.addHandler(this.host,"keydown",function(g){var h=d.readOnly;var f=g.charCode?g.charCode:g.keyCode?g.keyCode:0;if(h||d.disabled){return false}if(d.inputMode!="simple"){var e=d._handleKeyDown(g,f);if(!e){if(g.preventDefault){g.preventDefault()}if(g.stopPropagation){g.stopPropagation()}}return e}else{return c.call(d,g,f)}});this.addHandler(this.host,"keyup",function(f){var g=d.readOnly;var e=f.charCode?f.charCode:f.keyCode?f.keyCode:0;if(g||d.disabled){return true}if(d.inputMode=="simple"){return c.call(d,f,e)}else{if(f.preventDefault){f.preventDefault()}if(f.stopPropagation){f.stopPropagation()}return false}});this.addHandler(this.host,"keypress",function(g){var h=d.readOnly;var f=g.charCode?g.charCode:g.keyCode?g.keyCode:0;if(h||d.disabled){return true}if(d.inputMode=="simple"){return c.call(d,g,f)}else{var e=d._handleKeyPress(g,f);if(!e){if(g.preventDefault){g.preventDefault()}if(g.stopPropagation){g.stopPropagation()}}return e}})},focus:function(){try{this.maskbox.focus()}catch(b){}},_exitSimpleInputMode:function(b,n,h,d){if(n==undefined){n=b.data}if(n==null){return}if(h==undefined){if(b.target!=null&&n.element!=null){if((b.target.id!=undefined&&b.target.id.toString().length>0&&n.host.find("#"+b.target.id).length>0)||b.target==n.element){return}}var f=n.host.offset();var e=f.left;var g=f.top;var c=n.host.width();var l=n.host.height();var o=a(b.target).offset();if(o.left>=e&&o.left<=e+c){if(o.top>=g&&o.top<=g+l){return}}}if(n.disabled||n.readOnly){return}var k=a.data(n.maskbox,"simpleInputMode");if(k==null){return}var j=n.maskbox[0].value;n.val(j);a.data(n.maskbox,"simpleInputMode",null);return false},_getString:function(){var c="";for(var b=0;b<this.items.length;b++){var d=this.items[b].character;if((this.items[b].character==this.promptChar)&&(this.promptChar!=this.items[b].defaultCharacter)){c+=this.items[b].defaultCharacter}else{c+=d}}return c},_initializeLiterals:function(){if(this.mask==undefined||this.mask==null){this.items=new Array();return}this.mask=this.mask.toString();var c=this.mask.length;for(var f=0;f<c;f++){var g=this.mask.substring(f,f+1);var h="";var b=false;if(g=="["){for(var d=f;d<c;d++){var e=this.mask.substring(d,d+1);if(e=="]"){break}}h="("+this.mask.substring(f,d+1)+")";f=d;b=true}if(g=="#"){h="(\\d|[+]|[-])";b=true}else{if(g=="9"||g=="0"){h="\\d";b=true}else{if(g=="$"){b=false}else{if(g=="/"||g==":"){b=false}else{if(g=="A"||g=="a"){h="\\w";b=true}else{if(g=="c"||g=="C"){h=".";b=true}else{if(g=="L"||g=="l"){h="([a-zA-Z])";b=true}}}}}}}var l=this;var k=function(o,n,j){k.character=o;k.regex=n;k.canEdit=j;k.defaultCharacter=l.promptChar};if(b){k(this.promptChar,h,b)}else{k(g,h,b)}this.items.push(k)}},setRegex:function(d,e,b,c){if((d==null||d==undefined)||(e==null||e==undefined)){return}if(d<this.items.length){this.items[d].regex=e;if(b!=null&&b!=undefined){this.items[d].canEdit=b}if(c!=null&&c!=undefined){this.items[d].defaultCharacter=c}}},_match:function(c,b){var d=new RegExp(b,"i");return d.test(c)},_raiseEvent:function(j,c){var d=this.events[j];var e={};e.owner=this;var f=c.charCode?c.charCode:c.keyCode?c.keyCode:0;var b=true;var h=this.readOnly;var g=new a.Event(d);g.owner=this;e.value=this.inputValue();e.text=this.maskedValue();g.args=e;if(j<2||j>6){b=this.host.trigger(g)}return b},_handleKeyPress:function(d,b){var c=this._isSpecialKey(b,d);return c},_insertKey:function(c){var d=this._selection();var b=this;if(d.start>=0&&d.start<this.items.length){var e=String.fromCharCode(c);var f=false;a.each(this.items,function(h,l){if(h<d.start){return}var k=b.items[h];if(!k.canEdit){return}if(b._match(e,k.regex)){if(!f&&d.length>0){for(var g=d.start;g<d.end;g++){if(b.items[g].canEdit){b.items[g].character=b.promptChar}}var n=b._getString();b.maskedValue(n);f=true}k.character=e;var n=b._getString();b.maskedValue(n);if(d.start<b.items.length){b._setSelectionStart(h+1)}return false}else{return false}})}},_deleteSelectedText:function(){var c=this._selection();var b=false;if(c.start>0||c.length>0){for(i=c.start;i<c.end;i++){if(i<this.items.length&&this.items[i].canEdit&&this.items[i].character!=this.promptChar){this.items[i].character=this.promptChar;b=true}}var d=this._getString();this.maskedValue(d);return b}},_saveSelectedText:function(){var b=this._selection();var d="";if(b.start>0||b.length>0){for(i=b.start;i<b.end;i++){if(this.items[i].canEdit){d+=this.items[i].character}}}if(window.clipboardData){window.clipboardData.setData("Text",d)}else{var c=a('<textarea style="position: absolute; left: -1000px; top: -1000px;"/>');c.val(d);a("body").append(c);c.select();setTimeout(function(){document.designMode="off";c.select();c.remove()},100)}return d},_pasteSelectedText:function(){var j=this._selection();var l="";var c=0;var h=j.start;var g="";var f=this;var b=function(k){if(k!=f.selectedText&&k.length>0){f.selectedText=k;if(f.selectedText==null||f.selectedText==undefined){return}}if(j.start>=0||j.length>0){for(i=j.start;i<f.items.length;i++){if(f.items[i].canEdit){if(c<f.selectedText.length){f.items[i].character=f.selectedText[c];c++;h=1+i}}}}var n=f._getString();f.maskedValue(n);if(h<f.items.length){f._setSelectionStart(h)}else{f._setSelectionStart(f.items.length)}};if(window.clipboardData){g=window.clipboardData.getData("Text");b(g)}else{var d=a('<textarea style="position: absolute; left: -1000px; top: -1000px;"/>');a("body").append(d);d.select();var e=this;setTimeout(function(){var k=d.val();b(k);d.remove()},100)}},_handleKeyDown:function(k,o){var n=this._selection();if(o>=96&&o<=105){o=o-48}var d=k.ctrlKey||k.metaKey;if((d&&o==97)||(d&&o==65)){return true}if((d&&o==120)||(d&&o==88)){this.selectedText=this._saveSelectedText(k);this._deleteSelectedText(k);if(a.jqx.browser.msie){return false}return true}if((d&&o==99)||(d&&o==67)){this.selectedText=this._saveSelectedText(k);if(a.jqx.browser.msie){return false}return true}if((d&&o==122)||(d&&o==90)){return false}if((d&&o==118)||(d&&o==86)||(k.shiftKey&&o==45)){this._pasteSelectedText();if(a.jqx.browser.msie){return false}return true}if(n.start>=0&&n.start<this.items.length){var g=String.fromCharCode(o);var p=this.items[n.start]}if(o==8){if(n.length==0){for(j=this.items.length-1;j>=0;j--){if(this.items[j].canEdit&&j<n.end&&this.items[j].character!=this.promptChar){this._setSelection(j,j+1);break}}}n=this._selection();var h=this._deleteSelectedText();if(n.start>0||n.length>0){if(n.start<=this.items.length){if(h){this._setSelectionStart(n.start)}else{this._setSelectionStart(n.start-1)}}}return false}if(o==190){var c=n.start;for(var j=c;j<this.items.length;j++){if(this.items[j].character=="."){this._setSelectionStart(j+1);break}}}if(o==191){var c=n.start;for(var j=c;j<this.items.length;j++){if(this.items[j].character=="/"){this._setSelectionStart(j+1);break}}}if(o==189){var c=n.start;for(var j=c;j<this.items.length;j++){if(this.items[j].character=="-"){this._setSelectionStart(j+1);break}}}if(o==46){if(n.length==0){for(var j=0;j<this.items.length;j++){if(this.items[j].canEdit&&j>=n.start&&this.items[j].character!=this.promptChar){this._setSelection(j,j+1);break}}}var b=n;n=this._selection();var f=this._deleteSelectedText();if(n.start>=0||n.length>=0){if(n.start<this.items.length){if(n.length<=1){if(b.end!=n.end){this._setSelectionStart(n.end)}else{this._setSelectionStart(n.end+1)}}else{this._setSelectionStart(n.start)}}}return false}this._insertKey(o);var l=this._isSpecialKey(o,k);return l},_isSpecialKey:function(b,c){if(b==189||b==9||b==13||b==35||b==36||b==37||b==39||b==46){return true}if((b===16&&c.shiftKey)||c.ctrlKey||c.metaKey){return true}return false},_selection:function(){if("selectionStart" in this.maskbox[0]){var f=this.maskbox[0];var g=f.selectionEnd-f.selectionStart;return{start:f.selectionStart,end:f.selectionEnd,length:g,text:f.value}}else{var c=document.selection.createRange();if(c==null){return{start:0,end:f.value.length,length:0}}var b=this.maskbox[0].createTextRange();var d=b.duplicate();b.moveToBookmark(c.getBookmark());d.setEndPoint("EndToStart",b);var g=c.text.length;return{start:d.text.length,end:d.text.length+c.text.length,length:g,text:c.text}}},_setSelection:function(d,b){if("selectionStart" in this.maskbox[0]){this.maskbox[0].focus();this.maskbox[0].setSelectionRange(d,b)}else{var c=this.maskbox[0].createTextRange();c.collapse(true);c.moveEnd("character",b);c.moveStart("character",d);c.select()}},_setSelectionStart:function(b){this._setSelection(b,b)},refresh:function(b){if(!b){this._render()}},resize:function(c,b){this.width=c;this.height=b;this.refresh()},_render:function(){var c=parseInt(this.host.css("border-left-width"));var g=parseInt(this.host.css("border-left-width"));var f=parseInt(this.host.css("border-left-width"));var d=parseInt(this.host.css("border-left-width"));var j=parseInt(this.host.css("height"))-f-d;var e=parseInt(this.host.css("width"))-c-g;if(this.width!=null&&this.width.toString().indexOf("px")!=-1){e=this.width}else{if(this.width!=undefined&&!isNaN(this.width)){e=this.width}}if(this.height!=null&&this.height.toString().indexOf("px")!=-1){j=this.height}else{if(this.height!=undefined&&!isNaN(this.height)){j=this.height}}e=parseInt(e);j=parseInt(j);if(this.maskbox[0]!=this.element){this.maskbox.css({"border-left-width":0,"border-right-width":0,"border-bottom-width":0,"border-top-width":0})}this.maskbox.css("text-align",this.textAlign);var k=this.maskbox.css("font-size");if(!isNaN(j)){this.maskbox.css("height",parseInt(k)+4+"px")}if(!isNaN(e)){this.maskbox.css("width",e-2)}var h=parseInt(j)-2*parseInt(f)-2*parseInt(d)-parseInt(k);if(isNaN(h)){h=0}if(!isNaN(j)){this.host.height(j)}if(!isNaN(e)){this.host.width(e)}if(this.maskbox[0]!=this.element){var b=h/2;if(a.jqx.browser.msie&&a.jqx.browser.version<8){b=h/4}this.maskbox.css("padding-right","0px");this.maskbox.css("padding-left","0px");this.maskbox.css("padding-top",b);this.maskbox.css("padding-bottom",h/2)}this.maskbox[0].value=this._getString();if(this.width){if(this.width.toString().indexOf("%")>=0){this.element.style.width=this.width}if(this.height.toString().indexOf("%")>=0){this.element.style.height=this.height}}},destroy:function(){this.host.remove()},maskedValue:function(b){if(b===undefined){return this._value()}this.value=b;this._refreshValue();if(this.oldValue!==b){this._raiseEvent(1,b);this.oldValue=b;this._raiseEvent(0,b)}return this},_value:function(){var b=this.maskbox.val();return b},propertyChangedHandler:function(c,d,b,e){if(this.isInitialized==undefined||this.isInitialized==false){return}if(d=="rtl"){if(c.rtl){c.maskbox.addClass(c.toThemeProperty("jqx-rtl"))}else{c.maskbox.removeClass(c.toThemeProperty("jqx-rtl"))}}if(d==="value"){if(e==undefined||e==null){e=""}if(e===""){this.clear()}else{e=e.toString();this.inputValue(e)}c._raiseEvent(7,e)}if(d==="theme"){a.jqx.utilities.setTheme(b,e,this.host)}if(d=="disabled"){if(e){c.maskbox.addClass(c.toThemeProperty("jqx-input-disabled"));c.host.addClass(c.toThemeProperty("jqx-fill-state-disabled"));c.maskbox.attr("disabled",true)}else{c.host.removeClass(this.toThemeProperty("jqx-fill-state-disabled"));c.host.removeClass(this.toThemeProperty("jqx-input-disabled"));c.maskbox.attr("disabled",false)}a.jqx.aria(c,"aria-disabled",e)}if(d=="readOnly"){this.readOnly=e}if(d=="promptChar"){for(i=0;i<c.items.length;i++){if(c.items[i].character==c.promptChar){c.items[i].character=e;c.items[i].defaultCharacter=e}}c.promptChar=e}if(d=="textAlign"){c.maskbox.css("text-align",e);c.textAlign=e}if(d=="mask"){c.mask=e;c.items=new Array();c._initializeLiterals();c.value=c._getString();c._refreshValue()}if(d=="width"){c.width=e;c._render()}else{if(d=="height"){c.height=e;c._render()}}},_value:function(){var b=this.value;return b},_getEditStringLength:function(){var b="";for(i=0;i<this.items.length;i++){if(this.items[i].canEdit){b+=this.items[i].character}}return b.length},_getEditValue:function(){var b="";for(i=0;i<this.items.length;i++){if(this.items[i].canEdit&&this.items[i].character!=this.promptChar){b+=this.items[i].character}}return b},parseValue:function(e){if(e==undefined||e==null){return null}var c=e.toString();var f="";var b=0;for(m=0;m<c.length;m++){var d=c.substring(m,m+1);for(i=b;i<this.items.length;i++){if(this.items[i].canEdit&&this._match(d,this.items[i].regex)){f+=d;b=i;break}}}return f},clear:function(){this.clearValue()},clearValue:function(){this.inputValue("",true)},val:function(b){if(b!=undefined&&typeof b!="object"){if(typeof b==="number"&&isFinite(b)){b=b.toString()}this.maskedValue(b)}return this.maskbox[0].value},inputValue:function(g,c){if(g==undefined||g==null){var f="";for(var e=0;e<this.items.length;e++){if(this.items[e].canEdit){f+=this.items[e].character}}return f}else{var b=0;g=g.toString();for(var e=0;e<this.items.length;e++){if(this.items[e].canEdit){if(this._match(g.substring(b,b+1),this.items[e].regex)){this.items[e].character=g.substring(b,b+1);b++}else{if(c){this.items[e].character=this.promptChar;b++}}}}var d=this._getString();this.maskedValue(d);return this.inputValue()}},_refreshValue:function(){var d=this.maskedValue();var b=0;for(var c=0;c<this.items.length;c++){if(d.length>b){if(this.items[c].canEdit&&this.items[c].character!=d[b]){if((this._match(d[b],this.items[c].regex)||d[b]==this.promptChar)&&d[b].length==1){this.items[c].character=d[b]}}b++}}this.value=this._getString();d=this.value;this.maskbox[0].value=d;a.jqx.aria(this,"aria-valuenow",d)}})})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxInput","",{});a.extend(a.jqx._jqxInput.prototype,{defineInstance:function(){var c=this;var b={disabled:false,filter:c._filter,sort:c._sort,highlight:c._highlight,dropDownWidth:null,renderer:c._renderer,opened:false,$popup:a("<ul></ul>"),source:[],roundedCorners:true,searchMode:"default",placeHolder:"",width:null,height:null,value:"",rtl:false,displayMember:"",valueMember:"",events:["select","open","close"],popupZIndex:20000,items:8,item:'<li><a href:"#"></a></li>',minLength:1,maxLength:null};a.extend(true,this,b);return b},createInstance:function(b){this.render()},render:function(){if(this.element.nodeName.toLowerCase()=="textarea"){this.element.style.overflow="auto"}else{if(this.element.nodeName.toLowerCase()=="div"){this.baseHost=this.element;var b=this.host.find("input");var d=false;a.each(b,function(){var f=this.type;if(f==null||f=="text"||f=="textarea"){b=a(this);d=true;return false}});if(!d){throw new Error("jqxInput: Missing Text Input in the Input Group")}if(b.length>0){this.baseHost=a(this.element);this.host=b;this.element=b[0];this.baseHost.addClass(this.toThemeProperty("jqx-widget"));this.baseHost.addClass(this.toThemeProperty("jqx-rc-all"));this.baseHost.addClass(this.toThemeProperty("jqx-input-group"));var c=this.baseHost.children();var e=this;a.each(c,function(f){a(this).addClass(e.toThemeProperty("jqx-input-group-addon"));a(this).removeClass(e.toThemeProperty("jqx-rc-all"));if(f==0){a(this).addClass(e.toThemeProperty("jqx-rc-l"))}if(f==c.length-1){a(this).addClass(e.toThemeProperty("jqx-rc-r"))}if(this!=e.element){a(this).addClass(e.toThemeProperty("jqx-fill-state-normal"))}})}}}this.addHandlers();if(this.rtl){this.host.addClass(this.toThemeProperty("jqx-rtl"))}this.host.attr("role","textbox");a.jqx.aria(this,"aria-autocomplete","both");a.jqx.aria(this,"aria-disabled",this.disabled);a.jqx.aria(this,"aria-readonly",false);a.jqx.aria(this,"aria-multiline",false);if(this.source&&this.source.length){a.jqx.aria(this,"aria-haspopup",true)}if(this.value!=""){this.element.value=this.value}this._oldsource=this.source;this._updateSource()},_updateSource:function(){var d=this;var b=function(f){var e=new Array();e=a.map(f,function(h){if(h==undefined){return null}if(typeof h==="string"||h instanceof String){return{label:h,value:h}}if(typeof h!="string"&&h instanceof String==false){var g="";var i="";if(d.displayMember!=""&&d.displayMember!=undefined){if(h[d.displayMember]){g=h[d.displayMember]}}if(d.valueMember!=""&&d.valueMember!=undefined){i=h[d.valueMember]}if(g==""){g=h.label}if(i==""){i=h.value}return{label:g,value:i}}return h});return e};if(this.source&&this.source._source){this.adapter=this.source;if(this.adapter._source.localdata!=null){this.adapter.unbindBindingUpdate(this.element.id);this.adapter.bindBindingUpdate(this.element.id,function(e){d.source=b(d.adapter.records)})}else{var c={};if(this.adapter._options.data){a.extend(d.adapter._options.data,c)}else{if(this.source._source.data){a.extend(c,this.source._source.data)}this.adapter._options.data=c}this.adapter.unbindDownloadComplete(this.element.id);this.adapter.bindDownloadComplete(this.element.id,function(e){d.source=b(d.adapter.records)})}this.source.dataBind();return}if(!a.isFunction(this.source)){this.source=b(this.source)}},_refreshClasses:function(c){var b=c?"addClass":"removeClass";this.host[b](this.toThemeProperty("jqx-widget-content"));this.host[b](this.toThemeProperty("jqx-input"));this.host[b](this.toThemeProperty("jqx-widget"));this.$popup[b](this.toThemeProperty("jqx-popup"));if(a.jqx.browser.msie){this.$popup[b](this.toThemeProperty("jqx-noshadow"))}this.$popup[b](this.toThemeProperty("jqx-input-popup"));this.$popup[b](this.toThemeProperty("jqx-menu"));this.$popup[b](this.toThemeProperty("jqx-menu-vertical"));this.$popup[b](this.toThemeProperty("jqx-menu-dropdown"));this.$popup[b](this.toThemeProperty("jqx-widget"));this.$popup[b](this.toThemeProperty("jqx-widget-content"));if(this.roundedCorners){this.host[b](this.toThemeProperty("jqx-rc-all"));this.$popup[b](this.toThemeProperty("jqx-rc-all"))}if(this.disabled){this.host[b](this.toThemeProperty("jqx-fill-state-disabled"))}else{this.host.removeClass(this.toThemeProperty("jqx-fill-state-disabled"))}},selectAll:function(){var b=this.host;setTimeout(function(){if("selectionStart" in b[0]){b[0].focus();b[0].setSelectionRange(0,b[0].value.length)}else{var c=b[0].createTextRange();c.collapse(true);c.moveEnd("character",b[0].value.length);c.moveStart("character",0);c.select()}},10)},selectLast:function(){var b=this.host;this.selectStart(b[0].value.length)},selectFirst:function(){var b=this.host;this.selectStart(0)},selectStart:function(c){var b=this.host;setTimeout(function(){if("selectionStart" in b[0]){b[0].focus();b[0].setSelectionRange(c,c)}else{var d=b[0].createTextRange();d.collapse(true);d.moveEnd("character",c);d.moveStart("character",c);d.select()}},10)},focus:function(){try{this.host.focus();var c=this;setTimeout(function(){c.host.focus()},25)}catch(b){}},resize:function(c,b){this.width=c;this.height=b;this.refresh()},refresh:function(){this._refreshClasses(false);this._refreshClasses(true);if(!this.baseHost){if(this.width){this.host.width(this.width)}if(this.height){this.host.height(this.height)}}else{if(this.width){this.baseHost.width(this.width)}if(this.height){this.baseHost.height(this.height);var d=this;var c=0;var b=this.baseHost.height()-2;if(a.jqx.browser.msie&&a.jqx.browser.version<8){this.baseHost.css("display","inline-block")}a.each(this.baseHost.children(),function(){a(this).css("height","100%");if(a.jqx.browser.msie&&a.jqx.browser.version<8){a(this).css("height",b+"px")}if(this!==d.element){c+=a(this).outerWidth()+2}});this.host.css("width",this.baseHost.width()-c-4+"px");if(a.jqx.browser.msie&&a.jqx.browser.version<9){this.host.css("min-height",b+"px");this.host.css("line-height",b+"px")}}}this.host.attr("disabled",this.disabled);if(this.maxLength){this.host.attr("maxlength",this.maxLength)}if(!this.host.attr("placeholder")){this._refreshPlaceHolder()}},_refreshPlaceHolder:function(){if("placeholder" in this.element){this.host.attr("placeHolder",this.placeHolder)}else{var b=this;if(this.element.value==""){this.element.value=this.placeHolder;this.host.focus(function(){if(b.element.value==b.placeHolder){b.element.value=""}});this.host.blur(function(){if(b.element.value==""||b.element.value==b.placeHolder){b.element.value=b.placeHolder}})}}},destroy:function(){this.removeHandlers();if(this.baseHost){this.baseHost.remove()}else{this.host.remove()}if(this.$popup){this.$popup.remove()}},propertyChangedHandler:function(b,c,e,d){if(c=="placeHolder"){b._refreshPlaceHolder();return}if(c=="opened"){if(d){b.open()}else{b.close()}return}if(c=="source"){b._oldsource=d;b._updateSource()}if(c=="displayMember"||c=="valueMember"){b.source=b._oldsource;b._updateSource()}if(c=="disabled"){a.jqx.aria(b,"aria-disabled",b.disabled)}if(c=="value"){b.element.value=d}b.refresh()},select:function(c,d){var e=this.$popup.find(".jqx-fill-state-pressed").attr("data-value");var b=this.$popup.find(".jqx-fill-state-pressed").attr("data-name");this.element.value=this.renderer(b,this.element.value);this.selectedItem={label:b,value:e};this.host.attr("data-value",e);this.host.attr("data-label",b);this._raiseEvent("0",{item:{label:b,value:e},label:b,value:e});return this.close()},val:function(b){if(arguments.length==0||(b!=null&&typeof(b)=="object"&&!b.label&&!b.value)){if(this.displayMember!=""&&this.valueMember!=""&&this.selectedItem){if(this.element.value===""){return""}return this.selectedItem}return this.element.value}if(b&&b.label){this.selectedItem={label:b.label,value:b.value};this.host.attr("data-value",b.value);this.host.attr("data-label",b.label);this.value=b;this.element.value=b.label;return this.element.value}this.value=b;this.element.value=b;this.host.attr("data-value",b);this.host.attr("data-label",b);return this.element.value},_raiseEvent:function(f,c){if(c==undefined){c={owner:null}}var d=this.events[f];c.owner=this;var e=new a.Event(d);e.owner=this;e.args=c;if(e.preventDefault){e.preventDefault()}var b=this.host.trigger(e);return b},_renderer:function(b){return b},open:function(){if(a.jqx.isHidden(this.host)){return}var c=a.extend({},this.host.coord(true),{height:this.host[0].offsetHeight});if(this.$popup.parent().length==0){var e=this.element.id+"_popup";this.$popup[0].id=e;a.jqx.aria(this,"aria-owns",e)}this.$popup.appendTo(a(document.body)).css({position:"absolute",zIndex:this.popupZIndex,top:c.top+c.height,left:c.left}).show();var b=0;var d=this.$popup.children();a.each(d,function(){b+=a(this).outerHeight(true)-1});this.$popup.height(b);this.opened=true;this._raiseEvent("1",{popup:this.$popup});a.jqx.aria(this,"aria-expanded",true);return this},close:function(){this.$popup.hide();this.opened=false;this._raiseEvent("2",{popup:this.$popup});a.jqx.aria(this,"aria-expanded",false);return this},suggest:function(c){var b;this.query=this.element.value;if(!this.query||this.query.length<this.minLength){return this.opened?this.close():this}if(a.isFunction(this.source)){b=this.source(this.query,a.proxy(this.load,this))}else{b=this.source}if(b){return this.load(b)}return this},load:function(b){var c=this;b=a.grep(b,function(d){return c.filter(d)});b=this.sort(b);if(!b.length){if(this.opened){return this.close()}else{return this}}return this._render(b.slice(0,this.items)).open()},_filter:function(b){var c=this.query;var d=b;if(b.label!=null){d=b.label}else{if(this.displayMember){d=b[this.displayMember]}}switch(this.searchMode){case"none":break;case"containsignorecase":default:return a.jqx.string.containsIgnoreCase(d,c);case"contains":return a.jqx.string.contains(d,c);case"equals":return a.jqx.string.equals(d,c);case"equalsignorecase":return a.jqx.string.equalsIgnoreCase(d,c);case"startswith":return a.jqx.string.startsWith(d,c);case"startswithignorecase":return a.jqx.string.startsWithIgnoreCase(d,c);case"endswith":return a.jqx.string.endsWith(d,c);case"endswithignorecase":return a.jqx.string.endsWithIgnoreCase(d,c)}},_sort:function(b){var h=[],d=[],f=[],e;for(var c=0;c<b.length;c++){var e=b[c];var g=e;if(e.label){g=e.label}else{if(this.displayMember){g=e[this.displayMember]}}if(g.toString().toLowerCase().indexOf(this.query.toString().toLowerCase())===0){h.push(e)}else{if(g.toString().indexOf(this.query)>=0){d.push(e)}else{if(g.toString().toLowerCase().indexOf(this.query.toString().toLowerCase())>=0){f.push(e)}}}}return h.concat(d,f)},_highlight:function(c){var d=this.query;d=d.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&");var b=new RegExp("("+d+")","ig");return c.replace(b,function(e,f){return"<b>"+f+"</b>"})},_render:function(b){var c=this;b=a(b).map(function(e,f){var g=f;if(f.value!=undefined){if(f.label!=undefined){e=a(c.item).attr({"data-name":f.label,"data-value":f.value})}else{e=a(c.item).attr({"data-name":f.value,"data-value":f.value})}}else{if(f.label!=undefined){e=a(c.item).attr({"data-value":f.label,"data-name":f.label})}else{if(c.displayMember!=undefined&&c.displayMember!=""){e=a(c.item).attr({"data-name":f[c.displayMember],"data-value":f[c.valueMember]})}else{e=a(c.item).attr({"data-value":f,"data-name":f})}}}if(f.label){g=f.label}else{if(c.displayMember){g=f[c.displayMember]}}e.find("a").html(c.highlight(g));var d="";if(c.rtl){d=" "+c.toThemeProperty("jqx-rtl")}e[0].className=c.toThemeProperty("jqx-item")+" "+c.toThemeProperty("jqx-menu-item")+" "+c.toThemeProperty("jqx-rc-all")+d;return e[0]});b.first().addClass(this.toThemeProperty("jqx-fill-state-pressed"));this.$popup.html(b);if(!this.dropDownWidth){this.$popup.width(this.host.outerWidth()-6)}else{this.$popup.width(this.dropDownWidth)}return this},next:function(c){var d=this.$popup.find(".jqx-fill-state-pressed").removeClass(this.toThemeProperty("jqx-fill-state-pressed")),b=d.next();if(!b.length){b=a(this.$popup.find("li")[0])}b.addClass(this.toThemeProperty("jqx-fill-state-pressed"))},prev:function(c){var d=this.$popup.find(".jqx-fill-state-pressed").removeClass(this.toThemeProperty("jqx-fill-state-pressed")),b=d.prev();if(!b.length){b=this.$popup.find("li").last()}b.addClass(this.toThemeProperty("jqx-fill-state-pressed"))},addHandlers:function(){this.addHandler(this.host,"focus",a.proxy(this.onFocus,this));this.addHandler(this.host,"blur",a.proxy(this.onBlur,this));this.addHandler(this.host,"keypress",a.proxy(this.keypress,this));this.addHandler(this.host,"keyup",a.proxy(this.keyup,this));this.addHandler(this.host,"keydown",a.proxy(this.keydown,this));this.addHandler(this.$popup,"mousedown",a.proxy(this.click,this));if(this.host.on){this.$popup.on("mouseenter","li",a.proxy(this.mouseenter,this))}else{this.$popup.bind("mouseenter","li",a.proxy(this.mouseenter,this))}},removeHandlers:function(){this.removeHandler(this.host,"focus",a.proxy(this.onFocus,this));this.removeHandler(this.host,"blur",a.proxy(this.onBlur,this));this.removeHandler(this.host,"keypress",a.proxy(this.keypress,this));this.removeHandler(this.host,"keyup",a.proxy(this.keyup,this));this.removeHandler(this.host,"keydown",a.proxy(this.keydown,this));this.removeHandler(this.$popup,"mousedown",a.proxy(this.click,this));if(this.host.off){this.$popup.off("mouseenter","li",a.proxy(this.mouseenter,this))}else{this.$popup.unbind("mouseenter","li",a.proxy(this.mouseenter,this))}},move:function(b){if(!this.opened){return}switch(b.keyCode){case 9:case 13:case 27:b.preventDefault();break;case 38:if(!b.shiftKey){b.preventDefault();this.prev()}break;case 40:if(!b.shiftKey){b.preventDefault();this.next()}break}b.stopPropagation()},keydown:function(b){this.suppressKeyPressRepeat=~a.inArray(b.keyCode,[40,38,9,13,27]);this.move(b)},keypress:function(b){if(this.suppressKeyPressRepeat){return}this.move(b)},keyup:function(c){switch(c.keyCode){case 40:case 38:case 16:case 17:case 18:break;case 9:case 13:if(!this.opened){return}this.select(c,this);break;case 27:if(!this.opened){return}this.close();break;default:var b=this;if(this.timer){clearTimeout(this.timer)}this.timer=setTimeout(function(){b.suggest()},300)}c.stopPropagation();c.preventDefault()},clear:function(){this.host.val("")},onBlur:function(c){var b=this;setTimeout(function(){b.close()},150);b.host.removeClass(b.toThemeProperty("jqx-fill-state-focus"));this.value=this.host.val()},onFocus:function(c){var b=this;b.host.addClass(b.toThemeProperty("jqx-fill-state-focus"))},click:function(b){b.stopPropagation();b.preventDefault();this.select(b,this)},mouseenter:function(b){this.$popup.find(".jqx-fill-state-pressed").removeClass(this.toThemeProperty("jqx-fill-state-pressed"));a(b.currentTarget).addClass(this.toThemeProperty("jqx-fill-state-pressed"))}})})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxFormattedInput","",{});a.extend(a.jqx._jqxFormattedInput.prototype,{defineInstance:function(){var b={width:null,height:null,radix:10,decimalNotation:"default",value:"0",min:"-9223372036854775808",max:"9223372036854775807",upperCase:false,spinButtons:true,spinButtonsStep:1,dropDown:false,dropDownWidth:null,popupZIndex:20000,placeHolder:"",roundedCorners:true,disabled:false,rtl:false,_opened:false,$popup:a("<ul></ul>"),item:'<li><a href="#"></a></li>',events:["open","close","change","radixChange"]};a.extend(true,this,b)},createInstance:function(){var b=this;b._Long();b._regex={2:new RegExp(/([0-1])/),8:new RegExp(/([0-7])/),10:new RegExp(/([0-9\-])/),16:new RegExp(/([0-9]|[a-f])/i)};b.render()},render:function(){var e=this;e._radixNumber=e._getRadix(e.radix);if(e.value!==""){e._number=new e.longObj.math.Long.fromString((e.value).toString(),e._radixNumber)}if(e.baseHost){e.host=e.baseHost;e.element=e.host[0]}if(this.element.nodeName.toLowerCase()==="div"){this.baseHost=this.element;var b=this.host.find("input");var d=false;a.each(b,function(){var f=this.type;if(f===null||f==="text"||f==="textarea"){b=a(this);d=true;return false}});if(!d){throw new Error("jqxFormattedInput: Missing Text Input in the Input Group")}if(b.length>0){this.baseHost=a(this.element);this.host=b;this.element=b[0];this.baseHost.addClass(this.toThemeProperty("jqx-widget"));this.baseHost.addClass(this.toThemeProperty("jqx-rc-all"));this.baseHost.addClass(this.toThemeProperty("jqx-input-group"));var c=this.baseHost.children();a.each(c,function(f){a(this).addClass(e.toThemeProperty("jqx-input-group-addon"));a(this).removeClass(e.toThemeProperty("jqx-rc-all"));if(f===0){a(this).addClass(e.toThemeProperty("jqx-rc-l"))}if(f===c.length-1){a(this).addClass(e.toThemeProperty("jqx-rc-r"))}if(this!==e.element){a(this).addClass(e.toThemeProperty("jqx-fill-state-normal"))}if(this.nodeName.toLowerCase()==="div"){e.appendSpinButtons=function(i){e._spinButtonsContainer=a(i);e._spinButtonsContainer.addClass(e.toThemeProperty("jqx-formatted-input-spin-buttons-container"));var h='<div class="'+e.toThemeProperty("jqx-fill-state-normal jqx-formatted-input-spin-button")+'"><div class="'+e.toThemeProperty("jqx-input-icon")+'"></div></div>';e._upbutton=a(h);e._spinButtonsContainer.append(e._upbutton);e._downbutton=a(h);e._spinButtonsContainer.append(e._downbutton);e._upArrow=e._upbutton.find("div");e._upArrow.addClass(e.toThemeProperty("jqx-icon-arrow-up"));e._downArrow=e._downbutton.find("div");e._downArrow.addClass(e.toThemeProperty("jqx-icon-arrow-down"));e._spinButtonsStepLong=new e.longObj.math.Long.fromNumber(e.spinButtonsStep)};var g=function(h){e._addon=a(h);e._addon.addClass(e.toThemeProperty("jqx-formatted-input-addon"));if(!e._arrow){e._arrow=a('<div class="'+e.toThemeProperty("jqx-icon")+" "+e.toThemeProperty("jqx-icon-arrow-down")+'"></div>');e._arrow.appendTo(e._addon)}};if(e.rtl===false){if(!e._spinButtonsContainer&&e.spinButtons===true){e.appendSpinButtons(this)}else{if(!e._addon&&e.dropDown===true&&((f===2)||(f===1&&e.spinButtons===false))){g(this)}}}else{if(!e._addon&&e.dropDown===true){g(this);if(e.spinButtons===true){e._addon.addClass(e.toThemeProperty("jqx-formatted-input-addon-rtl"))}}else{if(!e._spinButtonsContainer&&e.spinButtons===true&&((f===1)||(f===0&&e.dropDown===false))){e.appendSpinButtons(this);e._spinButtonsContainer.addClass(e.toThemeProperty("jqx-formatted-input-spin-buttons-container-rtl"));if(e.dropDown===true){e._addon.addClass(e.toThemeProperty("jqx-formatted-input-addon-rtl"))}}}}}})}}e._inputAndAddon=e.host;if(e.baseHost){if(e._spinButtonsContainer){e._inputAndAddon=e._inputAndAddon.add(e._spinButtonsContainer)}if(e._addon){e._inputAndAddon=e._inputAndAddon.add(e._addon)}}e.removeHandlers();this.addHandlers();if(this.rtl){this.host.addClass(this.toThemeProperty("jqx-rtl"))}this.host.attr("role","textbox");a.jqx.aria(this,"aria-autocomplete","both");a.jqx.aria(this,"aria-disabled",this.disabled);a.jqx.aria(this,"aria-readonly",false);a.jqx.aria(this,"aria-multiline",false);a.jqx.aria(this,"aria-haspopup",true);if(e.value!==""&&e.value!==null){if(e.upperCase===true){e.host.addClass(e.toThemeProperty("jqx-formatted-input-upper-case"))}else{e.host.addClass(e.toThemeProperty("jqx-formatted-input-lower-case"))}if(e._radixNumber===10&&e.decimalNotation==="exponential"){e.element.value=e._getDecimalNotation("exponential")}else{e.element.value=e.value}}else{if(e._spinButtonsContainer){e._spinButtonsContainer.addClass(e.toThemeProperty("jqx-fill-state-disabled"))}if(e._addon){e._addon.addClass(e.toThemeProperty("jqx-fill-state-disabled"))}}if(e._radixNumber!==10&&e.min.toString()==="-9223372036854775808"){e._minLong=new e.longObj.math.Long.fromNumber(e.min)}else{e._setMinMax("min")}if(e._radixNumber!==10&&e.max.toString()==="9223372036854775807"){e._maxLong=new e.longObj.math.Long.fromNumber(e.max)}else{e._setMinMax("max")}},_refreshClasses:function(c){var b=c?"addClass":"removeClass";this.host[b](this.toThemeProperty("jqx-widget-content"));this.host[b](this.toThemeProperty("jqx-input"));this.host[b](this.toThemeProperty("jqx-formatted-input"));this.host[b](this.toThemeProperty("jqx-widget"));this.$popup[b](this.toThemeProperty("jqx-popup"));if(a.jqx.browser.msie){this.$popup[b](this.toThemeProperty("jqx-noshadow"))}this.$popup[b](this.toThemeProperty("jqx-input-popup"));this.$popup[b](this.toThemeProperty("jqx-menu"));this.$popup[b](this.toThemeProperty("jqx-menu-vertical"));this.$popup[b](this.toThemeProperty("jqx-menu-dropdown"));this.$popup[b](this.toThemeProperty("jqx-widget"));this.$popup[b](this.toThemeProperty("jqx-widget-content"));if(this.roundedCorners){this.host[b](this.toThemeProperty("jqx-rc-all"));this.$popup[b](this.toThemeProperty("jqx-rc-all"));if(this.baseHost){this.baseHost[b](this.toThemeProperty("jqx-rc-all"));if(this.rtl===false){this.host[b](this.toThemeProperty("jqx-rc-l"));if(this._addon){this._addon[b](this.toThemeProperty("jqx-rc-r"))}}else{this.host[b](this.toThemeProperty("jqx-rc-r"));if(this._addon){this._addon[b](this.toThemeProperty("jqx-rc-l"))}}}}else{this.host.removeClass(this.toThemeProperty("jqx-rc-all"));this.$popup.removeClass(this.toThemeProperty("jqx-rc-all"));if(this.baseHost){this.baseHost.removeClass(this.toThemeProperty("jqx-rc-all"));if(this.rtl===false){this.host.removeClass(this.toThemeProperty("jqx-rc-l"));if(this._addon){this._addon.removeClass(this.toThemeProperty("jqx-rc-r"))}}else{this.host.removeClass(this.toThemeProperty("jqx-rc-r"));if(this._addon){this._addon.removeClass(this.toThemeProperty("jqx-rc-l"))}}}}if(this.disabled){this.host[b](this.toThemeProperty("jqx-fill-state-disabled"));if(this.baseHost){if(this._spinButtonsContainer){this._spinButtonsContainer[b](this.toThemeProperty("jqx-fill-state-disabled"))}if(this._addon){this._addon[b](this.toThemeProperty("jqx-fill-state-disabled"))}}}else{this.host.removeClass(this.toThemeProperty("jqx-fill-state-disabled"));if(this.baseHost&&this.value!==""&&this.value!==null){if(this._spinButtonsContainer){this._spinButtonsContainer.removeClass(this.toThemeProperty("jqx-fill-state-disabled"))}if(this._addon){this._addon.removeClass(this.toThemeProperty("jqx-fill-state-disabled"))}}}},selectAll:function(){var b=this.host;setTimeout(function(){if("selectionStart" in b[0]){b[0].focus();b[0].setSelectionRange(0,b[0].value.length)}else{var c=b[0].createTextRange();c.collapse(true);c.moveEnd("character",b[0].value.length);c.moveStart("character",0);c.select()}},10)},selectLast:function(){var b=this.host;this.selectStart(b[0].value.length)},selectFirst:function(){this.selectStart(0)},selectStart:function(c){var b=this.host;setTimeout(function(){if("selectionStart" in b[0]){b[0].focus();b[0].setSelectionRange(c,c)}else{var d=b[0].createTextRange();d.collapse(true);d.moveEnd("character",c);d.moveStart("character",c);d.select()}},10)},focus:function(){try{this.host.focus();var c=this;setTimeout(function(){c.host.focus()},25)}catch(b){}},refresh:function(){var f=this;this._refreshClasses(false);this._refreshClasses(true);if(!this.baseHost){if(this.width){this.host.width(this.width)}if(this.height){this.host.height(this.height)}}else{if(this.width){this.baseHost.width(this.width)}if(this.height){this.baseHost.height(this.height);var e=0;var j=this.baseHost.height()-2;if(a.jqx.browser.msie&&a.jqx.browser.version<8){this.baseHost.css("display","inline-block")}a.each(this.baseHost.children(),function(){a(this).css("height","100%");if(a.jqx.browser.msie&&a.jqx.browser.version<8){a(this).css("height",j+"px")}if(this!==f.element){e+=a(this).outerWidth()}});var c=(typeof f.width==="string"&&f.width.charAt(f.width.length-1)==="%")?1:0;this.host.css("width",this.baseHost.width()-e-c+"px");if(a.jqx.browser.msie&&a.jqx.browser.version<9){if(f._spinButtonsContainer){if(f.rtl===false||f.rtl===true&&f._addon){f._spinButtonsContainer.css("border-left-width","0")}}if(f._addon){if(f.rtl===false){f._addon.css("border-left-width","0")}else{if(!f._spinButtonsContainer){f._addon.css("border-right-width","0")}}}var h=0;if(a.jqx.browser.version<8){var g=0;var d=parseInt(f.host.css("border-left-width"),10)+parseInt(f.host.css("border-right-width"),10);var i=parseInt(f.host.css("padding-left"),10)+parseInt(f.host.css("padding-right"),10);if(f._spinButtonsContainer){d+=parseInt(f._spinButtonsContainer.css("border-left-width"),10)+parseInt(f._spinButtonsContainer.css("border-right-width"),10);i+=parseInt(f._spinButtonsContainer.css("padding-left"),10)+parseInt(f._spinButtonsContainer.css("padding-right"),10);if(!f._addon){g=2}}if(f._addon){d+=parseInt(f._addon.css("border-left-width"),10)+parseInt(f._addon.css("border-right-width"),10);i+=parseInt(f._addon.css("padding-left"),10)+parseInt(f._addon.css("padding-right"),10);if(!f._spinButtonsContainer){g=2}}f.host.width(f.host.width()-(i+d)-g);h=6}f.host.height(f.baseHost.height()-(parseInt(f.host.css("border-top-width"),10)+parseInt(f.host.css("border-bottom-width"),10)+parseInt(f.host.css("padding-top"),10)+parseInt(f.host.css("padding-bottom"),10)+h));var b=f.host.height()+"px";f.host.css("min-height",b);f.host.css("line-height",b)}}}this.host.attr("disabled",this.disabled);if(!this.host.attr("placeholder")){this._refreshPlaceHolder()}},_refreshPlaceHolder:function(){if("placeholder" in this.element){this.host.attr("placeHolder",this.placeHolder)}else{var b=this;if(this.element.value===""){this.element.value=this.placeHolder;this.host.focus(function(){if(b.element.value===b.placeHolder){b.element.value=""}});this.host.blur(function(){if(b.element.value===""||b.element.value===b.placeHolder){b.element.value=b.placeHolder}})}}},destroy:function(){this.removeHandlers();if(this.baseHost){a.jqx.utilities.resize(this.baseHost,null,true);this.baseHost.remove()}else{a.jqx.utilities.resize(this.host,null,true);this.host.remove()}if(this.$popup){this.$popup.remove()}},propertyChangedHandler:function(b,d,g,f){if(d==="placeHolder"){b._refreshPlaceHolder();return}if(d==="disabled"){a.jqx.aria(b,"aria-disabled",b.disabled)}if(d==="value"&&g.toString().toUpperCase()!==f.toString().toUpperCase()){b.val(f);return}if(g!==f&&d==="radix"){b._changeRadix(f);return}if(g!==f&&d==="decimalNotation"&&b._radixNumber===10){if(f==="exponential"){b.element.value=b._getDecimalNotation("exponential")}else{b.element.value=b._number.toString(10)}}if(g!==f&&(d==="min"||d==="max")){b._setMinMax(d);b._validateValue(b.value,true);b.value=b.element.value;return}if(g!==f&&(d==="upperCase")&&b.element.value!==""){if(f===true){b.host.removeClass(b.toThemeProperty("jqx-formatted-input-lower-case"));b.host.addClass(b.toThemeProperty("jqx-formatted-input-upper-case"))}else{b.host.removeClass(b.toThemeProperty("jqx-formatted-input-upper-case"));b.host.addClass(b.toThemeProperty("jqx-formatted-input-lower-case"))}return}function c(i,j){var k=b.host.width();var h=i.outerWidth();if(j===false){b.host.width(k+h);i.hide();if(b.rtl===true){if(b.spinButtons===true){b._spinButtonsContainer.addClass(b.toThemeProperty("jqx-formatted-input-spin-buttons-container-rtl-border"))}if(b.dropDown===true){b._addon.removeClass(b.toThemeProperty("jqx-formatted-input-addon-rtl"))}}}else{b.host.width(k-h);i.show();if(b.rtl===true&&b.spinButtons===true&&b.dropDown===true){b._spinButtonsContainer.removeClass(b.toThemeProperty("jqx-formatted-input-spin-buttons-container-rtl-border"));b._addon.addClass(b.toThemeProperty("jqx-formatted-input-addon-rtl"))}}}function e(j,l){if(l===true){var k=a("<div></div>");if(b.baseHost){var h=b.baseHost.children("div");if((b.rtl===false&&j==="spinButtons")||(b.rtl===true&&j==="dropDown")){h.before(k)}else{h.after(k)}b.render();b.host.width(b.host.width()-k.outerWidth())}else{var n=b.element.id;b.host.removeAttr("id");b.host.wrap('<div id="'+n+'" style="display: inline-block;"></div>');var m=a("#"+n);if(b.rtl===false){m.append(k)}else{m.prepend(k)}var i=b.host.data();i.jqxFormattedInput.host=m;i.jqxFormattedInput.element=m[0];b.baseHost=m;b.baseHost.data(i);b.render();b.refresh()}}}if(d==="spinButtons"){if(g!==f){if(b._spinButtonsContainer){c(b._spinButtonsContainer,f)}else{e("spinButtons",f)}return}else{return}}if(g!==f&&d==="spinButtonsStep"){b._spinButtonsStepLong=new b.longObj.math.Long.fromNumber(f)}if(d==="dropDown"){if(g!==f){if(b._addon){c(b._addon,f)}else{e("dropDown",f)}return}else{return}}b.refresh()},select:function(d,e,b){var c=this;if(!b){b=c.$popup.find(".jqx-fill-state-pressed").attr("data-value")}c._changeRadix(parseInt(b,10));c._setMaxLength(true);c.close()},val:function(g){var f=this;if((g||g==="")&&!(typeof g==="object"&&a.isEmptyObject(g)===true)&&g!=="binary"&&g!=="octal"&&g!=="decimal"&&g!=="exponential"&&g!=="scientific"&&g!=="engineering"&&g!=="hexadecimal"){g=g.toString();if(g.toUpperCase()!==f.element.value.toString().toUpperCase()){var b=f.element.value;if(f.upperCase===true){g=g.toUpperCase()}var e=g.split("");for(var c=0;c<e.length;c++){if(!f._regex[""+f._radixNumber+""].test(e[c])){return}}var h=f._validateValue(g,true);f._raiseEvent("2",{value:h,oldValue:b,radix:f._radixNumber});f.value=h;return h}else{return g}}else{if(g&&!(typeof g==="object"&&a.isEmptyObject(g)===true)){if(g==="exponential"||g==="scientific"||g==="engineering"){return f._getDecimalNotation(g)}else{var d=f._getRadix(g);return f._number.toString(d)}}else{return f.element.value}}},_changeRadix:function(d){var f=this;var e=f._getRadix(d);var g=f._number.toString(e);var b=f.radix;var c=f.value;f.radix=d;f._radixNumber=e;f.element.value=g;f.value=g;this._raiseEvent("3",{radix:d,oldRadix:b,value:g,oldValue:c})},_raiseEvent:function(f,c){if(c===undefined){c={owner:null}}var d=this.events[f];c.owner=this;var e=new a.Event(d);e.owner=this;e.args=c;if(e.preventDefault){e.preventDefault()}var b;if(this.baseHost){b=this.baseHost.trigger(e)}else{b=this.host.trigger(e)}return b},open:function(){var f=this;if(f.value!==""&&f.value!==null){f._setPopupOptions();f._render(f._popupOptions);if(a.jqx.isHidden(this.host)){return}var c;if(f.baseHost){c=a.extend({},f.baseHost.coord(true),{height:f.baseHost[0].offsetHeight})}else{c=a.extend({},f.host.coord(true),{height:f.host[0].offsetHeight})}if(this.$popup.parent().length===0){var e=this.element.id+"_popup";this.$popup[0].id=e;a.jqx.aria(this,"aria-owns",e)}this.$popup.appendTo(a(document.body)).css({position:"absolute",zIndex:this.popupZIndex,top:c.top+c.height,left:c.left}).show();var b=0;var d=this.$popup.children();a.each(d,function(){b+=a(this).outerHeight(true)-1});this.$popup.height(b);this._opened=true;if(f.baseHost){f._addon.addClass(f.toThemeProperty("jqx-fill-state-pressed jqx-combobox-arrow-selected"));f._arrow.addClass(f.toThemeProperty("jqx-icon-arrow-down-selected"))}this._raiseEvent("0",{popup:this.$popup});a.jqx.aria(this,"aria-expanded",true);return this}},close:function(){var b=this;this.$popup.hide();this._opened=false;if(b.baseHost){b._addon.removeClass(b.toThemeProperty("jqx-fill-state-pressed jqx-combobox-arrow-selected"));b._arrow.removeClass(b.toThemeProperty("jqx-icon-arrow-down-selected"))}this._raiseEvent("1",{popup:this.$popup});a.jqx.aria(this,"aria-expanded",false);return this},_render:function(c){var e=this;c=a(c).map(function(h,j){var k=j;var f;switch(h){case 0:f=2;break;case 1:f=8;break;case 2:f=10;break;case 3:f=16;break}h=a(e.item).attr("data-value",f);h.find("a").html(k).attr("data-value",f);var g="";if(e.rtl){g=" "+e.toThemeProperty("jqx-rtl")+" "+e.toThemeProperty("jqx-formatted-input-item-rtl")}h[0].className=e.toThemeProperty("jqx-item")+" "+e.toThemeProperty("jqx-menu-item")+" "+e.toThemeProperty("jqx-formatted-input-item")+" "+e.toThemeProperty("jqx-rc-all")+g;return h[0]});var b;switch(e._radixNumber){case 2:b=0;break;case 8:b=1;break;case 10:b=2;break;case 16:b=3;break}c.eq(b).addClass(this.toThemeProperty("jqx-fill-state-pressed"));this.$popup.html(c);if(!this.dropDownWidth){if(e.baseHost){var d=(typeof e.width==="string"&&e.width.charAt(e.width.length-1)==="%")?1:0;this.$popup.width(this.baseHost.outerWidth()-6-d)}else{this.$popup.width(this.host.outerWidth()-6)}}else{this.$popup.width(this.dropDownWidth)}return this},next:function(){var c=this.$popup.find(".jqx-fill-state-pressed").removeClass(this.toThemeProperty("jqx-fill-state-pressed")),b=c.next();if(!b.length){b=a(this.$popup.find("li")[0])}b.addClass(this.toThemeProperty("jqx-fill-state-pressed"))},prev:function(){var c=this.$popup.find(".jqx-fill-state-pressed").removeClass(this.toThemeProperty("jqx-fill-state-pressed")),b=c.prev();if(!b.length){b=this.$popup.find("li").last()}b.addClass(this.toThemeProperty("jqx-fill-state-pressed"))},addHandlers:function(){var c=this;this.addHandler(this.host,"focus",a.proxy(this.onFocus,this));this.addHandler(this.host,"blur",a.proxy(this.onBlur,this));this.addHandler(this.host,"keypress",a.proxy(this.keypress,this));this.addHandler(this.host,"keyup",a.proxy(this.keyup,this));this.addHandler(this.host,"keydown",a.proxy(this.keydown,this));this.addHandler(this.$popup,"mousedown",a.proxy(this.click,this));if(this.host.on){this.$popup.on("mouseenter","li",a.proxy(this.mouseenter,this))}else{this.$popup.bind("mouseenter","li",a.proxy(this.mouseenter,this))}this.addHandler(this.host,"change",function(f){f.stopPropagation();f.preventDefault()});if(c.baseHost){var d=c.baseHost.attr("id");if(c._spinButtonsContainer){var b=c._upbutton.add(c._downbutton);c.addHandler(c._upbutton,"mousedown.jqxFormattedInputSpinButtonUp"+d,function(){if(!c.disabled&&c.value!==""&&c.value!==null){c._upbutton.addClass(c.toThemeProperty("jqx-fill-state-pressed"));c._incrementOrDecrement("add")}});c.addHandler(c._upbutton,"mouseup.jqxFormattedInputSpinButtonUp"+d,function(){if(!c.disabled&&c.value!==""&&c.value!==null){c._upbutton.removeClass(c.toThemeProperty("jqx-fill-state-pressed"))}});c.addHandler(c._downbutton,"mousedown.jqxFormattedInputSpinButtonDown"+d,function(){if(!c.disabled&&c.value!==""&&c.value!==null){c._downbutton.addClass(c.toThemeProperty("jqx-fill-state-pressed"));c._incrementOrDecrement("subtract")}});c.addHandler(c._downbutton,"mouseup.jqxFormattedInputSpinButtonDown"+d,function(){if(!c.disabled&&c.value!==""&&c.value!==null){c._downbutton.removeClass(c.toThemeProperty("jqx-fill-state-pressed"))}});c.addHandler(b,"mouseenter.jqxFormattedInputSpinButtons"+d,function(g){if(!c.disabled&&c.value!==""&&c.value!==null){var f=a(g.target);if(f.hasClass("jqx-icon-arrow-up")||f.children().hasClass("jqx-icon-arrow-up")){c._upbutton.addClass(c.toThemeProperty("jqx-fill-state-hover"));c._upArrow.addClass(c.toThemeProperty("jqx-icon-arrow-up-hover"))}else{c._downbutton.addClass(c.toThemeProperty("jqx-fill-state-hover"));c._downArrow.addClass(c.toThemeProperty("jqx-icon-arrow-down-hover"))}}});c.addHandler(b,"mouseleave.jqxFormattedInputSpinButtons"+d,function(g){if(!c.disabled&&c.value!==""&&c.value!==null){var f=a(g.target);if(f.hasClass("jqx-icon-arrow-up")||f.children().hasClass("jqx-icon-arrow-up")){c._upbutton.removeClass(c.toThemeProperty("jqx-fill-state-hover"));c._upArrow.removeClass(c.toThemeProperty("jqx-icon-arrow-up-hover"))}else{c._downbutton.removeClass(c.toThemeProperty("jqx-fill-state-hover"));c._downArrow.removeClass(c.toThemeProperty("jqx-icon-arrow-down-hover"))}}});c.addHandler(a("body"),"mouseup.jqxFormattedInputSpinButtons"+d,function(){c._upbutton.add(c._downbutton).removeClass(c.toThemeProperty("jqx-fill-state-pressed"))})}if(c._addon){c.addHandler(c._addon,"click.jqxFormattedInputAddon"+d,function(){if(!c.disabled){if(c._opened){c.close()}else{c.open()}}});c.addHandler(c._addon,"mouseenter.jqxFormattedInputAddon"+d,function(){if(!c.disabled&&c.value!==""&&c.value!==null){c._addon.addClass(c.toThemeProperty("jqx-fill-state-hover jqx-combobox-arrow-hover"));c._arrow.addClass(c.toThemeProperty("jqx-icon-arrow-down-hover"))}});c.addHandler(c._addon,"mouseleave.jqxFormattedInputAddon"+d,function(){if(!c.disabled&&c.value!==""&&c.value!==null){c._addon.removeClass(c.toThemeProperty("jqx-fill-state-hover jqx-combobox-arrow-hover"));c._arrow.removeClass(c.toThemeProperty("jqx-icon-arrow-down-hover"))}});c.addHandler(c._addon.add(c._arrow),"blur.jqxFormattedInputAddon"+d,function(){if(c._opened&&!c.disabled){c.close()}})}a.jqx.utilities.resize(c.baseHost,function(){if(c._opened===true){c.close()}var e=0;if(c._spinButtonsContainer){e+=c._spinButtonsContainer.outerWidth()}if(c._addon){e+=c._addon.outerWidth()}c.host.css("width",c.baseHost.width()-e-1)})}},removeHandlers:function(){var c=this;this.removeHandler(this.host,"focus",a.proxy(this.onFocus,this));this.removeHandler(this.host,"blur",a.proxy(this.onBlur,this));this.removeHandler(this.host,"keypress",a.proxy(this.keypress,this));this.removeHandler(this.host,"keyup",a.proxy(this.keyup,this));this.removeHandler(this.host,"keydown",a.proxy(this.keydown,this));this.removeHandler(this.$popup,"mousedown",a.proxy(this.click,this));if(this.host.off){this.$popup.off("mouseenter","li",a.proxy(this.mouseenter,this))}else{this.$popup.unbind("mouseenter","li",a.proxy(this.mouseenter,this))}if(c.baseHost){var d=c.baseHost.attr("id");if(c._spinButtonsContainer){var b=c._upbutton.add(c._downbutton);c.removeHandler(c._upbutton,"mousedown.jqxFormattedInputSpinButtonUp"+d);c.removeHandler(c._upbutton,"mouseup.jqxFormattedInputSpinButtonUp"+d);c.removeHandler(c._downbutton,"mousedown.jqxFormattedInputSpinButtonDown"+d);c.removeHandler(c._downbutton,"mouseup.jqxFormattedInputSpinButtonDown"+d);c.removeHandler(b,"mouseenter.jqxFormattedInputSpinButtons"+d);c.removeHandler(b,"mouseleave.jqxFormattedInputSpinButtons"+d);c.removeHandler(a("body"),"mouseup.jqxFormattedInputSpinButtons"+d)}if(c._addon){c.removeHandler(c._addon,"click.jqxFormattedInputAddon"+d);c.removeHandler(c._addon,"mouseenter.jqxFormattedInputAddon"+d);c.removeHandler(c._addon,"mouseleave.jqxFormattedInputAddon"+d);c.removeHandler(c._addon.add(c._arrow),"blur.jqxFormattedInputAddon"+d)}}},move:function(b){if(!this._opened){return}switch(b.keyCode){case 9:case 13:case 27:b.preventDefault();break;case 38:b.preventDefault();this.prev();break;case 40:b.preventDefault();this.next();break}b.stopPropagation()},keydown:function(k){var j=this;this.suppressKeyPressRepeat=~a.inArray(k.keyCode,[40,38,9,13,27]);this.move(k);var o=!k.charCode?k.which:k.charCode;var m=String.fromCharCode(o);if(k.altKey===true){if(o===40){if(j._addon){this.open()}return}else{if(o===38){if(j._addon){this.close()}return}}}if(k.ctrlKey===true&&o===67){return}var d=[8,9,13,37,38,39,40,46,88];var i=j._regex[""+j._radixNumber+""];if(d.indexOf(o)===-1&&(!i.test(m)&&!i.test(k.key)&&!i.test(k["char"]))){k.preventDefault();return false}else{var l=j.host[0].selectionStart;var g=j.host[0].selectionEnd-l;var f=this._getCaretPosition(this.host[0]);var b=this.element.value;var c=b.split("");if(o===8){if(g>0){c.splice(l,g)}else{c.splice(f-1,1)}}else{if(o===46){if(g>0){c.splice(l,g)}else{c.splice(f,1)}}else{if(o===88){if(k.ctrlKey===true){if(g>0){c.splice(l,g)}}else{k.preventDefault()}}else{if(o===189){if(c[0]==="-"){c.splice(0,1);j._minus=false}else{c.splice(0,0,"-");j._minus=true}k.preventDefault()}else{var h=d.indexOf(o)===-1?m:"";if(g>0){c.splice(l,g);c.splice(l,0,h)}else{c.splice(f,0,h)}}}}}c=c.join("");if(c!==b){var n=j._validateValue(c,false);if(n===false){j._inputAndAddon.addClass(j.toThemeProperty("jqx-input-invalid"))}else{j._inputAndAddon.removeClass(j.toThemeProperty("jqx-input-invalid"))}}}},keypress:function(c){var b=this;if(b.suppressKeyPressRepeat){return}b.move(c)},keyup:function(c){var b=this;switch(c.keyCode){case 40:case 38:case 16:case 17:case 18:break;case 9:case 13:if(this._opened){this.select(c,this)}else{b._change()}break;case 27:if(!this._opened){return}this.close();break;case 189:if(b._radixNumber===10){if(b._minus===true){b.element.value="-"+b.element.value}else{b.element.value=b.element.value.slice(1)}}break}c.stopPropagation();c.preventDefault();if(b.element.value!==""){if(b.upperCase){b.host.addClass(b.toThemeProperty("jqx-formatted-input-upper-case"))}else{b.host.addClass(b.toThemeProperty("jqx-formatted-input-lower-case"))}if(b._spinButtonsContainer){b._spinButtonsContainer.removeClass(b.toThemeProperty("jqx-fill-state-disabled"))}if(b._addon){b._addon.removeClass(b.toThemeProperty("jqx-fill-state-disabled"))}}else{b.host.removeClass(b.toThemeProperty("jqx-formatted-input-upper-case jqx-formatted-input-lower-case"));if(b._spinButtonsContainer){b._spinButtonsContainer.addClass(b.toThemeProperty("jqx-fill-state-disabled"))}if(b._addon){b._addon.addClass(b.toThemeProperty("jqx-fill-state-disabled"))}}},_getCaretPosition:function(b){var d=0;if(document.selection){b.focus();var c=document.selection.createRange();c.moveStart("character",-b.value.length);d=c.text.length}else{if(b.selectionStart||b.selectionStart==="0"){d=b.selectionStart}}return(d)},onBlur:function(){var b=this;if(b._opened){b.close()}b._setMaxLength();b._inputAndAddon.removeClass(b.toThemeProperty("jqx-fill-state-focus"));b._change();if(b._radixNumber===10&&b.decimalNotation==="exponential"){b.element.value=b._getDecimalNotation("exponential")}b._refreshPlaceHolder()},onFocus:function(){var b=this;b._setMaxLength(true);b._inputAndAddon.addClass(b.toThemeProperty("jqx-fill-state-focus"));if(b._radixNumber===10&&b.decimalNotation==="exponential"){b.element.value=b._number.toString(10)}},click:function(c){c.stopPropagation();c.preventDefault();var b=a(c.target).attr("data-value");this.select(c,this,b)},mouseenter:function(b){this.$popup.find(".jqx-fill-state-pressed").removeClass(this.toThemeProperty("jqx-fill-state-pressed"));a(b.currentTarget).addClass(this.toThemeProperty("jqx-fill-state-pressed"))},_change:function(){var c=this;var b=c.value;var d=c._validateValue(c.element.value,true);c._inputAndAddon.removeClass(c.toThemeProperty("jqx-input-invalid"));if(d.toUpperCase()!==b.toString().toUpperCase()){c._raiseEvent("2",{value:d,oldValue:b,radix:c._radixNumber});c.value=d}},_getRadix:function(b){switch(b){case 10:case"decimal":return 10;case 2:case"binary":return 2;case 8:case"octal":return 8;case 16:case"hexadecimal":return 16}},_setPopupOptions:function(){var b=this;b._popupOptions=new Array();b._popupOptions.push(b._number.toString(2)+" <em>(BIN)</em>");b._popupOptions.push(b._number.toString(8)+" <em>(OCT)</em>");b._popupOptions.push(b._number.toString(10)+" <em>(DEC)</em>");b._popupOptions.push(b._number.toString(16)+" <em>(HEX)</em>")},_validateValue:function(e,g){var d=this;if(e!==""){var f=new d.longObj.math.Long.fromString((e).toString(),d._radixNumber);if(f.lessThan(d._minLong)){if(g){d._number=d._minLong;var c=d._minLong.toString(d._radixNumber);if(d._radixNumber===16&&d.upperCase===true){c=c.toUpperCase()}d.element.value=c;return c}else{return false}}else{if(f.greaterThan(d._maxLong)){if(g){d._number=d._maxLong;var b=d._maxLong.toString(d._radixNumber);if(d._radixNumber===16&&d.upperCase===true){b=b.toUpperCase()}d.element.value=b;return b}else{return false}}else{if(g){d._number=f;d.element.value=e;return e}else{return true}}}}else{if(g){d.element.value="";return e}else{return true}}},_getNegativeDecimal:function(l,h){var o=l;if(h===8){var n=new Array();for(var f=0;f<11;f++){var b=parseInt(l.charAt(f),8).toString(2);while(b.length!==3){b="0"+b}n.push(b)}o=n.join("");if(o.charAt(0)==="0"){o=o.slice(1)}}else{if(h===16){var p=new Array();for(var e=0;e<8;e++){var m=parseInt(l.charAt(e),16).toString(2);while(m.length!==4){m="0"+m}p.push(m)}o=p.join("")}}var d="";for(var c=0;c<o.length;c++){var g=o.charAt(c)==="1"?"0":"1";d+=g}d=(parseInt(d,2)+1)*-1;return d},_setMaxLength:function(c){var d=this;var b;if(c===true){switch(d._radixNumber){case 2:b=64;break;case 8:b=22;break;case 10:b=20;break;case 16:b=16;break}}else{b=524288}d.host.attr("maxlength",b)},_setMinMax:function(b){var c=this;c["_"+b+"Long"]=new c.longObj.math.Long.fromString((c[b]).toString(),c._radixNumber)},_getDecimalNotation:function(c){var e=this;var f=e._number.toString(10);function h(k){if(k==="0"){return parseInt(k).toExponential()}var j;if(k.charAt(0)==="-"){j="-";k=k.slice(1,k.length)}else{j=""}var l=k.length-1;while(k.charAt(k.length-1)==="0"){k=k.slice(0,k.length-1)}var i=k.slice(1,k.length);if(i!==""){i="."+i}return j+""+k.charAt(0)+i+"e+"+l}function d(l){var k=l.indexOf("e");var j=l.slice(k+1);var i=l.slice(0,k+1);i=i.replace("e","×10");i+=e._toSuperScript(j);i=i.replace("+","");return i}function b(o){var n=o.indexOf("e");var m=o.slice(n+1);var k=o.slice(0,n);var l=parseInt(m,10)%3;k=k*Math.pow(10,l);var j=o.slice(0,n).length-l-2;if(j>=0){k=k.toFixed(j)}var i=k+"×10"+e._toSuperScript((parseInt(m,10)-l).toString());return i}var g=h(f);if(c==="scientific"){return d(g)}else{if(c==="engineering"){return b(g)}else{return g}}},_toSuperScript:function(h,g){var f="-0123456789";var d="⁻⁰¹²³⁴⁵⁶⁷⁸⁹";var c="";for(var e=0;e<h.length;e++){if(g===true){var b=d.indexOf(h.charAt(e));c+=(b!==-1?f[b]:h[e])}else{var j=f.indexOf(h.charAt(e));c+=(j!==-1?d[j]:h[e])}}return c},_incrementOrDecrement:function(c){var b=this;if(b._number.toString(b._radixNumber)!==b.element.value){b._number=new b.longObj.math.Long.fromString(b.element.value,b._radixNumber)}b._number=b._number[c](b._spinButtonsStepLong);b.element.value=b._number.toString(b._radixNumber);b._change()},_negativeBinary:function(u,r){var s="";u=u.slice(1,u.length);while(u.length<64){u="0"+u}for(var o=0;o<u.length;o++){var t=u.charAt(o)==="1"?"0":"1";s+=t}var d=true;var g="";for(var n=s.length-1;n>=0;n--){var q=s.charAt(n);var b;if(q==="0"){if(d===true){b="1";d=false}else{b="0"}}else{if(d===true){b="0"}else{b="1"}}g=b+""+g}switch(r){case 2:return g;case 8:g="00"+g;var f="";for(var m=22;m>=1;m--){var p=g[m*3-3]+""+g[m*3-2]+""+g[m*3-1];f=parseInt(p,2).toString(8)+""+f}return f;case 16:var e="";for(var h=16;h>=1;h--){var c=g[h*4-4]+""+g[h*4-3]+""+g[h*4-2]+""+g[h*4-1];e=parseInt(c,2).toString(16)+""+e}return e}},_Long:function(){var c=this;c.longObj=new Object();var b=c.longObj;b.math=new Object();b.math.Long=new Object();b.math.Long=function(d,e){this.lowBits=d|0;this.highBits=e|0};b.math.Long.IntCache={};b.math.Long.fromInt=function(d){if(-128<=d&&d<128){var f=b.math.Long.IntCache[d];if(f){return f}}var e=new b.math.Long(d|0,d<0?-1:0);if(-128<=d&&d<128){b.math.Long.IntCache[d]=e}return e};b.math.Long.fromNumber=function(d){if(isNaN(d)||!isFinite(d)){return b.math.Long.ZERO}else{if(d<=-b.math.Long.TWO_PWR_63_DBL_){return b.math.Long.MIN_VALUE}else{if(d+1>=b.math.Long.TWO_PWR_63_DBL_){return b.math.Long.MAX_VALUE}else{if(d<0){return b.math.Long.fromNumber(-d).negate()}else{return new b.math.Long((d%b.math.Long.TWO_PWR_32_DBL_)|0,(d/b.math.Long.TWO_PWR_32_DBL_)|0)}}}}};b.math.Long.fromBits=function(d,e){return new b.math.Long(d,e)};b.math.Long.fromString=function(f,j){if(f.length===0){throw new Error("number format error: empty string")}var g=j||10;if(g<2||36<g){throw new Error("radix out of range: "+g)}if(f.charAt(0)==="-"){return b.math.Long.fromString(f.substring(1),g).negate()}else{if(f.indexOf("-")>=0){throw new Error('number format error: interior "-" character: '+f)}}var k=b.math.Long.fromNumber(Math.pow(g,8));var m=b.math.Long.ZERO;for(var e=0;e<f.length;e+=8){var l=Math.min(8,f.length-e);var h=parseInt(f.substring(e,e+l),g);if(l<8){var d=b.math.Long.fromNumber(Math.pow(g,l));m=m.multiply(d).add(b.math.Long.fromNumber(h))}else{m=m.multiply(k);m=m.add(b.math.Long.fromNumber(h))}}return m};b.math.Long.TWO_PWR_16_DBL_=1<<16;b.math.Long.TWO_PWR_24_DBL_=1<<24;b.math.Long.TWO_PWR_32_DBL_=b.math.Long.TWO_PWR_16_DBL_*b.math.Long.TWO_PWR_16_DBL_;b.math.Long.TWO_PWR_31_DBL_=b.math.Long.TWO_PWR_32_DBL_/2;b.math.Long.TWO_PWR_48_DBL_=b.math.Long.TWO_PWR_32_DBL_*b.math.Long.TWO_PWR_16_DBL_;b.math.Long.TWO_PWR_64_DBL_=b.math.Long.TWO_PWR_32_DBL_*b.math.Long.TWO_PWR_32_DBL_;b.math.Long.TWO_PWR_63_DBL_=b.math.Long.TWO_PWR_64_DBL_/2;b.math.Long.ZERO=b.math.Long.fromInt(0);b.math.Long.ONE=b.math.Long.fromInt(1);b.math.Long.NEG_ONE=b.math.Long.fromInt(-1);b.math.Long.MAX_VALUE=b.math.Long.fromBits(4294967295|0,2147483647|0);b.math.Long.MIN_VALUE=b.math.Long.fromBits(0,2147483648|0);b.math.Long.TWO_PWR_24_=b.math.Long.fromInt(1<<24);b.math.Long.prototype.toInt=function(){return this.lowBits};b.math.Long.prototype.toNumber=function(){return this.highBits*b.math.Long.TWO_PWR_32_DBL_+this.getLowBitsUnsigned()};b.math.Long.prototype.toString=function(j){var h=j||10;if(h<2||36<h){throw new Error("radix out of range: "+h)}if(this.isZero()){return"0"}var k,m;if(this.isNegative()){if(this.equals(b.math.Long.MIN_VALUE)){var f=b.math.Long.fromNumber(h);var d=this.div(f);k=d.multiply(f).subtract(this);return d.toString(h)+k.toInt().toString(h)}else{switch(h){case 2:case 8:case 16:m="-"+this.negate().toString(2);return c._negativeBinary(m,h);default:m="-"+this.negate().toString(h);return m}}}var l=b.math.Long.fromNumber(Math.pow(h,6));k=this;m="";while(true){var i=k.div(l);var g=k.subtract(i.multiply(l)).toInt();var e=g.toString(h);k=i;if(k.isZero()){return e+m}else{while(e.length<6){e="0"+e}m=""+e+m}}};b.math.Long.prototype.getHighBits=function(){return this.highBits};b.math.Long.prototype.getLowBits=function(){return this.lowBits};b.math.Long.prototype.getLowBitsUnsigned=function(){return(this.lowBits>=0)?this.lowBits:b.math.Long.TWO_PWR_32_DBL_+this.lowBits};b.math.Long.prototype.getNumBitsAbs=function(){if(this.isNegative()){if(this.equals(b.math.Long.MIN_VALUE)){return 64}else{return this.negate().getNumBitsAbs()}}else{var e=this.highBits!==0?this.highBits:this.lowBits;for(var d=31;d>0;d--){if((e&(1<<d))!==0){break}}return this.highBits!==0?d+33:d+1}};b.math.Long.prototype.isZero=function(){return this.highBits===0&&this.lowBits===0};b.math.Long.prototype.isNegative=function(){return this.highBits<0};b.math.Long.prototype.isOdd=function(){return(this.lowBits&1)===1};b.math.Long.prototype.equals=function(d){return(this.highBits===d.highBits)&&(this.lowBits===d.lowBits)};b.math.Long.prototype.notEquals=function(d){return(this.highBits!==d.highBits)||(this.lowBits!==d.lowBits)};b.math.Long.prototype.lessThan=function(d){return this.compare(d)<0};b.math.Long.prototype.lessThanOrEqual=function(d){return this.compare(d)<=0};b.math.Long.prototype.greaterThan=function(d){return this.compare(d)>0};b.math.Long.prototype.greaterThanOrEqual=function(d){return this.compare(d)>=0};b.math.Long.prototype.compare=function(e){if(this.equals(e)){return 0}var d=this.isNegative();var f=e.isNegative();if(d&&!f){return -1}if(!d&&f){return 1}if(this.subtract(e).isNegative()){return -1}else{return 1}};b.math.Long.prototype.negate=function(){if(this.equals(b.math.Long.MIN_VALUE)){return b.math.Long.MIN_VALUE}else{return this.not().add(b.math.Long.ONE)}};b.math.Long.prototype.add=function(k){var i=this.highBits>>>16;var e=this.highBits&65535;var l=this.lowBits>>>16;var f=this.lowBits&65535;var n=k.highBits>>>16;var g=k.highBits&65535;var o=k.lowBits>>>16;var h=k.lowBits&65535;var p=0,j=0,d=0,m=0;m+=f+h;d+=m>>>16;m&=65535;d+=l+o;j+=d>>>16;d&=65535;j+=e+g;p+=j>>>16;j&=65535;p+=i+n;p&=65535;return b.math.Long.fromBits((d<<16)|m,(p<<16)|j)};b.math.Long.prototype.subtract=function(d){return this.add(d.negate())};b.math.Long.prototype.multiply=function(k){if(this.isZero()){return b.math.Long.ZERO}else{if(k.isZero()){return b.math.Long.ZERO}}if(this.equals(b.math.Long.MIN_VALUE)){return k.isOdd()?b.math.Long.MIN_VALUE:b.math.Long.ZERO}else{if(k.equals(b.math.Long.MIN_VALUE)){return this.isOdd()?b.math.Long.MIN_VALUE:b.math.Long.ZERO}}if(this.isNegative()){if(k.isNegative()){return this.negate().multiply(k.negate())}else{return this.negate().multiply(k).negate()}}else{if(k.isNegative()){return this.multiply(k.negate()).negate()}}if(this.lessThan(b.math.Long.TWO_PWR_24_)&&k.lessThan(b.math.Long.TWO_PWR_24_)){return b.math.Long.fromNumber(this.toNumber()*k.toNumber())}var i=this.highBits>>>16;var e=this.highBits&65535;var l=this.lowBits>>>16;var f=this.lowBits&65535;var n=k.highBits>>>16;var g=k.highBits&65535;var o=k.lowBits>>>16;var h=k.lowBits&65535;var p=0,j=0,d=0,m=0;m+=f*h;d+=m>>>16;m&=65535;d+=l*h;j+=d>>>16;d&=65535;d+=f*o;j+=d>>>16;d&=65535;j+=e*h;p+=j>>>16;j&=65535;j+=l*o;p+=j>>>16;j&=65535;j+=f*g;p+=j>>>16;j&=65535;p+=i*h+e*o+l*g+f*n;p&=65535;return b.math.Long.fromBits((d<<16)|m,(p<<16)|j)};b.math.Long.prototype.div=function(f){if(f.isZero()){throw new Error("division by zero")}else{if(this.isZero()){return b.math.Long.ZERO}}var i,k;if(this.equals(b.math.Long.MIN_VALUE)){if(f.equals(b.math.Long.ONE)||f.equals(b.math.Long.NEG_ONE)){return b.math.Long.MIN_VALUE}else{if(f.equals(b.math.Long.MIN_VALUE)){return b.math.Long.ONE}else{var d=this.shiftRight(1);i=d.div(f).shiftLeft(1);if(i.equals(b.math.Long.ZERO)){return f.isNegative()?b.math.Long.ONE:b.math.Long.NEG_ONE}else{k=this.subtract(f.multiply(i));var m=i.add(k.div(f));return m}}}}else{if(f.equals(b.math.Long.MIN_VALUE)){return b.math.Long.ZERO}}if(this.isNegative()){if(f.isNegative()){return this.negate().div(f.negate())}else{return this.negate().div(f).negate()}}else{if(f.isNegative()){return this.div(f.negate()).negate()}}var g=b.math.Long.ZERO;k=this;while(k.greaterThanOrEqual(f)){i=Math.max(1,Math.floor(k.toNumber()/f.toNumber()));var l=Math.ceil(Math.log(i)/Math.LN2);var j=(l<=48)?1:Math.pow(2,l-48);var e=b.math.Long.fromNumber(i);var h=e.multiply(f);while(h.isNegative()||h.greaterThan(k)){i-=j;e=b.math.Long.fromNumber(i);h=e.multiply(f)}if(e.isZero()){e=b.math.Long.ONE}g=g.add(e);k=k.subtract(h)}return g};b.math.Long.prototype.modulo=function(d){return this.subtract(this.div(d).multiply(d))};b.math.Long.prototype.not=function(){return b.math.Long.fromBits(~this.lowBits,~this.highBits)};b.math.Long.prototype.and=function(d){return b.math.Long.fromBits(this.lowBits&d.lowBits,this.highBits&d.highBits)};b.math.Long.prototype.or=function(d){return b.math.Long.fromBits(this.lowBits|d.lowBits,this.highBits|d.highBits)};b.math.Long.prototype.xor=function(d){return b.math.Long.fromBits(this.lowBits^d.lowBits,this.highBits^d.highBits)};b.math.Long.prototype.shiftLeft=function(f){f&=63;if(f===0){return this}else{var d=this.lowBits;if(f<32){var e=this.highBits;return b.math.Long.fromBits(d<<f,(e<<f)|(d>>>(32-f)))}else{return b.math.Long.fromBits(0,d<<(f-32))}}};b.math.Long.prototype.shiftRight=function(f){f&=63;if(f===0){return this}else{var e=this.highBits;if(f<32){var d=this.lowBits;return b.math.Long.fromBits((d>>>f)|(e<<(32-f)),e>>f)}else{return b.math.Long.fromBits(e>>(f-32),e>=0?0:-1)}}};b.math.Long.prototype.shiftRightUnsigned=function(f){f&=63;if(f===0){return this}else{var e=this.highBits;if(f<32){var d=this.lowBits;return b.math.Long.fromBits((d>>>f)|(e<<(32-f)),e>>>f)}else{if(f===32){return b.math.Long.fromBits(e,0)}else{return b.math.Long.fromBits(e>>>(f-32),0)}}}}}})})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxFileUpload","",{});a.extend(a.jqx._jqxFileUpload.prototype,{defineInstance:function(){var b={width:null,height:"auto",uploadUrl:"",fileInputName:"",autoUpload:false,multipleFilesUpload:true,accept:null,browseTemplate:"",uploadTemplate:"",cancelTemplate:"",localization:null,renderFiles:null,disabled:false,rtl:false,events:["select","remove","uploadStart","uploadEnd"]};a.extend(true,this,b)},createInstance:function(){var b=this;if(b.host.jqxButton===undefined){throw new Error("jqxFileUpload: Missing reference to jqxbuttons.js")}if(a.jqx.browser.msie){if(a.jqx.browser.version<10){b._ieOldWebkit=true;if(a.jqx.browser.version<8){b._ie7=true}}}else{if(a.jqx.browser.webkit){b._ieOldWebkit=true}}b._fluidWidth=typeof b.width==="string"&&b.width.charAt(b.width.length-1)==="%";b._fluidHeight=typeof b.height==="string"&&b.height.charAt(b.height.length-1)==="%";b._render(true)},_render:function(b){var c=this;c._setSize();c._addClasses();if(b===true){c._appendElements()}else{c._removeHandlers()}c._addHandlers();if(c._ie7){c._borderAndPadding("width",c.host);if(c.height!=="auto"){c._borderAndPadding("height",c.host)}}a.jqx.utilities.resize(c.host,null,true);a.jqx.utilities.resize(c.host,function(){if(c._fluidWidth){if(c._ie7){c.host.css("width",c.width);c._borderAndPadding("width",c.host)}for(var f=0;f<c._fileRows.length;f++){var d=c._fileRows[f];var h=d.fileRow;if(c._ie7){h.css("width","100%");c._borderAndPadding("width",h)}if(!c.renderFiles){c._setMaxWidth(d)}}if(c.rtl&&c._ieOldWebkit){for(var e=0;e<c._forms.length;e++){var g=c._browseButton.position();c._forms[e].form.css({left:g.left,top:g.top})}}}if(c._ie7&&c._fluidHeight){c.host.css("height",c.height);c._borderAndPadding("height",c.host)}})},render:function(){this._render(false)},refresh:function(b){if(b!==true){this._render(false)}},destroy:function(){var b=this;b.cancelAll();b._removeHandlers(true);b.host.remove()},browse:function(){if(a.jqx.browser.msie&&a.jqx.browser.version<10){return}var b=this;if(b.multipleFilesUpload===true||(b.multipleFilesUpload===false&&b._fileRows.length===0)){b._forms[b._forms.length-1].fileInput.click()}},_uploadFile:function(b){var c=this;if(c._uploadQueue.length===0){c._uploadQueue.push(b)}if(!c.renderFiles){b.uploadFile.add(b.cancelFile).hide();b.loadingElement.show()}b.fileInput.attr("name",c.fileInputName);c._raiseEvent("2",{file:b.fileName});b.form[0].submit();c._fileObjectToRemove=b},uploadFile:function(b){var c=this;c._uploadFile(c._fileRows[b])},uploadAll:function(){var c=this;if(c._fileRows.length>0){for(var b=c._fileRows.length-1;b>=0;b--){c._uploadQueue.push(c._fileRows[b])}c._uploadFile(c._fileRows[0])}},cancelFile:function(b){var c=this;c._removeSingleFileRow(c._fileRows[b])},cancelAll:function(){var c=this;if(c._fileRows.length>0){for(var b=0;b<c._fileRows.length;b++){c._removeFileRow(c._fileRows[b])}setTimeout(function(){c._browseButton.css("margin-bottom",0)},400);c._fileRows.length=0;c._hideButtons(true)}},propertyChangedHandler:function(e,m,c,k){var b=e.element.id;if(m==="localization"){if(k.browseButton&&(!c||k.browseButton!==c.browseButton)){e._browseButton.text(k.browseButton);e._browseButton.jqxButton({width:"auto"})}if(k.uploadButton&&(!c||k.uploadButton!==c.uploadButton)){e._uploadButton.text(k.uploadButton);e._uploadButton.jqxButton({width:"auto"})}if(k.cancelButton&&(!c||k.cancelButton!==c.cancelButton)){e._cancelButton.text(k.cancelButton);e._cancelButton.jqxButton({width:"auto"})}if(!e.renderFiles){if(k.uploadFileTooltip&&(!c||k.uploadFileTooltip!==c.uploadFileTooltip)){a("#"+b+" .jqx-file-upload-file-upload").attr("title",k.uploadFileTooltip)}if(k.uploadFileTooltip&&(!c||k.cancelFileTooltip!==c.cancelFileTooltip)){a("#"+b+" .jqx-file-upload-file-cancel").attr("title",k.cancelFileTooltip)}}return}if(k!==c){switch(m){case"width":e.host.css("width",k);if(e._ie7){e._borderAndPadding("width",e.host);for(var d=0;d<e._fileRows.length;d++){var n=e._fileRows[d].fileRow;n.css("width","100%");e._borderAndPadding("width",n)}}e._fluidWidth=typeof k==="string"&&k.charAt(k.length-1)==="%";return;case"height":e.host.css("height",k);if(e._ie7){e._borderAndPadding("height",e.host)}e._fluidHeight=typeof k==="string"&&k.charAt(k-1)==="%";return;case"uploadUrl":for(var g=0;g<e._forms.length;g++){e._forms[g].form.attr("action",k)}return;case"accept":for(var f=0;f<e._forms.length;f++){e._forms[f].fileInput.attr("accept",k)}return;case"theme":a.jqx.utilities.setTheme(c,k,e.host);e._browseButton.jqxButton({theme:k});e._uploadButton.jqxButton({theme:k});e._cancelButton.jqxButton({theme:k});return;case"browseTemplate":e._browseButton.jqxButton({template:k});return;case"uploadTemplate":e._uploadButton.jqxButton({template:k});return;case"cancelTemplate":e._cancelButton.jqxButton({template:k});return;case"disabled":e._browseButton.jqxButton({disabled:k});e._uploadButton.jqxButton({disabled:k});e._cancelButton.jqxButton({disabled:k});if(k===true){e.host.addClass(e.toThemeProperty("jqx-fill-state-disabled"))}else{e.host.removeClass(e.toThemeProperty("jqx-fill-state-disabled"))}return;case"rtl":var h=function(l){var o=l?"addClass":"removeClass";e._browseButton[o](e.toThemeProperty("jqx-file-upload-button-browse-rtl"));e._cancelButton[o](e.toThemeProperty("jqx-file-upload-button-cancel-rtl"));e._uploadButton[o](e.toThemeProperty("jqx-file-upload-button-upload-rtl"));if(a.jqx.browser.msie&&a.jqx.browser.version>8){e._uploadButton[o](e.toThemeProperty("jqx-file-upload-button-upload-rtl-ie"))}for(var i=0;i<e._fileRows.length;i++){var j=e._fileRows[i];j.fileNameContainer[o](e.toThemeProperty("jqx-file-upload-file-name-rtl"));j.cancelFile[o](e.toThemeProperty("jqx-file-upload-file-cancel-rtl"));j.uploadFile[o](e.toThemeProperty("jqx-file-upload-file-upload-rtl"));j.loadingElement[o](e.toThemeProperty("jqx-file-upload-loading-element-rtl"))}};h(k);return}}},_raiseEvent:function(f,c){if(c===undefined){c={owner:null}}var d=this.events[f];c.owner=this;var e=new a.Event(d);e.owner=this;e.args=c;if(e.preventDefault){e.preventDefault()}var b=this.host.trigger(e);return b},_setSize:function(){var b=this;b.host.css("width",b.width);b.host.css("height",b.height)},_borderAndPadding:function(d,c){var b;if(d==="width"){b=parseInt(c.css("border-left-width"),10)+parseInt(c.css("border-right-width"),10)+parseInt(c.css("padding-left"),10)+parseInt(c.css("padding-right"),10)}else{b=parseInt(c.css("border-top-width"),10)+parseInt(c.css("border-bottom-width"),10)+parseInt(c.css("padding-top"),10)+parseInt(c.css("padding-bottom"),10)}c.css(d,c[d]()-b)},_addClasses:function(){var b=this;b.host.addClass(b.toThemeProperty("jqx-widget jqx-widget-content jqx-rc-all jqx-file-upload"));if(b.disabled===true){b.host.addClass(b.toThemeProperty("jqx-fill-state-disabled"))}},_appendElements:function(){var g=this,c="Browse",b=90,h="Upload All",e=90,d="Cancel All",f=90;var i=g.element.id;if(g.localization){if(g.localization.browseButton){c=g.localization.browseButton;b="auto"}if(g.localization.uploadButton){h=g.localization.uploadButton;e="auto"}if(g.localization.cancelButton){d=g.localization.cancelButton;f="auto"}}g._browseButton=a('<button id="'+i+'BrowseButton" class="'+g.toThemeProperty("jqx-file-upload-button-browse")+'">'+c+"</button>");g.host.append(g._browseButton);g._browseButton.jqxButton({theme:g.theme,width:b,template:g.browseTemplate,disabled:g.disabled});g._browseButton.after('<div style="clear: both;"></div>');g._bottomButtonsContainer=a('<div class="'+g.toThemeProperty("jqx-file-upload-buttons-container")+'"></div>');g.host.append(g._bottomButtonsContainer);g._uploadButton=a('<button id="'+i+'UploadButton" class="'+g.toThemeProperty("jqx-file-upload-button-upload")+'">'+h+"</button>");g._bottomButtonsContainer.append(g._uploadButton);g._uploadButton.jqxButton({theme:g.theme,width:e,template:g.uploadTemplate,disabled:g.disabled});g._cancelButton=a('<button id="'+i+'CancelButton" class="'+g.toThemeProperty("jqx-file-upload-button-cancel")+'">'+d+"</button>");g._bottomButtonsContainer.append(g._cancelButton);g._cancelButton.jqxButton({theme:g.theme,width:f,template:g.cancelTemplate,disabled:g.disabled});g._bottomButtonsContainer.after('<div style="clear: both;"></div>');if(g.rtl){g._browseButton.addClass(g.toThemeProperty("jqx-file-upload-button-browse-rtl"));g._cancelButton.addClass(g.toThemeProperty("jqx-file-upload-button-cancel-rtl"));g._uploadButton.addClass(g.toThemeProperty("jqx-file-upload-button-upload-rtl"));if(a.jqx.browser.msie&&a.jqx.browser.version>8){g._uploadButton.addClass(g.toThemeProperty("jqx-file-upload-button-upload-rtl-ie"))}}g._uploadIframe=a('<iframe name="'+i+'Iframe" class="'+g.toThemeProperty("jqx-file-upload-iframe")+'" src=""></iframe>');g.host.append(g._uploadIframe);g._iframeInitialized=false;g._uploadQueue=[];g._forms=[];g._addFormAndFileInput();g._fileRows=[]},_addFormAndFileInput:function(){var f=this;var i=f.element.id;var e=a('<form class="'+f.toThemeProperty("jqx-file-upload-form")+'" action="'+f.uploadUrl+'" target="'+i+'Iframe" method="post" enctype="multipart/form-data"></form>');f.host.append(e);var d=a('<input type="file" class="'+f.toThemeProperty("jqx-file-upload-file-input")+'" />');if(f.accept){d.attr("accept",f.accept)}e.append(d);if(f._ieOldWebkit){var c=f._browseButton.position();var g=f._browseButton.outerWidth();var h=f._browseButton.outerHeight();var b=f.rtl&&f._ie7?12:0;e.css({left:c.left-b,top:c.top,width:g,height:h});e.addClass(f.toThemeProperty("jqx-file-upload-form-ie9"));d.addClass(f.toThemeProperty("jqx-file-upload-file-input-ie9"));f.addHandler(e,"mouseenter.jqxFileUpload"+i,function(){f._browseButton.addClass(f.toThemeProperty("jqx-fill-state-hover"))});f.addHandler(e,"mouseleave.jqxFileUpload"+i,function(){f._browseButton.removeClass(f.toThemeProperty("jqx-fill-state-hover"))});f.addHandler(e,"mousedown.jqxFileUpload"+i,function(){f._browseButton.addClass(f.toThemeProperty("jqx-fill-state-pressed"))});f.addHandler(a(document),"mouseup.jqxFileUpload"+i,function(){if(f._browseButton.hasClass("jqx-fill-state-pressed")){f._browseButton.removeClass(f.toThemeProperty("jqx-fill-state-pressed"))}})}f.addHandler(d,"change.jqxFileUpload"+i,function(){var l=this.value,j;if(!a.jqx.browser.mozilla){if(l.indexOf("fakepath")!==-1){l=l.slice(12)}else{l=l.slice(l.lastIndexOf("\\")+1)}}if(a.jqx.browser.msie&&a.jqx.browser.version<10){j="IE9 and earlier do not support getting the file size."}else{j=this.files[0].size}var k=f._addFileRow(l,e,d,j);if(f._fileRows.length===1){f._browseButton.css("margin-bottom","10px");f._hideButtons(false)}if(f._ieOldWebkit){f.removeHandler(e,"mouseenter.jqxFileUpload"+i);f.removeHandler(e,"mouseleave.jqxFileUpload"+i);f.removeHandler(e,"mousedown.jqxFileUpload"+i)}f._addFormAndFileInput();f.removeHandler(d,"change.jqxFileUpload"+i);if(f.autoUpload===true){f._uploadFile(k)}});if(f._ieOldWebkit===true){f.addHandler(d,"click.jqxFileUpload"+i,function(j){if(f.multipleFilesUpload===false&&f._fileRows.length>0){j.preventDefault()}})}f._forms.push({form:e,fileInput:d})},_addFileRow:function(f,b,e,d){var h=this,l,g,m,j,n,i="Cancel",k="Upload File";l=a('<div class="'+h.toThemeProperty("jqx-widget-content jqx-rc-all jqx-file-upload-file-row")+'"></div>');if(h._fileRows.length===0){h._browseButton.after(l)}else{h._fileRows[h._fileRows.length-1].fileRow.after(l)}if(!h.renderFiles){g=a('<div class="'+h.toThemeProperty("jqx-widget-header jqx-rc-all jqx-file-upload-file-name")+'">'+f+"</div>");l.append(g);if(h.localization){if(h.localization.cancelFileTooltip){i=h.localization.cancelFileTooltip}if(h.localization.uploadFileTooltip){k=h.localization.uploadFileTooltip}}j=a('<div class="'+h.toThemeProperty("jqx-widget-header jqx-rc-all jqx-file-upload-file-cancel")+'" title="'+i+'"><div class="'+h.toThemeProperty("jqx-icon-close jqx-file-upload-icon")+'"></div></div>');l.append(j);n=a('<div class="'+h.toThemeProperty("jqx-widget-header jqx-rc-all jqx-file-upload-file-upload")+'" title="'+k+'"><div class="'+h.toThemeProperty("jqx-icon-arrow-up jqx-file-upload-icon jqx-file-upload-icon-upload")+'"></div></div>');l.append(n);m=a('<div class="'+h.toThemeProperty("jqx-file-upload-loading-element")+'"></div>');l.append(m);if(h.rtl){g.addClass(h.toThemeProperty("jqx-file-upload-file-name-rtl"));j.addClass(h.toThemeProperty("jqx-file-upload-file-cancel-rtl"));n.addClass(h.toThemeProperty("jqx-file-upload-file-upload-rtl"));m.addClass(h.toThemeProperty("jqx-file-upload-loading-element-rtl"))}h._setMaxWidth({fileNameContainer:g,uploadFile:n,cancelFile:j})}else{l.html(h.renderFiles(f))}if(h._ie7){h._borderAndPadding("width",l);h._borderAndPadding("height",l);if(!h.renderFiles){h._borderAndPadding("height",g);h._borderAndPadding("height",n);h._borderAndPadding("height",j)}}var c={fileRow:l,fileNameContainer:g,fileName:f,uploadFile:n,cancelFile:j,loadingElement:m,form:b,fileInput:e,index:h._fileRows.length};h._addFileHandlers(c);h._fileRows.push(c);h._raiseEvent("0",{file:f,size:d});return c},_setMaxWidth:function(c){var e=this;var f=c.cancelFile.outerWidth(true)+c.uploadFile.outerWidth(true);var b=e._ie7?6:0;var d=e.host.width()-parseInt(e.host.css("padding-left"),10)-parseInt(e.host.css("padding-right"),10)-f-b-7;c.fileNameContainer.css("max-width",d)},_addFileHandlers:function(b){var c=this;if(!c.renderFiles){var d=c.element.id;c.addHandler(b.uploadFile,"mouseenter.jqxFileUpload"+d,function(){if(c.disabled===false){b.uploadFile.addClass(c.toThemeProperty("jqx-fill-state-hover"))}});c.addHandler(b.uploadFile,"mouseleave.jqxFileUpload"+d,function(){if(c.disabled===false){b.uploadFile.removeClass(c.toThemeProperty("jqx-fill-state-hover"))}});c.addHandler(b.uploadFile,"click.jqxFileUpload"+d,function(){if(c.disabled===false){c._uploadFile(b)}});c.addHandler(b.cancelFile,"mouseenter.jqxFileUpload"+d,function(){if(c.disabled===false){b.cancelFile.addClass(c.toThemeProperty("jqx-fill-state-hover"))}});c.addHandler(b.cancelFile,"mouseleave.jqxFileUpload"+d,function(){if(c.disabled===false){b.cancelFile.removeClass(c.toThemeProperty("jqx-fill-state-hover"))}});c.addHandler(b.cancelFile,"click.jqxFileUpload"+d,function(){if(c.disabled===false){c._removeSingleFileRow(b)}})}},_removeSingleFileRow:function(c){var d=this;d._removeFileRow(c);d._fileRows.splice(c.index,1);if(d._fileRows.length===0){setTimeout(function(){d._browseButton.css("margin-bottom",0)},400);d._hideButtons(true)}else{for(var b=0;b<d._fileRows.length;b++){d._fileRows[b].index=b}}},_removeFileRow:function(b){var c=this;var d=c.element.id;if(!c.renderFiles){c.removeHandler(b.uploadFile,"mouseenter.jqxFileUpload"+d);c.removeHandler(b.uploadFile,"mouseleave.jqxFileUpload"+d);c.removeHandler(b.uploadFile,"click.jqxFileUpload"+d);c.removeHandler(b.cancelFile,"mouseenter.jqxFileUpload"+d);c.removeHandler(b.cancelFile,"mouseleave.jqxFileUpload"+d);c.removeHandler(b.cancelFile,"click.jqxFileUpload"+d)}b.fileRow.fadeOut(function(){b.fileRow.remove();b.form.remove()});c._raiseEvent("1",{file:b.fileName})},_hideButtons:function(b){var c=this;if(b===true){c._bottomButtonsContainer.fadeOut()}else{c._bottomButtonsContainer.fadeIn()}},_addHandlers:function(){var b=this;var c=b.element.id;if(!b._ieOldWebkit){b.addHandler(b._browseButton,"click.jqxFileUpload"+c,function(){b.browse()})}b.addHandler(b._uploadButton,"click.jqxFileUpload"+c,function(){b.uploadAll()});b.addHandler(b._cancelButton,"click.jqxFileUpload"+c,function(){b.cancelAll()});b.addHandler(b._uploadIframe,"load.jqxFileUpload"+c,function(){if(a.jqx.browser.chrome||a.jqx.browser.webkit){b._iframeInitialized=true}if(b._iframeInitialized===false){b._iframeInitialized=true}else{var d=b._uploadIframe.contents().find("body").html();b._raiseEvent("3",{file:b._uploadQueue[b._uploadQueue.length-1].fileName,response:d});if(b._fileObjectToRemove){b._removeSingleFileRow(b._fileObjectToRemove);b._fileObjectToRemove=null}b._uploadQueue.pop();if(b._uploadQueue.length>0){b._uploadFile(b._uploadQueue[b._uploadQueue.length-1])}}})},_removeHandlers:function(b){var d=this;var e=d.element.id;d.removeHandler(d._browseButton,"click.jqxFileUpload"+e);d.removeHandler(d._uploadButton,"click.jqxFileUpload"+e);d.removeHandler(d._cancelButton,"click.jqxFileUpload"+e);d.removeHandler(d._uploadIframe,"load.jqxFileUpload"+e);if(b===true){var c=d._forms[d._forms.length-1];d.removeHandler(c.fileInput,"change.jqxFileUpload"+e);if(d._ieOldWebkit){d.removeHandler(c.form,"mouseenter.jqxFileUpload"+e);d.removeHandler(c.form,"mouseleave.jqxFileUpload"+e);d.removeHandler(c.form,"mousedown.jqxFileUpload"+e);d.removeHandler(a("body"),"mouseup.jqxFileUpload"+e)}}}})})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxComboBox","",{});a.extend(a.jqx._jqxComboBox.prototype,{defineInstance:function(){var b={disabled:false,width:200,height:25,items:new Array(),selectedIndex:-1,selectedItems:new Array(),_selectedItems:new Array(),source:null,scrollBarSize:a.jqx.utilities.scrollBarSize,arrowSize:18,enableHover:true,enableSelection:true,visualItems:new Array(),groups:new Array(),equalItemsWidth:true,itemHeight:-1,visibleItems:new Array(),emptyGroupText:"Group",emptyString:"",openDelay:250,closeDelay:300,animationType:"default",dropDownWidth:"auto",dropDownHeight:"200px",autoDropDownHeight:false,enableBrowserBoundsDetection:false,dropDownHorizontalAlignment:"left",searchMode:"startswithignorecase",autoComplete:false,remoteAutoComplete:false,remoteAutoCompleteDelay:500,selectionMode:"default",minLength:2,displayMember:"",valueMember:"",groupMember:"",searchMember:"",keyboardSelection:true,renderer:null,autoOpen:false,checkboxes:false,promptText:"",placeHolder:"",rtl:false,listBox:null,validateSelection:null,showCloseButtons:true,renderSelectedItem:null,search:null,popupZIndex:100000,searchString:null,multiSelect:false,showArrow:true,_disabledItems:new Array(),touchMode:"auto",autoBind:true,aria:{"aria-disabled":{name:"disabled",type:"boolean"}},events:["open","close","select","unselect","change","checkChange","bindingComplete"]};a.extend(true,this,b);return b},createInstance:function(b){var c=this;this.host.attr("role","combobox");a.jqx.aria(this,"aria-autocomplete","both");if(a.jqx._jqxListBox==null||a.jqx._jqxListBox==undefined){throw new Error("jqxComboBox: Missing reference to jqxlistbox.js.")}a.jqx.aria(this);if(this.promptText!=""){this.placeHolder=this.promptText}this.render()},render:function(){var n=this;var p=n.element.nodeName.toLowerCase();if(p=="select"||p=="ul"||p=="ol"){n.field=n.element;if(n.field.className){n._className=n.field.className}var m={title:n.field.title};if(n.field.id.length){m.id=n.field.id.replace(/[^\w]/g,"_")+"_jqxComboBox"}else{m.id=a.jqx.utilities.createId()+"_jqxComboBox"}var c=a("<div></div>",m);if(!n.width){n.width=a(n.field).width()}if(!n.height){n.height=a(n.field).outerHeight()}a(n.field).hide().after(c);var k=n.host.data();n.host=c;n.host.data(k);n.element=c[0];n.element.id=n.field.id;n.field.id=m.id;if(n._className){n.host.addClass(n._className);a(n.field).removeClass(n._className)}if(n.field.tabIndex){var f=n.field.tabIndex;n.field.tabIndex=-1;n.element.tabIndex=f}var s=a.jqx.parseSourceTag(n.field);n.source=s.items;if(n.selectedIndex==-1){n.selectedIndex=s.index}}n.removeHandlers();n.isanimating=false;n.id=a.jqx.utilities.createId();n.element.innerHTML="";var g=a("<div style='background-color: transparent; -webkit-appearance: none; outline: none; width:100%; height: 100%; padding: 0px; margin: 0px; border: 0px; position: relative;'><div id='dropdownlistWrapper' style='padding: 0; margin: 0; border: none; background-color: transparent; float: left; width:100%; height: 100%; position: relative;'><div id='dropdownlistContent' style='padding: 0; margin: 0; border-top: none; border-bottom: none; float: left; position: absolute;'/><div id='dropdownlistArrow' role='button' style='padding: 0; margin: 0; border-left-width: 1px; border-bottom-width: 0px; border-top-width: 0px; border-right-width: 0px; float: right; position: absolute;'/></div></div>");n.comboStructure=g;if(a.jqx._jqxListBox==null||a.jqx._jqxListBox==undefined){throw"jqxComboBox: Missing reference to jqxlistbox.js."}n.touch=a.jqx.mobile.isTouchDevice();if(n.touchMode===true){n.touch=true}n.host.append(g);n.dropdownlistWrapper=n.host.find("#dropdownlistWrapper");n.dropdownlistArrow=n.host.find("#dropdownlistArrow");n.dropdownlistContent=n.host.find("#dropdownlistContent");n.dropdownlistContent.addClass(n.toThemeProperty("jqx-combobox-content"));n.dropdownlistContent.addClass(n.toThemeProperty("jqx-widget-content"));n.dropdownlistWrapper[0].id="dropdownlistWrapper"+n.element.id;n.dropdownlistArrow[0].id="dropdownlistArrow"+n.element.id;n.dropdownlistContent[0].id="dropdownlistContent"+n.element.id;n.dropdownlistContent.append(a('<input autocomplete="off" style="margin: 0; padding: 0; border: 0;" type="textarea"/>'));n.input=n.dropdownlistContent.find("input");n.input.addClass(n.toThemeProperty("jqx-combobox-input"));n.input.addClass(n.toThemeProperty("jqx-widget-content"));if(n.host.attr("tabindex")){n.input.attr("tabindex",n.host.attr("tabindex"));n.host.removeAttr("tabindex")}n._addInput();if(n.rtl){n.input.css({direction:"rtl"});n.dropdownlistContent.addClass(n.toThemeProperty("jqx-combobox-content-rtl"))}try{var q="listBox"+n.id;var i=a(a.find("#"+q));if(i.length>0){i.remove()}a.jqx.aria(this,"aria-owns",q);a.jqx.aria(this,"aria-haspopup",true);a.jqx.aria(this,"aria-multiline",false);if(n.listBoxContainer){n.listBoxContainer.jqxListBox("destroy")}if(n.container){n.container.remove()}var b=a("<div style='overflow: hidden; border: none; background-color: transparent; position: absolute;' id='listBox"+n.id+"'><div id='innerListBox"+n.id+"'></div></div>");b.hide();b.appendTo(document.body);n.container=b;n.listBoxContainer=a(a.find("#innerListBox"+n.id));var d=n.width;if(n.dropDownWidth!="auto"){d=n.dropDownWidth}if(n.dropDownHeight==null){n.dropDownHeight=200}n.container.width(parseInt(d)+25);n.container.height(parseInt(n.dropDownHeight)+25);n.addHandler(n.listBoxContainer,"bindingComplete",function(e){if(!n.listBox){n.listBox=a.data(n.listBoxContainer[0],"jqxListBox").instance}n._raiseEvent("6")});var j=true;n.listBoxContainer.jqxListBox({_checkForHiddenParent:false,allowDrop:false,allowDrag:false,checkboxes:n.checkboxes,emptyString:n.emptyString,autoBind:!n.remoteAutoComplete&&n.autoBind,renderer:n.renderer,rtl:n.rtl,itemHeight:n.itemHeight,selectedIndex:n.selectedIndex,incrementalSearch:false,width:d,scrollBarSize:n.scrollBarSize,autoHeight:n.autoDropDownHeight,height:n.dropDownHeight,groupMember:n.groupMember,searchMember:n.searchMember,displayMember:n.displayMember,valueMember:n.valueMember,source:n.source,theme:n.theme,rendered:function(){n.listBox=a.data(n.listBoxContainer[0],"jqxListBox").instance;if(n.remoteAutoComplete){if(n.autoDropDownHeight){n.container.height(n.listBox.virtualSize.height+25);n.listBoxContainer.height(n.listBox.virtualSize.height);n.listBox._arrange()}else{n.listBox._arrange();n.listBox.ensureVisible(0);n.listBox._renderItems();n.container.height(n.listBoxContainer.height()+25)}if(n.searchString!=undefined&&n.searchString.length>=n.minLength){var e=n.listBoxContainer.jqxListBox("items");if(e){if(e.length>0){if(!n.isOpened()){n.open()}}else{n.close()}}else{n.close()}}else{n.close()}}else{n.renderSelection("mouse");if(n.multiSelect){n.doMultiSelect(false)}}if(n.rendered){n.rendered()}}});n.listBoxContainer.css({position:"absolute",zIndex:n.popupZIndex,top:0,left:0});n.listBoxContainer.css("border-top-width","1px");n.listBoxContainer.addClass(n.toThemeProperty("jqx-popup"));if(a.jqx.browser.msie){n.listBoxContainer.addClass(n.toThemeProperty("jqx-noshadow"))}n.listBox=a.data(n.listBoxContainer[0],"jqxListBox").instance;n.listBox.enableSelection=n.enableSelection;n.listBox.enableHover=n.enableHover;n.listBox.equalItemsWidth=n.equalItemsWidth;n.listBox._arrange();n.addHandler(n.listBoxContainer,"unselect",function(e){if(!n.multiSelect){n._raiseEvent("3",{index:e.args.index,type:e.args.type,item:e.args.item})}});n.addHandler(n.listBoxContainer,"change",function(e){if(!n.multiSelect){n.selectedIndex=n.listBox.selectedIndex;n._raiseEvent("4",{index:e.args.index,type:e.args.type,item:e.args.item})}});if(n.animationType=="none"){n.container.css("display","none")}else{n.container.hide()}j=false}catch(l){throw l}var r=this;r.input.attr("disabled",r.disabled);var h=a.jqx.browser.msie&&a.jqx.browser.version<8;if(!h){r.input.attr("placeholder",r.placeHolder)}n.propertyChangeMap.disabled=function(e,u,t,v){if(v){e.host.addClass(r.toThemeProperty("jqx-combobox-state-disabled"));e.host.addClass(r.toThemeProperty("jqx-fill-state-disabled"));e.dropdownlistContent.addClass(r.toThemeProperty("jqx-combobox-content-disabled"))}else{e.host.removeClass(r.toThemeProperty("jqx-combobox-state-disabled"));e.host.removeClass(r.toThemeProperty("jqx-fill-state-disabled"));e.dropdownlistContent.removeClass(r.toThemeProperty("jqx-combobox-content-disabled"))}e.input.attr("disabled",e.disabled);a.jqx.aria(e,"aria-disabled",e.disabled);e.input.attr("disabled",e.disabled)};if(n.disabled){n.host.addClass(n.toThemeProperty("jqx-combobox-state-disabled"));n.host.addClass(n.toThemeProperty("jqx-fill-state-disabled"));n.dropdownlistContent.addClass(n.toThemeProperty("jqx-combobox-content-disabled"))}n.host.addClass(n.toThemeProperty("jqx-combobox-state-normal"));n.host.addClass(n.toThemeProperty("jqx-combobox"));n.host.addClass(n.toThemeProperty("jqx-rc-all"));n.host.addClass(n.toThemeProperty("jqx-widget"));n.host.addClass(n.toThemeProperty("jqx-widget-content"));n.dropdownlistArrowIcon=a("<div></div>");n.dropdownlistArrowIcon.addClass(n.toThemeProperty("jqx-icon-arrow-down"));n.dropdownlistArrowIcon.addClass(n.toThemeProperty("jqx-icon"));n.dropdownlistArrow.append(n.dropdownlistArrowIcon);n.dropdownlistArrow.addClass(n.toThemeProperty("jqx-combobox-arrow-normal"));n.dropdownlistArrow.addClass(n.toThemeProperty("jqx-fill-state-normal"));if(!n.rtl){n.dropdownlistArrow.addClass(n.toThemeProperty("jqx-rc-r"))}else{n.dropdownlistArrow.addClass(n.toThemeProperty("jqx-rc-l"))}n._setSize();n._updateHandlers();n.addHandler(n.input,"keyup.textchange",function(e){var t=n._search(e);if(n.cinput&&n.input){if(!n.displayMember){n.cinput[0].value=n.input[0].value}else{n._updateInputSelection()}}});if(a.jqx.browser.msie&&a.jqx.browser.version<8){if(n.host.parents(".jqx-window").length>0){var o=n.host.parents(".jqx-window").css("z-index");b.css("z-index",o+10);n.listBoxContainer.css("z-index",o+10)}}if(n.checkboxes){n.input.attr("readonly",true);a.jqx.aria(this,"aria-readonly",true)}else{a.jqx.aria(this,"aria-readonly",false)}if(!n.remoteAutoComplete){n.searchString=""}},_addInput:function(){var b=this.host.attr("name");this.cinput=a("<input type='hidden'/>");this.host.append(this.cinput);if(b){this.cinput.attr("name",b)}},_updateInputSelection:function(){if(this.cinput){var c=new Array();if(this.selectedIndex==-1){this.cinput.val("")}else{var e=this.getSelectedItem();if(e!=null){this.cinput.val(e.value);c.push(e.value)}else{this.cinput.val(this.dropdownlistContent.text())}}if(this.checkboxes||this.multiSelect){if(!this.multiSelect){var b=this.getCheckedItems()}else{var b=this.getSelectedItems()}var f="";if(b!=null){for(var d=0;d<b.length;d++){if(d==b.length-1){f+=b[d].value}else{f+=b[d].value+","}c.push(b[d].value)}}this.cinput.val(f)}if(this.field&&this.cinput){if(this.field.nodeName.toLowerCase()=="select"){a.each(this.field,function(g,h){a(this).removeAttr("selected");this.selected=c.indexOf(this.value)>=0;if(this.selected){a(this).attr("selected",true)}})}else{a.each(this.items,function(g,h){a(this.originalItem.originalItem).removeAttr("data-selected");this.selected=c.indexOf(this.value)>=0;if(this.selected){a(this.originalItem.originalItem).attr("data-selected",true)}})}}}},_search:function(m){var d=this;if(m.keyCode==9){return}if(d.searchMode=="none"||d.searchMode==null||d.searchMode=="undefined"){return}if(m.keyCode==16||m.keyCode==17||m.keyCode==20){return}if(d.checkboxes){return}if(d.multiSelect){var n=a("<span style='visibility: hidden; white-space: nowrap;'>"+d.input.val()+"</span>");n.addClass(d.toThemeProperty("jqx-widget"));a(document.body).append(n);var j=n.width()+15;n.remove();if(j>d.host.width()){j=d.host.width()}if(j<25){j=25}d.input.css("width",j+"px");if(d.selectedItems.length==0){d.input.css("width","100%");d.input.attr("placeholder",d.placeHolder)}else{d.input.attr("placeholder","")}var f=parseInt(this._findPos(d.host[0])[1])+parseInt(d.host.outerHeight())-1+"px";var o=a.jqx.mobile.isSafariMobileBrowser()||a.jqx.mobile.isWindowsPhone();if((o!=null&&o)){f=a.jqx.mobile.getTopPos(this.element)+parseInt(d.host.outerHeight());if(a("body").css("border-top-width")!="0px"){f=parseInt(f)-this._getBodyOffset().top+"px"}}d.container.css("top",f);var i=parseInt(d.host.height());d.dropdownlistArrow.height(i)}if(!d.isanimating){if(m.altKey&&m.keyCode==38){d.hideListBox("altKey");return false}if(m.altKey&&m.keyCode==40){if(!d.isOpened()){d.showListBox("altKey")}return false}}if(m.keyCode==37||m.keyCode==39){return false}if(m.altKey||m.keyCode==18){return}if(m.keyCode>=33&&m.keyCode<=40){return}if(m.ctrlKey||d.ctrlKey){if(m.keyCode!=88&&m.keyCode!=86){return}}var l=d.input.val();if(l.length==0&&!d.autoComplete){d.listBox.searchString=d.input.val();d.listBox.clearSelection();d.hideListBox("search");d.searchString=d.input.val();return}if(d.remoteAutoComplete){var s=this;var p=function(){s.listBox.vScrollInstance.value=0};if(l.length>=s.minLength){if(!m.ctrlKey&&!m.altKey){if(s.searchString!=l){var k=s.listBoxContainer.jqxListBox("source");if(k==null){s.listBoxContainer.jqxListBox({source:s.source})}if(d._searchTimer){clearTimeout(d._searchTimer)}if(m.keyCode!=13&&m.keyCode!=27){d._searchTimer=setTimeout(function(){p();if(s.autoDropDownHeight){s.listBox.autoHeight=true}s.searchString=s.input.val();if(s.search!=null){s.search(s.input.val())}else{throw"'search' function is not defined"}},d.remoteAutoCompleteDelay)}}s.searchString=l}}else{if(d._searchTimer){clearTimeout(d._searchTimer)}p();s.searchString="";s.listBoxContainer.jqxListBox({source:null})}return}var s=this;if(l===s.searchString){return}if(!(m.keyCode=="27"||m.keyCode=="13")){var b=d._updateItemsVisibility(l);var e=b.matchItems;var c=b.index;if(!d.autoComplete&&!d.removeAutoComplete){if(!d.multiSelect||(d.multiSelect&&c>=0)){d.listBox.selectIndex(c);var r=d.listBox.isIndexInView(c);if(!r){d.listBox.ensureVisible(c)}else{d.listBox._renderItems()}}}if(d.autoComplete&&e.length===0){d.hideListBox("search")}}if(m.keyCode=="13"){var g=d.container.css("display")=="block";if(g&&!d.isanimating){d.hideListBox("keyboard");d._oldvalue=d.listBox.selectedValue;return}}else{if(m.keyCode=="27"){var g=d.container.css("display")=="block";if(g&&!d.isanimating){if(!h.multiSelect){var q=d.listBox.getVisibleItem(d._oldvalue);if(q){var h=this;setTimeout(function(){if(h.autoComplete){h._updateItemsVisibility("")}h.listBox.selectIndex(q.index);h.renderSelection("api")},h.closeDelay)}else{d.clearSelection()}}else{h.input.val("");h.listBox.selectedValue=null}d.hideListBox("keyboard");d.renderSelection("api");m.preventDefault();return false}}else{if(!d.isOpened()&&!d.opening&&!m.ctrlKey){if(d.listBox.visibleItems&&d.listBox.visibleItems.length>0){if(d.input.val()!=d.searchString&&d.searchString!=undefined&&c!=-1){d.showListBox("search")}}}d.searchString=d.input.val();if(d.searchString==""){if(!d.listBox.itemsByValue[""]){c=-1;if(!d.multiSelect){d.clearSelection()}}}var q=d.listBox.getVisibleItem(c);if(q!=undefined){d._updateInputSelection()}}}},val:function(c){if(!this.input){return""}var d=function(f){for(var e in f){if(f.hasOwnProperty(e)){return false}}if(typeof c=="number"){return false}if(typeof c=="date"){return false}if(typeof c=="boolean"){return false}if(typeof c=="string"){return false}return true};if(d(c)||arguments.length==0){var b=this.getSelectedItem();if(b){return b.value}return this.input.val()}else{var b=this.getItemByValue(c);if(b!=null){this.selectItem(b)}else{this.input.val(c)}return this.input.val()}},focus:function(){var c=this;var b=function(){c.input.focus();var d=c.input.val();c._setSelection(0,d.length)};b();setTimeout(function(){b()},10)},_setSelection:function(e,b){try{if("selectionStart" in this.input[0]){this.input[0].focus();this.input[0].setSelectionRange(e,b)}else{var c=this.input[0].createTextRange();c.collapse(true);c.moveEnd("character",b);c.moveStart("character",e);c.select()}}catch(d){}},setContent:function(b){this.input.val(b)},_updateItemsVisibility:function(l){var i=this.getItems();if(i==undefined){return{index:-1,matchItem:new Array()}}var j=this;var g=-1;var m=new Array();var k=0;a.each(i,function(p){var r="";if(!this.isGroup){if(this.searchLabel){r=this.searchLabel}else{if(this.label){r=this.label}else{if(this.value){r=this.value}else{if(this.title){r=this.title}else{r="jqxItem"}}}}r=r.toString();var q=false;switch(j.searchMode){case"containsignorecase":q=a.jqx.string.containsIgnoreCase(r,l);break;case"contains":q=a.jqx.string.contains(r,l);break;case"equals":q=a.jqx.string.equals(r,l);break;case"equalsignorecase":q=a.jqx.string.equalsIgnoreCase(r,l);break;case"startswith":q=a.jqx.string.startsWith(r,l);break;case"startswithignorecase":q=a.jqx.string.startsWithIgnoreCase(r,l);break;case"endswith":q=a.jqx.string.endsWith(r,l);break;case"endswithignorecase":q=a.jqx.string.endsWithIgnoreCase(r,l);break}if(j.autoComplete&&!q){this.visible=false}if(q&&j.autoComplete){m[k++]=this;this.visible=true;g=this.visibleIndex}if(l==""&&j.autoComplete){this.visible=true;q=false}if(j.multiSelect){this.disabled=false;if(j.selectedItems.indexOf(this.value)>=0||j._disabledItems.indexOf(this.value)>=0){this.disabled=true;q=false}}if(!j.multiSelect){if(q&&!j.autoComplete){g=this.visibleIndex;return false}}else{if(q&&!j.autoComplete){if(g===-1){g=this.visibleIndex}return true}}}});this.listBox.searchString=l;var f=this;var h=function(){if(!f.multiSelect){return}var p=0;var s=false;var r=null;for(var q=0;q<f.listBox.items.length;q++){f.listBox.selectedIndexes[q]=-1;if(!f.listBox.items[q].disabled){if(s==false){r=f.listBox.items[q];p=r.visibleIndex;s=true}}}f.listBox.selectedIndex=-1;f.listBox.selectedIndex=p;f.listBox.selectedIndexes[p]=p;if(f.listBox.visibleItems.length>0){if(r){f.listBox.selectedValue=r.value}else{f.listBox.selectedValue=null}}else{f.listBox.selectedValue=null}f.listBox.ensureVisible(0)};if(!this.autoComplete){h();return{index:g,matchItems:m}}this.listBox.renderedVisibleItems=new Array();var b=this.listBox.vScrollInstance.value;this.listBox.vScrollInstance.value=0;this.listBox.visibleItems=new Array();this.listBox._renderItems();var e=this.listBox.selectedValue;var o=this.listBox.getItemByValue(e);if(!this.multiSelect){if(o){if(o.visible){this.listBox.selectedIndex=o.visibleIndex;for(var d=0;d<this.listBox.items.length;d++){this.listBox.selectedIndexes[d]=-1}this.listBox.selectedIndexes[o.visibleIndex]=o.visibleIndex}else{for(var d=0;d<this.listBox.items.length;d++){this.listBox.selectedIndexes[d]=-1}this.listBox.selectedIndex=-1}}}else{h()}this.listBox._renderItems();var n=this.listBox._calculateVirtualSize().height;if(n<b){b=0;this.listBox.vScrollInstance.refresh()}if(this.autoDropDownHeight){this._disableSelection=true;if(this.listBox.autoHeight!=this.autoDropDownHeight){this.listBoxContainer.jqxListBox({autoHeight:this.autoDropDownHeight})}this.container.height(n+25);this.listBox.invalidate();this._disableSelection=false}else{if(n<parseInt(this.dropDownHeight)){var c=this.listBox.hScrollBar[0].style.visibility=="hidden"?0:20;this.listBox.height=c+n;this.container.height(n+25+c);this.listBox.invalidate()}else{this.listBox.height=parseInt(this.dropDownHeight);this.container.height(parseInt(this.dropDownHeight)+25);this.listBox.invalidate()}}this.listBox.vScrollInstance.setPosition(b);return{index:g,matchItems:m}},findItems:function(e){var b=this.getItems();var d=this;var c=0;var f=new Array();a.each(b,function(g){var j="";if(!this.isGroup){if(this.label){j=this.label}else{if(this.value){j=this.value}else{if(this.title){j=this.title}else{j="jqxItem"}}}var h=false;switch(d.searchMode){case"containsignorecase":h=a.jqx.string.containsIgnoreCase(j,e);break;case"contains":h=a.jqx.string.contains(j,e);break;case"equals":h=a.jqx.string.equals(j,e);break;case"equalsignorecase":h=a.jqx.string.equalsIgnoreCase(j,e);break;case"startswith":h=a.jqx.string.startsWith(j,e);break;case"startswithignorecase":h=a.jqx.string.startsWithIgnoreCase(j,e);break;case"endswith":h=a.jqx.string.endsWith(j,e);break;case"endswithignorecase":h=a.jqx.string.endsWithIgnoreCase(j,e);break}if(h){f[c++]=this}}});return f},_resetautocomplete:function(){a.each(this.listBox.items,function(b){this.visible=true});this.listBox.vScrollInstance.value=0;this.listBox._addItems();this.listBox.autoHeight=false;this.listBox.height=this.dropDownHeight;this.container.height(parseInt(this.dropDownHeight)+25);this.listBoxContainer.height(parseInt(this.dropDownHeight));this.listBox._arrange();this.listBox._addItems();this.listBox._renderItems()},getItems:function(){var b=this.listBox.items;return b},getVisibleItems:function(){return this.listBox.getVisibleItems()},_setSize:function(){if(this.width!=null&&this.width.toString().indexOf("px")!=-1){this.host.width(this.width)}else{if(this.width!=undefined&&!isNaN(this.width)){this.host.width(this.width)}}if(this.height!=null&&this.height.toString().indexOf("px")!=-1){this.host.height(this.height)}else{if(this.height!=undefined&&!isNaN(this.height)){this.host.height(this.height)}}var e=false;if(this.width!=null&&this.width.toString().indexOf("%")!=-1){e=true;this.host.width(this.width)}if(this.height!=null&&this.height.toString().indexOf("%")!=-1){e=true;this.host.height(this.height)}if(e){var c=this;var b=this.host.width();if(this.dropDownWidth!="auto"){b=this.dropDownWidth}this.listBoxContainer.jqxListBox({width:b});this.container.width(parseInt(b)+25);this._arrange()}var c=this;var d=function(){if(c.multiSelect){c.host.height(c.height)}c._arrange();if(c.multiSelect){c.host.height("auto")}};c.oldWidth=c.host.width();c.oldHeight=c.host.height();a.jqx.utilities.resize(this.host,function(){var f=c.host.width();var g=c.host.height();if(f!=c.oldWidth||g!=c.oldHeight){d();c.hideListBox("api")}c.oldWidth=f;c.oldHeight=g})},isOpened:function(){var c=this;var b=a.data(document.body,"openedCombojqxListBox"+this.element.id);if(this.container.css("display")!="block"){return false}if(b!=null&&b==c.listBoxContainer){return true}return false},_updateHandlers:function(){var d=this;var e=false;this.removeHandlers();if(this.multiSelect){this.addHandler(this.dropdownlistContent,"click",function(f){if(f.target.href){return false}d.input.focus();setTimeout(function(){d.input.focus()},10)});this.addHandler(this.dropdownlistContent,"focus",function(f){if(f.target.href){return false}d.input.focus();setTimeout(function(){d.input.focus()},10)})}if(!this.touch){if(this.host.parents()){this.addHandler(this.host.parents(),"scroll.combobox"+this.element.id,function(f){var g=d.isOpened();if(g){d.close()}})}this.addHandler(this.host,"mouseenter",function(){if(!d.disabled&&d.enableHover){e=true;d.host.addClass(d.toThemeProperty("jqx-combobox-state-hover"));d.dropdownlistArrowIcon.addClass(d.toThemeProperty("jqx-icon-arrow-down-hover"));d.dropdownlistArrow.addClass(d.toThemeProperty("jqx-combobox-arrow-hover"));d.dropdownlistArrow.addClass(d.toThemeProperty("jqx-fill-state-hover"))}});this.addHandler(this.host,"mouseleave",function(){if(!d.disabled&&d.enableHover){d.host.removeClass(d.toThemeProperty("jqx-combobox-state-hover"));d.dropdownlistArrowIcon.removeClass(d.toThemeProperty("jqx-icon-arrow-down-hover"));d.dropdownlistArrow.removeClass(d.toThemeProperty("jqx-combobox-arrow-hover"));d.dropdownlistArrow.removeClass(d.toThemeProperty("jqx-fill-state-hover"));e=false}})}if(d.autoOpen){this.addHandler(this.host,"mouseenter",function(){var f=d.isOpened();if(!f&&d.autoOpen){d.open();d.host.focus()}});this.addHandler(a(document),"mousemove."+d.id,function(i){var h=d.isOpened();if(h&&d.autoOpen){var m=d.host.coord();var l=m.top;var k=m.left;var j=d.container.coord();var f=j.left;var g=j.top;canClose=true;if(i.pageY>=l&&i.pageY<=l+d.host.height()+2){if(i.pageX>=k&&i.pageX<k+d.host.width()){canClose=false}}if(i.pageY>=g&&i.pageY<=g+d.container.height()-20){if(i.pageX>=f&&i.pageX<f+d.container.width()){canClose=false}}if(canClose){d.close()}}})}var c="mousedown";if(this.touch){c=a.jqx.mobile.getTouchEventName("touchstart")}var b=function(h){if(!d.disabled){var f=d.container.css("display")=="block";if(!d.isanimating){if(f){d.hideListBox("api");if(!a.jqx.mobile.isTouchDevice()){d.input.focus();setTimeout(function(){d.input.focus()},10)}return true}else{if(d.autoDropDownHeight){d.container.height(d.listBoxContainer.height()+25);var g=d.listBoxContainer.jqxListBox("autoHeight");if(!g){d.listBoxContainer.jqxListBox({autoHeight:d.autoDropDownHeight});d.listBox._arrange();d.listBox.ensureVisible(0);d.listBox._renderItems();d.container.height(d.listBoxContainer.height()+25)}}d.showListBox("api");if(!a.jqx.mobile.isTouchDevice()){setTimeout(function(){d.input.focus()},10)}else{return true}}}}};this.addHandler(this.dropdownlistArrow,c,function(f){b(f)});this.addHandler(this.dropdownlistArrowIcon,c,function(f){});this.addHandler(this.host,"focus",function(){d.focus()});this.addHandler(this.input,"focus",function(f){d.focused=true;d.host.addClass(d.toThemeProperty("jqx-combobox-state-focus"));d.host.addClass(d.toThemeProperty("jqx-fill-state-focus"));d.dropdownlistContent.addClass(d.toThemeProperty("jqx-combobox-content-focus"));if(f.stopPropagation){f.stopPropagation()}});this.addHandler(this.input,"blur",function(){d.focused=false;if(!d.isOpened()&&!d.opening){if(d.selectionMode=="dropDownList"){d._selectOldValue()}d.host.removeClass(d.toThemeProperty("jqx-combobox-state-focus"));d.host.removeClass(d.toThemeProperty("jqx-fill-state-focus"));d.dropdownlistContent.removeClass(d.toThemeProperty("jqx-combobox-content-focus"))}if(d._searchTimer){clearTimeout(d._searchTimer)}});this.addHandler(a(document),"mousedown."+this.id,d.closeOpenedListBox,{me:this,listbox:this.listBox,id:this.id});if(this.touch){this.addHandler(a(document),a.jqx.mobile.getTouchEventName("touchstart")+"."+this.id,d.closeOpenedListBox,{me:this,listbox:this.listBox,id:this.id})}this.addHandler(this.host,"keydown",function(k){var h=d.container.css("display")=="block";d.ctrlKey=k.ctrlKey;if(d.host.css("display")=="none"){return true}if(k.keyCode=="13"||k.keyCode=="9"){if(h&&!d.isanimating){if(d.listBox.selectedIndex!=-1){d.renderSelection("mouse");var f=d.listBox.selectedIndex;var j=d.listBox.getVisibleItem(f);if(j){d.listBox.selectedValue=j.value}d._setSelection(d.input.val().length,d.input.val().length);d.hideListBox("keyboard")}if(k.keyCode=="13"){d._oldvalue=d.listBox.selectedValue}if(!d.keyboardSelection){d._raiseEvent("2",{index:d.selectedIndex,type:"keyboard",item:d.getItem(d.selectedIndex)})}if(k.keyCode=="9"){return true}return false}}if(k.keyCode==115){if(!d.isanimating){if(!d.isOpened()){d.showListBox("keyboard")}else{if(d.isOpened()){d.hideListBox("keyboard")}}}return false}if(k.altKey){if(d.host.css("display")=="block"){if(!d.isanimating){if(k.keyCode==38){if(d.isOpened()){d.hideListBox("altKey")}}else{if(k.keyCode==40){if(!d.isOpened()){d.showListBox("altKey")}}}}}}if(k.keyCode=="27"||k.keyCode=="9"){if(d.isOpened()&&!d.isanimating){if(k.keyCode=="27"){if(!d.multiSelect){var j=d.listBox.getItemByValue(d._oldvalue);if(j){setTimeout(function(){if(d.autoComplete){d._updateItemsVisibility("")}d.listBox.selectIndex(j.index);d.renderSelection("api")},d.closeDelay)}else{d.clearSelection()}}else{d.listBox.selectedValue=null;d.input.val("")}}d.hideListBox("keyboard");if(k.keyCode=="9"){return true}d.renderSelection("api");k.preventDefault();return false}}var g=k.keyCode;if(h&&!d.disabled&&g!=8){return d.listBox._handleKeyDown(k)}else{if(!d.disabled&&!h){var g=k.keyCode;if(g==33||g==34||g==35||g==36||g==38||g==40){return d.listBox._handleKeyDown(k)}}}if(g===8&&d.multiSelect){if(d.input.val().length===0){var i=d.selectedItems[d.selectedItems.length-1];d.selectedItems.pop();d._selectedItems.pop();if(i){d._raiseEvent("3",{index:i.index,type:"keyboard",item:i});d._raiseEvent("4",{index:i.index,type:"keyboard",item:i})}d.listBox.selectedValue=null;d.doMultiSelect();return false}}});this.addHandler(this.listBoxContainer,"checkChange",function(f){d.renderSelection("mouse");d._updateInputSelection();d._raiseEvent(5,{label:f.args.label,value:f.args.value,checked:f.args.checked,item:f.args.item})});this.addHandler(this.listBoxContainer,"select",function(f){if(!d.disabled){if(f.args.type!="keyboard"||d.keyboardSelection){d.renderSelection(f.args.type);if(!d.multiSelect){d._raiseEvent("2",{index:f.args.index,type:f.args.type,item:f.args.item})}if(f.args.type=="mouse"){d._oldvalue=d.listBox.selectedValue;if(!d.checkboxes){d.hideListBox("mouse");if(!d.touch){d.input.focus()}else{return false}}}}}});if(this.listBox!=null&&this.listBox.content!=null){this.addHandler(this.listBox.content,"click",function(f){if(!d.disabled){if(d.listBox.itemswrapper){if(f.target===d.listBox.itemswrapper[0]){return true}}if(f.target&&f.target.className){if(f.target.className.indexOf("jqx-fill-state-disabled")>=0){return true}}d.renderSelection("mouse");d._oldvalue=d.listBox.selectedValue;if(!d.touch&&!d.ishiding){if(!d.checkboxes){d.hideListBox("mouse");d.input.focus()}}if(d.touch===true){if(!d.checkboxes){d.hideListBox("mouse")}}}})}},_selectOldValue:function(){var b=this;if(b.listBox.selectedIndex==-1){if(!b.multiSelect){var c=b.listBox.getItemByValue(b._oldvalue);if(c){setTimeout(function(){if(b.autoComplete){b._updateItemsVisibility("")}b.listBox.selectIndex(c.index);b.renderSelection("api")},b.closeDelay)}else{b.clearSelection();b.listBox.selectIndex(0);b.renderSelection("api")}}else{b.listBox.selectedValue=null;b.input.val("")}}else{b.renderSelection("api")}},removeHandlers:function(){var c=this;if(this.dropdownlistWrapper!=null){this.removeHandler(this.dropdownlistWrapper,"mousedown")}if(this.dropdownlistContent){this.removeHandler(this.dropdownlistContent,"click");this.removeHandler(this.dropdownlistContent,"focus")}this.removeHandler(this.host,"keydown");this.removeHandler(this.host,"focus");if(this.input!=null){this.removeHandler(this.input,"focus");this.removeHandler(this.input,"blur")}this.removeHandler(this.host,"mouseenter");this.removeHandler(this.host,"mouseleave");this.removeHandler(a(document),"mousemove."+c.id);if(this.listBoxContainer){this.removeHandler(this.listBoxContainer,"checkChange");this.removeHandler(this.listBoxContainer,"select")}if(this.host.parents()){this.removeHandler(this.host.parents(),"scroll.combobox"+this.element.id)}if(this.dropdownlistArrowIcon&&this.dropdownlistArrow){var b="mousedown";if(this.touch){b=a.jqx.mobile.getTouchEventName("touchstart")}this.removeHandler(this.dropdownlistArrowIcon,b);this.removeHandler(this.dropdownlistArrow,b)}},getItem:function(b){var c=this.listBox.getItem(b);return c},getItemByValue:function(c){var b=this.listBox.getItemByValue(c);return b},getVisibleItem:function(b){var c=this.listBox.getVisibleItem(b);return c},renderSelection:function(j){if(j==undefined||j=="none"){return}if(this._disableSelection===true){return}if(this.listBox==null){return}if(this.multiSelect){return}var k=this.listBox.visibleItems[this.listBox.selectedIndex];if(this.autoComplete&&!this.checkboxes){if(this.listBox.selectedValue!==undefined){var k=this.getItemByValue(this.listBox.selectedValue)}}if(this.checkboxes){var f=this.getCheckedItems();if(f!=null&&f.length>0){k=f[0]}else{k=null}}if(k==null){var d=a.jqx.browser.msie&&a.jqx.browser.version<8;this.input.val("");this.input.attr("value","");if(!d){this.input.attr("placeholder",this.placeHolder)}this._updateInputSelection();return}this.selectedIndex=this.listBox.selectedIndex;var c=a("<span></span>");if(k.label!=undefined&&k.label!=null&&k.label.toString().length>0){a.jqx.utilities.html(c,k.label)}else{if(k.value!=undefined&&k.value!=null&&k.value.toString().length>0){a.jqx.utilities.html(c,k.value)}else{if(k.title!=undefined&&k.title!=null&&k.title.toString().length>0){a.jqx.utilities.html(c,k.title)}else{a.jqx.utilities.html(c,this.emptyString)}}}var b=c.outerHeight();if(this.checkboxes){var g=this.getCheckedItems();var h="";for(var e=0;e<g.length;e++){if(e==g.length-1){h+=g[e].label}else{h+=g[e].label+", "}}this.input.val(h)}else{this.input.val(c.text())}c.remove();this._updateInputSelection();if(this.renderSelectedItem){var l=this.renderSelectedItem(this.listBox.selectedIndex,k);if(l!=undefined){this.input[0].value=l}}this.input.attr("value",this.input.val());if(this.listBox&&this.listBox._activeElement){a.jqx.aria(this,"aria-activedescendant",this.listBox._activeElement.id)}},dataBind:function(){this.listBoxContainer.jqxListBox({source:this.source});this.renderSelection("mouse");if(this.source==null){this.clearSelection()}},clear:function(){this.listBoxContainer.jqxListBox({source:null});this.clearSelection()},clearSelection:function(b){this.selectedIndex=-1;this.listBox.clearSelection();this.input.val("");if(this.multiSelect){this.listBox.selectedValue="";this.selectedItems=new Array();this._selectedItems=new Array();this.doMultiSelect(false)}},unselectIndex:function(c,d){if(isNaN(c)){return}if(this.autoComplete){this._updateItemsVisibility("")}this.listBox.unselectIndex(c,d);this.renderSelection("mouse");if(this.multiSelect){if(c>=0){var b=this.getItem(c);var e=this.selectedItems.indexOf(b.value);if(e>=0){if(b.value===this.listBox.selectedValue){this.listBox.selectedValue=null}this.selectedItems.splice(e,1);this._selectedItems.splice(e,1)}}this.doMultiSelect(false)}},selectIndex:function(b,d,e,c){if(this.autoComplete){this._updateItemsVisibility("")}this.listBox.selectIndex(b,d,e,c);this.renderSelection("mouse");this.selectedIndex=b;if(this.multiSelect){this.doMultiSelect()}},selectItem:function(b){if(this.autoComplete){this._updateItemsVisibility("")}if(this.listBox!=undefined){this.listBox.selectedIndex=-1;this.listBox.selectItem(b);this.selectedIndex=this.listBox.selectedIndex;this.renderSelection("mouse");if(this.multiSelect){this.doMultiSelect(false)}}},unselectItem:function(d){if(this.autoComplete){this._updateItemsVisibility("")}if(this.listBox!=undefined){this.listBox.unselectItem(d);this.renderSelection("mouse");if(this.multiSelect){var b=this.getItemByValue(d);if(b){var c=this.selectedItems.indexOf(b.value);if(c>=0){if(b.value===this.listBox.selectedValue){this.listBox.selectedValue=null}this.selectedItems.splice(c,1);this._selectedItems.splice(c,1)}}this.doMultiSelect(false)}}},checkItem:function(b){if(this.autoComplete){this._updateItemsVisibility("")}if(this.listBox!=undefined){this.listBox.checkItem(b)}},uncheckItem:function(b){if(this.autoComplete){this._updateItemsVisibility("")}if(this.listBox!=undefined){this.listBox.uncheckItem(b)}},indeterminateItem:function(b){if(this.autoComplete){this._updateItemsVisibility("")}if(this.listBox!=undefined){this.listBox.indeterminateItem(b)}},getSelectedValue:function(){return this.listBox.selectedValue},getSelectedIndex:function(){if(!this.multiSelect){return this.listBox.selectedIndex}else{if(this.remoteAutoComplete&&this.multiSelect&&this._selectedItems.length>0){return this.getSelectedItems()[0].index}if(this._selectedItems&&this._selectedItems.length>0){return this.getSelectedItems()[0].index}}},getSelectedItem:function(){if(!this.multiSelect){return this.getVisibleItem(this.listBox.selectedIndex)}else{if(this.remoteAutoComplete&&this.multiSelect&&this._selectedItems.length>0){return this.getSelectedItems()[0]}if(this._selectedItems&&this._selectedItems.length>0){return this.getSelectedItems()[0]}return null}},getSelectedItems:function(){if(this.remoteAutoComplete&&this.multiSelect){return this._selectedItems}var c=new Array();var b=this;a.each(this.selectedItems,function(){var d=b.getItemByValue(this);if(d){c.push(d)}else{var d=b._selectedItems[this];if(d){c.push(d)}}});return c},getCheckedItems:function(){return this.listBox.getCheckedItems()},checkIndex:function(b){this.listBox.checkIndex(b)},uncheckIndex:function(b){this.listBox.uncheckIndex(b)},indeterminateIndex:function(b){this.listBox.indeterminateIndex(b)},checkAll:function(){this.listBox.checkAll();this.renderSelection("mouse")},uncheckAll:function(){this.listBox.uncheckAll();this.renderSelection("mouse")},insertAt:function(c,b){if(c==null){return false}return this.listBox.insertAt(c,b)},addItem:function(b){return this.listBox.addItem(b)},removeAt:function(c){var b=this.listBox.removeAt(c);this.renderSelection("mouse");return b},removeItem:function(c){var b=this.listBox.removeItem(c);this.renderSelection("mouse");return b},updateItem:function(c,d){var b=this.listBox.updateItem(c,d);this.renderSelection("mouse");return b},updateAt:function(d,c){var b=this.listBox.updateAt(d,c);this.renderSelection("mouse");return b},ensureVisible:function(b){return this.listBox.ensureVisible(b)},disableAt:function(b){var c=this.getVisibleItem(b);if(c){this._disabledItems.push(c.value)}return this.listBox.disableAt(b)},enableAt:function(b){var c=this.getVisibleItem(b);if(c){this._disabledItems.splice(this._disabledItems.indexOf(c.value),1)}return this.listBox.enableAt(b)},disableItem:function(b){var b=this.getVisibleItem(b);if(b){this._disabledItems.push(b.value)}return this.listBox.disableItem(b)},enableItem:function(b){var b=this.getVisibleItem(b);if(b){this._disabledItems.splice(this._disabledItems.indexOf(b.value),1)}return this.listBox.enableItem(b)},_findPos:function(c){while(c&&(c.type=="hidden"||c.nodeType!=1||a.expr.filters.hidden(c))){c=c.nextSibling}if(c){var b=a(c).coord(true);return[b.left,b.top]}},testOffset:function(h,f,c){var g=h.outerWidth();var j=h.outerHeight();var i=a(window).width()+a(window).scrollLeft();var e=a(window).height()+a(window).scrollTop();if(f.left+g>i){if(g>this.host.width()){var d=this.host.coord().left;var b=g-this.host.width();f.left=d-b+2}}if(f.left<0){f.left=parseInt(this.host.coord().left)+"px"}f.top-=Math.min(f.top,(f.top+j>e&&e>j)?Math.abs(j+c+23):0);return f},open:function(){if(!this.isOpened()&&!this.opening){this.showListBox("api")}},close:function(){if(this.isOpened()){this.hideListBox("api")}},_getBodyOffset:function(){var c=0;var b=0;if(a("body").css("border-top-width")!="0px"){c=parseInt(a("body").css("border-top-width"));if(isNaN(c)){c=0}}if(a("body").css("border-left-width")!="0px"){b=parseInt(a("body").css("border-left-width"));if(isNaN(b)){b=0}}return{left:b,top:c}},showListBox:function(l){if(this.listBox.items&&this.listBox.items.length==0){return}if(l=="search"&&!this.autoComplete&&!this.remoteAutoComplete){if(this.autoDropDownHeight){this.container.height(this.listBoxContainer.height()+25)}}if(this.autoComplete||this.multiSelect&&!this.remoteAutoComplete){if(l!="search"){this._updateItemsVisibility("");if(this.multiSelect){var p=this.getVisibleItems();for(var t=0;t<p.length;t++){if(!p[t].disabled){this.ensureVisible(t);break}}}}}if(this.remoteAutoComplete){this.listBox.clearSelection()}if(l!="search"){this._oldvalue=this.listBox.selectedValue}a.jqx.aria(this,"aria-expanded",true);if(this.dropDownWidth=="auto"&&this.width!=null&&this.width.indexOf&&this.width.indexOf("%")!=-1){if(this.listBox.host.width()!=this.host.width()){var r=this.host.width();this.listBoxContainer.jqxListBox({width:r});this.container.width(parseInt(r)+25)}}var o=this;var h=this.listBoxContainer;var v=this.listBox;var e=a(window).scrollTop();var f=a(window).scrollLeft();var m=parseInt(this._findPos(this.host[0])[1])+parseInt(this.host.outerHeight())-1+"px";var d,q=parseInt(Math.round(this.host.coord(true).left));d=q+"px";var u=a.jqx.mobile.isSafariMobileBrowser()||a.jqx.mobile.isWindowsPhone();this.ishiding=false;var g=a.jqx.utilities.hasTransform(this.host);if(g||(u!=null&&u)){d=a.jqx.mobile.getLeftPos(this.element);m=a.jqx.mobile.getTopPos(this.element)+parseInt(this.host.outerHeight());if(a("body").css("border-top-width")!="0px"){m=parseInt(m)-this._getBodyOffset().top+"px"}if(a("body").css("border-left-width")!="0px"){d=parseInt(d)-this._getBodyOffset().left+"px"}}this.host.addClass(this.toThemeProperty("jqx-combobox-state-selected"));this.dropdownlistArrowIcon.addClass(this.toThemeProperty("jqx-icon-arrow-down-selected"));this.dropdownlistArrow.addClass(this.toThemeProperty("jqx-combobox-arrow-selected"));this.dropdownlistArrow.addClass(this.toThemeProperty("jqx-fill-state-pressed"));this.host.addClass(this.toThemeProperty("jqx-combobox-state-focus"));this.host.addClass(this.toThemeProperty("jqx-fill-state-focus"));this.dropdownlistContent.addClass(this.toThemeProperty("jqx-combobox-content-focus"));this.container.css("left",d);this.container.css("top",m);v._arrange();var c=true;var b=false;if(this.dropDownHorizontalAlignment=="right"||this.rtl){var k=this.container.outerWidth();var s=Math.abs(k-this.host.width());if(k>this.host.width()){this.container.css("left",25+parseInt(Math.round(q))-s+"px")}else{this.container.css("left",25+parseInt(Math.round(q))+s+"px")}}if(this.enableBrowserBoundsDetection){var j=this.testOffset(h,{left:parseInt(this.container.css("left")),top:parseInt(m)},parseInt(this.host.outerHeight()));if(parseInt(this.container.css("top"))!=j.top){b=true;h.css("top",23);h.addClass(this.toThemeProperty("jqx-popup-up"))}else{h.css("top",0)}this.container.css("top",j.top);this.container.css("top",j.top);if(parseInt(this.container.css("left"))!=j.left){this.container.css("left",j.left)}}if(this.animationType=="none"){this.container.css("display","block");a.data(document.body,"openedCombojqxListBoxParent",o);a.data(document.body,"openedCombojqxListBox"+o.element.id,h);h.css("margin-top",0);h.css("opacity",1)}else{this.container.css("display","block");var n=h.outerHeight();h.stop();if(this.animationType=="fade"){h.css("margin-top",0);h.css("opacity",0);h.animate({opacity:1},this.openDelay,function(){o.isanimating=false;o.opening=false;a.data(document.body,"openedCombojqxListBoxParent",o);a.data(document.body,"openedCombojqxListBox"+o.element.id,h)})}else{h.css("opacity",1);if(b){h.css("margin-top",n)}else{h.css("margin-top",-n)}this.isanimating=true;this.opening=true;h.animate({"margin-top":0},this.openDelay,function(){o.isanimating=false;o.opening=false;a.data(document.body,"openedCombojqxListBoxParent",o);a.data(document.body,"openedCombojqxListBox"+o.element.id,h)})}}v._renderItems();if(!b){this.host.addClass(this.toThemeProperty("jqx-rc-b-expanded"));h.addClass(this.toThemeProperty("jqx-rc-t-expanded"));this.dropdownlistArrow.addClass(this.toThemeProperty("jqx-rc-b-expanded"))}else{this.host.addClass(this.toThemeProperty("jqx-rc-t-expanded"));h.addClass(this.toThemeProperty("jqx-rc-b-expanded"));this.dropdownlistArrow.addClass(this.toThemeProperty("jqx-rc-t-expanded"))}h.addClass(this.toThemeProperty("jqx-fill-state-focus"));this._raiseEvent("0",v)},doMultiSelect:function(c){if(this.checkboxes){this.multiSelect=false}var e=this;if(!this.multiSelect){var g=e.dropdownlistContent.find(".jqx-button");var d="mousedown";if(this.touch){d=a.jqx.mobile.getTouchEventName("touchstart")}this.removeHandler(g,d);this.removeHandler(g.find(".jqx-icon-close"),d);g.remove();this.selectedItems=new Array();this._selectedItems=new Array();return}if(this.validateSelection){var k=this.validateSelection(this.listBox.selectedValue);if(!k){return}}var h=this.selectedItems;if(this.listBox.selectedValue){if(this.selectedItems.indexOf(this.listBox.selectedValue)===-1){var j=this.getItemByValue(this.listBox.selectedValue);if(j&&j.visible){this.selectedItems.push(this.listBox.selectedValue);this._selectedItems.push(j);this._raiseEvent("2",{index:j.index,item:j});this._raiseEvent("4",{index:j.index,item:j})}}this.listBox.selectedIndex=0}var f=this.listBox.items;if(!f){return}for(var b=0;b<f.length;b++){f[b].disabled=false;if(this.selectedItems.indexOf(f[b].value)>=0||this._disabledItems.indexOf(this.value)>=0){f[b].disabled=true}}this.listBox._renderItems();this.searchString="";this.input.val("");var f="";var d="mousedown";var g=e.dropdownlistContent.find(".jqx-button");if(this.touch){d=a.jqx.mobile.getTouchEventName("touchstart")}this.removeHandler(g,d);this.removeHandler(g.find(".jqx-icon-close"),d);g.remove();e.input.detach();if(this.selectedItems.length>0){e.input.css("width","25px");e.input.attr("placeholder","")}else{e.input.css("width","100%");e.input.attr("placeholder",this.placeHolder)}a.each(this.selectedItems,function(l){var n=e.getItemByValue(this);if(!n||e.remoteAutoComplete){n=e._selectedItems[l]}var p=a('<div style="overflow: hidden; float: left;"></div>');p.addClass(e.toThemeProperty("jqx-button"));p.addClass(e.toThemeProperty("jqx-combobox-multi-item"));p.addClass(e.toThemeProperty("jqx-fill-state-normal"));p.addClass(e.toThemeProperty("jqx-rc-all"));if(n){var q=n.label;if(e.renderSelectedItem){var i=e.renderSelectedItem(l,n);if(i){q=i}}if(p[0].innerHTML==""){p[0].innerHTML='<a data-value="'+n.value+'" style="float: left;" href="#">'+q+"</a>"}if(e.rtl){p[0].innerHTML='<a data-value="'+n.value+'" style="float: right;" href="#">'+q+"</a>"}var o=!e.rtl?"right":"left";if(e.showCloseButtons){var m='<div style="position: relative; overflow: hidden; float: '+o+'; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -7px; float: none; width: 16px; height: 16px;" class="'+e.toThemeProperty("jqx-icon-close")+'"></div></div>';if(a.jqx.browser.msie&&a.jqx.browser.version<8){m='<div style="position: relative; overflow: hidden; float: left; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -7px; float: none; width: 16px; height: 16px;" class="'+e.toThemeProperty("jqx-icon-close")+'"></div></div>'}if(e.rtl){var m='<div style="position: relative; overflow: hidden; float: '+o+'; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-top: -7px; float: none; width: 16px; height: 16px;" class="'+e.toThemeProperty("jqx-icon-close")+'"></div></div>';if(a.jqx.browser.msie&&a.jqx.browser.version<8){m='<div style="position: relative; overflow: hidden; float: left; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-top: -7px; float: none; width: 16px; height: 16px;" class="'+e.toThemeProperty("jqx-icon-close")+'"></div></div>'}}p[0].innerHTML+=m}}else{if(p[0].innerHTML==""){p[0].innerHTML='<a href="#"></a>'}}e.dropdownlistContent.append(p)});e.dropdownlistContent.append(e.input);e.input.val("");if(c!==false){e.input.focus();setTimeout(function(){e.input.focus()},10)}var g=e.dropdownlistContent.find(".jqx-button");if(this.touchMode===true){d="mousedown"}this.addHandler(g,d,function(l){if(l.target.className.indexOf("jqx-icon-close")>=0){return true}if(e.disabled){return true}var m=a(l.target).attr("data-value");var i=e.getItemByValue(m);if(i){e.listBox.selectedValue=null;e.listBox.clearSelection()}e.listBox.scrollTo(0,0);e.open();if(l.preventDefault){l.preventDefault()}if(l.stopPropagation){l.stopPropagation()}return false});this.addHandler(g.find(".jqx-icon-close"),d,function(p){if(e.disabled){return}var r=a(p.target).parent().parent().find("a").attr("data-value");var o=e.getItemByValue(r);if(o||(e.remoteAutoComplete&&!o&&e.selectedItems.indexOf(r)>=0)){e.listBox.selectedValue=null;var l=e.selectedItems.indexOf(r);var n=o&&o.index>=0?o.index:l;if(l>=0){e.selectedItems.splice(l,1);var q=e._selectedItems[l];if(!q){q=o}e._selectedItems.splice(l,1);e._raiseEvent("3",{index:n,type:"mouse",item:q});e._raiseEvent("4",{index:n,type:"mouse",item:q});e.doMultiSelect()}else{for(var m=0;m<e.selectedItems.length;m++){var q=e.selectedItems[m];if(q==r){e.selectedItems.splice(m,1);e._selectedItems.splice(m,1);e._raiseEvent("3",{index:n,type:"mouse",item:o});e._raiseEvent("4",{index:n,type:"mouse",item:o});e.doMultiSelect();break}}}}});e.dropdownlistArrow.height(this.host.height());e._updateInputSelection()},hideListBox:function(h){var f=this.listBoxContainer;var g=this.listBox;var c=this.container;if(this.container[0].style.display=="none"){return}a.jqx.aria(this,"aria-expanded",false);if(h=="keyboard"||h=="mouse"){this.listBox.searchString=""}if(h=="keyboard"||h=="mouse"&&this.multiSelect){this.doMultiSelect()}var d=this;a.data(document.body,"openedCombojqxListBox"+this.element.id,null);if(this.animationType=="none"){this.opening=false;this.container.css("display","none")}else{if(!this.ishiding){var b=f.outerHeight();f.css("margin-top",0);f.stop();this.opening=false;this.isanimating=true;var e=-b;if(parseInt(this.container.coord().top)<parseInt(this.host.coord().top)){e=b}if(this.animationType=="fade"){f.css({opacity:1});f.animate({opacity:0},this.closeDelay,function(){d.isanimating=false;c.css("display","none");d.ishiding=false})}else{f.animate({"margin-top":e},this.closeDelay,function(){d.isanimating=false;c.css("display","none");d.ishiding=false})}}}this.ishiding=true;this.host.removeClass(this.toThemeProperty("jqx-combobox-state-selected"));this.dropdownlistArrowIcon.removeClass(this.toThemeProperty("jqx-icon-arrow-down-selected"));this.dropdownlistArrow.removeClass(this.toThemeProperty("jqx-combobox-arrow-selected"));this.dropdownlistArrow.removeClass(this.toThemeProperty("jqx-fill-state-pressed"));if(!this.focused){this.host.removeClass(this.toThemeProperty("jqx-combobox-state-focus"));this.host.removeClass(this.toThemeProperty("jqx-fill-state-focus"));this.dropdownlistContent.removeClass(this.toThemeProperty("jqx-combobox-content-focus"))}this.host.removeClass(this.toThemeProperty("jqx-rc-b-expanded"));f.removeClass(this.toThemeProperty("jqx-rc-t-expanded"));this.host.removeClass(this.toThemeProperty("jqx-rc-t-expanded"));f.removeClass(this.toThemeProperty("jqx-rc-b-expanded"));f.removeClass(this.toThemeProperty("jqx-fill-state-focus"));this.dropdownlistArrow.removeClass(this.toThemeProperty("jqx-rc-t-expanded"));this.dropdownlistArrow.removeClass(this.toThemeProperty("jqx-rc-b-expanded"));this._raiseEvent("1",g)},closeOpenedListBox:function(e){var d=e.data.me;var b=a(e.target);var c=e.data.listbox;if(c==null){return true}if(a(e.target).ischildof(e.data.me.host)){return}var f=d;var g=false;a.each(b.parents(),function(){if(this.className!="undefined"){if(this.className.indexOf){if(this.className.indexOf("jqx-listbox")!=-1){g=true;return false}if(this.className.indexOf("jqx-combobox")!=-1){if(d.element.id==this.id){g=true}return false}}}});if(c!=null&&!g){if(d.isOpened()){d.hideListBox("api");d.input.blur()}}return true},loadFromSelect:function(b){this.listBox.loadFromSelect(b);this.clearSelection()},refresh:function(b){this._setSize();this._arrange();if(this.listBox){this.renderSelection()}},resize:function(){this._setSize();this._arrange()},_arrange:function(){var d=parseInt(this.host.width());var j=parseInt(this.host.height());var e=this.arrowSize;var f=this.arrowSize;var h=1;if(!this.showArrow){f=0;e=0;this.dropdownlistArrow.hide();h=0;this.host.css("cursor","arrow")}var b=d-f-1*h;if(b>0){this.dropdownlistContent[0].style.width=b+"px"}if(this.rtl){this.dropdownlistContent[0].style.width=(-1+b+"px")}this.dropdownlistContent[0].style.height=j+"px";this.dropdownlistContent[0].style.left="0px";this.dropdownlistContent[0].style.top="0px";this.dropdownlistArrow[0].style.width=f+1+"px";this.dropdownlistArrow[0].style.height=j+"px";this.dropdownlistArrow[0].style.left=1+b+"px";this.input[0].style.width="100%";if(!this.multiSelect){this.input.height(j)}var c=this.input.height();if(c==0){c=parseInt(this.input.css("font-size"))+3}if(this.input[0].className.indexOf("jqx-rc-all")==-1){this.input.addClass(this.toThemeProperty("jqx-rc-all"))}var i=parseInt(j)/2-parseInt(c)/2;if(i>0){}if(this.rtl){this.dropdownlistArrow.css("left","0px");this.dropdownlistContent.css("left",this.dropdownlistArrow.width());if(a.jqx.browser.msie&&a.jqx.browser.version<=8){this.dropdownlistContent.css("left",1+this.dropdownlistArrow.width())}}if(this.multiSelect){this.input.css("float","left");this.dropdownlistWrapper.parent().css("height","auto");this.dropdownlistContent.css("height","auto");this.dropdownlistWrapper.css("height","auto");this.dropdownlistContent.css("position","relative");this.dropdownlistContent.css("cursor","text");this.host.css("height","auto");this.host.css("min-height",this.height);this.dropdownlistContent.css("min-height",this.height);var j=parseInt(this.host.height());this.dropdownlistArrow.height(j);var g=parseInt(this.host.css("min-height"));var i=parseInt(g)/2-parseInt(c)/2;if(i>0){this.input.css("margin-top",i)}}},destroy:function(){if(this.source&&this.source.unbindBindingUpdate){this.source.unbindBindingUpdate(this.element.id);this.source.unbindBindingUpdate(this.listBoxContainer[0].id);this.source.unbindDownloadComplete(this.element.id);this.source.unbindDownloadComplete(this.listBoxContainer[0].id)}a.jqx.utilities.resize(this.host,null,true);this.removeHandler(this.listBoxContainer,"select");this.removeHandler(this.listBoxContainer,"unselect");this.removeHandler(this.listBoxContainer,"change");this.removeHandler(this.listBoxContainer,"bindingComplete");this.removeHandler(this.dropdownlistWrapper,"selectstart");this.removeHandler(this.dropdownlistWrapper,"mousedown");this.removeHandler(this.host,"keydown");this.removeHandler(this.listBoxContainer,"select");this.removeHandler(this.listBox.content,"click");this.removeHandlers();this.removeHandler(this.input,"keyup.textchange");this.listBoxContainer.jqxListBox("destroy");this.listBoxContainer.remove();this.host.removeClass();this.removeHandler(a(document),"mousedown."+this.id,this.closeOpenedListBox);if(this.touch){this.removeHandler(a(document),a.jqx.mobile.getTouchEventName("touchstart")+"."+this.id)}this.cinput.remove();delete this.cinput;this.dropdownlistArrow.remove();delete this.dropdownlistArrow;this.dropdownlistArrowIcon.remove();delete this.dropdownlistArrowIcon;delete this.dropdownlistWrapper;delete this.listBoxContainer;delete this.input;delete this.dropdownlistContent;delete this.comboStructure;this.container.remove();delete this.listBox;delete this.container;var b=a.data(this.element,"jqxComboBox");if(b){delete b.instance}this.host.removeData();this.host.remove();delete this.host;delete this.set;delete this.get;delete this.call;delete this.element},_raiseEvent:function(f,c){if(c==undefined){c={owner:null}}var d=this.events[f];args=c;args.owner=this;var e=new a.Event(d);e.owner=this;if(f==2||f==3||f==4||f==5){e.args=c}var b=this.host.trigger(e);return b},propertyChangedHandler:function(b,c,f,e){if(b.isInitialized==undefined||b.isInitialized==false){return}if(c=="itemHeight"){b.listBoxContainer.jqxListBox({itemHeight:e})}if(c=="renderSelectedItem"){b.renderSelection("mouse")}if(c=="renderer"){b.listBoxContainer.jqxListBox({renderer:e})}if(c=="enableSelection"){b.listBoxContainer.jqxListBox({enableSelection:e})}if(c=="enableHover"){b.listBoxContainer.jqxListBox({enableHover:e})}if(c==="touchMode"){b.listBoxContainer.jqxListBox({touchMode:e});b.touch=a.jqx.mobile.isTouchDevice();if(b.touchMode===true){b.touch=true}b._updateHandlers()}if(c=="multiSelect"){if(e){b.doMultiSelect(false)}else{b.doMultiSelect(false);b.dropdownlistWrapper.parent().css("height","100%");b.dropdownlistContent.css("height","100");b.dropdownlistWrapper.css("height","100");b.dropdownlistContent.css("position","relative");b.host.css("min-height",null);b._setSize();b._arrange()}}if(c=="showArrow"){b._arrange();if(b.multiSelect){b.doMultiSelect(false)}}if(c=="placeHolder"){b.input.attr("placeholder",b.placeHolder)}if(c=="popupZIndex"){b.listBoxContainer.css({zIndex:b.popupZIndex})}if(c=="promptText"){b.placeHolder=e}if(c=="autoOpen"){b._updateHandlers()}if(c=="renderer"){b.listBox.renderer=b.renderer}if(c=="itemHeight"){b.listBox.itemHeight=e}if(c=="source"){b.input.val("");b.listBoxContainer.jqxListBox({source:b.source});b.renderSelection("mouse");if(b.source==null){b.clearSelection()}if(b.multiSelect){b.selectedItems=new Array();b._selectedItems=new Array();b.doMultiSelect(false)}}if(c=="rtl"){if(e){b.dropdownlistArrow.css("float","left");b.dropdownlistContent.css("float","right")}else{b.dropdownlistArrow.css("float","right");b.dropdownlistContent.css("float","left")}b.listBoxContainer.jqxListBox({rtl:b.rtl})}if(c=="displayMember"||c=="valueMember"){b.listBoxContainer.jqxListBox({displayMember:b.displayMember,valueMember:b.valueMember});b.renderSelection("mouse")}if(c=="autoDropDownHeight"){b.listBoxContainer.jqxListBox({autoHeight:b.autoDropDownHeight});if(b.autoDropDownHeight){b.container.height(b.listBoxContainer.height()+25)}else{b.listBoxContainer.jqxListBox({height:b.dropDownHeight});b.container.height(parseInt(b.dropDownHeight)+25)}b.listBox._arrange();b.listBox._updatescrollbars()}if(c=="dropDownHeight"){if(!b.autoDropDownHeight){b.listBoxContainer.jqxListBox({height:b.dropDownHeight});b.container.height(parseInt(b.dropDownHeight)+25)}}if(c=="dropDownWidth"||c=="scrollBarSize"){var d=b.width;if(b.dropDownWidth!="auto"){d=b.dropDownWidth}b.listBoxContainer.jqxListBox({width:d,scrollBarSize:b.scrollBarSize});b.container.width(parseInt(d)+25)}if(c=="autoComplete"){b._resetautocomplete()}if(c=="checkboxes"){b.listBoxContainer.jqxListBox({checkboxes:b.checkboxes});if(b.checkboxes){b.input.attr("readonly",true);a.jqx.aria(b,"aria-readonly",true)}else{a.jqx.aria(b,"aria-readonly",false)}}if(c=="theme"&&e!=null){b.listBoxContainer.jqxListBox({theme:e});b.listBoxContainer.addClass(b.toThemeProperty("jqx-popup"));if(a.jqx.browser.msie){b.listBoxContainer.addClass(b.toThemeProperty("jqx-noshadow"))}a.jqx.utilities.setTheme(f,e,b.host)}if(c=="rtl"){b.render();b.refresh()}if(c=="width"||c=="height"){b._setSize();if(c=="width"){if(b.dropDownWidth=="auto"){var d=b.host.width();b.listBoxContainer.jqxListBox({width:d});b.container.width(parseInt(d)+25)}}b._arrange()}if(c=="selectedIndex"){b.listBox.selectIndex(e);b.renderSelection("mouse")}}})})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a) {
    a.jqx.jqxWidget("jqxNotification", "", {});
    a.extend(a.jqx._jqxNotification.prototype, {
        defineInstance: function() {
            var b = {
                width: "auto",
                height: "auto",
                left:650,//当position选择custom时生效，左边框距离
                top:450,//当position选择custom时生效，上边框距离
                appendContainer: null,
                position: "top-right",
                zIndex: 99999,
                browserBoundsOffset: 5,
                notificationOffset: 5,
                opacity: 0.9,
                hoverOpacity: 1,
                autoOpen: false,
                animationOpenDelay: 400,
                animationCloseDelay: 800,
                closeOnClick: true,
                autoClose: true,
                autoCloseDelay: 3000,
                showCloseButton: true,
                template: "info",
                icon: null,
                blink: false,
                disabled: false,
                rtl: false,
                events: ["open", "close", "click"]
            };
            a.extend(true, this, b);
            return b
        },
        createInstance: function(b) {
            var c = this;
            c.render();
            if (c.autoOpen == true) {
                c.open()
            }
        },
        render: function() {
            var c = this;
            if (c.host.hasClass("jqx-notification") == false) {
                c.host.addClass(c.toThemeProperty("jqx-rc-all"));
                c.host.addClass(c.toThemeProperty("jqx-notification"));
                c.host.css({
                    zIndex: c.zIndex,
                    display: "none",
                    opacity: c.opacity
                });
                c._container = c._notificationContainer();
                c._appendContent();
                c._setHoverFunctions();
                c._instances = new Array();
                c._instanceKey = 0;
                var b = a.data(document.body, "jqxNotifications");
                if (b == undefined) {
                    b = 0
                }
                a.data(document.body, "jqxNotifications", (b + 1))
            } else {
                c.refresh()
            }
        },
        refresh: function(b) {
            if (!b) {
                this._appendContent(true)
            }
        },
        open: function() {
            var c = this;
            if (c.disabled == false) {
                var b = c.host.clone();
                b.removeAttr("id");
                b.width(c.width);
                b.height(c.height);
                if (this.width != null && this.width.toString().indexOf("%") != -1) {
                    b.css("width", this.width)
                }
                if (this.height != null && this.height.toString().indexOf("%") != -1) {
                    b.css("height", this.height)
                }
                if (!c.appendContainer && (c.position == "bottom-left" || c.position == "bottom-right")) {
                    b.css("margin-top", c.notificationOffset);
                    c._container.prepend(b)
                } else {
                    b.css("margin-bottom", c.notificationOffset);
                    c._container.append(b)
                }
                c._addHandlers(b);
                b.fadeIn(c.animationOpenDelay,
                function() {
                    c._raiseEvent("0")
                });
                if (c.blink == true) {
                    b._blinkInterval = setInterval(function() {
                        b.fadeTo(400, c.opacity / 1.5,
                        function() {
                            b.fadeTo(400, c.opacity)
                        })
                    },
                    850)
                }
                if (c.autoClose == true) {
                    b._autoCloseTimeout = setTimeout(function() {
                        c._close(b)
                    },
                    c.autoCloseDelay)
                }
                b._key = c._instanceKey;
                c._instances[c._instanceKey] = b;
                c._instanceKey++
            }
        },
        closeAll: function() {
            var c = this;
            for (var b = 0; b < c._instances.length; b++) {
                if (c._instances[b]) {
                    c._close(c._instances[b])
                }
            }
        },
        closeLast: function() {
            var c = this;
            for (var b = c._instances.length; b >= 0; b--) {
                if (c._instances[b]) {
                    c._close(c._instances[b]);
                    break
                }
            }
        },
        destroy: function() {
            var c = this;
            c.closeAll();
            c.host.remove();
            var b = a.data(document.body, "jqxNotifications");
            a.data(document.body, "jqxNotifications", (b - 1));
            c._destroyContainers(b - 1)
        },
        propertyChangedHandler: function(c, d, h, f) {
            var e = this;
            if (f != h) {
                switch (d) {
                case "width":
                case "height":
                    var b = h.indexOf && h.indexOf("%") != -1;
                    b == undefined ? b = false: b = b;
                    var g = f.indexOf && f.indexOf("%") != -1;
                    g == undefined ? g = false: g = g;
                    if (g != b) {
                        e[d] = h
                    }
                    break;
                case "appendContainer":
                case "position":
                    e._container = e._notificationContainer();
                    break;
                case "browserBoundsOffset":
                    if (!e.appendContainer) {
                        e._position(e._container)
                    }
                    break;
                case "opacity":
                    e.host.css("opacity", f);
                    break;
                case "showCloseButton":
                case "template":
                case "icon":
                case "rtl":
                    e._appendContent(true);
                    break
                }
            }
        },
        _raiseEvent: function(h, e) {
            var g = this;
            var c = g.events[h];
            var f = new a.Event(c);
            f.owner = g;
            f.args = e;
            try {
                var b = g.host.trigger(f)
            } catch(d) {}
            return b
        },
        _close: function(b) {
            var c = this;
            if (c._instances[b._key]) {
                c._instances[b._key] = false;
                clearInterval(b._blinkInterval);
                clearTimeout(b._autoCloseTimeout);
                b.fadeOut(c.animationCloseDelay,
                function() {
                    c._removeHandlers(b);
                    b.remove();
                    c._raiseEvent("1")
                })
            }
        },
        _addHandlers: function(b) {
            var d = this;
            d.addHandler(b, "click.notification" + d.element.id,
            function(e) {
                d._raiseEvent("2");
                if (d.closeOnClick == true) {
                    d._close(b)
                }
            });
            d.addHandler(b, "mouseenter.notification" + d.element.id,
            function(e) {
                if (!b._blinkInterval) {
                    d.mouseenterFunction(b)
                }
            });
            d.addHandler(b, "mouseleave.notification" + d.element.id,
            function(e) {
                if (!b._blinkInterval && b.css("display") != "none") {
                    d.mouseleaveFunction(b)
                }
            });
            if (d.showCloseButton == true) {
                var c = b.find(".jqx-notification-close-button");
                d.addHandler(c, "click.notification" + d.element.id,
                function(e) {
                    e.stopPropagation();
                    d._close(b)
                })
            }
        },
        _removeHandlers: function(b) {
            var d = this;
            d.removeHandler(b, "click.notification" + d.element.id);
            d.removeHandler(b, "click.mouseenter" + d.element.id);
            d.removeHandler(b, "click.mouseleave" + d.element.id);
            var c = b.find(".jqx-notification-close-button");
            if (c.length > 0) {
                d.removeHandler(c, "click.notification" + d.element.id)
            }
        },
        _appendContent: function(g) {
            var j = this;
            var e;
            var b = j.host.html();
            if (!g) {
                e = j.host.children().detach()
            }
            if (g) {
                j.host.removeAttr("class");
                j.host.addClass(j.toThemeProperty("jqx-rc-all"));
                j.host.addClass(j.toThemeProperty("jqx-notification"))
            }
            var m = a("<table class='" + j.toThemeProperty("jqx-notification-table") + "'></table>");
            var d = a("<tr></tr>");
            m.append(d);
            var h = j.rtl ? "jqx-notification-content-rtl": "";
            if (!g) {
                var i = a("<td class='" + j.toThemeProperty("jqx-notification-content") + " " + h + "'></td>")
            } else {
                var i = j.host.find(".jqx-notification-content");
                b = i.html();
                e = i.detach();
                if (j.rtl) {
                    i.addClass("jqx-notification-content-rtl")
                } else {
                    i.removeClass("jqx-notification-content-rtl")
                }
            }
            d.html(i);
            var f = function() {
                if (j.rtl == false) {
                    k.addClass("jqx-notification-icon-ltr");
                    i.before(k)
                } else {
                    k.addClass("jqx-notification-icon-rtl");
                    i.after(k)
                }
            };
            var k;
            if (j.template) {
                j.host.addClass("jqx-widget");
                j.host.addClass("jqx-popup");
                j.host.addClass("jqx-notification-" + j.template);
                k = a("<td class='" + j.toThemeProperty("jqx-notification-icon") + " jqx-notification-icon-" + j.template + "'></td>");
                f()
            } else {
                j.host.addClass(j.toThemeProperty("jqx-widget"));
                j.host.addClass(j.toThemeProperty("jqx-popup"));
                j.host.addClass(j.toThemeProperty("jqx-fill-state-normal"));
                if (j.icon) {
                    k = a("<td class='" + j.toThemeProperty("jqx-notification-icon") + "'></td>");
                    j.icon.padding = j.icon.padding ? parseInt(j.icon.padding) : 5;
                    k.css({
                        width: (parseInt(j.icon.width) + j.icon.padding),
                        height: j.icon.height,
                        "background-image": "url('" + j.icon.url + "')"
                    });
                    f()
                }
            }
            if (j.showCloseButton == true) {
                var l;
                if (j.template) {
                    l = "jqx-notification-close-button jqx-notification-close-button-" + j.template
                } else {
                    l = j.toThemeProperty("jqx-icon-close") + " " + j.toThemeProperty("jqx-notification-close-button")
                }
                var c = a("<td class='" + j.toThemeProperty("jqx-notification-close-button-container") + "'><div class='" + l + " " + j.element.id + "CloseButton' title='Close'></div></td>");
                if (j.rtl == false) {
                    c.find("div").addClass("jqx-notification-close-button-ltr");
                    i.after(c)
                } else {
                    c.find("div").addClass("jqx-notification-close-button-rtl");
                    i.before(c)
                }
            }
            j.host[0].innerHTML = "";
            j.host.append(m);
            if (e.length > 0) {
                j.host.find(".jqx-notification-content").append(e)
            } else {
                j.host.find(".jqx-notification-content").html(b)
            }
        },
        _position: function(b) {
            var e = this;
            var g;
            var d;
            var f;
            var c;
            switch (e.position) {
            case "top-right":
                g = "";
                d = e.browserBoundsOffset;
                f = e.browserBoundsOffset;
                c = "";
                break;
            case "top-left":
                g = e.browserBoundsOffset;
                d = "";
                f = e.browserBoundsOffset;
                c = "";
                break;
            case "bottom-left":
                g = e.browserBoundsOffset;
                d = "";
                f = "";
                c = e.browserBoundsOffset;
                break;
            case "bottom-right":
                g = "";
                d = e.browserBoundsOffset;
                f = "";
                c = e.browserBoundsOffset;
                break;
            case "custom":
            	g = e.left;
                d = "";//e.browserBoundsOffset;
                f = e.top;//e.browserBoundsOffset;
                c = "";
                break;
            }
            b.css({
                left: g,
                right: d,
                top: f,
                bottom: c
            })
        },
        _notificationContainer: function() {
            var c = this;
            var b;
            if (!c.appendContainer) {
                b = a("#jqxNotificationDefaultContainer-" + c.position);
                if (b.length == 0) {
                    a("body").append("<div id='jqxNotificationDefaultContainer-" + c.position + "' class='jqx-notification-container' style='z-index:99999;'></div>");
                    b = a("#jqxNotificationDefaultContainer-" + c.position);
                    if (c.width.indexOf && c.width.indexOf("%") != -1) {
                        b.addClass(c.toThemeProperty("jqx-notification-container-full-width"))
                    }
                    if (c.height.indexOf && c.height.indexOf("%") != -1) {
                        b.addClass(c.toThemeProperty("jqx-notification-container-full-height"))
                    }
                    c._position(b)
                }
            } else {
                b = a(c.appendContainer);
                if (b.length == 0) {
                    throw new Error("jqxNotification: Invalid appendContainer jQuery Selector - " + c.appendContainer + "! Please, check whether the used ID or CSS Class name is correct.")
                }
            }
            return b
        },
        _destroyContainers: function(b) {
            if (b == 0) {
                a(".jqx-notification-container").remove()
            }
        },
        _setHoverFunctions: function() {
            var b = this;
            var c = false;
            if (a.jqx.browser.browser == "msie" && a.jqx.browser.version == "9.0") {
                c = true
            }
            if (c == false) {
                b.mouseenterFunction = function(d) {
                    d.fadeTo("fast", b.hoverOpacity)
                };
                b.mouseleaveFunction = function(d) {
                    d.fadeTo("fast", b.opacity)
                }
            } else {
                b.mouseenterFunction = function(d) {
                    d.css("filter", "alpha(opacity = " + (b.hoverOpacity * 100) + ")")
                };
                b.mouseleaveFunction = function(d) {
                    d.css("filter", "alpha(opacity = " + (b.opacity * 100) + ")")
                }
            }
        }
    })
})(jqxBaseFramework);
/*
jQWidgets v3.8.1 (2015-June)
Copyright (c) 2011-2015 jQWidgets.
License: http://jqwidgets.com/license/
*/

(function(a){a.jqx.jqxWidget("jqxTree","",{});a.extend(a.jqx._jqxTree.prototype,{defineInstance:function(){var b={items:new Array(),width:null,height:null,easing:"easeInOutCirc",animationShowDuration:"fast",animationHideDuration:"fast",treeElements:new Array(),disabled:false,enableHover:true,keyboardNavigation:true,enableKeyboardNavigation:true,toggleMode:"dblclick",source:null,checkboxes:false,checkSize:13,toggleIndicatorSize:16,hasThreeStates:false,selectedItem:null,touchMode:"auto",allowDrag:true,allowDrop:true,searchMode:"startswithignorecase",incrementalSearch:true,incrementalSearchDelay:700,animationHideDelay:0,submitCheckedItems:false,dragStart:null,dragEnd:null,rtl:false,dropAction:"default",events:["expand","collapse","select","initialized","added","removed","checkChange","dragEnd","dragStart"],aria:{"aria-activedescendant":{name:"getActiveDescendant",type:"string"},"aria-disabled":{name:"disabled",type:"boolean"}}};a.extend(true,this,b);return b},createInstance:function(c){var b=this;this.host.attr("role","tree");this.host.attr("data-role","treeview");this.enableKeyboardNavigation=this.keyboardNavigation;this.propertyChangeMap.disabled=function(f,h,g,j){if(b.disabled){b.host.addClass(b.toThemeProperty("jqx-tree-disabled"))}else{b.host.removeClass(b.toThemeProperty("jqx-tree-disabled"))}a.jqx.aria(b,"aria-disabled",j)};if(this.width!=null&&this.width.toString().indexOf("px")!=-1){this.host.width(this.width)}else{if(this.width!=undefined&&!isNaN(this.width)){this.host.width(this.width)}}if(this.height!=null&&this.height.toString().indexOf("px")!=-1){this.host.height(this.height)}else{if(this.height!=undefined&&!isNaN(this.height)){this.host.height(this.height)}}if(this.width!=null&&this.width.toString().indexOf("%")!=-1){this.host.width(this.width)}if(this.height!=null&&this.height.toString().indexOf("%")!=-1){this.host.height(this.height)}if(!this.host.attr("tabindex")){this.host.attr("tabIndex",1)}if(this.disabled){this.host.addClass(this.toThemeProperty("jqx-tree-disabled"));a.jqx.aria(this,"aria-disabled",true)}if(this.host.jqxDragDrop){jqxTreeDragDrop()}this.originalInnerHTML=this.element.innerHTML;this.createdTree=false;if(this.element.innerHTML.indexOf("UL")){var e=this.host.find("ul:first");if(e.length>0){this.createTree(e[0]);this.createdTree=true}}if(this.source!=null){var d=this.loadItems(this.source);this.element.innerHTML=d;var e=this.host.find("ul:first");if(e.length>0){this.createTree(e[0]);this.createdTree=true}}this._itemslength=this.items.length;if(!this.createdTree){if(this.host.find("ul").length==0){this.host.append(a("<ul></ul>"));var e=this.host.find("ul:first");if(e.length>0){this.createTree(e[0]);this.createdTree=true}this.createdTree=true}}if(this.createdTree==true){this._render();this._handleKeys()}this._updateCheckLayout()},checkItems:function(f,h){var e=this;if(f!=null){var d=0;var g=false;var b=0;var j=a(f.element).find("li");b=j.length;a.each(j,function(k){var l=e.itemMapping["id"+this.id].item;if(l.checked!=false){if(l.checked==null){g=true}d++}});if(f!=h){if(d==b){this.checkItem(f.element,true,"tree")}else{if(d>0){this.checkItem(f.element,null,"tree")}else{this.checkItem(f.element,false,"tree")}}}else{var c=h.checked;var j=a(h.element).find("li");a.each(j,function(){var k=e.itemMapping["id"+this.id].item;e.checkItem(this,c,"tree")})}this.checkItems(this._parentItem(f),h)}else{var c=h.checked;var j=a(h.element).find("li");a.each(j,function(){var k=e.itemMapping["id"+this.id].item;e.checkItem(this,c,"tree")})}},_getMatches:function(e,f){if(e==undefined||e.length==0){return -1}var c=this.items;var b=new Array();for(var d=0;d<c.length;d++){if(this._isVisible(c[d])&&!c[d].disabled){b.push(c[d])}}c=b;if(f!=undefined){c=c.slice(f)}var g=new Array();a.each(c,function(j){var k=this.label;if(!k){k=""}var h=a.jqx.string.startsWithIgnoreCase(k.toString(),e);if(h){g.push({id:this.id,element:this.element})}});return g},_handleKeys:function(){var b=this;this.addHandler(this.host,"keydown",function(d){var s=d.keyCode;if(b.keyboardNavigation||b.enableKeyboardNavigation){if(b.selectedItem!=null){var l=b.selectedItem.element;if(b.incrementalSearch&&(!(s>=33&&s<=40))){var t=-1;if(!b._searchString){b._searchString=""}if((s==8||s==46)&&b._searchString.length>=1){b._searchString=b._searchString.substr(0,b._searchString.length-1)}var h=String.fromCharCode(s);var o=(!isNaN(parseInt(h)));var n=false;if((s>=65&&s<=97)||o||s==8||s==32||s==46){if(!d.shiftKey){h=h.toLocaleLowerCase()}if(s!=8&&s!=32&&s!=46){if(!(b._searchString.length>0&&b._searchString.substr(0,1)==h)){b._searchString+=h}}if(s==32){b._searchString+=" "}b._searchTime=new Date();var r=b.selectedItem;if(r){var g=r.id;var m=-1;for(var k=0;k<b.items.length;k++){if(b.items[k].id==g){m=k+1;break}}var f=b._getMatches(b._searchString,m);if(f.length==0||(f.length>0&&f[0].id==g)){var f=b._getMatches(b._searchString)}}else{var f=b._getMatches(b._searchString)}if(f.length>0){var r=b.selectedItem;if(b.selectedItem&&b.selectedItem.id!=f[0].id){b.clearSelection();b.selectItem(f[0].element)}b._lastSearchString=b._searchString}}if(b._searchTimer!=undefined){clearTimeout(b._searchTimer)}if(s==27||s==13){b._searchString="";b._lastSearchString=""}b._searchTimer=setTimeout(function(){b._searchString="";b._lastSearchString=""},500);if(t>=0){return}if(n){return false}}switch(s){case 32:if(b.checkboxes){b.fromKey=true;var q=a(b.selectedItem.checkBoxElement).jqxCheckBox("checked");b.checkItem(b.selectedItem.element,!q,"tree");if(b.hasThreeStates){b.checkItems(b.selectedItem,b.selectedItem)}return false}return true;case 33:var j=b._getItemsOnPage();var p=b.selectedItem;for(var k=0;k<j;k++){p=b._prevVisibleItem(p)}if(p!=null){b.selectItem(p.element);b.ensureVisible(p.element)}else{b.selectItem(b._firstItem().element);b.ensureVisible(b._firstItem().element)}return false;case 34:var j=b._getItemsOnPage();var c=b.selectedItem;for(var k=0;k<j;k++){c=b._nextVisibleItem(c)}if(c!=null){b.selectItem(c.element);b.ensureVisible(c.element)}else{b.selectItem(b._lastItem().element);b.ensureVisible(b._lastItem().element)}return false;case 37:case 39:if((s==37&&!b.rtl)||(s==39&&b.rtl)){if(b.selectedItem.hasItems&&b.selectedItem.isExpanded){b.collapseItem(l)}else{var e=b._parentItem(b.selectedItem);if(e!=null){b.selectItem(e.element);b.ensureVisible(e.element)}}}if((s==39&&!b.rtl)||(s==37&&b.rtl)){if(b.selectedItem.hasItems){if(!b.selectedItem.isExpanded){b.expandItem(l)}else{var c=b._nextVisibleItem(b.selectedItem);if(c!=null){b.selectItem(c.element);b.ensureVisible(c.element)}}}}return false;case 13:if(b.selectedItem.hasItems){if(b.selectedItem.isExpanded){b.collapseItem(l)}else{b.expandItem(l)}}return false;case 36:b.selectItem(b._firstItem().element);b.ensureVisible(b._firstItem().element);return false;case 35:b.selectItem(b._lastItem().element);b.ensureVisible(b._lastItem().element);return false;case 38:var p=b._prevVisibleItem(b.selectedItem);if(p!=null){b.selectItem(p.element);b.ensureVisible(p.element)}return false;case 40:var c=b._nextVisibleItem(b.selectedItem);if(c!=null){b.selectItem(c.element);b.ensureVisible(c.element)}return false}}}})},_firstItem:function(){var d=null;var c=this;var f=this.host.find("ul:first");var e=a(f).find("li");for(i=0;i<=e.length-1;i++){var b=e[i];d=this.itemMapping["id"+b.id].item;if(c._isVisible(d)){return d}}return null},_lastItem:function(){var d=null;var c=this;var f=this.host.find("ul:first");var e=a(f).find("li");for(i=e.length-1;i>=0;i--){var b=e[i];d=this.itemMapping["id"+b.id].item;if(c._isVisible(d)){return d}}return null},_parentItem:function(d){if(d==null||d==undefined){return null}var c=d.parentElement;if(!c){return null}var b=null;a.each(this.items,function(){if(this.element==c){b=this;return false}});return b},_nextVisibleItem:function(c){if(c==null||c==undefined){return null}var b=c;while(b!=null){b=b.nextItem;if(this._isVisible(b)&&!b.disabled){return b}}return null},_prevVisibleItem:function(c){if(c==null||c==undefined){return null}var b=c;while(b!=null){b=b.prevItem;if(this._isVisible(b)&&!b.disabled){return b}}return null},_isVisible:function(c){if(c==null||c==undefined){return false}if(!this._isElementVisible(c.element)){return false}var b=this._parentItem(c);if(b==null){return true}if(b!=null){if(!this._isElementVisible(b.element)){return false}if(b.isExpanded){while(b!=null){b=this._parentItem(b);if(b!=null&&!this._isElementVisible(b.element)){return false}if(b!=null&&!b.isExpanded){return false}}}else{return false}}return true},_getItemsOnPage:function(){var d=0;var c=this.panel.jqxPanel("getVScrollPosition");var b=parseInt(this.host.height());var f=0;var e=this._firstItem();if(parseInt(a(e.element).height())>0){while(f<=b){f+=parseInt(a(e.element).outerHeight());d++}}return d},_isElementVisible:function(b){if(b==null){return false}if(a(b).css("display")!="none"&&a(b).css("visibility")!="hidden"){return true}return false},refresh:function(c){if(this.width!=null&&this.width.toString().indexOf("px")!=-1){this.host.width(this.width)}else{if(this.width!=undefined&&!isNaN(this.width)){this.host.width(this.width)}}if(this.height!=null&&this.height.toString().indexOf("px")!=-1){this.host.height(this.height)}else{if(this.height!=undefined&&!isNaN(this.height)){this.host.height(this.height)}}if(this.panel){if(this.width!=null&&this.width.toString().indexOf("%")!=-1){var b=this;this.panel.jqxPanel("width","100%");b.removeHandler(a(window),"resize.jqxtree"+b.element.id);b.addHandler(a(window),"resize.jqxtree"+b.element.id,function(){b._calculateWidth()})}else{this.panel.jqxPanel("width",this.host.width())}this.panel.jqxPanel("_arrange")}this._calculateWidth();if(a.jqx.isHidden(this.host)){var b=this;if(this._hiddenTimer){clearInterval(this._hiddenTimer)}this._hiddenTimer=setInterval(function(){if(!a.jqx.isHidden(b.host)){clearInterval(b._hiddenTimer);b._calculateWidth()}},100)}if(c!=true){if(this.checkboxes){this._updateCheckLayout(null)}}},resize:function(c,b){this.width=c;this.height=b;this.refresh()},loadItems:function(c){if(c==null){return}var b=this;this.items=new Array();var d="<ul>";a.map(c,function(e){if(e==undefined){return null}d+=b._parseItem(e)});d+="</ul>";return d},_parseItem:function(m){var g="";if(m==undefined){return null}var k=m.label;if(!m.label&&m.html){k=m.html}if(!k){k="Item"}if(typeof m==="string"){k=m}var h=false;if(m.expanded!=undefined&&m.expanded){h=true}var f=false;if(m.locked!=undefined&&m.locked){f=true}var d=false;if(m.selected!=undefined&&m.selected){d=true}var e=false;if(m.disabled!=undefined&&m.disabled){e=true}var l=false;if(m.checked!=undefined&&m.checked){l=true}var j=m.icon;var c=m.iconsize;g+="<li";if(h){g+=' item-expanded="true" '}if(f){g+=' item-locked="true" '}if(e){g+=' item-disabled="true" '}if(d){g+=' item-selected="true" '}if(c){g+=' item-iconsize="'+m.iconsize+'" '}if(j!=null&&j!=undefined){g+=' item-icon="'+j+'" '}if(m.label&&!m.html){g+=' item-label="'+k+'" '}if(m.value!=null){g+=' item-value="'+m.value+'" '}if(m.checked!=undefined){g+=' item-checked="'+l+'" '}var b="";if(m.id!=undefined){b=m.id;g+=' id="'+b+'" '}else{b=this.createID();g+=' id="'+b+'" '}g+=">"+k;if(m.items){g+=this.loadItems(m.items)}if(!this._valueList){this._valueList=new Array()}this._valueList[b]=m.value;g+="</li>";return g},ensureVisible:function(d){if(d==null||d==undefined){return}var c=this.panel.jqxPanel("getVScrollPosition");var e=this.panel.jqxPanel("getHScrollPosition");var b=parseInt(this.host.height());var f=a(d).position().top;if(f<=c||f>=b+c){this.panel.jqxPanel("scrollTo",e,f-b+a(d).outerHeight())}},_syncItems:function(c){this._visibleItems=new Array();var b=this;a.each(c,function(){var e=a(this);if(e.css("display")!="none"){var d=e.outerHeight();if(e.height()>0){var f=parseInt(e.offset().top);b._visibleItems[b._visibleItems.length]={element:this,top:f,height:d,bottom:f+d}}}})},hitTest:function(h,g){var d=this;var b=this;var f=null;var e=this.host.find(".jqx-item");this._syncItems(e);if(b._visibleItems){var c=parseInt(b.host.offset().left);var j=b.host.outerWidth();a.each(b._visibleItems,function(l){if(h>=c&&h<c+j){if(this.top+5<g&&g<this.top+this.height){var k=a(this.element).parents("li:first");if(k.length>0){f=b.getItem(k[0]);if(f!=null){f.height=this.height;f.top=this.top;return false}}}}})}return f},addBefore:function(b,d,c){return this.addBeforeAfter(b,d,true,c)},addAfter:function(b,d,c){return this.addBeforeAfter(b,d,false,c)},addBeforeAfter:function(o,r,q,n){var l=this;var m=new Array();if(r&&r.treeInstance!=undefined){r=r.element}if(!a.isArray(o)){m[0]=o}else{m=o}var g="";var p=this;a.each(m,function(){g+=p._parseItem(this)});var b=a(g);if(l.element.innerHTML.indexOf("UL")){var h=l.host.find("ul:first")}if(r==undefined&&r==null){h.append(b)}else{if(q){a(r).before(b)}else{a(r).after(b)}}var d=b;for(var k=0;k<d.length;k++){this._createItem(d[k]);var c=a(d[k]).find("li");if(c.length>0){for(var f=0;f<c.length;f++){this._createItem(c[f])}}}var e=function(j){p._refreshMapping(false);p._updateItemsNavigation();if(j&&p.allowDrag&&p._enableDragDrop){p._enableDragDrop()}if(p.selectedItem!=null){a(p.selectedItem.titleElement).addClass(p.toThemeProperty("jqx-fill-state-pressed"));a(p.selectedItem.titleElement).addClass(p.toThemeProperty("jqx-tree-item-selected"))}};if(n==false){e(true);this._raiseEvent("4",{items:this.getItems()});return}e(false);p._render();this._raiseEvent("4",{items:this.getItems()});if(p.checkboxes){p._updateCheckLayout(null)}},addTo:function(q,s,p){var n=this;var o=new Array();if(s&&s.treeInstance!=undefined){s=s.element}if(!a.isArray(q)){o[0]=q}else{o=q}var k="";var r=this;a.each(o,function(){k+=r._parseItem(this)});var b=a(k);if(n.element.innerHTML.indexOf("UL")){var l=n.host.find("ul:first")}if(s==undefined&&s==null){l.append(b)}else{s=a(s);var e=s.find("ul:first");if(e.length==0){ulElement=a("<ul></ul>");a(s).append(ulElement);e=s.find("ul:first");var t=n.itemMapping["id"+s[0].id].item;t.subtreeElement=e[0];t.hasItems=true;e.addClass(n.toThemeProperty("jqx-tree-dropdown"));if(r.rtl){e.addClass(n.toThemeProperty("jqx-tree-dropdown-rtl"))}e.append(b);var h=e.find("li:first");t.parentElement=h}else{e.append(b)}}var d=b;for(var m=0;m<d.length;m++){this._createItem(d[m]);var c=a(d[m]).find("li");if(c.length>0){for(var g=0;g<c.length;g++){this._createItem(c[g])}}}var f=function(j){r._refreshMapping(false);r._updateItemsNavigation();if(j&&r.allowDrag&&r._enableDragDrop){r._enableDragDrop()}if(r.selectedItem!=null){a(r.selectedItem.titleElement).addClass(r.toThemeProperty("jqx-fill-state-pressed"));a(r.selectedItem.titleElement).addClass(r.toThemeProperty("jqx-tree-item-selected"))}};if(p==false){f(true);this._raiseEvent("4",{items:this.getItems()});return}f(false);r._render();if(r.checkboxes){r._updateCheckLayout(null)}this._raiseEvent("4",{items:this.getItems()})},updateItem:function(e,j){var h=e.treeInstance!=undefined?e:this.getItem(e);if(!h){var d=e;e=j;j=d;var h=e.treeInstance!=undefined?e:this.getItem(e)}if(h){if(typeof(j)==="string"){j={label:j}}if(j.value){h.value=j.value}if(j.label){h.label=j.label;a.jqx.utilities.html(a(h.titleElement),j.label);var b=a.jqx.browser.msie&&a.jqx.browser.version<8;if(b){a(document.body).append(this._measureItem);this._measureItem.html(a(h.titleElement).text());var g=this._measureItem.width();if(h.icon){g+=20}if(a(a(h.titleElement).find("img")).length>0){g+=20}a(h.titleElement).css("max-width",g+"px");this._measureItem.remove()}}if(j.icon){if(a(h.element).children(".itemicon").length>0){a(h.element).find(".itemicon")[0].src=j.icon}else{var c=j.iconsize;if(!c){c=16}var f=a('<img width="'+c+'" height="'+c+'" style="float: left;" class="itemicon" src="'+j.icon+'"/>');a(h.titleElement).prepend(f);f.css("margin-right","4px");if(this.rtl){f.css("margin-right","0px");f.css("margin-left","4px");f.css("float","right")}}}if(j.expanded){this.expandItem(h)}if(j.disabled){this.disableItem(h)}if(j.selected){this.selectItem(h)}return true}return false},removeItem:function(b,d){if(b==undefined||b==null){return}if(b.treeInstance!=undefined){b=b.element}var e=this;var h=b.id;var c=-1;var f=this.getItem(b);if(f){c=this.items.indexOf(f);if(c!=-1){(function g(p){var n=-1;n=this.items.indexOf(p);if(n!=-1){this.items.splice(n,1)}var k=a(p.element).find("li");var j=k.length;var o=this;var l=new Array();if(j>0){a.each(k,function(q){var r=o.itemMapping["id"+this.id].item;l.push(r)});for(var m=0;m<l.length;m++){g.apply(this,[l[m]])}}}).apply(this,[f])}}if(this.host.find("#"+b.id).length>0){a(b).remove()}if(d==false){this._raiseEvent("5");return}e._updateItemsNavigation();if(e.allowDrag&&e._enableDragDrop){e._render(true,false)}else{e._render()}if(e.selectedItem!=null){if(e.selectedItem.element==b){a(e.selectedItem.titleElement).removeClass(e.toThemeProperty("jqx-fill-state-pressed"));a(e.selectedItem.titleElement).removeClass(e.toThemeProperty("jqx-tree-item-selected"));e.selectedItem=null}}this._raiseEvent("5");if(e.checkboxes){e._updateCheckLayout(null)}},clear:function(){this.items=new Array();this.itemMapping=new Array();var b=this.host.find("ul:first");if(b.length>0){b[0].innerHTML=""}this.selectedItem=null},disableItem:function(b){if(b==null){return false}if(b.treeInstance!=undefined){b=b.element}var c=this;a.each(c.items,function(){var d=this;if(d.element==b){d.disabled=true;a(d.titleElement).addClass(c.toThemeProperty("jqx-fill-state-disabled"));a(d.titleElement).addClass(c.toThemeProperty("jqx-tree-item-disabled"));if(c.checkboxes&&d.checkBoxElement){a(d.checkBoxElement).jqxCheckBox({disabled:true})}return false}})},_updateInputSelection:function(){if(this.input){if(this.selectedItem==null){this.input.val("")}else{var c=this.selectItem.value;if(c==null){c=this.selectedItem.label}this.input.val(c)}if(this.checkboxes){var b=this.getCheckedItems();if(this.submitCheckedItems){var f="";for(var d=0;d<b.length;d++){var e=b[d].value;if(e==null){e=b[d].label}if(d==b.length-1){f+=e}else{f+=e+","}}this.input.val(f)}}}},getCheckedItems:function(){var b=new Array();var c=this;a.each(c.items,function(){var d=this;if(d.checked){b.push(d)}});return b},getUncheckedItems:function(){var b=new Array();var c=this;a.each(c.items,function(){var d=this;if(!d.checked){b.push(d)}});return b},checkAll:function(){var b=this;a.each(b.items,function(){var c=this;if(!c.disabled){c.checked=true;a(c.checkBoxElement).jqxCheckBox("_setState",true)}});this._raiseEvent("6",{element:this,checked:true})},uncheckAll:function(){var b=this;a.each(b.items,function(){var c=this;if(!c.disabled){c.checked=false;a(c.checkBoxElement).jqxCheckBox("_setState",false)}});this._raiseEvent("6",{element:this,checked:false})},checkItem:function(d,f,b){if(d==null){return false}if(f===undefined){f=true}if(d.treeInstance!=undefined){d=d.element}var e=this;var c=false;var g=null;a.each(e.items,function(){var h=this;if(h.element==d&&!h.disabled){c=true;h.checked=f;g=h;a(h.checkBoxElement).jqxCheckBox({checked:f});return false}});if(c){this._raiseEvent("6",{element:d,checked:f});this._updateInputSelection()}if(b==undefined){if(g){if(this.hasThreeStates){this.checkItems(g,g)}}}},uncheckItem:function(b){this.checkItem(b,false)},enableItem:function(b){if(b==null){return false}if(b.treeInstance!=undefined){b=b.element}var c=this;a.each(c.items,function(){var d=this;if(d.element==b){d.disabled=false;a(d.titleElement).removeClass(c.toThemeProperty("jqx-fill-state-disabled"));a(d.titleElement).removeClass(c.toThemeProperty("jqx-tree-item-disabled"));if(c.checkboxes&&d.checkBoxElement){a(d.checkBoxElement).jqxCheckBox({disabled:false})}return false}})},enableAll:function(){var b=this;a.each(b.items,function(){var c=this;c.disabled=false;a(c.titleElement).removeClass(b.toThemeProperty("jqx-tree-item-disabled"));a(c.titleElement).removeClass(b.toThemeProperty("jqx-fill-state-disabled"));if(b.checkboxes&&c.checkBoxElement){a(c.checkBoxElement).jqxCheckBox({disabled:false})}})},lockItem:function(b){if(b==null){return false}var c=this;a.each(c.items,function(){var d=this;if(d.element==b){d.locked=true;return false}})},unlockItem:function(b){if(b==null){return false}var c=this;a.each(c.items,function(){var d=this;if(d.element==b){d.locked=false;return false}})},getItems:function(){return this.items},getItem:function(b){if(b==null||b==undefined){return null}if(this.itemMapping["id"+b.id]){var c=this.itemMapping["id"+b.id].item;return c}return null},isExpanded:function(b){if(b==null||b==undefined){return false}var c=this.itemMapping["id"+b.id].item;if(c!=null){return c.isExpanded}return false},isSelected:function(b){if(b==null||b==undefined){return false}var c=this.itemMapping["id"+b.id].item;if(c!=null){return c==this.selectedItem}return false},getPrevItem:function(c){var d=this.getItem(c);if(c.treeInstance!=undefined){d=c}var b=this._prevVisibleItem(d);return b},getNextItem:function(c){var d=this.getItem(c);if(c.treeInstance!=undefined){d=c}var b=this._nextVisibleItem(d);return b},getSelectedItem:function(b){return this.selectedItem},val:function(d){if(arguments.length==0||typeof(d)=="object"){return this.selectedItem}if(typeof d=="string"){var b=this.host.find("#"+d);if(b.length>0){var c=this.getItem(b[0]);this.selectItem(c)}}else{var c=this.getItem(d);this.selectItem(c)}},getActiveDescendant:function(){if(this.selectedItem){return this.selectedItem.element.id}return""},clearSelection:function(){this.selectItem(null)},selectItem:function(b){if(this.disabled){return}var c=this;if(b&&b.treeInstance!=undefined){b=b.element}if(b==null||b==undefined){if(c.selectedItem!=null){a(c.selectedItem.titleElement).removeClass(c.toThemeProperty("jqx-fill-state-pressed"));a(c.selectedItem.titleElement).removeClass(c.toThemeProperty("jqx-tree-item-selected"));c.selectedItem=null}return}if(this.selectedItem!=null&&this.selectedItem.element==b){return}var d=this.selectedItem!=null?this.selectedItem.element:null;if(d){a(d).removeAttr("aria-selected")}a.each(c.items,function(){var e=this;this.selected=false;if(!e.disabled){if(e.element==b){if(c.selectedItem==null||(c.selectedItem!=null&&c.selectedItem.titleElement!=e.titleElement)){if(c.selectedItem!=null){a(c.selectedItem.titleElement).removeClass(c.toThemeProperty("jqx-fill-state-pressed"));a(c.selectedItem.titleElement).removeClass(c.toThemeProperty("jqx-tree-item-selected"))}a(e.titleElement).addClass(c.toThemeProperty("jqx-fill-state-pressed"));a(e.titleElement).addClass(c.toThemeProperty("jqx-tree-item-selected"));c.selectedItem=e;this.selected=true;a(e.element).attr("aria-selected","true");a.jqx.aria(c,"aria-activedescendant",e.element.id)}}}});this._updateInputSelection();this._raiseEvent("2",{element:b,prevElement:d})},collapseAll:function(){this.isUpdating=true;var d=this;var b=d.items;var c=this.animationHideDuration;this.animationHideDuration=0;a.each(b,function(){var e=this;if(e.isExpanded==true){d._collapseItem(d,e)}});setTimeout(function(){d.isUpdating=false;d._calculateWidth()},this.animationHideDuration);this.animationHideDuration=c},expandAll:function(){var c=this;this.isUpdating=true;var b=this.animationShowDuration;this.animationShowDuration=0;a.each(this.items,function(){var d=this;if(d.hasItems){c._expandItem(c,d)}});setTimeout(function(){c.isUpdating=false;c._calculateWidth()},this.animationShowDuration);this.animationShowDuration=b},collapseItem:function(b){if(b==null){return false}if(b.treeInstance!=undefined){b=b.element}var c=this;a.each(this.items,function(){var d=this;if(d.isExpanded==true&&d.element==b){c._collapseItem(c,d);return false}});return true},expandItem:function(b){if(b==null){return false}if(b.treeInstance!=undefined){b=b.element}var c=this;a.each(c.items,function(){var d=this;if(d.isExpanded==false&&d.element==b&&!d.disabled&&!d.locked){c._expandItem(c,d);if(d.parentElement){c.expandItem(d.parentElement)}}});return true},_getClosedSubtreeOffset:function(c){var b=a(c.subtreeElement);var e=-b.outerHeight();var d=-b.outerWidth();d=0;return{left:d,top:e}},_collapseItem:function(g,k,d,b){if(g==null||k==null){return false}if(k.disabled){return false}if(g.disabled){return false}if(g.locked){return false}var e=a(k.subtreeElement);var l=this._getClosedSubtreeOffset(k);var h=l.top;var c=l.left;$treeElement=a(k.element);var f=g.animationHideDelay;f=0;if(e.data("timer").show!=null){clearTimeout(e.data("timer").show);e.data("timer").show=null}var j=function(){k.isExpanded=false;if(g.checkboxes){var n=e.find(".chkbox");n.stop();n.css("opacity",1);e.find(".chkbox").animate({opacity:0},50)}var m=a(k.arrow);g._arrowStyle(m,"",k.isExpanded);e.slideUp(g.animationHideDuration,function(){k.isCollapsing=false;g._calculateWidth();var o=a(k.arrow);g._arrowStyle(o,"",k.isExpanded);e.hide();g._raiseEvent("1",{element:k.element})})};if(f>0){e.data("timer").hide=setTimeout(function(){j()},f)}else{j()}},_expandItem:function(g,k){if(g==null||k==null){return false}if(k.isExpanded){return false}if(k.locked){return false}if(k.disabled){return false}if(g.disabled){return false}var e=a(k.subtreeElement);if((e.data("timer"))!=null&&e.data("timer").hide!=null){clearTimeout(e.data("timer").hide)}var j=a(k.element);var h=0;var d=0;if(parseInt(e.css("top"))==h){k.isExpanded=true;return}var c=a(k.arrow);g._arrowStyle(c,"",k.isExpanded);if(g.checkboxes){var f=e.find(".chkbox");f.stop();f.css("opacity",0);f.animate({opacity:1},g.animationShowDuration)}e.slideDown(g.animationShowDuration,g.easing,function(){var l=a(k.arrow);k.isExpanded=true;g._arrowStyle(l,"",k.isExpanded);k.isExpanding=false;g._raiseEvent("0",{element:k.element});g._calculateWidth()});if(g.checkboxes){g._updateCheckItemLayout(k);if(k.subtreeElement){var b=a(k.subtreeElement).find("li");a.each(b,function(){var l=g.getItem(this);if(l!=null){g._updateCheckItemLayout(l)}})}}},_calculateWidth:function(){var f=this;var g=this.checkboxes?20:0;var e=0;if(this.isUpdating){return}a.each(this.items,function(){var h=a(this.element).height();if(h!=0){var l=a(this.titleElement).outerWidth()+10+g+(1+this.level)*20;e=Math.max(e,l);if(this.hasItems){var j=parseInt(a(this.titleElement).css("padding-top"));if(isNaN(j)){j=0}j=j*2;j+=2;var k=(j+a(this.titleElement).height())/2-17/2;if(a.jqx.browser.msie&&a.jqx.browser.version<9){a(this.arrow).css("margin-top","3px")}else{if(parseInt(k)>=0){a(this.arrow).css("margin-top",parseInt(k)+"px")}}}}});if(this.toggleIndicatorSize>16){e=e+this.toggleIndicatorSize-16}if(f.panel){if(e>this.host.width()){var b=e-this.host.width();var d=f.panel.jqxPanel("vScrollBar").css("visibility")!=="hidden"?10:0;b+=d;f.panel.jqxPanel({horizontalScrollBarMax:b})}else{f.panel.jqxPanel({horizontalScrollBarMax:0})}}this.host.find("ul:first").width(e);var c=this.host.width()-30;if(c>0){this.host.find("ul:first").css("min-width",c)}if(f.panel){f.panel.jqxPanel("_arrange")}},_arrowStyle:function(c,h,b){var e=this;if(c.length>0){c.removeClass();var g="";if(h=="hover"){g="-"+h}var f=b?"-expand":"-collapse";var d="jqx-tree-item-arrow"+f+g;c.addClass(e.toThemeProperty(d));if(!this.rtl){var f=!b?"-right":"-down";c.addClass(e.toThemeProperty("jqx-icon-arrow"+f+""))}if(this.rtl){c.addClass(e.toThemeProperty(d+"-rtl"));var f=!b?"-left":"-down";c.addClass(e.toThemeProperty("jqx-icon-arrow"+f+""))}}},_initialize:function(f,c){var e=this;var d=0;this.host.addClass(e.toThemeProperty("jqx-widget"));this.host.addClass(e.toThemeProperty("jqx-widget-content"));this.host.addClass(e.toThemeProperty("jqx-tree"));this._updateDisabledState();var b=a.jqx.browser.msie&&a.jqx.browser.version<8;a.each(this.items,function(){var m=this;$element=a(m.element);var k=null;if(e.checkboxes&&!m.hasItems&&m.checkBoxElement){a(m.checkBoxElement).css("margin-left","0px")}if(!b){if(!m.hasItems){if(!e.rtl){m.element.style.marginLeft=parseInt(e.toggleIndicatorSize)+"px"}else{m.element.style.marginRight=parseInt(e.toggleIndicatorSize)+"px"}var j=a(m.arrow);if(j.length>0){j.remove();m.arrow=null}return true}else{if(!e.rtl){m.element.style.marginLeft="0px"}else{m.element.style.marginRight="0px"}}}else{if(!m.hasItems&&a(m.element).find("ul").length>0){a(m.element).find("ul").remove()}}var j=a(m.arrow);if(j.length>0){j.remove()}k=a('<span style="height: 17px; border: none; background-color: transparent;" id="arrow'+$element[0].id+'"></span>');k.prependTo($element);if(!e.rtl){k.css("float","left")}else{k.css("float","right")}k.css("clear","both");k.width(e.toggleIndicatorSize);e._arrowStyle(k,"",m.isExpanded);var l=parseInt(a(this.titleElement).css("padding-top"));if(isNaN(l)){l=0}l=l*2;l+=2;var n=(l+a(this.titleElement).height())/2-17/2;if(a.jqx.browser.msie&&a.jqx.browser.version<9){k.css("margin-top","3px")}else{if(parseInt(n)>=0){k.css("margin-top",parseInt(n)+"px")}}$element.addClass(e.toThemeProperty("jqx-disableselect"));k.addClass(e.toThemeProperty("jqx-disableselect"));var g="click";var h=e.isTouchDevice();if(h){g=a.jqx.mobile.getTouchEventName("touchend")}e.addHandler(k,g,function(){if(!m.isExpanded){e._expandItem(e,m)}else{e._collapseItem(e,m)}return false});e.addHandler(k,"selectstart",function(){return false});e.addHandler(k,"mouseup",function(){if(!h){return false}});m.hasItems=a(m.element).find("li").length>0;m.arrow=k[0];if(!m.hasItems){k.css("visibility","hidden")}$element.css("float","none")})},_getOffset:function(b){var f=a(window).scrollTop();var h=a(window).scrollLeft();var c=a.jqx.mobile.isSafariMobileBrowser();var g=a(b).offset();var e=g.top;var d=g.left;if(c!=null&&c){return{left:d-h,top:e-f}}else{return a(b).offset()}},_renderHover:function(c,e,b){var d=this;if(!b){var f=a(e.titleElement);d.addHandler(f,"mouseenter",function(){if(!e.disabled&&d.enableHover&&!d.disabled){f.addClass(d.toThemeProperty("jqx-fill-state-hover"));f.addClass(d.toThemeProperty("jqx-tree-item-hover"))}});d.addHandler(f,"mouseleave",function(){if(!e.disabled&&d.enableHover&&!d.disabled){f.removeClass(d.toThemeProperty("jqx-fill-state-hover"));f.removeClass(d.toThemeProperty("jqx-tree-item-hover"))}})}},_updateDisabledState:function(){if(this.disabled){this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled"))}else{this.host.removeClass(this.toThemeProperty("jqx-fill-state-disabled"))}},_addInput:function(){if(this.input==null){var b=this.host.attr("name");if(b){this.host.attr("name","")}this.input=a("<input type='hidden'/>");this.host.append(this.input);this.input.attr("name",b);this._updateInputSelection()}},render:function(){this._updateItemsNavigation();this._render()},_render:function(f,j){if(a.jqx.browser.msie&&a.jqx.browser.version<8){var g=this;a.each(this.items,function(){var n=a(this.element);var p=n.parent();var m=parseInt(this.titleElement.css("margin-left"))+this.titleElement[0].scrollWidth+13;n.css("min-width",m);var o=parseInt(p.css("min-width"));if(isNaN(o)){o=0}var l=n.css("min-width");if(o<parseInt(n.css("min-width"))){p.css("min-width",l)}this.titleElement[0].style.width=null})}var h=1000;var c=[5,5];var g=this;a.data(g.element,"animationHideDelay",g.animationHideDelay);a.data(document.body,"treeel",this);this._initialize();var d=this.isTouchDevice();if(d&&this.toggleMode=="dblclick"){this.toggleMode="click"}if(f==undefined||f==true){a.each(this.items,function(){g._updateItemEvents(g,this)})}if(this.allowDrag&&this._enableDragDrop&&(j==undefined||j==true)){this._enableDragDrop()}this._addInput();if(this.host.jqxPanel){if(this.host.find("#panel"+this.element.id).length>0){this.panel.jqxPanel({touchMode:this.touchMode});this.panel.jqxPanel("refresh");return}this.host.find("ul:first").wrap('<div style="background-color: transparent; overflow: hidden; width: 100%; height: 100%;" id="panel'+this.element.id+'"></div>');var b=this.host.find("div:first");var k="fixed";if(this.height==null||this.height=="auto"){k="verticalwrap"}if(this.width==null||this.width=="auto"){if(k=="fixed"){k="horizontalwrap"}else{k="wrap"}}b.jqxPanel({rtl:this.rtl,theme:this.theme,width:"100%",height:"100%",touchMode:this.touchMode,sizeMode:k});if(a.jqx.browser.msie&&a.jqx.browser.version<8){b.jqxPanel("content").css("left","0px")}b.data({nestedWidget:true});if(this.height==null||(this.height!=null&&this.height.toString().indexOf("%")!=-1)){if(this.isTouchDevice()){this.removeHandler(b,a.jqx.mobile.getTouchEventName("touchend")+".touchScroll touchcancel.touchScroll");this.removeHandler(b,a.jqx.mobile.getTouchEventName("touchmove")+".touchScroll");this.removeHandler(b,a.jqx.mobile.getTouchEventName("touchstart")+".touchScroll")}}var e=a.data(b[0],"jqxPanel").instance;if(e!=null){this.vScrollInstance=e.vScrollInstance;this.hScrollInstance=e.hScrollInstance}this.panelInstance=e;if(a.jqx.browser.msie&&a.jqx.browser.version<8){this.host.attr("hideFocus",true);this.host.find("div").attr("hideFocus",true);this.host.find("ul").attr("hideFocus",true)}b[0].className="";this.panel=b}this._raiseEvent("3",this)},focus:function(){try{this.host.focus()}catch(b){}},_updateItemEvents:function(h,k){var b=this.isTouchDevice();if(b){this.toggleMode=a.jqx.mobile.getTouchEventName("touchend")}var j=a(k.element);if(h.enableRoundedCorners){j.addClass(h.toThemeProperty("jqx-rc-all"))}var e=!b?"mousedown":a.jqx.mobile.getTouchEventName("touchend");if(h.touchMode===true){h.removeHandler(a(k.checkBoxElement),"mousedown")}h.removeHandler(a(k.checkBoxElement),e);h.addHandler(a(k.checkBoxElement),e,function(l){if(!h.disabled){if(!this.treeItem.disabled){this.treeItem.checked=!this.treeItem.checked;h.checkItem(this.treeItem.element,this.treeItem.checked,"tree");if(h.hasThreeStates){h.checkItems(this.treeItem,this.treeItem)}}}return false});var c=a(k.titleElement);h.removeHandler(j);var f=this.allowDrag&&this._enableDragDrop;if(!f){h.removeHandler(c)}else{h.removeHandler(c,"mousedown.item");h.removeHandler(c,"click");h.removeHandler(c,"dblclick");h.removeHandler(c,"mouseenter");h.removeHandler(c,"mouseleave")}h._renderHover(j,k,b);var d=a(k.subtreeElement);if(d.length>0){var g=k.isExpanded?"block":"none";d.css({overflow:"hidden",display:g});d.data("timer",{})}h.addHandler(c,"selectstart",function(l){return false});if(a.jqx.browser.opera){h.addHandler(c,"mousedown.item",function(l){return false})}if(h.toggleMode!="click"){h.addHandler(c,"click",function(l){h.selectItem(k.element);if(h.panel!=null){h.panel.jqxPanel({focused:true})}c.focus()})}h.addHandler(c,h.toggleMode,function(l){if(d.length>0){clearTimeout(d.data("timer").hide)}if(h.panel!=null){h.panel.jqxPanel({focused:true})}h.selectItem(k.element);if(k.isExpanding==undefined){k.isExpanding=false}if(k.isCollapsing==undefined){k.isCollapsing=false}if(d.length>0){if(!k.isExpanded){if(false==k.isExpanding){k.isExpanding=true;h._expandItem(h,k)}}else{if(false==k.isCollapsing){k.isCollapsing=true;h._collapseItem(h,k,true)}}return false}})},isTouchDevice:function(){if(this._isTouchDevice!=undefined){return this._isTouchDevice}var b=a.jqx.mobile.isTouchDevice();if(this.touchMode==true){b=true}else{if(this.touchMode==false){b=false}}this._isTouchDevice=b;return b},createID:function(){return a.jqx.utilities.createId()},createTree:function(b){if(b==null){return}var d=this;var f=a(b).find("li");var c=0;this.items=new Array();this.itemMapping=new Array();a(b).addClass(d.toThemeProperty("jqx-tree-dropdown-root"));if(this.rtl){a(b).addClass(d.toThemeProperty("jqx-tree-dropdown-root-rtl"))}if(this.rtl||a.jqx.browser.msie&&a.jqx.browser.version<8){this._measureItem=a("<span style='position: relative; visibility: hidden;'></span>");this._measureItem.addClass(this.toThemeProperty("jqx-widget"));this._measureItem.addClass(this.toThemeProperty("jqx-fill-state-normal"));this._measureItem.addClass(this.toThemeProperty("jqx-tree-item"));this._measureItem.addClass(this.toThemeProperty("jqx-item"));a(document.body).append(this._measureItem)}if(a.jqx.browser.msie&&a.jqx.browser.version<8){}for(var e=0;e<f.length;e++){this._createItem(f[e])}if(this.rtl||a.jqx.browser.msie&&a.jqx.browser.version<8){this._measureItem.remove()}this._updateItemsNavigation();this._updateCheckStates()},_updateCheckLayout:function(c){var b=this;if(!this.checkboxes){return}a.each(this.items,function(){if(this.level==c||c==undefined){b._updateCheckItemLayout(this)}})},_updateCheckItemLayout:function(b){if(this.checkboxes){if(a(b.titleElement).css("display")!="none"){var c=a(b.checkBoxElement);var d=a(b.titleElement).outerHeight()/2-1-parseInt(this.checkSize)/2;c.css("margin-top",d);if(!this.rtl){if(a.jqx.browser.msie&&a.jqx.browser.version<8){b.titleElement.css("margin-left",parseInt(this.checkSize)+25)}else{if(b.hasItems){c.css("margin-left",this.toggleIndicatorSize)}}}}}},_updateCheckStates:function(){var b=this;if(b.hasThreeStates){a.each(this.items,function(){b._updateCheckState(this)})}else{a.each(this.items,function(){if(this.checked==null){b.checkItem(this.element,false,"tree")}})}},_updateCheckState:function(e){if(e==null||e==undefined){return}var d=this;var c=0;var f=false;var b=0;var g=a(e.element).find("li");b=g.length;if(e.checked&&b>0){a.each(g,function(h){var k=d.itemMapping["id"+this.id].item;var j=k.element.getAttribute("item-checked");if(j==undefined||j==null||j=="true"||j==true){d.checkItem(k.element,true,"tree")}})}a.each(g,function(h){var j=d.itemMapping["id"+this.id].item;if(j.checked!=false){if(j.checked==null){f=true}c++}});if(b>0){if(c==b){this.checkItem(e.element,true,"tree")}else{if(c>0){this.checkItem(e.element,null,"tree")}else{this.checkItem(e.element,false,"tree")}}}},_updateItemsNavigation:function(){var g=this.host.find("ul:first");var f=a(g).find("li");var c=0;for(var d=0;d<f.length;d++){var b=f[d];if(this.itemMapping["id"+b.id]){var e=this.itemMapping["id"+b.id].item;if(!e){continue}e.prevItem=null;e.nextItem=null;if(d>0){if(this.itemMapping["id"+f[d-1].id]){e.prevItem=this.itemMapping["id"+f[d-1].id].item}}if(d<f.length-1){if(this.itemMapping["id"+f[d+1].id]){e.nextItem=this.itemMapping["id"+f[d+1].id].item}}}}},_applyTheme:function(e,h){var f=this;this.host.removeClass("jqx-tree-"+e);this.host.removeClass("jqx-widget-"+e);this.host.removeClass("jqx-widget-content-"+e);this.host.addClass(f.toThemeProperty("jqx-tree"));this.host.addClass(f.toThemeProperty("jqx-widget"));var b=this.host.find("ul:first");a(b).removeClass(f.toThemeProperty("jqx-tree-dropdown-root-"+e));a(b).addClass(f.toThemeProperty("jqx-tree-dropdown-root"));if(this.rtl){a(b).removeClass(f.toThemeProperty("jqx-tree-dropdown-root-rtl-"+e));a(b).addClass(f.toThemeProperty("jqx-tree-dropdown-root-rtl"))}var g=a(b).find("li");for(var d=0;d<g.length;d++){var c=g[d];a(c).children().each(function(){if(this.tagName=="ul"||this.tagName=="UL"){a(this).removeClass(f.toThemeProperty("jqx-tree-dropdown-"+e));a(this).addClass(f.toThemeProperty("jqx-tree-dropdown"));if(f.rtl){a(this).removeClass(f.toThemeProperty("jqx-tree-dropdown-rtl-"+e));a(this).addClass(f.toThemeProperty("jqx-tree-dropdown-rtl"))}return false}})}a.each(this.items,function(){var l=this;var k=a(l.element);k.removeClass(f.toThemeProperty("jqx-tree-item-li-"+e));k.addClass(f.toThemeProperty("jqx-tree-item-li"));if(this.rtl){k.removeClass(f.toThemeProperty("jqx-tree-item-li-"+e));k.addClass(f.toThemeProperty("jqx-tree-item-li"))}a(l.titleElement).removeClass(f.toThemeProperty("jqx-tree-item-"+e));a(l.titleElement).addClass(f.toThemeProperty("jqx-tree-item"));a(l.titleElement).removeClass("jqx-item-"+e);a(l.titleElement).addClass(f.toThemeProperty("jqx-item"));var j=a(l.arrow);if(j.length>0){f._arrowStyle(j,"",l.isExpanded)}if(l.checkBoxElement){a(l.checkBoxElement).jqxCheckBox({theme:h})}if(f.enableRoundedCorners){k.removeClass("jqx-rc-all-"+e);k.addClass(f.toThemeProperty("jqx-rc-all"))}});if(this.host.jqxPanel){this.panel.jqxPanel({theme:h})}},_refreshMapping:function(f,q){var e=this.host.find("li");var b=new Array();var p=new Array();var h=a.data(document.body,"treeItemsStorage");var l=this;for(var j=0;j<e.length;j++){var k=e[j];var d=a(k);var o=h[k.id];if(o==null){continue}p[p.length]=o;if(f==undefined||f==true){this._updateItemEvents(this,o)}o.level=d.parents("li").length;o.treeInstance=this;var n=null;var g=null;if(o.titleElement[0].className.indexOf("jqx-fill-state-pressed")!=-1){a(o.titleElement).removeClass(l.toThemeProperty("jqx-fill-state-pressed"));a(o.titleElement).removeClass(l.toThemeProperty("jqx-tree-item-selected"))}var c=d.children();c.each(function(){if(this.tagName=="ul"||this.tagName=="UL"){o.subtreeElement=this;a(this).addClass(l.toThemeProperty("jqx-tree-dropdown"));if(l.rtl){a(this).addClass(l.toThemeProperty("jqx-tree-dropdown-rtl"))}return false}});var m=d.parents();m.each(function(){if((this.tagName=="li"||this.tagName=="LI")){g=this.id;n=this;return false}});o.parentElement=n;o.parentId=g;o.hasItems=a(o.element).find("li").length>0;if(o!=null){b[j]={element:k,item:o};b["id"+k.id]=b[j]}}this.itemMapping=b;this.items=p},_createItem:function(c){if(c==null||c==undefined){return}var r=c.id;if(!r){r=this.createID()}var F=c;var m=a(c);F.id=r;var g=a.data(document.body,"treeItemsStorage");if(g==undefined){g=new Array()}var x=this.items.length;this.items[x]=new a.jqx._jqxTree.jqxTreeItem();this.treeElements[r]=this.items[x];g[F.id]=this.items[x];a.data(document.body,"treeItemsStorage",g);x=this.items.length;var A=0;var H=this;var e=null;m.attr("role","treeitem");m.children().each(function(){if(this.tagName=="ul"||this.tagName=="UL"){H.items[x-1].subtreeElement=this;a(this).addClass(H.toThemeProperty("jqx-tree-dropdown"));if(H.rtl){a(this).addClass(H.toThemeProperty("jqx-tree-dropdown-rtl"));a(this).css("clear","both")}return false}});m.parents().each(function(){if((this.tagName=="li"||this.tagName=="LI")){A=this.id;e=this;return false}});var w=c.getAttribute("item-expanded");if(w==null||w==undefined||(w!="true"&&w!=true)){w=false}else{w=true}F.removeAttribute("item-expanded");var G=c.getAttribute("item-locked");if(G==null||G==undefined||(G!="true"&&G!=true)){G=false}else{G=true}F.removeAttribute("item-locked");var s=c.getAttribute("item-selected");if(s==null||s==undefined||(s!="true"&&s!=true)){s=false}else{s=true}F.removeAttribute("item-selected");var d=c.getAttribute("item-disabled");if(d==null||d==undefined||(d!="true"&&d!=true)){d=false}else{d=true}F.removeAttribute("item-disabled");var j=c.getAttribute("item-checked");if(j==null||j==undefined||(j!="true"&&j!=true)){j=false}else{j=true}var I=c.getAttribute("item-title");if(I==null||I==undefined||(I!="true"&&I!=true)){I=false}F.removeAttribute("item-title");var D=c.getAttribute("item-icon");var t=c.getAttribute("item-iconsize");var l=c.getAttribute("item-label");var v=c.getAttribute("item-value");F.removeAttribute("item-icon");F.removeAttribute("item-iconsize");F.removeAttribute("item-label");F.removeAttribute("item-value");var C=this.items[x-1];C.id=r;if(C.value==undefined){if(this._valueList&&this._valueList[r]){C.value=this._valueList[r]}else{C.value=v}}C.icon=D;C.iconsize=t;C.parentId=A;C.disabled=d;C.parentElement=e;C.element=c;C.locked=G;C.selected=s;C.checked=j;C.isExpanded=w;C.treeInstance=this;this.itemMapping[x-1]={element:F,item:C};this.itemMapping["id"+F.id]=this.itemMapping[x-1];var h=false;var E=false;h=false;if(this.rtl){a(C.element).css("float","right");a(C.element).css("clear","both")}if(!h||!E){if(a(F.firstChild).length>0){if(C.icon){var t=C.iconsize;if(!t){t=16}var D=a('<img width="'+t+'" height="'+t+'" style="float: left;" class="itemicon" src="'+C.icon+'"/>');a(F).prepend(D);D.css("margin-right","4px");if(this.rtl){D.css("margin-right","0px");D.css("margin-left","4px");D.css("float","right")}}var b=F.innerHTML.indexOf("<ul");if(b==-1){b=F.innerHTML.indexOf("<UL")}if(b==-1){C.originalTitle=F.innerHTML;F.innerHTML='<div style="display: inline-block;">'+F.innerHTML+"</div>";C.titleElement=a(a(F)[0].firstChild)}else{var B=F.innerHTML.substring(0,b);B=a.trim(B);C.originalTitle=B;B=a('<div style="display: inline-block;">'+B+"</div>");var o=a(F).find("ul:first");o.remove();F.innerHTML="";a(F).prepend(B);a(F).append(o);C.titleElement=B;if(this.rtl){B.css("float","right");o.css("padding-right","10px")}}if(a.jqx.browser.msie&&a.jqx.browser.version<8){a(a(F)[0].firstChild).css("display","inline-block");var n=false;if(this._measureItem.parents().length==0){a(document.body).append(this._measureItem);n=true}this._measureItem.css("min-width","20px");this._measureItem[0].innerHTML=(a(C.titleElement).text());var u=this._measureItem.width();if(C.icon){u+=20}if(a(a(item.titleElement).find("img")).length>0){u+=20}a(a(F)[0].firstChild).css("max-width",u+"px");if(n){this._measureItem.remove()}}}else{C.originalTitle="Item";a(F).append(a("<span>Item</span>"));a(F.firstChild).wrap("<span/>");C.titleElement=a(F)[0].firstChild;if(a.jqx.browser.msie&&a.jqx.browser.version<8){a(F.firstChild).css("display","inline-block")}}}var z=a(C.titleElement);var q=this.toThemeProperty("jqx-rc-all");if(this.allowDrag){z.addClass("draggable")}if(l==null||l==undefined){l=C.titleElement;C.label=a.trim(z.text())}else{C.label=l}a(F).addClass(this.toThemeProperty("jqx-tree-item-li"));if(this.rtl){a(F).addClass(this.toThemeProperty("jqx-tree-item-li-rtl"))}q+=" "+this.toThemeProperty("jqx-tree-item")+" "+this.toThemeProperty("jqx-item");if(this.rtl){q+=" "+this.toThemeProperty("jqx-tree-item-rtl")}z[0].className=z[0].className+" "+q;C.level=a(c).parents("li").length;C.hasItems=a(c).find("li").length>0;if(this.rtl&&C.parentElement){if(!this.checkboxes){}}if(this.checkboxes){if(this.host.jqxCheckBox){var p=a('<div style="position: absolute; width: 18px; height: 18px;" tabIndex=0 class="chkbox"/>');p.width(parseInt(this.checkSize));p.height(parseInt(this.checkSize));a(F).prepend(p);if(this.rtl){p.css("float","right");p.css("position","static")}p.jqxCheckBox({hasInput:false,checked:C.checked,boxSize:this.checkSize,animationShowDelay:0,animationHideDelay:0,disabled:d,theme:this.theme});if(!this.rtl){z.css("margin-left",parseInt(this.checkSize)+6)}else{var y=5;if(C.parentElement){p.css("margin-right",y+5+"px")}else{p.css("margin-right",y+"px")}}C.checkBoxElement=p[0];p[0].treeItem=C;var f=z.outerHeight()/2-1-parseInt(this.checkSize)/2;p.css("margin-top",f);if(a.jqx.browser.msie&&a.jqx.browser.version<8){z.css("width","1%");z.css("margin-left",parseInt(this.checkSize)+25)}else{if(C.hasItems){if(!this.rtl){p.css("margin-left",this.toggleIndicatorSize)}}}}else{throw new Error("jqxTree: Missing reference to jqxcheckbox.js.");return}}else{if(a.jqx.browser.msie&&a.jqx.browser.version<8){z.css("width","1%")}}if(d){this.disableItem(C.element)}if(s){this.selectItem(C.element)}if(a.jqx.browser.msie&&a.jqx.browser.version<8){a(F).css("margin","0px");a(F).css("padding","0px")}},destroy:function(){this.removeHandler(a(window),"resize.jqxtree"+this.element.id);this.host.removeClass();if(this.isTouchDevice()){this.removeHandler(this.panel,a.jqx.mobile.getTouchEventName("touchend")+".touchScroll touchcancel.touchScroll");this.removeHandler(this.panel,a.jqx.mobile.getTouchEventName("touchmove")+".touchScroll");this.removeHandler(this.panel,a.jqx.mobile.getTouchEventName("touchstart")+".touchScroll")}var c=this;var b=this.isTouchDevice();a.each(this.items,function(){var g=this;var e=a(this.element);var d=!b?"click":a.jqx.mobile.getTouchEventName("touchend");c.removeHandler(a(g.checkBoxElement),d);var h=a(g.titleElement);c.removeHandler(e);var f=c.allowDrag&&c._enableDragDrop;if(!f){c.removeHandler(h)}else{c.removeHandler(h,"mousedown.item");c.removeHandler(h,"click");c.removeHandler(h,"dblclick");c.removeHandler(h,"mouseenter");c.removeHandler(h,"mouseleave")}$arrowSpan=a(g.arrow);if($arrowSpan.length>0){c.removeHandler($arrowSpan,d);c.removeHandler($arrowSpan,"selectstart");c.removeHandler($arrowSpan,"mouseup");if(!b){c.removeHandler($arrowSpan,"mouseenter");c.removeHandler($arrowSpan,"mouseleave")}c.removeHandler(h,"selectstart")}if(a.jqx.browser.opera){c.removeHandler(h,"mousedown.item")}if(c.toggleMode!="click"){c.removeHandler(h,"click")}c.removeHandler(h,c.toggleMode)});if(this.panel){this.panel.jqxPanel("destroy");this.panel=null}this.host.remove()},_raiseEvent:function(f,c){if(c==undefined){c={owner:null}}var d=this.events[f];args=c;args.owner=this;var e=new a.Event(d);e.owner=this;e.args=args;var b=this.host.trigger(e);return b},propertyChangedHandler:function(d,l,b,j){if(this.isInitialized==undefined||this.isInitialized==false){return}if(l=="submitCheckedItems"){d._updateInputSelection()}if(l=="disabled"){d._updateDisabledState()}if(l=="theme"){d._applyTheme(b,j)}if(l=="keyboardNavigation"){d.enableKeyboardNavigation=j}if(l=="width"||l=="height"){d.refresh();d._initialize();d._calculateWidth();if(d.host.jqxPanel){var k="fixed";if(this.height==null||this.height=="auto"){k="verticalwrap"}if(this.width==null||this.width=="auto"){if(k=="fixed"){k="horizontalwrap"}else{k="wrap"}}d.panel.jqxPanel({sizeMode:k})}}if(l=="touchMode"){d._isTouchDevice=null;if(j){d.enableHover=false}d._render()}if(l=="source"||l=="checkboxes"){if(this.source!=null){var m=[];a.each(d.items,function(){if(this.isExpanded){m[m.length]={label:this.label,level:this.level}}});var f=d.loadItems(d.source);if(!d.host.jqxPanel){d.element.innerHTML=f}else{d.panel.jqxPanel("setcontent",f)}var e=d.disabled;var g=d.host.find("ul:first");if(g.length>0){d.createTree(g[0]);d._render()}var h=d;var c=h.animationShowDuration;h.animationShowDuration=0;d.disabled=false;if(m.length>0){a.each(d.items,function(){for(var n=0;n<m.length;n++){if(m[n].label==this.label&&m[n].level==this.level){var o=h.getItem(this.element);h._expandItem(h,o)}}})}d.disabled=e;h.animationShowDuration=c}}if(l=="hasThreeStates"){d._render();d._updateCheckStates()}if(l=="toggleIndicatorSize"){d._updateCheckLayout();d._render()}}})})(jqxBaseFramework);(function(a){a.jqx._jqxTree.jqxTreeItem=function(e,d,b){var c={label:null,id:e,parentId:d,parentElement:null,parentItem:null,disabled:false,selected:false,locked:false,checked:false,level:0,isExpanded:false,hasItems:false,element:null,subtreeElement:null,checkBoxElement:null,titleElement:null,arrow:null,prevItem:null,nextItem:null};return c}})(jqxBaseFramework);
/*
 * Globalize Culture ja-JP
 *
 * http://github.com/jquery/globalize
 *
 * Copyright Software Freedom Conservancy, Inc.
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * This file was generated by the Globalize Culture Generator
 * Translation: bugs found in this file need to be fixed in the generator
 */

(function( window, undefined ) {

var Globalize;

if ( typeof require !== "undefined" &&
	typeof exports !== "undefined" &&
	typeof module !== "undefined" ) {
	// Assume CommonJS
	Globalize = require( "globalize" );
} else {
	// Global variable
	Globalize = window.Globalize;
}

Globalize.addCultureInfo( "ch-CN", "default", {
	name: "ch-CN",
	englishName: "Chinese (China)",
	nativeName: "中文 (中国)",
	language: "ch",
	numberFormat: {
		"NaN": "NaN (非数値)",
		negativeInfinity: "-∞",
		positiveInfinity: "+∞",
		percent: {
			pattern: ["-n%","n%"]
		},
		currency: {
			pattern: ["-$n","$n"],
			decimals: 0,
			symbol: "¥"
		}
	},
	calendars: {
		standard: {
			days: {
				names: ["日","一","二","三","四","五","六"],
				namesAbbr: ["日","一","二","三","四","五","六"],
				namesShort: ["日","一","二","三","四","五","六"]
			},
			months: {
				names: ["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月",""],
				namesAbbr: ["1","2","3","4","5","6","7","8","9","10","11","12",""]
			},
			AM: ["上午","上午","上午"],
			PM: ["下午","下午","下午"],
			eras: [{"name": "年","start":null,"offset":0}],
			patterns: {
				d: "yyyy/MM/dd",
				D: "yyyy'年'M'月'd'日'",
				t: "H:mm",
				T: "H:mm:ss",
				f: "yyyy'年'M'月'd'日' H:mm",
				F: "yyyy'年'M'月'd'日' H:mm:ss",
				M: "M'月'd'日'",
				Y: "yyyy'年'M'月'"
			}
		},
		Japanese: {
			name: "Japanese",
			days: {
				names: ["日","一","二","三","四","五","六"],
				namesAbbr: ["日","一","二","三","四","五","六"],
				namesShort: ["日","一","二","三","四","五","六"]
			},
			months: {
				names: ["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月",""],
				namesAbbr: ["1","2","3","4","5","6","7","8","9","10","11","12",""]
			},
			AM: ["上午","上午","上午"],
			PM: ["下午","下午","下午"],
			eras: [{"name": "年","start":null,"offset":0}],
			/*eras: [{"name":"平成","start":null,"offset":1867},{"name":"昭和","start":-1812153600000,"offset":1911},{"name":"大正","start":-1357603200000,"offset":1925},{"name":"明治","start":60022080000,"offset":1988}],*/
			patterns: {
				d: "gg y/M/d",
				D: "gg y'年'M'月'd'日'",
				t: "H:mm",
				T: "H:mm:ss",
				f: "gg y'年'M'月'd'日' H:mm",
				F: "gg y'年'M'月'd'日' H:mm:ss",
				M: "M'月'd'日'",
				Y: "gg y'年'M'月'"
			}
		}
	}
});

}( this ));

/**
 * AJAX Upload
 * Project page - http://valums.com/ajax-upload/
 * Copyright (c) 2008 Andris Valums, http://valums.com
 * Licensed under the MIT license (http://valums.com/mit-license/)
 */
(function(){
	
var d = document, w = window;

/**
 * Get element by id
 */	
function get(element){
	if (typeof element == "string")
		element = d.getElementById(element);
	return element;
}

/**
 * Attaches event to a dom element
 */
function addEvent(el, type, fn){
	if (w.addEventListener){
		el.addEventListener(type, fn, false);
	} else if (w.attachEvent){
		var f = function(){
		  fn.call(el, w.event);
		};			
		el.attachEvent('on' + type, f)
	}
}


/**
 * Creates and returns element from html chunk
 */
var toElement = function(){
	var div = d.createElement('div');
	return function(html){
		div.innerHTML = html;
		var el = div.childNodes[0];
		div.removeChild(el);
		return el;
	}
}();

function hasClass(ele,cls){
	return ele.className.match(new RegExp('(\\s|^)'+cls+'(\\s|$)'));
}
function addClass(ele,cls) {
	if (!hasClass(ele,cls)) ele.className += " "+cls;
}
function removeClass(ele,cls) {
	var reg = new RegExp('(\\s|^)'+cls+'(\\s|$)');
	ele.className=ele.className.replace(reg,' ');
}

// getOffset function copied from jQuery lib (http://jquery.com/)
if (document.documentElement["getBoundingClientRect"]){
	// Get Offset using getBoundingClientRect
	// http://ejohn.org/blog/getboundingclientrect-is-awesome/
	var getOffset = function(el){
		var box = el.getBoundingClientRect(),
		doc = el.ownerDocument,
		body = doc.body,
		docElem = doc.documentElement,
		
		// for ie 
		clientTop = docElem.clientTop || body.clientTop || 0,
		clientLeft = docElem.clientLeft || body.clientLeft || 0,
		
		// In Internet Explorer 7 getBoundingClientRect property is treated as physical,
		// while others are logical. Make all logical, like in IE8.		
		
		zoom = 1;
		
		if (body.getBoundingClientRect) {
			var bound = body.getBoundingClientRect();
			zoom = (bound.right - bound.left)/body.clientWidth;
		}
		
		if (zoom > 1){
			clientTop = 0;
			clientLeft = 0;
		}
		
		var top = box.top/zoom + (window.pageYOffset || docElem && docElem.scrollTop/zoom || body.scrollTop/zoom) - clientTop,
		left = box.left/zoom + (window.pageXOffset|| docElem && docElem.scrollLeft/zoom || body.scrollLeft/zoom) - clientLeft;
				
		return {
			top: top,
			left: left
		};
	}
	
} else {
	// Get offset adding all offsets 
	var getOffset = function(el){
		if (w.jQuery){
			return jQuery(el).offset();
		}		
			
		var top = 0, left = 0;
		do {
			top += el.offsetTop || 0;
			left += el.offsetLeft || 0;
		}
		while (el = el.offsetParent);
		
		return {
			left: left,
			top: top
		};
	}
}

function getBox(el){
	var left, right, top, bottom;	
	var offset = getOffset(el);
	left = offset.left;
	top = offset.top;
						
	right = left + el.offsetWidth;
	bottom = top + el.offsetHeight;		
		
	return {
		left: left,
		right: right,
		top: top,
		bottom: bottom
	};
}

/**
 * Crossbrowser mouse coordinates
 */
function getMouseCoords(e){		
	// pageX/Y is not supported in IE
	// http://www.quirksmode.org/dom/w3c_cssom.html			
	if (!e.pageX && e.clientX){
		// In Internet Explorer 7 some properties (mouse coordinates) are treated as physical,
		// while others are logical (offset).
		var zoom = 1;	
		var body = document.body;
		
		if (body.getBoundingClientRect) {
			var bound = body.getBoundingClientRect();
			zoom = (bound.right - bound.left)/body.clientWidth;
		}

		return {
			x: e.clientX / zoom + d.body.scrollLeft + d.documentElement.scrollLeft,
			y: e.clientY / zoom + d.body.scrollTop + d.documentElement.scrollTop
		};
	}
	
	return {
		x: e.pageX,
		y: e.pageY
	};		

}
/**
 * Function generates unique id
 */		
var getUID = function(){
	var id = 0;
	return function(){
		return 'ValumsAjaxUpload' + id++;
	}
}();

function fileFromPath(file){
	return file.replace(/.*(\/|\\)/, "");			
}

function getExt(file){
	return (/[.]/.exec(file)) ? /[^.]+$/.exec(file.toLowerCase()) : '';
}			

/**
 * Cross-browser way to get xhr object  
 */
var getXhr = function(){
	var xhr;
	
	return function(){
		if (xhr) return xhr;
				
		if (typeof XMLHttpRequest !== 'undefined') {
			xhr = new XMLHttpRequest();
		} else {
			var v = [
				"Microsoft.XmlHttp",
				"MSXML2.XmlHttp.5.0",
				"MSXML2.XmlHttp.4.0",
				"MSXML2.XmlHttp.3.0",
				"MSXML2.XmlHttp.2.0"					
			];
			
			for (var i=0; i < v.length; i++){
				try {
					xhr = new ActiveXObject(v[i]);
					break;
				} catch (e){}
			}
		} 			

		return xhr;
	}
}();

// Please use AjaxUpload , Ajax_upload will be removed in the next version
Ajax_upload = AjaxUpload = function(button, options){
	if (button.jquery){
		// jquery object was passed
		button = button[0];
	} else if (typeof button == "string" && /^#.*/.test(button)){					
		button = button.slice(1);				
	}
	button = get(button);	
	
	this._input = null;
	this._button = button;
	this._disabled = false;
	this._submitting = false;
	// Variable changes to true if the button was clicked
	// 3 seconds ago (requred to fix Safari on Mac error)
	this._justClicked = false;
	this._parentDialog = d.body;
		
	if (window.jQuery && jQuery.ui && jQuery.ui.dialog){
		var parentDialog = jQuery(this._button).parents('.ui-dialog');
		if (parentDialog.length){
			this._parentDialog = parentDialog[0];
		}
	}			
					
	this._settings = {
		// Location of the server-side upload script
		action: 'upload.php',			
		// File upload name
		name: 'userfile',
		// Additional data to send
		data: {},
		// Submit file as soon as it's selected
		autoSubmit: true,
		// The type of data that you're expecting back from the server.
		// Html and xml are detected automatically.
		// Only useful when you are using json data as a response.
		// Set to "json" in that case. 
		responseType: false,
		// Location of the server-side script that fixes Safari 
		// hanging problem returning "Connection: close" header
		closeConnection: '',
		// Class applied to button when mouse is hovered
		hoverClass: 'hover',		
		// When user selects a file, useful with autoSubmit disabled			
		onChange: function(file, extension){},					
		// Callback to fire before file is uploaded
		// You can return false to cancel upload
		onSubmit: function(file, extension){},
		// Fired when file upload is completed
		// WARNING! DO NOT USE "FALSE" STRING AS A RESPONSE!
		onComplete: function(file, response) {}
	};

	// Merge the users options with our defaults
	for (var i in options) {
		this._settings[i] = options[i];
	}
	
	this._createInput();
	this._rerouteClicks();
}
			
// assigning methods to our class
AjaxUpload.prototype = {
	setData : function(data){
		this._settings.data = data;
	},
	disable : function(){
		this._disabled = true;
	},
	enable : function(){
		this._disabled = false;
	},
	// removes instance
	destroy : function(){
		if(this._input){
			if(this._input.parentNode){
				this._input.parentNode.removeChild(this._input);
			}
			this._input = null;
		}
	},				
	/**
	 * Creates invisible file input above the button 
	 */
	_createInput : function(){
		var self = this;
		var input = d.createElement("input");
		input.setAttribute('type', 'file');
		input.setAttribute('id', 'absFileInput');
		input.setAttribute('name', this._settings.name);
		var styles = {
			'position' : 'absolute'
			,'margin': '-5px 0 0 -175px'
			,'padding': 0
			,'width': '220px'
			,'height': '30px'
			,'fontSize': '14px'								
			,'opacity': 0
			,'cursor': 'pointer'
			,'display' : 'none'
			,'zIndex' :  2147483583 //Max zIndex supported by Opera 9.0-9.2x 
			// Strange, I expected 2147483647
			// Doesn't work in IE :(
			//,'direction' : 'ltr'			
		};
		for (var i in styles){
			input.style[i] = styles[i];
		}
		
		// Make sure that element opacity exists
		// (IE uses filter instead)
		if ( ! (input.style.opacity === "0")){
			input.style.filter = "alpha(opacity=0)";
		}
							
		this._parentDialog.appendChild(input);

		addEvent(input, 'change', function(){
			// get filename from input
			var file = fileFromPath(this.value);	
			if(self._settings.onChange.call(self, file, getExt(file)) == false ){
				return;				
			}														
			// Submit form when value is changed
			if (self._settings.autoSubmit){
				self.submit();						
			}						
		});
		
		// Fixing problem with Safari
		// The problem is that if you leave input before the file select dialog opens
		// it does not upload the file.
		// As dialog opens slowly (it is a sheet dialog which takes some time to open)
		// there is some time while you can leave the button.
		// So we should not change display to none immediately
		addEvent(input, 'click', function(){
			self.justClicked = true;
			setTimeout(function(){
				// we will wait 3 seconds for dialog to open
				self.justClicked = false;
			}, 2500);			
		});		
		
		this._input = input;
	},
	_rerouteClicks : function (){
		var self = this;
	
		// IE displays 'access denied' error when using this method
		// other browsers just ignore click()
		// addEvent(this._button, 'click', function(e){
		//   self._input.click();
		// });
				
		var box, dialogOffset = {top:0, left:0}, over = false;
									
		addEvent(self._button, 'mouseover', function(e){
			if (!self._input || over) return;
			
			over = true;
			box = getBox(self._button);
					
			if (self._parentDialog != d.body){
				dialogOffset = getOffset(self._parentDialog);
			}	
		});
		
	
		// We can't use mouseout on the button,
		// because invisible input is over it
		addEvent(document, 'mousemove', function(e){
			var input = self._input;			
			if (!input || !over) return;
			
			if (self._disabled){
				removeClass(self._button, self._settings.hoverClass);
				input.style.display = 'none';
				return;
			}	
										
			var c = getMouseCoords(e);

			if ((c.x >= box.left) && (c.x <= box.right) && 
			(c.y >= box.top) && (c.y <= box.bottom)){
							
				input.style.top = c.y - dialogOffset.top + 'px';
				input.style.left = c.x - dialogOffset.left + 'px';
				input.style.display = 'block';
				addClass(self._button, self._settings.hoverClass);
								
			} else {		
				// mouse left the button
				over = false;
			
				var check = setInterval(function(){
					// if input was just clicked do not hide it
					// to prevent safari bug
					 
					if (self.justClicked){
						return;
					}
					
					if ( !over ){
						input.style.display = 'none';	
					}						
				
					clearInterval(check);
				
				}, 25);
					

				removeClass(self._button, self._settings.hoverClass);
			}			
		});			
			
	},
	/**
	 * Creates iframe with unique name
	 */
	_createIframe : function(){
		// unique name
		// We cannot use getTime, because it sometimes return
		// same value in safari :(
		var id = getUID();
		
		// Remove ie6 "This page contains both secure and nonsecure items" prompt 
		// http://tinyurl.com/77w9wh
		var iframe = toElement('<iframe src="javascript:false;" name="' + id + '" />');
		iframe.id = id;
		iframe.style.display = 'none';
		d.body.appendChild(iframe);			
		return iframe;						
	},
	/**
	 * Upload file without refreshing the page
	 */
	submit : function(){
		var self = this, settings = this._settings;	
					
		if (this._input.value === ''){
			// there is no file
			return;
		}
										
		// get filename from input
		var file = fileFromPath(this._input.value);			

		// execute user event
		if (! (settings.onSubmit.call(this, file, getExt(file)) == false)) {
			// Create new iframe for this submission
			var iframe = this._createIframe();
			
			// Do not submit if user function returns false										
			var form = this._createForm(iframe);
			form.appendChild(this._input);

			// A pretty little hack to make uploads not hang in Safari. Just call this
			// immediately before the upload is submitted. This does an Ajax call to
			// the server, which returns an empty document with the "Connection: close"
			// header, telling Safari to close the active connection.
			// http://blog.airbladesoftware.com/2007/8/17/note-to-self-prevent-uploads-hanging-in-safari
			if (settings.closeConnection && /AppleWebKit|MSIE/.test(navigator.userAgent)){
				var xhr = getXhr();
				// Open synhronous connection
				xhr.open('GET', settings.closeConnection, false);
				xhr.send('');
			}
			
			form.submit();
			
			d.body.removeChild(form);				
			form = null;
			this._input = null;
			
			// create new input
			this._createInput();
			
			var toDeleteFlag = false;
			
			addEvent(iframe, 'load', function(e){
					
				if (// For Safari
					iframe.src == "javascript:'%3Chtml%3E%3C/html%3E';" ||
					// For FF, IE
					iframe.src == "javascript:'<html></html>';"){						
					
					// First time around, do not delete.
					if( toDeleteFlag ){
						// Fix busy state in FF3
						setTimeout( function() {
							d.body.removeChild(iframe);
						}, 0);
					}
					return;
				}				
				
				var doc = iframe.contentDocument ? iframe.contentDocument : frames[iframe.id].document;

				// fixing Opera 9.26
				if (doc.readyState && doc.readyState != 'complete'){
					// Opera fires load event multiple times
					// Even when the DOM is not ready yet
					// this fix should not affect other browsers
					return;
				}
				
				// fixing Opera 9.64
				if (doc.body && doc.body.innerHTML == "false"){
					// In Opera 9.64 event was fired second time
					// when body.innerHTML changed from false 
					// to server response approx. after 1 sec
					return;				
				}
				
				var response;
									
				if (doc.XMLDocument){
					// response is a xml document IE property
					response = doc.XMLDocument;
				} else if (doc.body){
					// response is html document or plain text
					response = doc.body.innerHTML;
					if (settings.responseType && settings.responseType.toLowerCase() == 'json'){
						// If the document was sent as 'application/javascript' or
						// 'text/javascript', then the browser wraps the text in a <pre>
						// tag and performs html encoding on the contents.  In this case,
						// we need to pull the original text content from the text node's
						// nodeValue property to retrieve the unmangled content.
						// Note that IE6 only understands text/html
						if (doc.body.firstChild && doc.body.firstChild.nodeName.toUpperCase() == 'PRE'){
							response = doc.body.firstChild.firstChild.nodeValue;
						}
						if (response) {
							response = window["eval"]("(" + response + ")");
						} else {
							response = {};
						}
					}
				} else {
					// response is a xml document
					var response = doc;
				}
																			
				settings.onComplete.call(self, file, response);
						
				// Reload blank page, so that reloading main page
				// does not re-submit the post. Also, remember to
				// delete the frame
				toDeleteFlag = true;
				
				// Fix IE mixed content issue
				iframe.src = "javascript:'<html></html>';";		 								
			});
	
		} else {
			// clear input to allow user to select same file
			// Doesn't work in IE6
			// this._input.value = '';
			d.body.removeChild(this._input);				
			this._input = null;
			
			// create new input
			this._createInput();						
		}
	},		
	/**
	 * Creates form, that will be submitted to iframe
	 */
	_createForm : function(iframe){
		var settings = this._settings;
		
		// method, enctype must be specified here
		// because changing this attr on the fly is not allowed in IE 6/7		
		var form = toElement('<form method="post" enctype="multipart/form-data"></form>');
		form.style.display = 'none';
		form.action = settings.action;
		form.target = iframe.name;
		d.body.appendChild(form);
		
		// Create hidden input element for each data key
		for (var prop in settings.data){
			var el = d.createElement("input");
			el.type = 'hidden';
			el.name = prop;
			el.value = settings.data[prop];
			form.appendChild(el);
		}			
		return form;
	}	
};
})();
Function.prototype.binding = function() {
    if (arguments.length < 2 && typeof arguments[0] == "undefined") return this;
    var __method = this, args = jQuery.makeArray(arguments), object = args.shift();
    return function() {
        return __method.apply(object, args.concat(jQuery.makeArray(arguments)));
    }
};

var Class = function(subclass){
	subclass.setOptions = function(options){
		this.options = jQuery.extend({}, this.options,options);
		for(var key in options){
			if(/^on[A-Z][A-Za-z]*$/.test(key)){
				$(this).bind(key,options[key]);
			}
		}
	}
    var fn =  function(){
        if(subclass._init && typeof subclass._init == 'function'){
            this._init.apply(this,arguments);
        }
    };
    if(typeof subclass == 'object'){
        fn.prototype = subclass;
    }
    return fn;
}

var PopupLayer = new Class({
	options:{
		trigger:null,                            //触发的元素或id,必填参数
		popupBlk:null,                           //弹出内容层元素或id,必填参数
		closeBtn:null,                           //关闭弹出层的元素或id
		popupLayerClass:"popupLayer",            //弹出层容器的class名称
		eventType:"click",                       //触发事件的类型
		offsets:{                                //弹出层容器位置的调整值
			x:0,
			y:0
		},
		useFx:false,                             //是否使用特效
		useOverlay:false,                        //是否使用全局遮罩
		usePopupIframe:true,                     //是否使用容器遮罩
		isresize:true,                           //是否绑定window对象的resize事件
		onBeforeStart:function(){}            //自定义事件
	},
	_init:function(options){
		this.setOptions(options);                //载入设置
		this.isSetPosition = this.isDoPopup = this.isOverlay = true;    //定义一些开关
		this.popupLayer = $(document.createElement("div")).addClass(this.options.popupLayerClass);     //初始化最外层容器
		this.popupIframe = $(document.createElement("iframe")).attr({border:0,frameborder:0});         //容器遮罩,用于屏蔽ie6下的select
		this.trigger = $(this.options.trigger);                         //把触发元素封装成实例的一个属性，方便使用及理解
		this.popupBlk = $(this.options.popupBlk);                       //把弹出内容层元素封装成实例的一个属性
		this.closeBtn = $(this.options.closeBtn);                       //把关闭按钮素封装成实例的一个属性
		$(this).trigger("onBeforeStart");                               //执行自定义事件。
		this._construct()                                               //通过弹出内容层，构造弹出层，即为其添加外层容器及底层iframe
		this.trigger.bind(this.options.eventType,function(){            //给触发元素绑定触发事件
			if(this.isSetPosition){
				this.setPosition(this.trigger.offset().left + this.options.offsets.x, this.trigger.offset().top + this.trigger.get(0).offsetHeight + this.options.offsets.y);
			}
			this.options.useOverlay?this._loadOverlay():null;               //如果使用遮罩则加载遮罩元素
			(this.isOverlay && this.options.useOverlay)?this.overlay.show():null;
			if(this.isDoPopup && (this.popupLayer.css("display")== "none")){
				this.options.useFx?this.doEffects("open"):this.popupLayer.show();
			}							 
		}.binding(this));
		this.isresize?$(window).bind("resize",this.doresize.binding(this)):null;
		this.options.closeBtn?this.closeBtn.bind("click",this.close.binding(this)):null;   //如果有关闭按钮，则给关闭按钮绑定关闭事件
	},
	_construct:function(){                  //构造弹出层
		this.popupBlk.show();
		this.popupLayer.append(this.popupBlk.css({opacity:1})).appendTo($(document.body)).css({position:"absolute",'z-index':2,width:this.popupBlk.get(0).offsetWidth,height:this.popupBlk.get(0).offsetHeight});
		this.options.usePopupIframe?this.popupLayer.append(this.popupIframe):null;
		this.recalculatePopupIframe();
		this.popupLayer.hide();
	},
	_loadOverlay:function(){                //加载遮罩
		pageWidth = ($.browser.version=="6.0")?$(document).width()-21:$(document).width();
		this.overlay?this.overlay.remove():null;
		this.overlay = $(document.createElement("div"));
		this.overlay.css({position:"absolute","z-index":1,left:0,top:0,zoom:1,display:"none",width:pageWidth,height:$(document).height()}).appendTo($(document.body)).append("<div style='position:absolute;z-index:2;width:100%;height:100%;left:0;top:0;opacity:0.3;filter:Alpha(opacity=30);background:#000'></div><iframe frameborder='0' border='0' style='width:100%;height:100%;position:absolute;z-index:1;left:0;top:0;filter:Alpha(opacity=0);'></iframe>")
	},
	doresize:function(){
		this.overlay?this.overlay.css({width:($.browser.version=="6.0")?$(document).width()-21:$(document).width(),height:($.browser.version=="6.0")?$(document).height()-4:$(document).height()}):null;
		if(this.isSetPosition){
			this.setPosition(this.trigger.offset().left + this.options.offsets.x, this.trigger.offset().top + this.trigger.get(0).offsetHeight + this.options.offsets.y);
		}
	},
	setPosition:function(left,top){          //通过传入的参数值改变弹出层的位置
		this.popupLayer.css({left:left,top:top});
	},
	doEffects:function(way){                //做特效
		way == "open"?this.popupLayer.show("slow"):this.popupLayer.hide("slow");
		
	},
	recalculatePopupIframe:function(){     //重绘popupIframe,这个不知怎么改进，只好先用这个笨办法。
		this.popupIframe.css({position:"absolute",'z-index':-1,left:0,top:0,opacity:0,width:this.popupBlk.get(0).offsetWidth,height:this.popupBlk.get(0).offsetHeight});
	},
	close:function(){                      //关闭方法
		this.options.useOverlay?this.overlay.hide():null;
		this.options.useFx?this.doEffects("close"):this.popupLayer.hide();
	}
});﻿
//初始化全局变量
function HashMap(){
	var size = 0;
	var entry =  new Object();
	
	this.put = function (key,value){
      if(!this.containsKey(key))
        {
             size ++ ;
       }
        entry[key] = value;
    }
	
	this.get = function (key){
         return this.containsKey(key) ? entry[key] : null;
     }
	//通过key获取value 要求value的值在map中不能重复
	this.getKey = function (value){
         return this.getKeyByValue(value);
     }
	
	this.getKeyByValue = function ( value ){
        for(var prop in entry)
          {
             if(entry[prop] == value)
             {
                return prop;
              }
         }
         return '';
    }
	 /**Map删除remove方法**/
    this.remove = function(key) {
        if (this.containsKey(key) && (delete entry[key])) {
            size--;
        }
    }
    /**所有的Value**/
    this.values = function() {
        var values = new Array();
        for (var prop in entry) {
            values.push(entry[prop]);
        }
        return values;
    }
    /**所有的 Key**/
    this.keys = function() {
        var keys = new Array();
        for (var prop in entry) {
            keys.push(prop);
        }
        return keys;
    }
    /**Map size**/
    this.size = function() {
        return size;
    }
    /**清空Map**/
    this.clear = function() {
        size = 0;
        entry = new Object();
    }
	this.toString = function (){
		var str ='';
        for(var prop in entry)
          {
             if(entry[prop]){
            	 if(str && str != ''){
            		 str +=','+entry[prop];
            	 }else{
            		 str =entry[prop];
            	 }
             }
         }
         return str;
    }
	 
	 this.containsValue = function ( value ){
        for(var prop in entry)
          {
             if(entry[prop] == value)
             {
                return true;
              }
         }
         return false;
    }
	
	this.containsKey = function ( key ){
        return (key in entry);
    }
}

//性别
var sexMap = new HashMap();
sexMap.put("0","女");
sexMap.put("1","男");

//功能类型
var operTypeMap = new HashMap();
operTypeMap.put("0","读");
operTypeMap.put("1","插入");
operTypeMap.put("2","修改");
operTypeMap.put("3","删除");
operTypeMap.put("4","批量导入");
operTypeMap.put("99","其他");

//菜单状态
var authorityStatusMap = new HashMap();
authorityStatusMap.put("0","有效");
authorityStatusMap.put("1","无效");

//季节
var seasonMap = new HashMap();
seasonMap.put("1","春");
seasonMap.put("2","夏");
seasonMap.put("3","秋");
seasonMap.put("4","冬");
seasonMap.put("99","未知");
//内外景
var siteMap = new HashMap();
siteMap.put("内","内景");
siteMap.put("外","外景");
siteMap.put("内外","内外景");
//场景类型
var typeMap = new HashMap();
typeMap.put("1","文戏");
typeMap.put("2","武戏");
typeMap.put("3","文武戏");

//拍摄状态
var shootStatusMap = new HashMap();
shootStatusMap.put("0","未完成");
shootStatusMap.put("1","部分完成");
shootStatusMap.put("2","完成");
shootStatusMap.put("3","删戏");

//通告单拍摄状态
var noticeShootStatusMap = new HashMap();
noticeShootStatusMap.put("0","甩戏");
noticeShootStatusMap.put("1","部分完成");
noticeShootStatusMap.put("2","完成");
noticeShootStatusMap.put("3","删戏");
noticeShootStatusMap.put("4","加戏部分完成");
noticeShootStatusMap.put("5","加戏已完成");

//剧组类型0：电影；1：电视剧；2：网络剧；99：其他
var crewTypeMap = new HashMap();
crewTypeMap.put("0","电影");
crewTypeMap.put("1","电视剧");
crewTypeMap.put("2","网络剧");
crewTypeMap.put("3","网大");
crewTypeMap.put("99","其他");

//1：筹备中；0：拍摄中；2：已完成；99：冻结
var crewStatusMap = new HashMap();
crewStatusMap.put("1","筹备中");
crewStatusMap.put("0","拍摄中");
crewStatusMap.put("2","已完成");
crewStatusMap.put("99","冻结");

//行状态颜色
var viewStatusColor = new HashMap();
viewStatusColor.put("0","#E2FFE6");
viewStatusColor.put("1","#FEE9FA");
viewStatusColor.put("2","#FFBABA");
viewStatusColor.put("3","#D3F0FF");
viewStatusColor.put("4","#FEE9FA");
viewStatusColor.put("5","#FFBABA");

//角色类型
var viewRoleTypeMap = new HashMap();
viewRoleTypeMap.put("1", "主要演员");
viewRoleTypeMap.put("2", "特约演员");
viewRoleTypeMap.put("3", "群众演员");
viewRoleTypeMap.put("4", "待定角色");

var insideAdvertTypeMap = new HashMap();
insideAdvertTypeMap.put("1", "道具");
insideAdvertTypeMap.put("2", "台词");
insideAdvertTypeMap.put("99", "其他");
function getNewDay(dateTemp, days) {  
    var millSeconds = Math.abs(dateTemp) + (days * 24 * 60 * 60 * 1000);  
    return new Date(millSeconds);  
}

Date.prototype.Format = function (fmt) { //author: meizz 
    var o = {
        "M+": this.getMonth() + 1, //月份 
        "d+": this.getDate(), //日 
        "h+": this.getHours(), //小时 
        "m+": this.getMinutes(), //分 
        "s+": this.getSeconds(), //秒 
        "q+": Math.floor((this.getMonth() + 3) / 3), //季度 
        "S": this.getMilliseconds() //毫秒 
    };
    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
    for (var k in o)
    if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
    return fmt;
};